{"version":3,"file":"static/js/main.c99ca746.js","mappings":";uCAGEA,EAAOC,QAAU,EAAjBD,gCCEFC,EAAAA,OAAqB,EAErB,IAAIC,EAASC,EAAuBC,EAAQ,MAExCC,EAAaF,EAAuBC,EAAQ,MAE5CE,EAAQH,EAAuBC,EAAQ,MAEvCG,EAAOJ,EAAuBC,EAAQ,MAEtCI,EAASL,EAAuBC,EAAQ,MAExCK,EAAcL,EAAQ,KAE1B,SAASD,EAAuBO,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAE,QAAWA,EAAO,CAEhG,IAWIE,EAAQ,SAAeC,GACzB,IAAIC,EAAQD,EAAKC,MACbC,EAAaF,EAAKE,WAClBC,EAAOH,EAAKG,KAChB,OAAOF,EAAQZ,EAAgB,QAAEe,cAAc,MAAO,CACpDC,MAAO,OACPC,MAAO,6BACPC,oBAAqB,gBACrBC,QAAS,aACRnB,EAAgB,QAAEe,cAAc,IAAK,CACtCK,UAAW,qBACVpB,EAAgB,QAAEe,cAAcX,EAAe,QAAG,CACnDiB,OAAQR,EAAWS,QAAQC,SAC3BC,QAASX,EAAWW,QACpBC,MAAOb,EAAMa,MACbC,KAAMd,EAAMc,KACZC,aAAcd,EAAWc,aACzBC,SAAUhB,EAAMgB,SAChBd,KAAMA,IACJF,EAAMiB,QAAUjB,EAAMiB,OAAOC,KAAI,SAAUC,EAAOC,GACpD,OAAOhC,EAAgB,QAAEe,cAAcT,EAAgB,QAAG,CACxD2B,IAAKD,EACLN,KAAgB,IAAVM,GAAepB,EAAMc,KAC3BK,MAAOA,EACPG,OAAQtB,EAAMuB,SAAWvB,EAAMuB,QAAQvB,EAAMa,MAAMW,QAAQL,IAC3DN,MAAOb,EAAMa,MACbX,KAAMA,GAEV,IAvCa,SAAkBF,GAC/B,OAAOA,EAAMa,MAAMK,KAAI,SAAUO,EAAGL,GAClC,MAAO,CACLM,SAAUN,EACVO,MAAOF,EAEX,IAAGG,QAAO,SAAUH,GAClB,OAAQzB,EAAMiB,SAA6C,IAAnCjB,EAAMiB,OAAOO,QAAQC,EAAEE,MACjD,GACF,CA8BME,CAAS7B,GAAOkB,KAAI,SAAUY,GAChC,OAAO1C,EAAgB,QAAEe,cAAcV,EAAc,QAAG,CACtD4B,IAAKS,EAAKJ,SACVK,OAAQ9B,EAAWW,QAAUkB,EAAKJ,SAClCI,KAAMA,EAAKH,MACXf,QAASX,EAAWW,QACpBU,OAAQtB,EAAMuB,SAAWvB,EAAMuB,QAAQO,EAAKJ,UAC5CxB,KAAMA,GAEV,MAAO,IACT,EAEAJ,EAAMkC,UAAY,CAChBhC,MAAOT,EAAoB,QAAE0C,IAC7BhC,WAAYN,EAAYuC,oBACxBhC,KAAMX,EAAoB,QAAE4C,MAE9BrC,EAAMsC,aAAe,CACnBlC,MAAM,GAER,IAAImC,EAAWvC,EACfX,EAAAA,EAAqBkD,wBCzErB,IAAIC,EAAwBC,OAAOD,sBAC/BE,EAAiBD,OAAOE,UAAUD,eAClCE,EAAmBH,OAAOE,UAAUE,qBAsDxCzD,EAAOC,QA5CP,WACC,IACC,IAAKoD,OAAOK,OACX,OAAO,EAMR,IAAIC,EAAQ,IAAIC,OAAO,OAEvB,GADAD,EAAM,GAAK,KACkC,MAAzCN,OAAOQ,oBAAoBF,GAAO,GACrC,OAAO,EAKR,IADA,IAAIG,EAAQ,CAAC,EACJC,EAAI,EAAGA,EAAI,GAAIA,IACvBD,EAAM,IAAMF,OAAOI,aAAaD,IAAMA,EAKvC,GAAwB,eAHXV,OAAOQ,oBAAoBC,GAAO9B,KAAI,SAAUiC,GAC5D,OAAOH,EAAMG,EACd,IACWC,KAAK,IACf,OAAO,EAIR,IAAIC,EAAQ,CAAC,EAIb,MAHA,uBAAuBC,MAAM,IAAIC,SAAQ,SAAUC,GAClDH,EAAMG,GAAUA,CACjB,IAEE,yBADEjB,OAAOkB,KAAKlB,OAAOK,OAAO,CAAC,EAAGS,IAAQD,KAAK,GAMhD,CAAE,MAAOM,GAER,OAAO,CACR,CACD,CAEiBC,GAAoBpB,OAAOK,OAAS,SAAUgB,EAAQC,GAKtE,IAJA,IAAIC,EAEAC,EADAC,EAtDL,SAAkBC,GACjB,GAAY,OAARA,QAAwBC,IAARD,EACnB,MAAM,IAAIE,UAAU,yDAGrB,OAAO5B,OAAO0B,EACf,CAgDUG,CAASR,GAGTS,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAG1C,IAAK,IAAIhD,KAFTyC,EAAOvB,OAAO+B,UAAUD,IAGnB7B,EAAegC,KAAKV,EAAMzC,KAC7B2C,EAAG3C,GAAOyC,EAAKzC,IAIjB,GAAIiB,EAAuB,CAC1ByB,EAAUzB,EAAsBwB,GAChC,IAAK,IAAIb,EAAI,EAAGA,EAAIc,EAAQQ,OAAQtB,IAC/BP,EAAiB8B,KAAKV,EAAMC,EAAQd,MACvCe,EAAGD,EAAQd,IAAMa,EAAKC,EAAQd,IAGjC,CACD,CAEA,OAAOe,CACR,8BChFa,IAAIvC,EAAEnC,EAAQ,IAASmF,EAAEC,OAAOC,IAAI,iBAAiBC,EAAEF,OAAOC,IAAI,kBAAkBE,EAAEtC,OAAOE,UAAUD,eAAeW,EAAE1B,EAAEqD,mDAAmDC,kBAAkBC,EAAE,CAAC3D,KAAI,EAAG4D,KAAI,EAAGC,QAAO,EAAGC,UAAS,GAChP,SAASC,EAAEC,EAAEC,EAAEC,GAAG,IAAIC,EAAEC,EAAE,CAAC,EAAEC,EAAE,KAAKC,EAAE,KAAiF,IAAIH,UAAhF,IAASD,IAAIG,EAAE,GAAGH,QAAG,IAASD,EAAEjE,MAAMqE,EAAE,GAAGJ,EAAEjE,UAAK,IAASiE,EAAEL,MAAMU,EAAEL,EAAEL,KAAcK,EAAET,EAAEL,KAAKc,EAAEE,KAAKR,EAAExC,eAAegD,KAAKC,EAAED,GAAGF,EAAEE,IAAI,GAAGH,GAAGA,EAAEjD,aAAa,IAAIoD,KAAKF,EAAED,EAAEjD,kBAAe,IAASqD,EAAED,KAAKC,EAAED,GAAGF,EAAEE,IAAI,MAAM,CAACI,SAASnB,EAAEoB,KAAKR,EAAEhE,IAAIqE,EAAET,IAAIU,EAAEG,MAAML,EAAEM,OAAO5C,EAAE6C,QAAQ,CAAC7G,EAAQ8G,SAASrB,EAAEzF,EAAQ+G,IAAId,EAAEjG,EAAQgH,KAAKf,iBCOxWlG,EAAOC,QAAUG,EAAQ,IAARA,6BCRN,IAAIsF,EAAEF,OAAOC,IAAI,iBAAiBxB,EAAEuB,OAAOC,IAAI,gBAAgBK,EAAEN,OAAOC,IAAI,kBAAkBS,EAAEV,OAAOC,IAAI,qBAAqByB,EAAE1B,OAAOC,IAAI,kBAAkB0B,EAAE3B,OAAOC,IAAI,kBAAkB2B,EAAE5B,OAAOC,IAAI,iBAAiB4B,EAAE7B,OAAOC,IAAI,qBAAqB6B,EAAE9B,OAAOC,IAAI,kBAAkB8B,EAAE/B,OAAOC,IAAI,cAAc+B,EAAEhC,OAAOC,IAAI,cAAcgC,EAAEjC,OAAOkC,SACzW,IAAIC,EAAE,CAACC,UAAU,WAAW,OAAM,CAAE,EAAEC,mBAAmB,WAAW,EAAEC,oBAAoB,WAAW,EAAEC,gBAAgB,WAAW,GAAGC,EAAE3E,OAAOK,OAAOuE,EAAE,CAAC,EAAE,SAASC,EAAE9B,EAAEE,EAAEE,GAAG2B,KAAKvB,MAAMR,EAAE+B,KAAKC,QAAQ9B,EAAE6B,KAAKE,KAAKJ,EAAEE,KAAKG,QAAQ9B,GAAGmB,CAAC,CACwI,SAASY,IAAI,CAAyB,SAASC,EAAEpC,EAAEE,EAAEE,GAAG2B,KAAKvB,MAAMR,EAAE+B,KAAKC,QAAQ9B,EAAE6B,KAAKE,KAAKJ,EAAEE,KAAKG,QAAQ9B,GAAGmB,CAAC,CADxPO,EAAE3E,UAAUkF,iBAAiB,CAAC,EACpQP,EAAE3E,UAAUmF,SAAS,SAAStC,EAAEE,GAAG,GAAG,kBAAkBF,GAAG,oBAAoBA,GAAG,MAAMA,EAAE,MAAMuC,MAAM,yHAAyHR,KAAKG,QAAQP,gBAAgBI,KAAK/B,EAAEE,EAAE,WAAW,EAAE4B,EAAE3E,UAAUqF,YAAY,SAASxC,GAAG+B,KAAKG,QAAQT,mBAAmBM,KAAK/B,EAAE,cAAc,EAAgBmC,EAAEhF,UAAU2E,EAAE3E,UAAsF,IAAIsF,EAAEL,EAAEjF,UAAU,IAAIgF,EACrfM,EAAEC,YAAYN,EAAER,EAAEa,EAAEX,EAAE3E,WAAWsF,EAAEE,sBAAqB,EAAG,IAAIC,EAAEC,MAAMC,QAAQC,EAAE9F,OAAOE,UAAUD,eAAe8F,EAAE,CAACtC,QAAQ,MAAMuC,EAAE,CAAClH,KAAI,EAAG4D,KAAI,EAAGC,QAAO,EAAGC,UAAS,GACtK,SAASqD,EAAElD,EAAEE,EAAEE,GAAG,IAAID,EAAEJ,EAAE,CAAC,EAAEZ,EAAE,KAAKkB,EAAE,KAAK,GAAG,MAAMH,EAAE,IAAIC,UAAK,IAASD,EAAEP,MAAMU,EAAEH,EAAEP,UAAK,IAASO,EAAEnE,MAAMoD,EAAE,GAAGe,EAAEnE,KAAKmE,EAAE6C,EAAE7D,KAAKgB,EAAEC,KAAK8C,EAAE/F,eAAeiD,KAAKJ,EAAEI,GAAGD,EAAEC,IAAI,IAAIF,EAAEjB,UAAUC,OAAO,EAAE,GAAG,IAAIgB,EAAEF,EAAEoD,SAAS/C,OAAO,GAAG,EAAEH,EAAE,CAAC,IAAI,IAAI9D,EAAE0G,MAAM5C,GAAGV,EAAE,EAAEA,EAAEU,EAAEV,IAAIpD,EAAEoD,GAAGP,UAAUO,EAAE,GAAGQ,EAAEoD,SAAShH,CAAC,CAAC,GAAG6D,GAAGA,EAAElD,aAAa,IAAIqD,KAAKF,EAAED,EAAElD,kBAAe,IAASiD,EAAEI,KAAKJ,EAAEI,GAAGF,EAAEE,IAAI,MAAM,CAACG,SAAShB,EAAEiB,KAAKP,EAAEjE,IAAIoD,EAAEQ,IAAIU,EAAEG,MAAMT,EAAEU,OAAOuC,EAAEtC,QAAQ,CAChV,SAAS0C,EAAEpD,GAAG,MAAM,kBAAkBA,GAAG,OAAOA,GAAGA,EAAEM,WAAWhB,CAAC,CAAoG,IAAI+D,EAAE,OAAO,SAASC,EAAEtD,EAAEE,GAAG,MAAM,kBAAkBF,GAAG,OAAOA,GAAG,MAAMA,EAAEjE,IAA7K,SAAgBiE,GAAG,IAAIE,EAAE,CAAC,IAAI,KAAK,IAAI,MAAM,MAAM,IAAIF,EAAEuD,QAAQ,SAAQ,SAASvD,GAAG,OAAOE,EAAEF,EAAE,GAAE,CAA+EwD,CAAO,GAAGxD,EAAEjE,KAAKmE,EAAEuD,SAAS,GAAG,CAC/W,SAASC,EAAE1D,EAAEE,EAAEE,EAAED,EAAEJ,GAAG,IAAIZ,SAASa,EAAK,cAAcb,GAAG,YAAYA,IAAEa,EAAE,MAAK,IAAIK,GAAE,EAAG,GAAG,OAAOL,EAAEK,GAAE,OAAQ,OAAOlB,GAAG,IAAK,SAAS,IAAK,SAASkB,GAAE,EAAG,MAAM,IAAK,SAAS,OAAOL,EAAEM,UAAU,KAAKhB,EAAE,KAAKzB,EAAEwC,GAAE,GAAI,GAAGA,EAAE,OAAWN,EAAEA,EAANM,EAAEL,GAASA,EAAE,KAAKG,EAAE,IAAImD,EAAEjD,EAAE,GAAGF,EAAEyC,EAAE7C,IAAIK,EAAE,GAAG,MAAMJ,IAAII,EAAEJ,EAAEuD,QAAQF,EAAE,OAAO,KAAKK,EAAE3D,EAAEG,EAAEE,EAAE,IAAG,SAASJ,GAAG,OAAOA,CAAC,KAAI,MAAMD,IAAIqD,EAAErD,KAAKA,EADnW,SAAWC,EAAEE,GAAG,MAAM,CAACI,SAAShB,EAAEiB,KAAKP,EAAEO,KAAKxE,IAAImE,EAAEP,IAAIK,EAAEL,IAAIa,MAAMR,EAAEQ,MAAMC,OAAOT,EAAES,OAAO,CACyQkD,CAAE5D,EAAEK,IAAIL,EAAEhE,KAAKsE,GAAGA,EAAEtE,MAAMgE,EAAEhE,IAAI,IAAI,GAAGgE,EAAEhE,KAAKwH,QAAQF,EAAE,OAAO,KAAKrD,IAAIE,EAAE0D,KAAK7D,IAAI,EAAyB,GAAvBM,EAAE,EAAEF,EAAE,KAAKA,EAAE,IAAIA,EAAE,IAAOyC,EAAE5C,GAAG,IAAI,IAAIC,EAAE,EAAEA,EAAED,EAAEf,OAAOgB,IAAI,CAC/e,IAAI9D,EAAEgE,EAAEmD,EADwenE,EACrfa,EAAEC,GAAeA,GAAGI,GAAGqD,EAAEvE,EAAEe,EAAEE,EAAEjE,EAAE4D,EAAE,MAAM,GAAG5D,EAPsU,SAAW6D,GAAG,OAAG,OAAOA,GAAG,kBAAkBA,EAAS,KAAsC,oBAAjCA,EAAEqB,GAAGrB,EAAEqB,IAAIrB,EAAE,eAA0CA,EAAE,IAAI,CAO5b6D,CAAE7D,GAAG,oBAAoB7D,EAAE,IAAI6D,EAAE7D,EAAE+C,KAAKc,GAAGC,EAAE,IAAId,EAAEa,EAAE8D,QAAQC,MAA6B1D,GAAGqD,EAA1BvE,EAAEA,EAAE9C,MAA0B6D,EAAEE,EAAtBjE,EAAEgE,EAAEmD,EAAEnE,EAAEc,KAAkBF,QAAQ,GAAG,WAAWZ,EAAE,MAAMe,EAAE1C,OAAOwC,GAAGuC,MAAM,mDAAmD,oBAAoBrC,EAAE,qBAAqBjD,OAAOkB,KAAK6B,GAAGlC,KAAK,MAAM,IAAIoC,GAAG,6EAA6E,OAAOG,CAAC,CACzZ,SAAS2D,EAAEhE,EAAEE,EAAEE,GAAG,GAAG,MAAMJ,EAAE,OAAOA,EAAE,IAAIG,EAAE,GAAGJ,EAAE,EAAmD,OAAjD2D,EAAE1D,EAAEG,EAAE,GAAG,IAAG,SAASH,GAAG,OAAOE,EAAEhB,KAAKkB,EAAEJ,EAAED,IAAI,IAAUI,CAAC,CAAC,SAAS8D,EAAEjE,GAAG,IAAI,IAAIA,EAAEkE,QAAQ,CAAC,IAAIhE,EAAEF,EAAEmE,SAAQjE,EAAEA,KAAMkE,MAAK,SAASlE,GAAM,IAAIF,EAAEkE,UAAU,IAAIlE,EAAEkE,UAAQlE,EAAEkE,QAAQ,EAAElE,EAAEmE,QAAQjE,EAAC,IAAE,SAASA,GAAM,IAAIF,EAAEkE,UAAU,IAAIlE,EAAEkE,UAAQlE,EAAEkE,QAAQ,EAAElE,EAAEmE,QAAQjE,EAAC,KAAI,IAAIF,EAAEkE,UAAUlE,EAAEkE,QAAQ,EAAElE,EAAEmE,QAAQjE,EAAE,CAAC,GAAG,IAAIF,EAAEkE,QAAQ,OAAOlE,EAAEmE,QAAQE,QAAQ,MAAMrE,EAAEmE,OAAQ,CAC5Z,IAAIG,EAAE,CAAC5D,QAAQ,MAAM6D,EAAE,CAACC,WAAW,MAAMC,EAAE,CAACC,uBAAuBJ,EAAEK,wBAAwBJ,EAAE9E,kBAAkBuD,GAAG,SAAS4B,IAAI,MAAMrC,MAAM,2DAA4D,CACzM1I,EAAQgL,SAAS,CAACjJ,IAAIoI,EAAE/F,QAAQ,SAAS+B,EAAEE,EAAEE,GAAG4D,EAAEhE,GAAE,WAAWE,EAAE4E,MAAM/C,KAAK/C,UAAU,GAAEoB,EAAE,EAAE2E,MAAM,SAAS/E,GAAG,IAAIE,EAAE,EAAuB,OAArB8D,EAAEhE,GAAE,WAAWE,GAAG,IAAUA,CAAC,EAAE8E,QAAQ,SAAShF,GAAG,OAAOgE,EAAEhE,GAAE,SAASA,GAAG,OAAOA,CAAC,KAAI,EAAE,EAAEiF,KAAK,SAASjF,GAAG,IAAIoD,EAAEpD,GAAG,MAAMuC,MAAM,yEAAyE,OAAOvC,CAAC,GAAGnG,EAAQqL,UAAUpD,EAAEjI,EAAQ8G,SAASjB,EAAE7F,EAAQsL,SAASrE,EAAEjH,EAAQuL,cAAchD,EAAEvI,EAAQwL,WAAWvF,EAAEjG,EAAQyL,SAASpE,EAClcrH,EAAQ2F,mDAAmDiF,EAAE5K,EAAQ0L,IAAIX,EACzE/K,EAAQ2L,aAAa,SAASxF,EAAEE,EAAEE,GAAG,GAAG,OAAOJ,QAAG,IAASA,EAAE,MAAMuC,MAAM,iFAAiFvC,EAAE,KAAK,IAAIG,EAAEyB,EAAE,CAAC,EAAE5B,EAAEQ,OAAOT,EAAEC,EAAEjE,IAAIoD,EAAEa,EAAEL,IAAIU,EAAEL,EAAES,OAAO,GAAG,MAAMP,EAAE,CAAoE,QAAnE,IAASA,EAAEP,MAAMR,EAAEe,EAAEP,IAAIU,EAAE2C,EAAEtC,cAAS,IAASR,EAAEnE,MAAMgE,EAAE,GAAGG,EAAEnE,KAAQiE,EAAEO,MAAMP,EAAEO,KAAKzD,aAAa,IAAImD,EAAED,EAAEO,KAAKzD,aAAa,IAAIX,KAAK+D,EAAE6C,EAAE7D,KAAKgB,EAAE/D,KAAK8G,EAAE/F,eAAef,KAAKgE,EAAEhE,QAAG,IAAS+D,EAAE/D,SAAI,IAAS8D,EAAEA,EAAE9D,GAAG+D,EAAE/D,GAAG,CAAC,IAAIA,EAAE6C,UAAUC,OAAO,EAAE,GAAG,IAAI9C,EAAEgE,EAAEgD,SAAS/C,OAAO,GAAG,EAAEjE,EAAE,CAAC8D,EAAE4C,MAAM1G,GACrf,IAAI,IAAIoD,EAAE,EAAEA,EAAEpD,EAAEoD,IAAIU,EAAEV,GAAGP,UAAUO,EAAE,GAAGY,EAAEgD,SAASlD,CAAC,CAAC,MAAM,CAACK,SAAShB,EAAEiB,KAAKP,EAAEO,KAAKxE,IAAIgE,EAAEJ,IAAIR,EAAEqB,MAAML,EAAEM,OAAOJ,EAAE,EAAExG,EAAQ4L,cAAc,SAASzF,GAAqK,OAAlKA,EAAE,CAACM,SAASU,EAAE0E,cAAc1F,EAAE2F,eAAe3F,EAAE4F,aAAa,EAAEC,SAAS,KAAKC,SAAS,KAAKC,cAAc,KAAKC,YAAY,OAAQH,SAAS,CAACvF,SAASS,EAAEkF,SAASjG,GAAUA,EAAE8F,SAAS9F,CAAC,EAAEnG,EAAQgB,cAAcqI,EAAErJ,EAAQqM,cAAc,SAASlG,GAAG,IAAIE,EAAEgD,EAAEiD,KAAK,KAAKnG,GAAY,OAATE,EAAEK,KAAKP,EAASE,CAAC,EAAErG,EAAQuM,UAAU,WAAW,MAAM,CAAC1F,QAAQ,KAAK,EAC9d7G,EAAQwM,WAAW,SAASrG,GAAG,MAAM,CAACM,SAASW,EAAEqF,OAAOtG,EAAE,EAAEnG,EAAQ0M,eAAenD,EAAEvJ,EAAQ2M,KAAK,SAASxG,GAAG,MAAM,CAACM,SAASc,EAAEqF,SAAS,CAACvC,SAAS,EAAEC,QAAQnE,GAAG0G,MAAMzC,EAAE,EAAEpK,EAAQ8M,KAAK,SAAS3G,EAAEE,GAAG,MAAM,CAACI,SAASa,EAAEZ,KAAKP,EAAE4G,aAAQ,IAAS1G,EAAE,KAAKA,EAAE,EAAErG,EAAQgN,gBAAgB,SAAS7G,GAAG,IAAIE,EAAEqE,EAAEC,WAAWD,EAAEC,WAAW,CAAC,EAAE,IAAIxE,GAAG,CAAC,QAAQuE,EAAEC,WAAWtE,CAAC,CAAC,EAAErG,EAAQiN,aAAalC,EAAE/K,EAAQkN,YAAY,SAAS/G,EAAEE,GAAG,OAAOoE,EAAE5D,QAAQqG,YAAY/G,EAAEE,EAAE,EAAErG,EAAQmN,WAAW,SAAShH,GAAG,OAAOsE,EAAE5D,QAAQsG,WAAWhH,EAAE,EAC3fnG,EAAQoN,cAAc,WAAW,EAAEpN,EAAQqN,iBAAiB,SAASlH,GAAG,OAAOsE,EAAE5D,QAAQwG,iBAAiBlH,EAAE,EAAEnG,EAAQsN,UAAU,SAASnH,EAAEE,GAAG,OAAOoE,EAAE5D,QAAQyG,UAAUnH,EAAEE,EAAE,EAAErG,EAAQuN,MAAM,WAAW,OAAO9C,EAAE5D,QAAQ0G,OAAO,EAAEvN,EAAQwN,oBAAoB,SAASrH,EAAEE,EAAEE,GAAG,OAAOkE,EAAE5D,QAAQ2G,oBAAoBrH,EAAEE,EAAEE,EAAE,EAAEvG,EAAQyN,mBAAmB,SAAStH,EAAEE,GAAG,OAAOoE,EAAE5D,QAAQ4G,mBAAmBtH,EAAEE,EAAE,EAAErG,EAAQ0N,gBAAgB,SAASvH,EAAEE,GAAG,OAAOoE,EAAE5D,QAAQ6G,gBAAgBvH,EAAEE,EAAE,EACzdrG,EAAQ2N,QAAQ,SAASxH,EAAEE,GAAG,OAAOoE,EAAE5D,QAAQ8G,QAAQxH,EAAEE,EAAE,EAAErG,EAAQ4N,WAAW,SAASzH,EAAEE,EAAEE,GAAG,OAAOkE,EAAE5D,QAAQ+G,WAAWzH,EAAEE,EAAEE,EAAE,EAAEvG,EAAQ6N,OAAO,SAAS1H,GAAG,OAAOsE,EAAE5D,QAAQgH,OAAO1H,EAAE,EAAEnG,EAAQ8N,SAAS,SAAS3H,GAAG,OAAOsE,EAAE5D,QAAQiH,SAAS3H,EAAE,EAAEnG,EAAQ+N,qBAAqB,SAAS5H,EAAEE,EAAEE,GAAG,OAAOkE,EAAE5D,QAAQkH,qBAAqB5H,EAAEE,EAAEE,EAAE,EAAEvG,EAAQgO,cAAc,WAAW,OAAOvD,EAAE5D,QAAQmH,eAAe,EAAEhO,EAAQiO,QAAQ,+BCdpalO,EAAOC,QAFoB,yECAd,SAASsC,EAAE6D,EAAEE,GAAG,IAAIH,EAAEC,EAAEf,OAAOe,EAAE4D,KAAK1D,GAAGF,EAAE,KAAK,EAAED,GAAG,CAAC,IAAII,EAAEJ,EAAE,IAAI,EAAEK,EAAEJ,EAAEG,GAAG,KAAG,EAAEF,EAAEG,EAAEF,IAA0B,MAAMF,EAA7BA,EAAEG,GAAGD,EAAEF,EAAED,GAAGK,EAAEL,EAAEI,CAAc,CAAC,CAAC,SAASE,EAAEL,GAAG,OAAO,IAAIA,EAAEf,OAAO,KAAKe,EAAE,EAAE,CAAC,SAASb,EAAEa,GAAG,GAAG,IAAIA,EAAEf,OAAO,OAAO,KAAK,IAAIiB,EAAEF,EAAE,GAAGD,EAAEC,EAAE+H,MAAM,GAAGhI,IAAIG,EAAE,CAACF,EAAE,GAAGD,EAAEC,EAAE,IAAI,IAAIG,EAAE,EAAEC,EAAEJ,EAAEf,OAAOiC,EAAEd,IAAI,EAAED,EAAEe,GAAG,CAAC,IAAI3B,EAAE,GAAGY,EAAE,GAAG,EAAEyB,EAAE5B,EAAET,GAAG1B,EAAE0B,EAAE,EAAE4B,EAAEnB,EAAEnC,GAAG,GAAG,EAAEoC,EAAE2B,EAAE7B,GAAGlC,EAAEuC,GAAG,EAAEH,EAAEkB,EAAES,IAAI5B,EAAEG,GAAGgB,EAAEnB,EAAEnC,GAAGkC,EAAEI,EAAEtC,IAAImC,EAAEG,GAAGyB,EAAE5B,EAAET,GAAGQ,EAAEI,EAAEZ,OAAQ,MAAG1B,EAAEuC,GAAG,EAAEH,EAAEkB,EAAEpB,IAA0B,MAAMC,EAA7BA,EAAEG,GAAGgB,EAAEnB,EAAEnC,GAAGkC,EAAEI,EAAEtC,CAAc,EAAC,CAAC,OAAOqC,CAAC,CAC3c,SAASD,EAAED,EAAEE,GAAG,IAAIH,EAAEC,EAAEgI,UAAU9H,EAAE8H,UAAU,OAAO,IAAIjI,EAAEA,EAAEC,EAAEiI,GAAG/H,EAAE+H,EAAE,CAAC,GAAG,kBAAkBC,aAAa,oBAAoBA,YAAYC,IAAI,CAAC,IAAI7I,EAAE4I,YAAYrO,EAAQuO,aAAa,WAAW,OAAO9I,EAAE6I,KAAK,CAAC,KAAK,CAAC,IAAIzI,EAAE2I,KAAKvI,EAAEJ,EAAEyI,MAAMtO,EAAQuO,aAAa,WAAW,OAAO1I,EAAEyI,MAAMrI,CAAC,CAAC,CAAC,IAAIgB,EAAE,GAAGC,EAAE,GAAGC,EAAE,EAAEC,EAAE,KAAKG,EAAE,EAAEC,GAAE,EAAGwC,GAAE,EAAGtC,GAAE,EAAGM,EAAE,oBAAoByG,WAAWA,WAAW,KAAKxG,EAAE,oBAAoByG,aAAaA,aAAa,KAAKpG,EAAE,qBAAqBqG,aAAaA,aAAa,KACnT,SAASpG,EAAEpC,GAAG,IAAI,IAAIE,EAAEG,EAAEU,GAAG,OAAOb,GAAG,CAAC,GAAG,OAAOA,EAAEuI,SAAStJ,EAAE4B,OAAQ,MAAGb,EAAEwI,WAAW1I,GAAgD,MAA9Cb,EAAE4B,GAAGb,EAAE8H,UAAU9H,EAAEyI,eAAexM,EAAE2E,EAAEZ,EAAa,CAACA,EAAEG,EAAEU,EAAE,CAAC,CAAC,SAAS0B,EAAEzC,GAAa,GAAVuB,GAAE,EAAGa,EAAEpC,IAAO6D,EAAE,GAAG,OAAOxD,EAAES,GAAG+C,GAAE,EAAGjB,EAAEG,OAAO,CAAC,IAAI7C,EAAEG,EAAEU,GAAG,OAAOb,GAAG8C,EAAEP,EAAEvC,EAAEwI,UAAU1I,EAAE,CAAC,CACra,SAAS+C,EAAE/C,EAAEE,GAAG2D,GAAE,EAAGtC,IAAIA,GAAE,EAAGO,EAAEmB,GAAGA,GAAG,GAAG5B,GAAE,EAAG,IAAItB,EAAEqB,EAAE,IAAS,IAALgB,EAAElC,GAAOe,EAAEZ,EAAES,GAAG,OAAOG,MAAMA,EAAE0H,eAAezI,IAAIF,IAAIkD,MAAM,CAAC,IAAI/C,EAAEc,EAAEwH,SAAS,GAAG,oBAAoBtI,EAAE,CAACc,EAAEwH,SAAS,KAAKrH,EAAEH,EAAE2H,cAAc,IAAIxI,EAAED,EAAEc,EAAE0H,gBAAgBzI,GAAGA,EAAErG,EAAQuO,eAAe,oBAAoBhI,EAAEa,EAAEwH,SAASrI,EAAEa,IAAIZ,EAAES,IAAI3B,EAAE2B,GAAGsB,EAAElC,EAAE,MAAMf,EAAE2B,GAAGG,EAAEZ,EAAES,EAAE,CAAC,GAAG,OAAOG,EAAE,IAAIC,GAAE,MAAO,CAAC,IAAI3B,EAAEc,EAAEU,GAAG,OAAOxB,GAAGyD,EAAEP,EAAElD,EAAEmJ,UAAUxI,GAAGgB,GAAE,CAAE,CAAC,OAAOA,CAAC,CAAC,QAAQD,EAAE,KAAKG,EAAErB,EAAEsB,GAAE,CAAE,CAAC,CAD1a,qBAAqBwH,gBAAW,IAASA,UAAUC,iBAAY,IAASD,UAAUC,WAAWC,gBAAgBF,UAAUC,WAAWC,eAAe5C,KAAK0C,UAAUC,YAC2Q,IACzP9E,EAD6PL,GAAE,EAAGP,EAAE,KAAKH,GAAG,EAAEI,EAAE,EAAEC,GAAG,EACvc,SAASJ,IAAI,QAAOrJ,EAAQuO,eAAe9E,EAAED,EAAO,CAAC,SAASK,IAAI,GAAG,OAAON,EAAE,CAAC,IAAIpD,EAAEnG,EAAQuO,eAAe9E,EAAEtD,EAAE,IAAIE,GAAE,EAAG,IAAIA,EAAEkD,GAAE,EAAGpD,EAAE,CAAC,QAAQE,EAAE8D,KAAKL,GAAE,EAAGP,EAAE,KAAK,CAAC,MAAMO,GAAE,CAAE,CAAO,GAAG,oBAAoBxB,EAAE6B,EAAE,WAAW7B,EAAEuB,EAAE,OAAO,GAAG,qBAAqBsF,eAAe,CAAC,IAAI/E,EAAE,IAAI+E,eAAe1E,EAAEL,EAAEgF,MAAMhF,EAAEiF,MAAMC,UAAUzF,EAAEM,EAAE,WAAWM,EAAE8E,YAAY,KAAK,CAAC,MAAMpF,EAAE,WAAWnC,EAAE6B,EAAE,EAAE,EAAE,SAASd,EAAE5C,GAAGoD,EAAEpD,EAAE2D,IAAIA,GAAE,EAAGK,IAAI,CAAC,SAAShB,EAAEhD,EAAEE,GAAG+C,EAAEpB,GAAE,WAAW7B,EAAEnG,EAAQuO,eAAe,GAAElI,EAAE,CAC5drG,EAAQwP,sBAAsB,EAAExP,EAAQyP,2BAA2B,EAAEzP,EAAQ0P,qBAAqB,EAAE1P,EAAQ2P,wBAAwB,EAAE3P,EAAQ4P,mBAAmB,KAAK5P,EAAQ6P,8BAA8B,EAAE7P,EAAQ8P,wBAAwB,SAAS3J,GAAGA,EAAEyI,SAAS,IAAI,EAAE5O,EAAQ+P,2BAA2B,WAAW/F,GAAGxC,IAAIwC,GAAE,EAAGjB,EAAEG,GAAG,EAC1UlJ,EAAQgQ,wBAAwB,SAAS7J,GAAG,EAAEA,GAAG,IAAIA,EAAE8J,QAAQC,MAAM,mHAAmH1G,EAAE,EAAErD,EAAEgK,KAAKC,MAAM,IAAIjK,GAAG,CAAC,EAAEnG,EAAQqQ,iCAAiC,WAAW,OAAO9I,CAAC,EAAEvH,EAAQsQ,8BAA8B,WAAW,OAAO9J,EAAES,EAAE,EAAEjH,EAAQuQ,cAAc,SAASpK,GAAG,OAAOoB,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAIlB,EAAE,EAAE,MAAM,QAAQA,EAAEkB,EAAE,IAAIrB,EAAEqB,EAAEA,EAAElB,EAAE,IAAI,OAAOF,GAAG,CAAC,QAAQoB,EAAErB,CAAC,CAAC,EAAElG,EAAQwQ,wBAAwB,WAAW,EAC9fxQ,EAAQyQ,sBAAsB,WAAW,EAAEzQ,EAAQ0Q,yBAAyB,SAASvK,EAAEE,GAAG,OAAOF,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,QAAQA,EAAE,EAAE,IAAID,EAAEqB,EAAEA,EAAEpB,EAAE,IAAI,OAAOE,GAAG,CAAC,QAAQkB,EAAErB,CAAC,CAAC,EAChMlG,EAAQ2Q,0BAA0B,SAASxK,EAAEE,EAAEH,GAAG,IAAII,EAAEtG,EAAQuO,eAA8F,OAA/E,kBAAkBrI,GAAG,OAAOA,EAAaA,EAAE,kBAAZA,EAAEA,EAAE0K,QAA6B,EAAE1K,EAAEI,EAAEJ,EAAEI,EAAGJ,EAAEI,EAASH,GAAG,KAAK,EAAE,IAAII,GAAG,EAAE,MAAM,KAAK,EAAEA,EAAE,IAAI,MAAM,KAAK,EAAEA,EAAE,WAAW,MAAM,KAAK,EAAEA,EAAE,IAAI,MAAM,QAAQA,EAAE,IAAmN,OAAzMJ,EAAE,CAACiI,GAAGjH,IAAIyH,SAASvI,EAAE0I,cAAc5I,EAAE0I,UAAU3I,EAAE4I,eAAvDvI,EAAEL,EAAEK,EAAoE4H,WAAW,GAAGjI,EAAEI,GAAGH,EAAEgI,UAAUjI,EAAE5D,EAAE4E,EAAEf,GAAG,OAAOK,EAAES,IAAId,IAAIK,EAAEU,KAAKQ,GAAGO,EAAEmB,GAAGA,GAAG,GAAG1B,GAAE,EAAGyB,EAAEP,EAAE1C,EAAEI,MAAMH,EAAEgI,UAAU5H,EAAEjE,EAAE2E,EAAEd,GAAG6D,GAAGxC,IAAIwC,GAAE,EAAGjB,EAAEG,KAAY/C,CAAC,EACnenG,EAAQ6Q,qBAAqBxH,EAAErJ,EAAQ8Q,sBAAsB,SAAS3K,GAAG,IAAIE,EAAEkB,EAAE,OAAO,WAAW,IAAIrB,EAAEqB,EAAEA,EAAElB,EAAE,IAAI,OAAOF,EAAE8E,MAAM/C,KAAK/C,UAAU,CAAC,QAAQoC,EAAErB,CAAC,CAAC,CAAC,8BCf7JnG,EAAOC,QAAU,EAAjBD,iCCDFqD,OAAO2N,eAAe/Q,EAAS,aAAc,CAC3CwC,OAAO,IAETxC,EAAiB,aAAI,EAErB,IAAIC,EAASC,EAAuBC,EAAQ,MAExCC,EAAaF,EAAuBC,EAAQ,MAEhD,SAASD,EAAuBO,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAE,QAAWA,EAAO,CAEhG,IAAIuQ,EAAU,CACZ,EAAG,CACD1J,EAAG,GACHC,EAAG,GACHnC,OAAQ,IAEV,EAAG,CACDkC,EAAG,EACHC,EAAG,EACHnC,OAAQ,KAYR6L,EAAc,SAAqBxP,EAASG,GAC9C,OAAOoH,MAAMiC,MAAM,KAAMjC,MAAMpH,EAAe,IAAIG,KAAI,SAAUmP,EAAGC,GACjE,OAVuB,SAA8BA,EAAK1P,GAC5D,MAAO,KAAK2P,OAAOJ,EAAQvP,GAAS6F,EAAG,KAAK8J,OAAO,GAAKD,EAAK,OAAOC,OAAOJ,EAAQvP,GAAS2D,OAC9F,CAQWiM,CAAqBF,EAAK1P,EACnC,IAAGwC,KAAK,KAAKmN,OAAOpI,MAAMiC,MAAM,KAAMjC,MAAMvH,IAAUM,KAAI,SAAUmP,EAAGC,GACrE,OARsB,SAA6BA,EAAK1P,GAC1D,MAAO,KAAK2P,OAAOJ,EAAQvP,GAAS8F,EAAU,GAAN4J,EAAU,UACpD,CAMWG,CAAoBH,EAAK1P,EAClC,IAAGwC,KAAK,KACV,EAEIsN,EAAiB,SAAwB9P,EAASC,EAAOG,EAAUF,GACrE,OAAmB,IAAZF,EAA6B,IAAbC,EAAM,IAAYC,EAAOE,EAAW,GAAK,IAAM,GAAKA,EAAW,GAAK,IAAM,EAAiB,IAAbH,EAAM,IAAYC,EAAOE,EAAW,GAAK,EAAI,EAAIA,EAAW,EAAI,EAAI,CAC3K,EAEI2P,EAAO,SAAc5Q,GACvB,IAAIU,EAASV,EAAKU,OACdI,EAAQd,EAAKc,MACbD,EAAUb,EAAKa,QACfG,EAAehB,EAAKgB,aACpBC,EAAWjB,EAAKiB,SAChBF,EAAOf,EAAKe,KACZZ,EAAOH,EAAKG,KAChB,OAAOd,EAAgB,QAAEe,cAAc,IAAK,KAAMf,EAAgB,QAAEe,cAAc,OAAQ,CACxFyQ,OAAQ,OACRC,YAAa,OACbC,cAAe,SACfC,eAAgB,SAChBtL,EAAG2K,EAAYxP,EAASG,KACT,IAAbC,EAAiB5B,EAAgB,QAAEe,cAAc,OAAQ,CAC3DyQ,OAAQ,OACRC,YAAa,IACbC,cAAe,QACfC,eAAgB,QAChBtL,EAAG,KAAK8K,OAAOJ,EAAQvP,GAAS6F,EAAG,SAAS8J,OAAOJ,EAAQvP,GAAS2D,UACjEnF,EAAgB,QAAEe,cAAc,OAAQ,CAC3C6Q,SAAU,UACVC,KAAM,OACNC,WAAY,UACZzK,EAAGiK,EAAe9P,EAASC,EAAOG,EAAUF,GAC5C4F,EAAG,KACF1F,EAAU,OAAQd,GAAQd,EAAgB,QAAEe,cAAc,IAAK,KAAMM,EAAO0Q,QAAQjQ,KAAI,SAAUkQ,EAAMhQ,GACzG,OAAOhC,EAAgB,QAAEe,cAAc,OAAQ,CAC7CkB,IAAKD,EACL4P,SAAU,SACVC,KAAM,OACNC,WAAY,UACZG,WAAY,SACZ5K,EAAG0J,EAAQvP,GAAS6F,EAAY,GAARrF,EACxBsF,EAAG,MACF0K,EACL,KACF,EAEAT,EAAK3O,UAAY,CACfvB,OAAQlB,EAAoB,QAAE+R,MAC9BzQ,MAAOtB,EAAoB,QAAE+R,MAC7BxQ,KAAMvB,EAAoB,QAAE4C,KAC5BvB,QAASrB,EAAoB,QAAEgS,OAAOC,WACtCxQ,SAAUzB,EAAoB,QAAEkS,MAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,KACrF1Q,aAAcxB,EAAoB,QAAEgS,OAAOC,WAC3CtR,KAAMX,EAAoB,QAAE4C,MAE9BwO,EAAKvO,aAAe,CAClBpB,SAAU,EACVd,MAAM,GAER,IAAImC,EAAWsO,EACfxR,EAAiB,QAAIkD,8BCjGrB,IAAIwC,EAAIvF,EAAQ,KAEdH,EAAQuS,WAAa7M,EAAE6M,WACvBvS,EAAQwS,YAAc9M,EAAE8M,wCCI1B,IAAIC,EAAuBtS,EAAQ,KAEnC,SAASuS,IAAiB,CAC1B,SAASC,IAA0B,CACnCA,EAAuBC,kBAAoBF,EAE3C3S,EAAOC,QAAU,WACf,SAAS6S,EAAKlM,EAAOmM,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWT,EAAf,CAIA,IAAIlO,EAAM,IAAImE,MACZ,mLAKF,MADAnE,EAAI4O,KAAO,sBACL5O,CAPN,CAQF,CAEA,SAAS6O,IACP,OAAOP,CACT,CAHAA,EAAKR,WAAaQ,EAMlB,IAAIQ,EAAiB,CACnBlB,MAAOU,EACPS,OAAQT,EACR7P,KAAM6P,EACNU,KAAMV,EACNT,OAAQS,EACRW,OAAQX,EACRjQ,OAAQiQ,EACRY,OAAQZ,EAER/P,IAAK+P,EACLa,QAASN,EACTO,QAASd,EACTe,YAAaf,EACbgB,WAAYT,EACZU,KAAMjB,EACNkB,SAAUX,EACVd,MAAOc,EACPY,UAAWZ,EACXa,MAAOb,EACPc,MAAOd,EAEPe,eAAgBxB,EAChBC,kBAAmBF,GAKrB,OAFAW,EAAee,UAAYf,EAEpBA,CACT,8BC7DEtT,EAAOC,QAAU,EAAjBD,iCCDFqD,OAAO2N,eAAe/Q,EAAS,aAAc,CAC3CwC,OAAO,IAETxC,EAAiB,aAAI,EAErB,IAAIC,EAASC,EAAuBC,EAAQ,MAExCC,EAAaF,EAAuBC,EAAQ,MAEhD,SAASD,EAAuBO,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAE,QAAWA,EAAO,CAEhG,IAAI4T,EAAY,CACdzR,OAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAC7BD,KAAM,EAAE,EAAG,IAAK,GAAI,GAAI,GAAI,IAC5BR,OAAQ,EAAE,EAAG,EAAG,KAAM,KAAM,OAE1BmS,EAAS,CACX,EAAG,EACH,GAAI,GAGFC,EAAoB,SAA2B3R,EAAQnB,GACzD,OAAO4S,EAAUzR,OAAOA,EAAS0R,EAAO7S,GAC1C,EAEI+S,EACI,EADJA,EAEI,EAGJC,EAAM,SAAa7T,GACrB,IAAIgC,EAAShC,EAAKgC,OACdD,EAAO/B,EAAK+B,KACZR,EAASvB,EAAKuB,OACdV,EAAUb,EAAKa,QACfV,EAAOH,EAAKG,KAChB,OAAiB,IAAV4B,EAAc1C,EAAgB,QAAEe,cAAc,OAAQ,CAC3D6Q,SAAU,SACVC,KAAM,OACNC,WAAY,UACZG,WAAY,SACZ5K,EAAGiN,EAAkB3R,EAAQnB,GAC7B8F,EAAG,MACF,KAAOtH,EAAgB,QAAEe,cAAc,IAAK,KAAMf,EAAgB,QAAEe,cAAc,SAAU,CAC7F0Q,YAAa,OACbD,OAAQ,OACRK,KAAe,IAATnP,EAAa,cAAgB,OACnC+R,GAAIH,EAAkB3R,EAAQnB,GAC9BkT,GAAIN,EAAU1R,KAAKA,GACnBsE,EAAY,IAATtE,EAAa6R,EAAiBA,KAC9BzT,GAAQoB,EAAS,GAAKlC,EAAgB,QAAEe,cAAc,OAAQ,CACjE6Q,SAAU,MACVE,WAAY,UACZG,WAAY,SACZJ,KAAM,QACNxK,EAAGiN,EAAkB3R,EAAQnB,GAC7B8F,EAAG8M,EAAUlS,OAAOQ,IACnBR,GACL,EAEAsS,EAAI5R,UAAY,CACdD,OAAQxC,EAAoB,QAAEgS,OAC9BzP,KAAMvC,EAAoB,QAAEgS,OAC5BjQ,OAAQ/B,EAAoB,QAAEkS,MAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IACpD7Q,QAASrB,EAAoB,QAAEgS,OAAOC,WACtCtR,KAAMX,EAAoB,QAAE4C,MAE9ByR,EAAIxR,aAAe,CACjBN,KAAM,EACN5B,MAAM,GAER,IAAImC,EAAWuR,EACfzU,EAAiB,QAAIkD,8BC9DR,IAAI0R,EAAGzU,EAAQ,IAAS0U,EAAG1U,EAAQ,KAAa,SAAS0F,EAAEM,GAAG,IAAI,IAAIE,EAAE,yDAAyDF,EAAED,EAAE,EAAEA,EAAEf,UAAUC,OAAOc,IAAIG,GAAG,WAAWyO,mBAAmB3P,UAAUe,IAAI,MAAM,yBAAyBC,EAAE,WAAWE,EAAE,gHAAgH,CAAC,IAAI0O,EAAG,IAAIC,IAAIC,EAAG,CAAC,EAAE,SAASC,EAAG/O,EAAEE,GAAG8O,EAAGhP,EAAEE,GAAG8O,EAAGhP,EAAE,UAAUE,EAAE,CACxb,SAAS8O,EAAGhP,EAAEE,GAAW,IAAR4O,EAAG9O,GAAGE,EAAMF,EAAE,EAAEA,EAAEE,EAAEjB,OAAOe,IAAI4O,EAAGK,IAAI/O,EAAEF,GAAG,CAC5D,IAAIkP,IAAK,qBAAqBC,QAAQ,qBAAqBA,OAAOC,UAAU,qBAAqBD,OAAOC,SAASvU,eAAewU,EAAGpS,OAAOE,UAAUD,eAAeoS,EAAG,8VAA8VC,EACpgB,CAAC,EAAEC,EAAG,CAAC,EACiN,SAASvO,EAAEjB,EAAEE,EAAEH,EAAEI,EAAEC,EAAEjE,EAAE8D,GAAG8B,KAAK0N,gBAAgB,IAAIvP,GAAG,IAAIA,GAAG,IAAIA,EAAE6B,KAAK2N,cAAcvP,EAAE4B,KAAK4N,mBAAmBvP,EAAE2B,KAAK6N,gBAAgB7P,EAAEgC,KAAK8N,aAAa7P,EAAE+B,KAAKxB,KAAKL,EAAE6B,KAAK+N,YAAY3T,EAAE4F,KAAKgO,kBAAkB9P,CAAC,CAAC,IAAIoB,EAAE,CAAC,EACpb,uIAAuIrD,MAAM,KAAKC,SAAQ,SAAS+B,GAAGqB,EAAErB,GAAG,IAAIiB,EAAEjB,EAAE,GAAE,EAAGA,EAAE,MAAK,GAAG,EAAG,IAAG,CAAC,CAAC,gBAAgB,kBAAkB,CAAC,YAAY,SAAS,CAAC,UAAU,OAAO,CAAC,YAAY,eAAe/B,SAAQ,SAAS+B,GAAG,IAAIE,EAAEF,EAAE,GAAGqB,EAAEnB,GAAG,IAAIe,EAAEf,EAAE,GAAE,EAAGF,EAAE,GAAG,MAAK,GAAG,EAAG,IAAG,CAAC,kBAAkB,YAAY,aAAa,SAAS/B,SAAQ,SAAS+B,GAAGqB,EAAErB,GAAG,IAAIiB,EAAEjB,EAAE,GAAE,EAAGA,EAAEgQ,cAAc,MAAK,GAAG,EAAG,IAC1e,CAAC,cAAc,4BAA4B,YAAY,iBAAiB/R,SAAQ,SAAS+B,GAAGqB,EAAErB,GAAG,IAAIiB,EAAEjB,EAAE,GAAE,EAAGA,EAAE,MAAK,GAAG,EAAG,IAAG,8OAA8OhC,MAAM,KAAKC,SAAQ,SAAS+B,GAAGqB,EAAErB,GAAG,IAAIiB,EAAEjB,EAAE,GAAE,EAAGA,EAAEgQ,cAAc,MAAK,GAAG,EAAG,IACxb,CAAC,UAAU,WAAW,QAAQ,YAAY/R,SAAQ,SAAS+B,GAAGqB,EAAErB,GAAG,IAAIiB,EAAEjB,EAAE,GAAE,EAAGA,EAAE,MAAK,GAAG,EAAG,IAAG,CAAC,UAAU,YAAY/B,SAAQ,SAAS+B,GAAGqB,EAAErB,GAAG,IAAIiB,EAAEjB,EAAE,GAAE,EAAGA,EAAE,MAAK,GAAG,EAAG,IAAG,CAAC,OAAO,OAAO,OAAO,QAAQ/B,SAAQ,SAAS+B,GAAGqB,EAAErB,GAAG,IAAIiB,EAAEjB,EAAE,GAAE,EAAGA,EAAE,MAAK,GAAG,EAAG,IAAG,CAAC,UAAU,SAAS/B,SAAQ,SAAS+B,GAAGqB,EAAErB,GAAG,IAAIiB,EAAEjB,EAAE,GAAE,EAAGA,EAAEgQ,cAAc,MAAK,GAAG,EAAG,IAAG,IAAIC,EAAG,gBAAgB,SAASC,EAAGlQ,GAAG,OAAOA,EAAE,GAAGmQ,aAAa,CAIxZ,SAASC,EAAGpQ,EAAEE,EAAEH,EAAEI,GAAG,IAAIC,EAAEiB,EAAEnE,eAAegD,GAAGmB,EAAEnB,GAAG,MAAQ,OAAOE,EAAE,IAAIA,EAAEG,KAAKJ,KAAK,EAAED,EAAEjB,SAAS,MAAMiB,EAAE,IAAI,MAAMA,EAAE,IAAI,MAAMA,EAAE,IAAI,MAAMA,EAAE,MAP9I,SAAYF,EAAEE,EAAEH,EAAEI,GAAG,GAAG,OAAOD,GAAG,qBAAqBA,GADqE,SAAYF,EAAEE,EAAEH,EAAEI,GAAG,GAAG,OAAOJ,GAAG,IAAIA,EAAEQ,KAAK,OAAM,EAAG,cAAcL,GAAG,IAAK,WAAW,IAAK,SAAS,OAAM,EAAG,IAAK,UAAU,OAAGC,IAAc,OAAOJ,GAASA,EAAE0P,gBAAmD,WAAnCzP,EAAEA,EAAEgQ,cAAcnE,MAAM,EAAE,KAAsB,UAAU7L,GAAE,QAAQ,OAAM,EAAG,CAC/TqQ,CAAGrQ,EAAEE,EAAEH,EAAEI,GAAG,OAAM,EAAG,GAAGA,EAAE,OAAM,EAAG,GAAG,OAAOJ,EAAE,OAAOA,EAAEQ,MAAM,KAAK,EAAE,OAAOL,EAAE,KAAK,EAAE,OAAM,IAAKA,EAAE,KAAK,EAAE,OAAOoQ,MAAMpQ,GAAG,KAAK,EAAE,OAAOoQ,MAAMpQ,IAAI,EAAEA,EAAE,OAAM,CAAE,CAOtEqQ,CAAGrQ,EAAEH,EAAEK,EAAED,KAAKJ,EAAE,MAAMI,GAAG,OAAOC,EARxK,SAAYJ,GAAG,QAAGqP,EAAGnQ,KAAKsQ,EAAGxP,KAAeqP,EAAGnQ,KAAKqQ,EAAGvP,KAAesP,EAAGkB,KAAKxQ,GAAUwP,EAAGxP,IAAG,GAAGuP,EAAGvP,IAAG,GAAS,GAAE,CAQwDyQ,CAAGvQ,KAAK,OAAOH,EAAEC,EAAE0Q,gBAAgBxQ,GAAGF,EAAE2Q,aAAazQ,EAAE,GAAGH,IAAIK,EAAEwP,gBAAgB5P,EAAEI,EAAEyP,cAAc,OAAO9P,EAAE,IAAIK,EAAEG,MAAQ,GAAGR,GAAGG,EAAEE,EAAEsP,cAAcvP,EAAEC,EAAEuP,mBAAmB,OAAO5P,EAAEC,EAAE0Q,gBAAgBxQ,IAAaH,EAAE,KAAXK,EAAEA,EAAEG,OAAc,IAAIH,IAAG,IAAKL,EAAE,GAAG,GAAGA,EAAEI,EAAEH,EAAE4Q,eAAezQ,EAAED,EAAEH,GAAGC,EAAE2Q,aAAazQ,EAAEH,KAAI,CAHjd,0jCAA0jC/B,MAAM,KAAKC,SAAQ,SAAS+B,GAAG,IAAIE,EAAEF,EAAEuD,QAAQ0M,EACzmCC,GAAI7O,EAAEnB,GAAG,IAAIe,EAAEf,EAAE,GAAE,EAAGF,EAAE,MAAK,GAAG,EAAG,IAAG,2EAA2EhC,MAAM,KAAKC,SAAQ,SAAS+B,GAAG,IAAIE,EAAEF,EAAEuD,QAAQ0M,EAAGC,GAAI7O,EAAEnB,GAAG,IAAIe,EAAEf,EAAE,GAAE,EAAGF,EAAE,gCAA+B,GAAG,EAAG,IAAG,CAAC,WAAW,WAAW,aAAa/B,SAAQ,SAAS+B,GAAG,IAAIE,EAAEF,EAAEuD,QAAQ0M,EAAGC,GAAI7O,EAAEnB,GAAG,IAAIe,EAAEf,EAAE,GAAE,EAAGF,EAAE,wCAAuC,GAAG,EAAG,IAAG,CAAC,WAAW,eAAe/B,SAAQ,SAAS+B,GAAGqB,EAAErB,GAAG,IAAIiB,EAAEjB,EAAE,GAAE,EAAGA,EAAEgQ,cAAc,MAAK,GAAG,EAAG,IACld3O,EAAEwP,UAAU,IAAI5P,EAAE,YAAY,GAAE,EAAG,aAAa,gCAA+B,GAAG,GAAI,CAAC,MAAM,OAAO,SAAS,cAAchD,SAAQ,SAAS+B,GAAGqB,EAAErB,GAAG,IAAIiB,EAAEjB,EAAE,GAAE,EAAGA,EAAEgQ,cAAc,MAAK,GAAG,EAAG,IAE5L,IAAIc,EAAGrC,EAAGjP,mDAAmDuR,EAAG3R,OAAOC,IAAI,iBAAiB2R,EAAG5R,OAAOC,IAAI,gBAAgB4R,EAAG7R,OAAOC,IAAI,kBAAkB6R,EAAG9R,OAAOC,IAAI,qBAAqB8R,EAAG/R,OAAOC,IAAI,kBAAkB+R,EAAGhS,OAAOC,IAAI,kBAAkBgS,EAAGjS,OAAOC,IAAI,iBAAiBiS,EAAGlS,OAAOC,IAAI,qBAAqBkS,EAAGnS,OAAOC,IAAI,kBAAkBmS,EAAGpS,OAAOC,IAAI,uBAAuBoS,EAAGrS,OAAOC,IAAI,cAAcqS,EAAGtS,OAAOC,IAAI,cAAcD,OAAOC,IAAI,eAAeD,OAAOC,IAAI,0BACje,IAAIsS,EAAGvS,OAAOC,IAAI,mBAAmBD,OAAOC,IAAI,uBAAuBD,OAAOC,IAAI,eAAeD,OAAOC,IAAI,wBAAwB,IAAIuS,EAAGxS,OAAOkC,SAAS,SAASuQ,EAAG7R,GAAG,OAAG,OAAOA,GAAG,kBAAkBA,EAAS,KAAwC,oBAAnCA,EAAE4R,GAAI5R,EAAE4R,IAAK5R,EAAE,eAA0CA,EAAE,IAAI,CAAC,IAAoB8R,EAAhBjO,EAAE5G,OAAOK,OAAU,SAASyU,EAAG/R,GAAG,QAAG,IAAS8R,EAAG,IAAI,MAAMvP,OAAQ,CAAC,MAAMxC,GAAG,IAAIG,EAAEH,EAAEiS,MAAMC,OAAOC,MAAM,gBAAgBJ,EAAG5R,GAAGA,EAAE,IAAI,EAAE,CAAC,MAAM,KAAK4R,EAAG9R,CAAC,CAAC,IAAImS,GAAG,EACzb,SAASC,EAAGpS,EAAEE,GAAG,IAAIF,GAAGmS,EAAG,MAAM,GAAGA,GAAG,EAAG,IAAIpS,EAAEwC,MAAM8P,kBAAkB9P,MAAM8P,uBAAkB,EAAO,IAAI,GAAGnS,EAAE,GAAGA,EAAE,WAAW,MAAMqC,OAAQ,EAAEtF,OAAO2N,eAAe1K,EAAE/C,UAAU,QAAQ,CAACmV,IAAI,WAAW,MAAM/P,OAAQ,IAAI,kBAAkBgQ,SAASA,QAAQC,UAAU,CAAC,IAAID,QAAQC,UAAUtS,EAAE,GAAG,CAAC,MAAMZ,GAAG,IAAIa,EAAEb,CAAC,CAACiT,QAAQC,UAAUxS,EAAE,GAAGE,EAAE,KAAK,CAAC,IAAIA,EAAEhB,MAAM,CAAC,MAAMI,GAAGa,EAAEb,CAAC,CAACU,EAAEd,KAAKgB,EAAE/C,UAAU,KAAK,CAAC,IAAI,MAAMoF,OAAQ,CAAC,MAAMjD,GAAGa,EAAEb,CAAC,CAACU,GAAG,CAAC,CAAC,MAAMV,GAAG,GAAGA,GAAGa,GAAG,kBAAkBb,EAAE0S,MAAM,CAAC,IAAI,IAAI5R,EAAEd,EAAE0S,MAAMhU,MAAM,MACnf7B,EAAEgE,EAAE6R,MAAMhU,MAAM,MAAMiC,EAAEG,EAAEnB,OAAO,EAAEoB,EAAElE,EAAE8C,OAAO,EAAE,GAAGgB,GAAG,GAAGI,GAAGD,EAAEH,KAAK9D,EAAEkE,IAAIA,IAAI,KAAK,GAAGJ,GAAG,GAAGI,EAAEJ,IAAII,IAAI,GAAGD,EAAEH,KAAK9D,EAAEkE,GAAG,CAAC,GAAG,IAAIJ,GAAG,IAAII,EAAG,MAAMJ,IAAQ,IAAJI,GAASD,EAAEH,KAAK9D,EAAEkE,GAAG,CAAC,IAAIlB,EAAE,KAAKiB,EAAEH,GAAGsD,QAAQ,WAAW,QAA6F,OAArFvD,EAAEyS,aAAatT,EAAEuT,SAAS,iBAAiBvT,EAAEA,EAAEoE,QAAQ,cAAcvD,EAAEyS,cAAqBtT,CAAC,QAAO,GAAGc,GAAG,GAAGI,GAAG,KAAK,CAAC,CAAC,CAAC,QAAQ8R,GAAG,EAAG5P,MAAM8P,kBAAkBtS,CAAC,CAAC,OAAOC,EAAEA,EAAEA,EAAEyS,aAAazS,EAAEgN,KAAK,IAAI+E,EAAG/R,GAAG,EAAE,CAC9Z,SAAS2S,EAAG3S,GAAG,OAAOA,EAAE4S,KAAK,KAAK,EAAE,OAAOb,EAAG/R,EAAEO,MAAM,KAAK,GAAG,OAAOwR,EAAG,QAAQ,KAAK,GAAG,OAAOA,EAAG,YAAY,KAAK,GAAG,OAAOA,EAAG,gBAAgB,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,OAAO/R,EAAEoS,EAAGpS,EAAEO,MAAK,GAAM,KAAK,GAAG,OAAOP,EAAEoS,EAAGpS,EAAEO,KAAK+F,QAAO,GAAM,KAAK,EAAE,OAAOtG,EAAEoS,EAAGpS,EAAEO,MAAK,GAAM,QAAQ,MAAM,GAAG,CACxR,SAASsS,EAAG7S,GAAG,GAAG,MAAMA,EAAE,OAAO,KAAK,GAAG,oBAAoBA,EAAE,OAAOA,EAAEyS,aAAazS,EAAEgN,MAAM,KAAK,GAAG,kBAAkBhN,EAAE,OAAOA,EAAE,OAAOA,GAAG,KAAKiR,EAAG,MAAM,WAAW,KAAKD,EAAG,MAAM,SAAS,KAAKG,EAAG,MAAM,WAAW,KAAKD,EAAG,MAAM,aAAa,KAAKK,EAAG,MAAM,WAAW,KAAKC,EAAG,MAAM,eAAe,GAAG,kBAAkBxR,EAAE,OAAOA,EAAEM,UAAU,KAAK+Q,EAAG,OAAOrR,EAAEyS,aAAa,WAAW,YAAY,KAAKrB,EAAG,OAAOpR,EAAEiG,SAASwM,aAAa,WAAW,YAAY,KAAKnB,EAAG,IAAIpR,EAAEF,EAAEsG,OAC7Z,OADoatG,EAAEA,EAAEyS,eACndzS,EAAE,MADieA,EAAEE,EAAEuS,aAClfvS,EAAE8M,MAAM,IAAY,cAAchN,EAAE,IAAI,cAAqBA,EAAE,KAAKyR,EAAG,OAA6B,QAAtBvR,EAAEF,EAAEyS,aAAa,MAAcvS,EAAE2S,EAAG7S,EAAEO,OAAO,OAAO,KAAKmR,EAAGxR,EAAEF,EAAEyG,SAASzG,EAAEA,EAAE0G,MAAM,IAAI,OAAOmM,EAAG7S,EAAEE,GAAG,CAAC,MAAMH,GAAG,EAAE,OAAO,IAAI,CAC3M,SAAS+S,EAAG9S,GAAG,IAAIE,EAAEF,EAAEO,KAAK,OAAOP,EAAE4S,KAAK,KAAK,GAAG,MAAM,QAAQ,KAAK,EAAE,OAAO1S,EAAEuS,aAAa,WAAW,YAAY,KAAK,GAAG,OAAOvS,EAAE+F,SAASwM,aAAa,WAAW,YAAY,KAAK,GAAG,MAAM,qBAAqB,KAAK,GAAG,OAAkBzS,GAAXA,EAAEE,EAAEoG,QAAWmM,aAAazS,EAAEgN,MAAM,GAAG9M,EAAEuS,cAAc,KAAKzS,EAAE,cAAcA,EAAE,IAAI,cAAc,KAAK,EAAE,MAAM,WAAW,KAAK,EAAE,OAAOE,EAAE,KAAK,EAAE,MAAM,SAAS,KAAK,EAAE,MAAM,OAAO,KAAK,EAAE,MAAM,OAAO,KAAK,GAAG,OAAO2S,EAAG3S,GAAG,KAAK,EAAE,OAAOA,IAAIgR,EAAG,aAAa,OAAO,KAAK,GAAG,MAAM,YACtf,KAAK,GAAG,MAAM,WAAW,KAAK,GAAG,MAAM,QAAQ,KAAK,GAAG,MAAM,WAAW,KAAK,GAAG,MAAM,eAAe,KAAK,GAAG,MAAM,gBAAgB,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,GAAG,oBAAoBhR,EAAE,OAAOA,EAAEuS,aAAavS,EAAE8M,MAAM,KAAK,GAAG,kBAAkB9M,EAAE,OAAOA,EAAE,OAAO,IAAI,CAAC,SAAS6S,EAAG/S,GAAG,cAAcA,GAAG,IAAK,UAAU,IAAK,SAAS,IAAK,SAAS,IAAK,YAAqB,IAAK,SAAS,OAAOA,EAAE,QAAQ,MAAM,GAAG,CACra,SAASgT,EAAGhT,GAAG,IAAIE,EAAEF,EAAEO,KAAK,OAAOP,EAAEA,EAAEiT,WAAW,UAAUjT,EAAEgQ,gBAAgB,aAAa9P,GAAG,UAAUA,EAAE,CAEtF,SAASgT,EAAGlT,GAAGA,EAAEmT,gBAAgBnT,EAAEmT,cADvD,SAAYnT,GAAG,IAAIE,EAAE8S,EAAGhT,GAAG,UAAU,QAAQD,EAAE9C,OAAOmW,yBAAyBpT,EAAE0C,YAAYvF,UAAU+C,GAAGC,EAAE,GAAGH,EAAEE,GAAG,IAAIF,EAAE9C,eAAegD,IAAI,qBAAqBH,GAAG,oBAAoBA,EAAEsT,KAAK,oBAAoBtT,EAAEuS,IAAI,CAAC,IAAIlS,EAAEL,EAAEsT,IAAIlX,EAAE4D,EAAEuS,IAAiL,OAA7KrV,OAAO2N,eAAe5K,EAAEE,EAAE,CAACoT,cAAa,EAAGD,IAAI,WAAW,OAAOjT,EAAElB,KAAK6C,KAAK,EAAEuQ,IAAI,SAAStS,GAAGG,EAAE,GAAGH,EAAE7D,EAAE+C,KAAK6C,KAAK/B,EAAE,IAAI/C,OAAO2N,eAAe5K,EAAEE,EAAE,CAACqT,WAAWxT,EAAEwT,aAAmB,CAACC,SAAS,WAAW,OAAOrT,CAAC,EAAEsT,SAAS,SAASzT,GAAGG,EAAE,GAAGH,CAAC,EAAE0T,aAAa,WAAW1T,EAAEmT,cACxf,YAAYnT,EAAEE,EAAE,EAAE,CAAC,CAAkDyT,CAAG3T,GAAG,CAAC,SAAS4T,EAAG5T,GAAG,IAAIA,EAAE,OAAM,EAAG,IAAIE,EAAEF,EAAEmT,cAAc,IAAIjT,EAAE,OAAM,EAAG,IAAIH,EAAEG,EAAEsT,WAAerT,EAAE,GAAqD,OAAlDH,IAAIG,EAAE6S,EAAGhT,GAAGA,EAAE6T,QAAQ,OAAO,QAAQ7T,EAAE3D,QAAO2D,EAAEG,KAAaJ,IAAGG,EAAEuT,SAASzT,IAAG,EAAM,CAAC,SAAS8T,EAAG9T,GAAwD,GAAG,qBAAxDA,EAAEA,IAAI,qBAAqBoP,SAASA,cAAS,IAAkC,OAAO,KAAK,IAAI,OAAOpP,EAAE+T,eAAe/T,EAAEgU,IAAI,CAAC,MAAM9T,GAAG,OAAOF,EAAEgU,IAAI,CAAC,CACpa,SAASC,EAAGjU,EAAEE,GAAG,IAAIH,EAAEG,EAAE2T,QAAQ,OAAOhQ,EAAE,CAAC,EAAE3D,EAAE,CAACgU,oBAAe,EAAOC,kBAAa,EAAO9X,WAAM,EAAOwX,QAAQ,MAAM9T,EAAEA,EAAEC,EAAEoU,cAAcC,gBAAgB,CAAC,SAASC,EAAGtU,EAAEE,GAAG,IAAIH,EAAE,MAAMG,EAAEiU,aAAa,GAAGjU,EAAEiU,aAAahU,EAAE,MAAMD,EAAE2T,QAAQ3T,EAAE2T,QAAQ3T,EAAEgU,eAAenU,EAAEgT,EAAG,MAAM7S,EAAE7D,MAAM6D,EAAE7D,MAAM0D,GAAGC,EAAEoU,cAAc,CAACC,eAAelU,EAAEoU,aAAaxU,EAAEyU,WAAW,aAAatU,EAAEK,MAAM,UAAUL,EAAEK,KAAK,MAAML,EAAE2T,QAAQ,MAAM3T,EAAE7D,MAAM,CAAC,SAASoY,EAAGzU,EAAEE,GAAe,OAAZA,EAAEA,EAAE2T,UAAiBzD,EAAGpQ,EAAE,UAAUE,GAAE,EAAG,CAC9d,SAASwU,EAAG1U,EAAEE,GAAGuU,EAAGzU,EAAEE,GAAG,IAAIH,EAAEgT,EAAG7S,EAAE7D,OAAO8D,EAAED,EAAEK,KAAK,GAAG,MAAMR,EAAK,WAAWI,GAAM,IAAIJ,GAAG,KAAKC,EAAE3D,OAAO2D,EAAE3D,OAAO0D,KAAEC,EAAE3D,MAAM,GAAG0D,GAAOC,EAAE3D,QAAQ,GAAG0D,IAAIC,EAAE3D,MAAM,GAAG0D,QAAQ,GAAG,WAAWI,GAAG,UAAUA,EAA8B,YAA3BH,EAAE0Q,gBAAgB,SAAgBxQ,EAAEhD,eAAe,SAASyX,GAAG3U,EAAEE,EAAEK,KAAKR,GAAGG,EAAEhD,eAAe,iBAAiByX,GAAG3U,EAAEE,EAAEK,KAAKwS,EAAG7S,EAAEiU,eAAe,MAAMjU,EAAE2T,SAAS,MAAM3T,EAAEgU,iBAAiBlU,EAAEkU,iBAAiBhU,EAAEgU,eAAe,CACla,SAASU,EAAG5U,EAAEE,EAAEH,GAAG,GAAGG,EAAEhD,eAAe,UAAUgD,EAAEhD,eAAe,gBAAgB,CAAC,IAAIiD,EAAED,EAAEK,KAAK,KAAK,WAAWJ,GAAG,UAAUA,QAAG,IAASD,EAAE7D,OAAO,OAAO6D,EAAE7D,OAAO,OAAO6D,EAAE,GAAGF,EAAEoU,cAAcG,aAAaxU,GAAGG,IAAIF,EAAE3D,QAAQ2D,EAAE3D,MAAM6D,GAAGF,EAAEmU,aAAajU,CAAC,CAAU,MAATH,EAAEC,EAAEgN,QAAchN,EAAEgN,KAAK,IAAIhN,EAAEkU,iBAAiBlU,EAAEoU,cAAcC,eAAe,KAAKtU,IAAIC,EAAEgN,KAAKjN,EAAE,CACzV,SAAS4U,GAAG3U,EAAEE,EAAEH,GAAM,WAAWG,GAAG4T,EAAG9T,EAAE6U,iBAAiB7U,IAAE,MAAMD,EAAEC,EAAEmU,aAAa,GAAGnU,EAAEoU,cAAcG,aAAavU,EAAEmU,eAAe,GAAGpU,IAAIC,EAAEmU,aAAa,GAAGpU,GAAE,CAAC,IAAI+U,GAAGjS,MAAMC,QAC7K,SAASiS,GAAG/U,EAAEE,EAAEH,EAAEI,GAAe,GAAZH,EAAEA,EAAEgV,QAAW9U,EAAE,CAACA,EAAE,CAAC,EAAE,IAAI,IAAIE,EAAE,EAAEA,EAAEL,EAAEd,OAAOmB,IAAIF,EAAE,IAAIH,EAAEK,KAAI,EAAG,IAAIL,EAAE,EAAEA,EAAEC,EAAEf,OAAOc,IAAIK,EAAEF,EAAEhD,eAAe,IAAI8C,EAAED,GAAG1D,OAAO2D,EAAED,GAAGkV,WAAW7U,IAAIJ,EAAED,GAAGkV,SAAS7U,GAAGA,GAAGD,IAAIH,EAAED,GAAGmV,iBAAgB,EAAG,KAAK,CAAmB,IAAlBnV,EAAE,GAAGgT,EAAGhT,GAAGG,EAAE,KAASE,EAAE,EAAEA,EAAEJ,EAAEf,OAAOmB,IAAI,CAAC,GAAGJ,EAAEI,GAAG/D,QAAQ0D,EAAiD,OAA9CC,EAAEI,GAAG6U,UAAS,OAAG9U,IAAIH,EAAEI,GAAG8U,iBAAgB,IAAW,OAAOhV,GAAGF,EAAEI,GAAG+U,WAAWjV,EAAEF,EAAEI,GAAG,CAAC,OAAOF,IAAIA,EAAE+U,UAAS,EAAG,CAAC,CACxY,SAASG,GAAGpV,EAAEE,GAAG,GAAG,MAAMA,EAAEmV,wBAAwB,MAAM9S,MAAM7C,EAAE,KAAK,OAAOmE,EAAE,CAAC,EAAE3D,EAAE,CAAC7D,WAAM,EAAO8X,kBAAa,EAAOhR,SAAS,GAAGnD,EAAEoU,cAAcG,cAAc,CAAC,SAASe,GAAGtV,EAAEE,GAAG,IAAIH,EAAEG,EAAE7D,MAAM,GAAG,MAAM0D,EAAE,CAA+B,GAA9BA,EAAEG,EAAEiD,SAASjD,EAAEA,EAAEiU,aAAgB,MAAMpU,EAAE,CAAC,GAAG,MAAMG,EAAE,MAAMqC,MAAM7C,EAAE,KAAK,GAAGoV,GAAG/U,GAAG,CAAC,GAAG,EAAEA,EAAEd,OAAO,MAAMsD,MAAM7C,EAAE,KAAKK,EAAEA,EAAE,EAAE,CAACG,EAAEH,CAAC,CAAC,MAAMG,IAAIA,EAAE,IAAIH,EAAEG,CAAC,CAACF,EAAEoU,cAAc,CAACG,aAAaxB,EAAGhT,GAAG,CACnY,SAASwV,GAAGvV,EAAEE,GAAG,IAAIH,EAAEgT,EAAG7S,EAAE7D,OAAO8D,EAAE4S,EAAG7S,EAAEiU,cAAc,MAAMpU,KAAIA,EAAE,GAAGA,KAAMC,EAAE3D,QAAQ2D,EAAE3D,MAAM0D,GAAG,MAAMG,EAAEiU,cAAcnU,EAAEmU,eAAepU,IAAIC,EAAEmU,aAAapU,IAAI,MAAMI,IAAIH,EAAEmU,aAAa,GAAGhU,EAAE,CAAC,SAASqV,GAAGxV,GAAG,IAAIE,EAAEF,EAAEyV,YAAYvV,IAAIF,EAAEoU,cAAcG,cAAc,KAAKrU,GAAG,OAAOA,IAAIF,EAAE3D,MAAM6D,EAAE,CAAC,SAASwV,GAAG1V,GAAG,OAAOA,GAAG,IAAK,MAAM,MAAM,6BAA6B,IAAK,OAAO,MAAM,qCAAqC,QAAQ,MAAM,+BAA+B,CAC7c,SAAS2V,GAAG3V,EAAEE,GAAG,OAAO,MAAMF,GAAG,iCAAiCA,EAAE0V,GAAGxV,GAAG,+BAA+BF,GAAG,kBAAkBE,EAAE,+BAA+BF,CAAC,CAChK,IAAI4V,GAAe5V,GAAZ6V,IAAY7V,GAAsJ,SAASA,EAAEE,GAAG,GAAG,+BAA+BF,EAAE8V,cAAc,cAAc9V,EAAEA,EAAE+V,UAAU7V,MAAM,CAA2F,KAA1F0V,GAAGA,IAAIxG,SAASvU,cAAc,QAAUkb,UAAU,QAAQ7V,EAAE8V,UAAUvS,WAAW,SAAavD,EAAE0V,GAAGK,WAAWjW,EAAEiW,YAAYjW,EAAEkW,YAAYlW,EAAEiW,YAAY,KAAK/V,EAAE+V,YAAYjW,EAAEmW,YAAYjW,EAAE+V,WAAW,CAAC,EAAvb,qBAAqBG,OAAOA,MAAMC,wBAAwB,SAASnW,EAAEH,EAAEI,EAAEC,GAAGgW,MAAMC,yBAAwB,WAAW,OAAOrW,GAAEE,EAAEH,EAAM,GAAE,EAAEC,IACtK,SAASsW,GAAGtW,EAAEE,GAAG,GAAGA,EAAE,CAAC,IAAIH,EAAEC,EAAEiW,WAAW,GAAGlW,GAAGA,IAAIC,EAAEuW,WAAW,IAAIxW,EAAEyW,SAAwB,YAAdzW,EAAE0W,UAAUvW,EAAS,CAACF,EAAEyV,YAAYvV,CAAC,CACtH,IAAIwW,GAAG,CAACC,yBAAwB,EAAGC,aAAY,EAAGC,mBAAkB,EAAGC,kBAAiB,EAAGC,kBAAiB,EAAGC,SAAQ,EAAGC,cAAa,EAAGC,iBAAgB,EAAGC,aAAY,EAAGC,SAAQ,EAAGC,MAAK,EAAGC,UAAS,EAAGC,cAAa,EAAGC,YAAW,EAAGC,cAAa,EAAGC,WAAU,EAAGC,UAAS,EAAGC,SAAQ,EAAGC,YAAW,EAAGC,aAAY,EAAGC,cAAa,EAAGC,YAAW,EAAGC,eAAc,EAAGC,gBAAe,EAAGC,iBAAgB,EAAGC,YAAW,EAAGC,WAAU,EAAGC,YAAW,EAAGC,SAAQ,EAAGC,OAAM,EAAGC,SAAQ,EAAGC,SAAQ,EAAGC,QAAO,EAAGC,QAAO,EAClfC,MAAK,EAAGC,aAAY,EAAGC,cAAa,EAAGC,aAAY,EAAGC,iBAAgB,EAAGC,kBAAiB,EAAGC,kBAAiB,EAAGC,eAAc,EAAG7N,aAAY,GAAI8N,GAAG,CAAC,SAAS,KAAK,MAAM,KAA6H,SAASC,GAAGtZ,EAAEE,EAAEH,GAAG,OAAO,MAAMG,GAAG,mBAAmBA,GAAG,KAAKA,EAAE,GAAGH,GAAG,kBAAkBG,GAAG,IAAIA,GAAGwW,GAAGxZ,eAAe8C,IAAI0W,GAAG1W,IAAI,GAAGE,GAAG+R,OAAO/R,EAAE,IAAI,CACzb,SAASqZ,GAAGvZ,EAAEE,GAAa,IAAI,IAAIH,KAAlBC,EAAEA,EAAEwZ,MAAmBtZ,EAAE,GAAGA,EAAEhD,eAAe6C,GAAG,CAAC,IAAII,EAAE,IAAIJ,EAAE7D,QAAQ,MAAMkE,EAAEkZ,GAAGvZ,EAAEG,EAAEH,GAAGI,GAAG,UAAUJ,IAAIA,EAAE,YAAYI,EAAEH,EAAEyZ,YAAY1Z,EAAEK,GAAGJ,EAAED,GAAGK,CAAC,CAAC,CADYnD,OAAOkB,KAAKuY,IAAIzY,SAAQ,SAAS+B,GAAGqZ,GAAGpb,SAAQ,SAASiC,GAAGA,EAAEA,EAAEF,EAAE0Z,OAAO,GAAGvJ,cAAcnQ,EAAE2Z,UAAU,GAAGjD,GAAGxW,GAAGwW,GAAG1W,EAAE,GAAE,IAChI,IAAI4Z,GAAG/V,EAAE,CAACgW,UAAS,GAAI,CAACC,MAAK,EAAGC,MAAK,EAAGC,IAAG,EAAGC,KAAI,EAAGC,OAAM,EAAGC,IAAG,EAAGC,KAAI,EAAGC,OAAM,EAAGC,QAAO,EAAGC,MAAK,EAAGC,MAAK,EAAGC,OAAM,EAAGlc,QAAO,EAAGmc,OAAM,EAAGC,KAAI,IAClT,SAASC,GAAG5a,EAAEE,GAAG,GAAGA,EAAE,CAAC,GAAG0Z,GAAG5Z,KAAK,MAAME,EAAEiD,UAAU,MAAMjD,EAAEmV,yBAAyB,MAAM9S,MAAM7C,EAAE,IAAIM,IAAI,GAAG,MAAME,EAAEmV,wBAAwB,CAAC,GAAG,MAAMnV,EAAEiD,SAAS,MAAMZ,MAAM7C,EAAE,KAAK,GAAG,kBAAkBQ,EAAEmV,2BAA2B,WAAWnV,EAAEmV,yBAAyB,MAAM9S,MAAM7C,EAAE,IAAK,CAAC,GAAG,MAAMQ,EAAEsZ,OAAO,kBAAkBtZ,EAAEsZ,MAAM,MAAMjX,MAAM7C,EAAE,IAAK,CAAC,CAClW,SAASmb,GAAG7a,EAAEE,GAAG,IAAI,IAAIF,EAAE9D,QAAQ,KAAK,MAAM,kBAAkBgE,EAAE4a,GAAG,OAAO9a,GAAG,IAAK,iBAAiB,IAAK,gBAAgB,IAAK,YAAY,IAAK,gBAAgB,IAAK,gBAAgB,IAAK,mBAAmB,IAAK,iBAAiB,IAAK,gBAAgB,OAAM,EAAG,QAAQ,OAAM,EAAG,CAAC,IAAI+a,GAAG,KAAK,SAASC,GAAGhb,GAA6F,OAA1FA,EAAEA,EAAE1B,QAAQ0B,EAAEib,YAAY9L,QAAS+L,0BAA0Blb,EAAEA,EAAEkb,yBAAgC,IAAIlb,EAAEwW,SAASxW,EAAEmb,WAAWnb,CAAC,CAAC,IAAIob,GAAG,KAAKC,GAAG,KAAKC,GAAG,KACpc,SAASC,GAAGvb,GAAG,GAAGA,EAAEwb,GAAGxb,GAAG,CAAC,GAAG,oBAAoBob,GAAG,MAAM7Y,MAAM7C,EAAE,MAAM,IAAIQ,EAAEF,EAAEyb,UAAUvb,IAAIA,EAAEwb,GAAGxb,GAAGkb,GAAGpb,EAAEyb,UAAUzb,EAAEO,KAAKL,GAAG,CAAC,CAAC,SAASyb,GAAG3b,GAAGqb,GAAGC,GAAGA,GAAG1X,KAAK5D,GAAGsb,GAAG,CAACtb,GAAGqb,GAAGrb,CAAC,CAAC,SAAS4b,KAAK,GAAGP,GAAG,CAAC,IAAIrb,EAAEqb,GAAGnb,EAAEob,GAAoB,GAAjBA,GAAGD,GAAG,KAAKE,GAAGvb,GAAME,EAAE,IAAIF,EAAE,EAAEA,EAAEE,EAAEjB,OAAOe,IAAIub,GAAGrb,EAAEF,GAAG,CAAC,CAAC,SAAS6b,GAAG7b,EAAEE,GAAG,OAAOF,EAAEE,EAAE,CAAC,SAAS4b,KAAK,CAAC,IAAIC,IAAG,EAAG,SAASC,GAAGhc,EAAEE,EAAEH,GAAG,GAAGgc,GAAG,OAAO/b,EAAEE,EAAEH,GAAGgc,IAAG,EAAG,IAAI,OAAOF,GAAG7b,EAAEE,EAAEH,EAAE,CAAC,QAAWgc,IAAG,GAAG,OAAOV,IAAI,OAAOC,MAAGQ,KAAKF,KAAI,CAAC,CAChb,SAASK,GAAGjc,EAAEE,GAAG,IAAIH,EAAEC,EAAEyb,UAAU,GAAG,OAAO1b,EAAE,OAAO,KAAK,IAAII,EAAEub,GAAG3b,GAAG,GAAG,OAAOI,EAAE,OAAO,KAAKJ,EAAEI,EAAED,GAAGF,EAAE,OAAOE,GAAG,IAAK,UAAU,IAAK,iBAAiB,IAAK,gBAAgB,IAAK,uBAAuB,IAAK,cAAc,IAAK,qBAAqB,IAAK,cAAc,IAAK,qBAAqB,IAAK,YAAY,IAAK,mBAAmB,IAAK,gBAAgBC,GAAGA,EAAEgV,YAAqBhV,IAAI,YAAbH,EAAEA,EAAEO,OAAuB,UAAUP,GAAG,WAAWA,GAAG,aAAaA,IAAIA,GAAGG,EAAE,MAAMH,EAAE,QAAQA,GAAE,EAAG,GAAGA,EAAE,OAAO,KAAK,GAAGD,GAAG,oBACleA,EAAE,MAAMwC,MAAM7C,EAAE,IAAIQ,SAASH,IAAI,OAAOA,CAAC,CAAC,IAAImc,IAAG,EAAG,GAAGhN,EAAG,IAAI,IAAIiN,GAAG,CAAC,EAAElf,OAAO2N,eAAeuR,GAAG,UAAU,CAAC9I,IAAI,WAAW6I,IAAG,CAAE,IAAI/M,OAAOiN,iBAAiB,OAAOD,GAAGA,IAAIhN,OAAOkN,oBAAoB,OAAOF,GAAGA,GAAG,CAAC,MAAMnc,IAAGkc,IAAG,CAAE,CAAC,SAASI,GAAGtc,EAAEE,EAAEH,EAAEI,EAAEC,EAAEjE,EAAE8D,EAAEI,EAAElB,GAAG,IAAIG,EAAEuD,MAAM1F,UAAU0O,MAAM3M,KAAKF,UAAU,GAAG,IAAIkB,EAAE4E,MAAM/E,EAAET,EAAE,CAAC,MAAMC,GAAGwC,KAAKwa,QAAQhd,EAAE,CAAC,CAAC,IAAIid,IAAG,EAAGC,GAAG,KAAKC,IAAG,EAAGC,GAAG,KAAKC,GAAG,CAACL,QAAQ,SAASvc,GAAGwc,IAAG,EAAGC,GAAGzc,CAAC,GAAG,SAAS6c,GAAG7c,EAAEE,EAAEH,EAAEI,EAAEC,EAAEjE,EAAE8D,EAAEI,EAAElB,GAAGqd,IAAG,EAAGC,GAAG,KAAKH,GAAGxX,MAAM8X,GAAG5d,UAAU,CACjW,SAAS8d,GAAG9c,GAAG,IAAIE,EAAEF,EAAED,EAAEC,EAAE,GAAGA,EAAE+c,UAAU,KAAK7c,EAAE8c,QAAQ9c,EAAEA,EAAE8c,WAAW,CAAChd,EAAEE,EAAE,GAAO,KAAa,MAAjBA,EAAEF,GAASid,SAAcld,EAAEG,EAAE8c,QAAQhd,EAAEE,EAAE8c,aAAahd,EAAE,CAAC,OAAO,IAAIE,EAAE0S,IAAI7S,EAAE,IAAI,CAAC,SAASmd,GAAGld,GAAG,GAAG,KAAKA,EAAE4S,IAAI,CAAC,IAAI1S,EAAEF,EAAEmd,cAAsE,GAAxD,OAAOjd,IAAkB,QAAdF,EAAEA,EAAE+c,aAAqB7c,EAAEF,EAAEmd,gBAAmB,OAAOjd,EAAE,OAAOA,EAAEkd,UAAU,CAAC,OAAO,IAAI,CAAC,SAASC,GAAGrd,GAAG,GAAG8c,GAAG9c,KAAKA,EAAE,MAAMuC,MAAM7C,EAAE,KAAM,CAE1S,SAAS4d,GAAGtd,GAAW,OAAO,QAAfA,EADtN,SAAYA,GAAG,IAAIE,EAAEF,EAAE+c,UAAU,IAAI7c,EAAE,CAAS,GAAG,QAAXA,EAAE4c,GAAG9c,IAAe,MAAMuC,MAAM7C,EAAE,MAAM,OAAOQ,IAAIF,EAAE,KAAKA,CAAC,CAAC,IAAI,IAAID,EAAEC,EAAEG,EAAED,IAAI,CAAC,IAAIE,EAAEL,EAAEid,OAAO,GAAG,OAAO5c,EAAE,MAAM,IAAIjE,EAAEiE,EAAE2c,UAAU,GAAG,OAAO5gB,EAAE,CAAY,GAAG,QAAdgE,EAAEC,EAAE4c,QAAmB,CAACjd,EAAEI,EAAE,QAAQ,CAAC,KAAK,CAAC,GAAGC,EAAEmd,QAAQphB,EAAEohB,MAAM,CAAC,IAAIphB,EAAEiE,EAAEmd,MAAMphB,GAAG,CAAC,GAAGA,IAAI4D,EAAE,OAAOsd,GAAGjd,GAAGJ,EAAE,GAAG7D,IAAIgE,EAAE,OAAOkd,GAAGjd,GAAGF,EAAE/D,EAAEA,EAAEqhB,OAAO,CAAC,MAAMjb,MAAM7C,EAAE,KAAM,CAAC,GAAGK,EAAEid,SAAS7c,EAAE6c,OAAOjd,EAAEK,EAAED,EAAEhE,MAAM,CAAC,IAAI,IAAI8D,GAAE,EAAGI,EAAED,EAAEmd,MAAMld,GAAG,CAAC,GAAGA,IAAIN,EAAE,CAACE,GAAE,EAAGF,EAAEK,EAAED,EAAEhE,EAAE,KAAK,CAAC,GAAGkE,IAAIF,EAAE,CAACF,GAAE,EAAGE,EAAEC,EAAEL,EAAE5D,EAAE,KAAK,CAACkE,EAAEA,EAAEmd,OAAO,CAAC,IAAIvd,EAAE,CAAC,IAAII,EAAElE,EAAEohB,MAAMld,GAAG,CAAC,GAAGA,IAC5fN,EAAE,CAACE,GAAE,EAAGF,EAAE5D,EAAEgE,EAAEC,EAAE,KAAK,CAAC,GAAGC,IAAIF,EAAE,CAACF,GAAE,EAAGE,EAAEhE,EAAE4D,EAAEK,EAAE,KAAK,CAACC,EAAEA,EAAEmd,OAAO,CAAC,IAAIvd,EAAE,MAAMsC,MAAM7C,EAAE,KAAM,CAAC,CAAC,GAAGK,EAAEgd,YAAY5c,EAAE,MAAMoC,MAAM7C,EAAE,KAAM,CAAC,GAAG,IAAIK,EAAE6S,IAAI,MAAMrQ,MAAM7C,EAAE,MAAM,OAAOK,EAAE0b,UAAU/a,UAAUX,EAAEC,EAAEE,CAAC,CAAkBud,CAAGzd,IAAmB0d,GAAG1d,GAAG,IAAI,CAAC,SAAS0d,GAAG1d,GAAG,GAAG,IAAIA,EAAE4S,KAAK,IAAI5S,EAAE4S,IAAI,OAAO5S,EAAE,IAAIA,EAAEA,EAAEud,MAAM,OAAOvd,GAAG,CAAC,IAAIE,EAAEwd,GAAG1d,GAAG,GAAG,OAAOE,EAAE,OAAOA,EAAEF,EAAEA,EAAEwd,OAAO,CAAC,OAAO,IAAI,CAC1X,IAAIG,GAAGjP,EAAGlE,0BAA0BoT,GAAGlP,EAAG/E,wBAAwBkU,GAAGnP,EAAGhE,qBAAqBoT,GAAGpP,EAAGpE,sBAAsB/I,GAAEmN,EAAGtG,aAAa2V,GAAGrP,EAAGxE,iCAAiC8T,GAAGtP,EAAGpF,2BAA2B2U,GAAGvP,EAAGhF,8BAA8BwU,GAAGxP,EAAGlF,wBAAwB2U,GAAGzP,EAAGnF,qBAAqB6U,GAAG1P,EAAGrF,sBAAsBgV,GAAG,KAAKC,GAAG,KACvV,IAAIC,GAAGvU,KAAKwU,MAAMxU,KAAKwU,MAAiC,SAAYxe,GAAU,OAAPA,KAAK,EAAS,IAAIA,EAAE,GAAG,IAAIye,GAAGze,GAAG0e,GAAG,GAAG,CAAC,EAA/ED,GAAGzU,KAAK2U,IAAID,GAAG1U,KAAK4U,IAA4D,IAAIC,GAAG,GAAGC,GAAG,QAC7H,SAASC,GAAG/e,GAAG,OAAOA,GAAGA,GAAG,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,GAAG,OAAO,GAAG,KAAK,GAAG,OAAO,GAAG,KAAK,GAAG,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,QAAQ,KAAK,QAAQ,OAAS,QAAFA,EAAU,KAAK,QAAQ,KAAK,QAAQ,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,OAAS,UAAFA,EAAY,KAAK,UAAU,OAAO,UAAU,KAAK,UAAU,OAAO,UAAU,KAAK,UAAU,OAAO,UAAU,KAAK,WAAW,OAAO,WACzgB,QAAQ,OAAOA,EAAE,CAAC,SAASgf,GAAGhf,EAAEE,GAAG,IAAIH,EAAEC,EAAEif,aAAa,GAAG,IAAIlf,EAAE,OAAO,EAAE,IAAII,EAAE,EAAEC,EAAEJ,EAAEkf,eAAe/iB,EAAE6D,EAAEmf,YAAYlf,EAAI,UAAFF,EAAY,GAAG,IAAIE,EAAE,CAAC,IAAII,EAAEJ,GAAGG,EAAE,IAAIC,EAAEF,EAAE4e,GAAG1e,GAAS,KAALlE,GAAG8D,KAAUE,EAAE4e,GAAG5iB,GAAI,MAAa,KAAP8D,EAAEF,GAAGK,GAAQD,EAAE4e,GAAG9e,GAAG,IAAI9D,IAAIgE,EAAE4e,GAAG5iB,IAAI,GAAG,IAAIgE,EAAE,OAAO,EAAE,GAAG,IAAID,GAAGA,IAAIC,GAAG,KAAKD,EAAEE,MAAKA,EAAED,GAAGA,KAAEhE,EAAE+D,GAAGA,IAAQ,KAAKE,GAAG,KAAO,QAAFjE,IAAY,OAAO+D,EAA0C,GAAxC,KAAO,EAAFC,KAAOA,GAAK,GAAFJ,GAA4B,KAAtBG,EAAEF,EAAEof,gBAAwB,IAAIpf,EAAEA,EAAEqf,cAAcnf,GAAGC,EAAE,EAAED,GAAcE,EAAE,IAAbL,EAAE,GAAGwe,GAAGre,IAAUC,GAAGH,EAAED,GAAGG,IAAIE,EAAE,OAAOD,CAAC,CACvc,SAASmf,GAAGtf,EAAEE,GAAG,OAAOF,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,OAAOE,EAAE,IAAI,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,QAAQ,KAAK,QAAQ,OAAOA,EAAE,IAAuJ,QAAQ,OAAO,EAAE,CACrN,SAASqf,GAAGvf,GAAgC,OAAO,KAApCA,GAAkB,WAAhBA,EAAEif,cAAsCjf,EAAI,WAAFA,EAAa,WAAW,CAAC,CAAC,SAASwf,KAAK,IAAIxf,EAAE6e,GAAoC,OAA1B,KAAQ,SAAfA,KAAK,MAAqBA,GAAG,IAAW7e,CAAC,CAAC,SAASyf,GAAGzf,GAAG,IAAI,IAAIE,EAAE,GAAGH,EAAE,EAAE,GAAGA,EAAEA,IAAIG,EAAE0D,KAAK5D,GAAG,OAAOE,CAAC,CAC3a,SAASwf,GAAG1f,EAAEE,EAAEH,GAAGC,EAAEif,cAAc/e,EAAE,YAAYA,IAAIF,EAAEkf,eAAe,EAAElf,EAAEmf,YAAY,IAAGnf,EAAEA,EAAE2f,YAAWzf,EAAE,GAAGqe,GAAGre,IAAQH,CAAC,CACzH,SAAS6f,GAAG5f,EAAEE,GAAG,IAAIH,EAAEC,EAAEof,gBAAgBlf,EAAE,IAAIF,EAAEA,EAAEqf,cAActf,GAAG,CAAC,IAAII,EAAE,GAAGoe,GAAGxe,GAAGK,EAAE,GAAGD,EAAEC,EAAEF,EAAEF,EAAEG,GAAGD,IAAIF,EAAEG,IAAID,GAAGH,IAAIK,CAAC,CAAC,CAAC,IAAIwB,GAAE,EAAE,SAASie,GAAG7f,GAAS,OAAO,GAAbA,IAAIA,GAAa,EAAEA,EAAE,KAAO,UAAFA,GAAa,GAAG,UAAU,EAAE,CAAC,CAAC,IAAI8f,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,IAAG,EAAGC,GAAG,GAAGC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAIC,IAAIC,GAAG,IAAID,IAAIE,GAAG,GAAGC,GAAG,6PAA6P5iB,MAAM,KAChiB,SAAS6iB,GAAG7gB,EAAEE,GAAG,OAAOF,GAAG,IAAK,UAAU,IAAK,WAAWqgB,GAAG,KAAK,MAAM,IAAK,YAAY,IAAK,YAAYC,GAAG,KAAK,MAAM,IAAK,YAAY,IAAK,WAAWC,GAAG,KAAK,MAAM,IAAK,cAAc,IAAK,aAAaC,GAAGM,OAAO5gB,EAAE6gB,WAAW,MAAM,IAAK,oBAAoB,IAAK,qBAAqBL,GAAGI,OAAO5gB,EAAE6gB,WAAW,CACnT,SAASC,GAAGhhB,EAAEE,EAAEH,EAAEI,EAAEC,EAAEjE,GAAG,OAAG,OAAO6D,GAAGA,EAAEihB,cAAc9kB,GAAS6D,EAAE,CAACkhB,UAAUhhB,EAAEihB,aAAaphB,EAAEqhB,iBAAiBjhB,EAAE8gB,YAAY9kB,EAAEklB,iBAAiB,CAACjhB,IAAI,OAAOF,IAAY,QAARA,EAAEsb,GAAGtb,KAAa6f,GAAG7f,IAAIF,IAAEA,EAAEohB,kBAAkBjhB,EAAED,EAAEF,EAAEqhB,iBAAiB,OAAOjhB,IAAI,IAAIF,EAAEhE,QAAQkE,IAAIF,EAAE0D,KAAKxD,GAAUJ,EAAC,CAEpR,SAASshB,GAAGthB,GAAG,IAAIE,EAAEqhB,GAAGvhB,EAAE1B,QAAQ,GAAG,OAAO4B,EAAE,CAAC,IAAIH,EAAE+c,GAAG5c,GAAG,GAAG,OAAOH,EAAE,GAAW,MAARG,EAAEH,EAAE6S,MAAY,GAAW,QAAR1S,EAAEgd,GAAGnd,IAA4D,OAA/CC,EAAEkhB,UAAUhhB,OAAEggB,GAAGlgB,EAAEwhB,UAAS,WAAWxB,GAAGjgB,EAAE,SAAgB,GAAG,IAAIG,GAAGH,EAAE0b,UAAU/a,QAAQyc,cAAcsE,aAAmE,YAArDzhB,EAAEkhB,UAAU,IAAInhB,EAAE6S,IAAI7S,EAAE0b,UAAUiG,cAAc,KAAY,CAAC1hB,EAAEkhB,UAAU,IAAI,CAClT,SAASS,GAAG3hB,GAAG,GAAG,OAAOA,EAAEkhB,UAAU,OAAM,EAAG,IAAI,IAAIhhB,EAAEF,EAAEqhB,iBAAiB,EAAEnhB,EAAEjB,QAAQ,CAAC,IAAIc,EAAE6hB,GAAG5hB,EAAEmhB,aAAanhB,EAAEohB,iBAAiBlhB,EAAE,GAAGF,EAAEihB,aAAa,GAAG,OAAOlhB,EAAiG,OAAe,QAARG,EAAEsb,GAAGzb,KAAaggB,GAAG7f,GAAGF,EAAEkhB,UAAUnhB,GAAE,EAA3H,IAAII,EAAE,IAAtBJ,EAAEC,EAAEihB,aAAwBve,YAAY3C,EAAEQ,KAAKR,GAAGgb,GAAG5a,EAAEJ,EAAEzB,OAAOujB,cAAc1hB,GAAG4a,GAAG,KAA0D7a,EAAE4hB,OAAO,CAAC,OAAM,CAAE,CAAC,SAASC,GAAG/hB,EAAEE,EAAEH,GAAG4hB,GAAG3hB,IAAID,EAAE+gB,OAAO5gB,EAAE,CAAC,SAAS8hB,KAAK7B,IAAG,EAAG,OAAOE,IAAIsB,GAAGtB,MAAMA,GAAG,MAAM,OAAOC,IAAIqB,GAAGrB,MAAMA,GAAG,MAAM,OAAOC,IAAIoB,GAAGpB,MAAMA,GAAG,MAAMC,GAAGviB,QAAQ8jB,IAAIrB,GAAGziB,QAAQ8jB,GAAG,CACnf,SAASE,GAAGjiB,EAAEE,GAAGF,EAAEkhB,YAAYhhB,IAAIF,EAAEkhB,UAAU,KAAKf,KAAKA,IAAG,EAAGzR,EAAGlE,0BAA0BkE,EAAGlF,wBAAwBwY,KAAK,CAC5H,SAASE,GAAGliB,GAAG,SAASE,EAAEA,GAAG,OAAO+hB,GAAG/hB,EAAEF,EAAE,CAAC,GAAG,EAAEogB,GAAGnhB,OAAO,CAACgjB,GAAG7B,GAAG,GAAGpgB,GAAG,IAAI,IAAID,EAAE,EAAEA,EAAEqgB,GAAGnhB,OAAOc,IAAI,CAAC,IAAII,EAAEigB,GAAGrgB,GAAGI,EAAE+gB,YAAYlhB,IAAIG,EAAE+gB,UAAU,KAAK,CAAC,CAAyF,IAAxF,OAAOb,IAAI4B,GAAG5B,GAAGrgB,GAAG,OAAOsgB,IAAI2B,GAAG3B,GAAGtgB,GAAG,OAAOugB,IAAI0B,GAAG1B,GAAGvgB,GAAGwgB,GAAGviB,QAAQiC,GAAGwgB,GAAGziB,QAAQiC,GAAOH,EAAE,EAAEA,EAAE4gB,GAAG1hB,OAAOc,KAAII,EAAEwgB,GAAG5gB,IAAKmhB,YAAYlhB,IAAIG,EAAE+gB,UAAU,MAAM,KAAK,EAAEP,GAAG1hB,QAAiB,QAARc,EAAE4gB,GAAG,IAAYO,WAAYI,GAAGvhB,GAAG,OAAOA,EAAEmhB,WAAWP,GAAGmB,OAAO,CAAC,IAAIK,GAAGrR,EAAGnM,wBAAwByd,IAAG,EAC5a,SAASC,GAAGriB,EAAEE,EAAEH,EAAEI,GAAG,IAAIC,EAAEwB,GAAEzF,EAAEgmB,GAAG3d,WAAW2d,GAAG3d,WAAW,KAAK,IAAI5C,GAAE,EAAE0gB,GAAGtiB,EAAEE,EAAEH,EAAEI,EAAE,CAAC,QAAQyB,GAAExB,EAAE+hB,GAAG3d,WAAWrI,CAAC,CAAC,CAAC,SAASomB,GAAGviB,EAAEE,EAAEH,EAAEI,GAAG,IAAIC,EAAEwB,GAAEzF,EAAEgmB,GAAG3d,WAAW2d,GAAG3d,WAAW,KAAK,IAAI5C,GAAE,EAAE0gB,GAAGtiB,EAAEE,EAAEH,EAAEI,EAAE,CAAC,QAAQyB,GAAExB,EAAE+hB,GAAG3d,WAAWrI,CAAC,CAAC,CACjO,SAASmmB,GAAGtiB,EAAEE,EAAEH,EAAEI,GAAG,GAAGiiB,GAAG,CAAC,IAAIhiB,EAAEwhB,GAAG5hB,EAAEE,EAAEH,EAAEI,GAAG,GAAG,OAAOC,EAAEoiB,GAAGxiB,EAAEE,EAAEC,EAAE8H,GAAGlI,GAAG8gB,GAAG7gB,EAAEG,QAAQ,GANtF,SAAYH,EAAEE,EAAEH,EAAEI,EAAEC,GAAG,OAAOF,GAAG,IAAK,UAAU,OAAOmgB,GAAGW,GAAGX,GAAGrgB,EAAEE,EAAEH,EAAEI,EAAEC,IAAG,EAAG,IAAK,YAAY,OAAOkgB,GAAGU,GAAGV,GAAGtgB,EAAEE,EAAEH,EAAEI,EAAEC,IAAG,EAAG,IAAK,YAAY,OAAOmgB,GAAGS,GAAGT,GAAGvgB,EAAEE,EAAEH,EAAEI,EAAEC,IAAG,EAAG,IAAK,cAAc,IAAIjE,EAAEiE,EAAE2gB,UAAkD,OAAxCP,GAAGlO,IAAInW,EAAE6kB,GAAGR,GAAGnN,IAAIlX,IAAI,KAAK6D,EAAEE,EAAEH,EAAEI,EAAEC,KAAU,EAAG,IAAK,oBAAoB,OAAOjE,EAAEiE,EAAE2gB,UAAUL,GAAGpO,IAAInW,EAAE6kB,GAAGN,GAAGrN,IAAIlX,IAAI,KAAK6D,EAAEE,EAAEH,EAAEI,EAAEC,KAAI,EAAG,OAAM,CAAE,CAM1QqiB,CAAGriB,EAAEJ,EAAEE,EAAEH,EAAEI,GAAGA,EAAEuiB,uBAAuB,GAAG7B,GAAG7gB,EAAEG,GAAK,EAAFD,IAAM,EAAE0gB,GAAG1kB,QAAQ8D,GAAG,CAAC,KAAK,OAAOI,GAAG,CAAC,IAAIjE,EAAEqf,GAAGpb,GAA0D,GAAvD,OAAOjE,GAAG2jB,GAAG3jB,GAAiB,QAAdA,EAAEylB,GAAG5hB,EAAEE,EAAEH,EAAEI,KAAaqiB,GAAGxiB,EAAEE,EAAEC,EAAE8H,GAAGlI,GAAM5D,IAAIiE,EAAE,MAAMA,EAAEjE,CAAC,CAAC,OAAOiE,GAAGD,EAAEuiB,iBAAiB,MAAMF,GAAGxiB,EAAEE,EAAEC,EAAE,KAAKJ,EAAE,CAAC,CAAC,IAAIkI,GAAG,KACpU,SAAS2Z,GAAG5hB,EAAEE,EAAEH,EAAEI,GAA2B,GAAxB8H,GAAG,KAAwB,QAAXjI,EAAEuhB,GAAVvhB,EAAEgb,GAAG7a,KAAuB,GAAW,QAARD,EAAE4c,GAAG9c,IAAYA,EAAE,UAAU,GAAW,MAARD,EAAEG,EAAE0S,KAAW,CAAS,GAAG,QAAX5S,EAAEkd,GAAGhd,IAAe,OAAOF,EAAEA,EAAE,IAAI,MAAM,GAAG,IAAID,EAAE,CAAC,GAAGG,EAAEub,UAAU/a,QAAQyc,cAAcsE,aAAa,OAAO,IAAIvhB,EAAE0S,IAAI1S,EAAEub,UAAUiG,cAAc,KAAK1hB,EAAE,IAAI,MAAME,IAAIF,IAAIA,EAAE,MAAW,OAALiI,GAAGjI,EAAS,IAAI,CAC7S,SAAS2iB,GAAG3iB,GAAG,OAAOA,GAAG,IAAK,SAAS,IAAK,QAAQ,IAAK,QAAQ,IAAK,cAAc,IAAK,OAAO,IAAK,MAAM,IAAK,WAAW,IAAK,WAAW,IAAK,UAAU,IAAK,YAAY,IAAK,OAAO,IAAK,UAAU,IAAK,WAAW,IAAK,QAAQ,IAAK,UAAU,IAAK,UAAU,IAAK,WAAW,IAAK,QAAQ,IAAK,YAAY,IAAK,UAAU,IAAK,QAAQ,IAAK,QAAQ,IAAK,OAAO,IAAK,gBAAgB,IAAK,cAAc,IAAK,YAAY,IAAK,aAAa,IAAK,QAAQ,IAAK,SAAS,IAAK,SAAS,IAAK,SAAS,IAAK,cAAc,IAAK,WAAW,IAAK,aAAa,IAAK,eAAe,IAAK,SAAS,IAAK,kBAAkB,IAAK,YAAY,IAAK,mBAAmB,IAAK,iBAAiB,IAAK,oBAAoB,IAAK,aAAa,IAAK,YAAY,IAAK,cAAc,IAAK,OAAO,IAAK,mBAAmB,IAAK,QAAQ,IAAK,aAAa,IAAK,WAAW,IAAK,SAAS,IAAK,cAAc,OAAO,EAAE,IAAK,OAAO,IAAK,YAAY,IAAK,WAAW,IAAK,YAAY,IAAK,WAAW,IAAK,YAAY,IAAK,WAAW,IAAK,YAAY,IAAK,cAAc,IAAK,aAAa,IAAK,cAAc,IAAK,SAAS,IAAK,SAAS,IAAK,YAAY,IAAK,QAAQ,IAAK,aAAa,IAAK,aAAa,IAAK,eAAe,IAAK,eAAe,OAAO,EACpqC,IAAK,UAAU,OAAO+d,MAAM,KAAKC,GAAG,OAAO,EAAE,KAAKC,GAAG,OAAO,EAAE,KAAKC,GAAG,KAAKC,GAAG,OAAO,GAAG,KAAKC,GAAG,OAAO,UAAU,QAAQ,OAAO,GAAG,QAAQ,OAAO,GAAG,CAAC,IAAIwE,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAK,SAASC,KAAK,GAAGD,GAAG,OAAOA,GAAG,IAAI9iB,EAAkBG,EAAhBD,EAAE2iB,GAAG9iB,EAAEG,EAAEjB,OAASmB,EAAE,UAAUwiB,GAAGA,GAAGvmB,MAAMumB,GAAGnN,YAAYtZ,EAAEiE,EAAEnB,OAAO,IAAIe,EAAE,EAAEA,EAAED,GAAGG,EAAEF,KAAKI,EAAEJ,GAAGA,KAAK,IAAIC,EAAEF,EAAEC,EAAE,IAAIG,EAAE,EAAEA,GAAGF,GAAGC,EAAEH,EAAEI,KAAKC,EAAEjE,EAAEgE,GAAGA,KAAK,OAAO2iB,GAAG1iB,EAAEyL,MAAM7L,EAAE,EAAEG,EAAE,EAAEA,OAAE,EAAO,CACxY,SAAS6iB,GAAGhjB,GAAG,IAAIE,EAAEF,EAAEijB,QAA+E,MAAvE,aAAajjB,EAAgB,KAAbA,EAAEA,EAAEkjB,WAAgB,KAAKhjB,IAAIF,EAAE,IAAKA,EAAEE,EAAE,KAAKF,IAAIA,EAAE,IAAW,IAAIA,GAAG,KAAKA,EAAEA,EAAE,CAAC,CAAC,SAASmjB,KAAK,OAAM,CAAE,CAAC,SAASC,KAAK,OAAM,CAAE,CAC5K,SAASC,GAAGrjB,GAAG,SAASE,EAAEA,EAAEC,EAAEC,EAAEjE,EAAE8D,GAA6G,IAAI,IAAIF,KAAlHgC,KAAKuhB,WAAWpjB,EAAE6B,KAAKwhB,YAAYnjB,EAAE2B,KAAKxB,KAAKJ,EAAE4B,KAAKkf,YAAY9kB,EAAE4F,KAAKzD,OAAO2B,EAAE8B,KAAKyhB,cAAc,KAAkBxjB,EAAEA,EAAE9C,eAAe6C,KAAKG,EAAEF,EAAED,GAAGgC,KAAKhC,GAAGG,EAAEA,EAAE/D,GAAGA,EAAE4D,IAAgI,OAA5HgC,KAAK0hB,oBAAoB,MAAMtnB,EAAEunB,iBAAiBvnB,EAAEunB,kBAAiB,IAAKvnB,EAAEwnB,aAAaR,GAAGC,GAAGrhB,KAAK6hB,qBAAqBR,GAAUrhB,IAAI,CAC9E,OAD+E8B,EAAE3D,EAAE/C,UAAU,CAAC0mB,eAAe,WAAW9hB,KAAK2hB,kBAAiB,EAAG,IAAI1jB,EAAE+B,KAAKkf,YAAYjhB,IAAIA,EAAE6jB,eAAe7jB,EAAE6jB,iBAAiB,mBAAmB7jB,EAAE2jB,cAC7e3jB,EAAE2jB,aAAY,GAAI5hB,KAAK0hB,mBAAmBN,GAAG,EAAET,gBAAgB,WAAW,IAAI1iB,EAAE+B,KAAKkf,YAAYjhB,IAAIA,EAAE0iB,gBAAgB1iB,EAAE0iB,kBAAkB,mBAAmB1iB,EAAE8jB,eAAe9jB,EAAE8jB,cAAa,GAAI/hB,KAAK6hB,qBAAqBT,GAAG,EAAEY,QAAQ,WAAW,EAAEC,aAAab,KAAYjjB,CAAC,CACjR,IAAoL+jB,GAAGC,GAAGC,GAAtLC,GAAG,CAACC,WAAW,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,UAAU,SAASxkB,GAAG,OAAOA,EAAEwkB,WAAWnc,KAAKF,KAAK,EAAEub,iBAAiB,EAAEe,UAAU,GAAGC,GAAGrB,GAAGe,IAAIO,GAAG9gB,EAAE,CAAC,EAAEugB,GAAG,CAACQ,KAAK,EAAEC,OAAO,IAAIC,GAAGzB,GAAGsB,IAAaI,GAAGlhB,EAAE,CAAC,EAAE8gB,GAAG,CAACK,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,iBAAiBC,GAAGC,OAAO,EAAEC,QAAQ,EAAEC,cAAc,SAAS9lB,GAAG,YAAO,IAASA,EAAE8lB,cAAc9lB,EAAE+lB,cAAc/lB,EAAEib,WAAWjb,EAAEgmB,UAAUhmB,EAAE+lB,YAAY/lB,EAAE8lB,aAAa,EAAEG,UAAU,SAASjmB,GAAG,MAAG,cAC3eA,EAASA,EAAEimB,WAAUjmB,IAAImkB,KAAKA,IAAI,cAAcnkB,EAAEO,MAAM0jB,GAAGjkB,EAAEglB,QAAQb,GAAGa,QAAQd,GAAGlkB,EAAEilB,QAAQd,GAAGc,SAASf,GAAGD,GAAG,EAAEE,GAAGnkB,GAAUikB,GAAE,EAAEiC,UAAU,SAASlmB,GAAG,MAAM,cAAcA,EAAEA,EAAEkmB,UAAUhC,EAAE,IAAIiC,GAAG9C,GAAG0B,IAAiCqB,GAAG/C,GAA7Bxf,EAAE,CAAC,EAAEkhB,GAAG,CAACsB,aAAa,KAA4CC,GAAGjD,GAA9Bxf,EAAE,CAAC,EAAE8gB,GAAG,CAACmB,cAAc,KAA0ES,GAAGlD,GAA5Dxf,EAAE,CAAC,EAAEugB,GAAG,CAACoC,cAAc,EAAEC,YAAY,EAAEC,cAAc,KAAcC,GAAG9iB,EAAE,CAAC,EAAEugB,GAAG,CAACwC,cAAc,SAAS5mB,GAAG,MAAM,kBAAkBA,EAAEA,EAAE4mB,cAAczX,OAAOyX,aAAa,IAAIC,GAAGxD,GAAGsD,IAAyBG,GAAGzD,GAArBxf,EAAE,CAAC,EAAEugB,GAAG,CAAC2C,KAAK,KAAcC,GAAG,CAACC,IAAI,SACxfC,SAAS,IAAIC,KAAK,YAAYC,GAAG,UAAUC,MAAM,aAAaC,KAAK,YAAYC,IAAI,SAASC,IAAI,KAAKC,KAAK,cAAcC,KAAK,cAAcC,OAAO,aAAaC,gBAAgB,gBAAgBC,GAAG,CAAC,EAAE,YAAY,EAAE,MAAM,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,UAAU,GAAG,MAAM,GAAG,QAAQ,GAAG,WAAW,GAAG,SAAS,GAAG,IAAI,GAAG,SAAS,GAAG,WAAW,GAAG,MAAM,GAAG,OAAO,GAAG,YAAY,GAAG,UAAU,GAAG,aAAa,GAAG,YAAY,GAAG,SAAS,GAAG,SAAS,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KACtf,IAAI,KAAK,IAAI,KAAK,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,UAAU,IAAI,aAAa,IAAI,QAAQC,GAAG,CAACC,IAAI,SAASC,QAAQ,UAAUC,KAAK,UAAUC,MAAM,YAAY,SAASC,GAAGnoB,GAAG,IAAIE,EAAE6B,KAAKkf,YAAY,OAAO/gB,EAAEwlB,iBAAiBxlB,EAAEwlB,iBAAiB1lB,MAAIA,EAAE8nB,GAAG9nB,OAAME,EAAEF,EAAK,CAAC,SAAS2lB,KAAK,OAAOwC,EAAE,CAChS,IAAIC,GAAGvkB,EAAE,CAAC,EAAE8gB,GAAG,CAAC5oB,IAAI,SAASiE,GAAG,GAAGA,EAAEjE,IAAI,CAAC,IAAImE,EAAE8mB,GAAGhnB,EAAEjE,MAAMiE,EAAEjE,IAAI,GAAG,iBAAiBmE,EAAE,OAAOA,CAAC,CAAC,MAAM,aAAaF,EAAEO,KAAc,MAARP,EAAEgjB,GAAGhjB,IAAU,QAAQxC,OAAOI,aAAaoC,GAAI,YAAYA,EAAEO,MAAM,UAAUP,EAAEO,KAAKsnB,GAAG7nB,EAAEijB,UAAU,eAAe,EAAE,EAAEoF,KAAK,EAAExb,SAAS,EAAEyY,QAAQ,EAAEC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,EAAE6C,OAAO,EAAEC,OAAO,EAAE7C,iBAAiBC,GAAGzC,SAAS,SAASljB,GAAG,MAAM,aAAaA,EAAEO,KAAKyiB,GAAGhjB,GAAG,CAAC,EAAEijB,QAAQ,SAASjjB,GAAG,MAAM,YAAYA,EAAEO,MAAM,UAAUP,EAAEO,KAAKP,EAAEijB,QAAQ,CAAC,EAAEuF,MAAM,SAASxoB,GAAG,MAAM,aAC7eA,EAAEO,KAAKyiB,GAAGhjB,GAAG,YAAYA,EAAEO,MAAM,UAAUP,EAAEO,KAAKP,EAAEijB,QAAQ,CAAC,IAAIwF,GAAGpF,GAAG+E,IAAiIM,GAAGrF,GAA7Hxf,EAAE,CAAC,EAAEkhB,GAAG,CAAChE,UAAU,EAAEjmB,MAAM,EAAE6tB,OAAO,EAAEC,SAAS,EAAEC,mBAAmB,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,YAAY,EAAEC,UAAU,KAAmIC,GAAG9F,GAArHxf,EAAE,CAAC,EAAE8gB,GAAG,CAACyE,QAAQ,EAAEC,cAAc,EAAEC,eAAe,EAAE9D,OAAO,EAAEC,QAAQ,EAAEH,QAAQ,EAAEC,SAAS,EAAEG,iBAAiBC,MAA0E4D,GAAGlG,GAA3Dxf,EAAE,CAAC,EAAEugB,GAAG,CAACvU,aAAa,EAAE4W,YAAY,EAAEC,cAAc,KAAc8C,GAAG3lB,EAAE,CAAC,EAAEkhB,GAAG,CAAC0E,OAAO,SAASzpB,GAAG,MAAM,WAAWA,EAAEA,EAAEypB,OAAO,gBAAgBzpB,GAAGA,EAAE0pB,YAAY,CAAC,EACnfC,OAAO,SAAS3pB,GAAG,MAAM,WAAWA,EAAEA,EAAE2pB,OAAO,gBAAgB3pB,GAAGA,EAAE4pB,YAAY,eAAe5pB,GAAGA,EAAE6pB,WAAW,CAAC,EAAEC,OAAO,EAAEC,UAAU,IAAIC,GAAG3G,GAAGmG,IAAIS,GAAG,CAAC,EAAE,GAAG,GAAG,IAAIC,GAAGhb,GAAI,qBAAqBC,OAAOgb,GAAG,KAAKjb,GAAI,iBAAiBE,WAAW+a,GAAG/a,SAASgb,cAAc,IAAIC,GAAGnb,GAAI,cAAcC,SAASgb,GAAGG,GAAGpb,KAAMgb,IAAIC,IAAI,EAAEA,IAAI,IAAIA,IAAII,GAAG/sB,OAAOI,aAAa,IAAI4sB,IAAG,EAC1W,SAASC,GAAGzqB,EAAEE,GAAG,OAAOF,GAAG,IAAK,QAAQ,OAAO,IAAIiqB,GAAG/tB,QAAQgE,EAAE+iB,SAAS,IAAK,UAAU,OAAO,MAAM/iB,EAAE+iB,QAAQ,IAAK,WAAW,IAAK,YAAY,IAAK,WAAW,OAAM,EAAG,QAAQ,OAAM,EAAG,CAAC,SAASyH,GAAG1qB,GAAc,MAAM,kBAAjBA,EAAEA,EAAE6kB,SAAkC,SAAS7kB,EAAEA,EAAE+mB,KAAK,IAAI,CAAC,IAAI4D,IAAG,EAE9Q,IAAIC,GAAG,CAACC,OAAM,EAAGC,MAAK,EAAGC,UAAS,EAAG,kBAAiB,EAAGC,OAAM,EAAGC,OAAM,EAAGhf,QAAO,EAAGif,UAAS,EAAGC,OAAM,EAAGC,QAAO,EAAGC,KAAI,EAAGC,MAAK,EAAGC,MAAK,EAAGC,KAAI,EAAGC,MAAK,GAAI,SAASC,GAAG1rB,GAAG,IAAIE,EAAEF,GAAGA,EAAEiT,UAAUjT,EAAEiT,SAASjD,cAAc,MAAM,UAAU9P,IAAI0qB,GAAG5qB,EAAEO,MAAM,aAAaL,CAAO,CAAC,SAASyrB,GAAG3rB,EAAEE,EAAEH,EAAEI,GAAGwb,GAAGxb,GAAsB,GAAnBD,EAAE0rB,GAAG1rB,EAAE,aAAgBjB,SAASc,EAAE,IAAI2kB,GAAG,WAAW,SAAS,KAAK3kB,EAAEI,GAAGH,EAAE4D,KAAK,CAACioB,MAAM9rB,EAAE+rB,UAAU5rB,IAAI,CAAC,IAAI6rB,GAAG,KAAKC,GAAG,KAAK,SAASC,GAAGjsB,GAAGksB,GAAGlsB,EAAE,EAAE,CAAC,SAASmsB,GAAGnsB,GAAe,GAAG4T,EAATwY,GAAGpsB,IAAY,OAAOA,CAAC,CACpe,SAASqsB,GAAGrsB,EAAEE,GAAG,GAAG,WAAWF,EAAE,OAAOE,CAAC,CAAC,IAAIosB,IAAG,EAAG,GAAGpd,EAAG,CAAC,IAAIqd,GAAG,GAAGrd,EAAG,CAAC,IAAIsd,GAAG,YAAYpd,SAAS,IAAIod,GAAG,CAAC,IAAIC,GAAGrd,SAASvU,cAAc,OAAO4xB,GAAG9b,aAAa,UAAU,WAAW6b,GAAG,oBAAoBC,GAAGC,OAAO,CAACH,GAAGC,EAAE,MAAMD,IAAG,EAAGD,GAAGC,MAAMnd,SAASgb,cAAc,EAAEhb,SAASgb,aAAa,CAAC,SAASuC,KAAKZ,KAAKA,GAAGa,YAAY,mBAAmBC,IAAIb,GAAGD,GAAG,KAAK,CAAC,SAASc,GAAG7sB,GAAG,GAAG,UAAUA,EAAE6P,cAAcsc,GAAGH,IAAI,CAAC,IAAI9rB,EAAE,GAAGyrB,GAAGzrB,EAAE8rB,GAAGhsB,EAAEgb,GAAGhb,IAAIgc,GAAGiQ,GAAG/rB,EAAE,CAAC,CAC/b,SAAS4sB,GAAG9sB,EAAEE,EAAEH,GAAG,YAAYC,GAAG2sB,KAAUX,GAAGjsB,GAARgsB,GAAG7rB,GAAU6sB,YAAY,mBAAmBF,KAAK,aAAa7sB,GAAG2sB,IAAI,CAAC,SAASK,GAAGhtB,GAAG,GAAG,oBAAoBA,GAAG,UAAUA,GAAG,YAAYA,EAAE,OAAOmsB,GAAGH,GAAG,CAAC,SAASiB,GAAGjtB,EAAEE,GAAG,GAAG,UAAUF,EAAE,OAAOmsB,GAAGjsB,EAAE,CAAC,SAASgtB,GAAGltB,EAAEE,GAAG,GAAG,UAAUF,GAAG,WAAWA,EAAE,OAAOmsB,GAAGjsB,EAAE,CAAiE,IAAIitB,GAAG,oBAAoBlwB,OAAO6d,GAAG7d,OAAO6d,GAA5G,SAAY9a,EAAEE,GAAG,OAAOF,IAAIE,IAAI,IAAIF,GAAG,EAAEA,IAAI,EAAEE,IAAIF,IAAIA,GAAGE,IAAIA,CAAC,EACtW,SAASktB,GAAGptB,EAAEE,GAAG,GAAGitB,GAAGntB,EAAEE,GAAG,OAAM,EAAG,GAAG,kBAAkBF,GAAG,OAAOA,GAAG,kBAAkBE,GAAG,OAAOA,EAAE,OAAM,EAAG,IAAIH,EAAE9C,OAAOkB,KAAK6B,GAAGG,EAAElD,OAAOkB,KAAK+B,GAAG,GAAGH,EAAEd,SAASkB,EAAElB,OAAO,OAAM,EAAG,IAAIkB,EAAE,EAAEA,EAAEJ,EAAEd,OAAOkB,IAAI,CAAC,IAAIC,EAAEL,EAAEI,GAAG,IAAIkP,EAAGnQ,KAAKgB,EAAEE,KAAK+sB,GAAGntB,EAAEI,GAAGF,EAAEE,IAAI,OAAM,CAAE,CAAC,OAAM,CAAE,CAAC,SAASitB,GAAGrtB,GAAG,KAAKA,GAAGA,EAAEiW,YAAYjW,EAAEA,EAAEiW,WAAW,OAAOjW,CAAC,CACtU,SAASstB,GAAGttB,EAAEE,GAAG,IAAwBC,EAApBJ,EAAEstB,GAAGrtB,GAAO,IAAJA,EAAE,EAAYD,GAAG,CAAC,GAAG,IAAIA,EAAEyW,SAAS,CAA0B,GAAzBrW,EAAEH,EAAED,EAAE0V,YAAYxW,OAAUe,GAAGE,GAAGC,GAAGD,EAAE,MAAM,CAACyN,KAAK5N,EAAEoO,OAAOjO,EAAEF,GAAGA,EAAEG,CAAC,CAACH,EAAE,CAAC,KAAKD,GAAG,CAAC,GAAGA,EAAEwtB,YAAY,CAACxtB,EAAEA,EAAEwtB,YAAY,MAAMvtB,CAAC,CAACD,EAAEA,EAAEob,UAAU,CAACpb,OAAE,CAAM,CAACA,EAAEstB,GAAGttB,EAAE,CAAC,CAAC,SAASytB,GAAGxtB,EAAEE,GAAG,SAAOF,IAAGE,KAAEF,IAAIE,KAAKF,GAAG,IAAIA,EAAEwW,YAAYtW,GAAG,IAAIA,EAAEsW,SAASgX,GAAGxtB,EAAEE,EAAEib,YAAY,aAAanb,EAAEA,EAAEytB,SAASvtB,KAAGF,EAAE0tB,4BAAwD,GAA7B1tB,EAAE0tB,wBAAwBxtB,KAAY,CAC9Z,SAASytB,KAAK,IAAI,IAAI3tB,EAAEmP,OAAOjP,EAAE4T,IAAK5T,aAAaF,EAAE4tB,mBAAmB,CAAC,IAAI,IAAI7tB,EAAE,kBAAkBG,EAAE2tB,cAAchhB,SAASihB,IAAI,CAAC,MAAM3tB,GAAGJ,GAAE,CAAE,CAAC,IAAGA,EAAyB,MAAMG,EAAE4T,GAA/B9T,EAAEE,EAAE2tB,eAAgCze,SAAS,CAAC,OAAOlP,CAAC,CAAC,SAAS6tB,GAAG/tB,GAAG,IAAIE,EAAEF,GAAGA,EAAEiT,UAAUjT,EAAEiT,SAASjD,cAAc,OAAO9P,IAAI,UAAUA,IAAI,SAASF,EAAEO,MAAM,WAAWP,EAAEO,MAAM,QAAQP,EAAEO,MAAM,QAAQP,EAAEO,MAAM,aAAaP,EAAEO,OAAO,aAAaL,GAAG,SAASF,EAAEguB,gBAAgB,CACxa,SAASC,GAAGjuB,GAAG,IAAIE,EAAEytB,KAAK5tB,EAAEC,EAAEkuB,YAAY/tB,EAAEH,EAAEmuB,eAAe,GAAGjuB,IAAIH,GAAGA,GAAGA,EAAE8U,eAAe2Y,GAAGztB,EAAE8U,cAAcuZ,gBAAgBruB,GAAG,CAAC,GAAG,OAAOI,GAAG4tB,GAAGhuB,GAAG,GAAGG,EAAEC,EAAEkuB,WAAc,KAARruB,EAAEG,EAAEmuB,OAAiBtuB,EAAEE,GAAG,mBAAmBH,EAAEA,EAAEwuB,eAAeruB,EAAEH,EAAEyuB,aAAaxkB,KAAKykB,IAAIzuB,EAAED,EAAE1D,MAAM4C,aAAa,IAAGe,GAAGE,EAAEH,EAAE8U,eAAezF,WAAWlP,EAAEwuB,aAAavf,QAASwf,aAAa,CAAC3uB,EAAEA,EAAE2uB,eAAe,IAAIvuB,EAAEL,EAAE0V,YAAYxW,OAAO9C,EAAE6N,KAAKykB,IAAItuB,EAAEkuB,MAAMjuB,GAAGD,OAAE,IAASA,EAAEmuB,IAAInyB,EAAE6N,KAAKykB,IAAItuB,EAAEmuB,IAAIluB,IAAIJ,EAAE4uB,QAAQzyB,EAAEgE,IAAIC,EAAED,EAAEA,EAAEhE,EAAEA,EAAEiE,GAAGA,EAAEktB,GAAGvtB,EAAE5D,GAAG,IAAI8D,EAAEqtB,GAAGvtB,EACvfI,GAAGC,GAAGH,IAAI,IAAID,EAAE6uB,YAAY7uB,EAAE8uB,aAAa1uB,EAAEuN,MAAM3N,EAAE+uB,eAAe3uB,EAAE+N,QAAQnO,EAAEgvB,YAAY/uB,EAAE0N,MAAM3N,EAAEivB,cAAchvB,EAAEkO,WAAUjO,EAAEA,EAAEgvB,eAAgBC,SAAS/uB,EAAEuN,KAAKvN,EAAE+N,QAAQnO,EAAEovB,kBAAkBjzB,EAAEgE,GAAGH,EAAEqvB,SAASnvB,GAAGF,EAAE4uB,OAAO3uB,EAAE0N,KAAK1N,EAAEkO,UAAUjO,EAAEovB,OAAOrvB,EAAE0N,KAAK1N,EAAEkO,QAAQnO,EAAEqvB,SAASnvB,IAAI,CAAM,IAALA,EAAE,GAAOF,EAAED,EAAEC,EAAEA,EAAEmb,YAAY,IAAInb,EAAEwW,UAAUtW,EAAE0D,KAAK,CAAC4J,QAAQxN,EAAEuvB,KAAKvvB,EAAEwvB,WAAWC,IAAIzvB,EAAE0vB,YAAmD,IAAvC,oBAAoB3vB,EAAE4vB,OAAO5vB,EAAE4vB,QAAY5vB,EAAE,EAAEA,EAAEG,EAAEjB,OAAOc,KAAIC,EAAEE,EAAEH,IAAKyN,QAAQgiB,WAAWxvB,EAAEuvB,KAAKvvB,EAAEwN,QAAQkiB,UAAU1vB,EAAEyvB,GAAG,CAAC,CACzf,IAAIG,GAAG1gB,GAAI,iBAAiBE,UAAU,IAAIA,SAASgb,aAAayF,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,IAAG,EAC3F,SAASC,GAAGjwB,EAAEE,EAAEH,GAAG,IAAII,EAAEJ,EAAEoP,SAASpP,EAAEA,EAAEqP,SAAS,IAAIrP,EAAEyW,SAASzW,EAAEA,EAAE8U,cAAcmb,IAAI,MAAMH,IAAIA,KAAK/b,EAAG3T,KAAU,mBAALA,EAAE0vB,KAAyB9B,GAAG5tB,GAAGA,EAAE,CAACkuB,MAAMluB,EAAEouB,eAAeD,IAAInuB,EAAEquB,cAAuFruB,EAAE,CAAC2uB,YAA3E3uB,GAAGA,EAAE0U,eAAe1U,EAAE0U,cAAc6Z,aAAavf,QAAQwf,gBAA+BG,WAAWC,aAAa5uB,EAAE4uB,aAAaC,UAAU7uB,EAAE6uB,UAAUC,YAAY9uB,EAAE8uB,aAAcc,IAAI3C,GAAG2C,GAAG5vB,KAAK4vB,GAAG5vB,EAAsB,GAApBA,EAAEyrB,GAAGkE,GAAG,aAAgB7wB,SAASiB,EAAE,IAAIwkB,GAAG,WAAW,SAAS,KAAKxkB,EAAEH,GAAGC,EAAE4D,KAAK,CAACioB,MAAM3rB,EAAE4rB,UAAU3rB,IAAID,EAAE5B,OAAOuxB,KAAK,CACtf,SAASK,GAAGlwB,EAAEE,GAAG,IAAIH,EAAE,CAAC,EAAiF,OAA/EA,EAAEC,EAAEgQ,eAAe9P,EAAE8P,cAAcjQ,EAAE,SAASC,GAAG,SAASE,EAAEH,EAAE,MAAMC,GAAG,MAAME,EAASH,CAAC,CAAC,IAAIowB,GAAG,CAACC,aAAaF,GAAG,YAAY,gBAAgBG,mBAAmBH,GAAG,YAAY,sBAAsBI,eAAeJ,GAAG,YAAY,kBAAkBK,cAAcL,GAAG,aAAa,kBAAkBM,GAAG,CAAC,EAAEC,GAAG,CAAC,EACpF,SAASC,GAAG1wB,GAAG,GAAGwwB,GAAGxwB,GAAG,OAAOwwB,GAAGxwB,GAAG,IAAImwB,GAAGnwB,GAAG,OAAOA,EAAE,IAAYD,EAARG,EAAEiwB,GAAGnwB,GAAK,IAAID,KAAKG,EAAE,GAAGA,EAAEhD,eAAe6C,IAAIA,KAAK0wB,GAAG,OAAOD,GAAGxwB,GAAGE,EAAEH,GAAG,OAAOC,CAAC,CAA/XkP,IAAKuhB,GAAGrhB,SAASvU,cAAc,OAAO2e,MAAM,mBAAmBrK,gBAAgBghB,GAAGC,aAAaO,iBAAiBR,GAAGE,mBAAmBM,iBAAiBR,GAAGG,eAAeK,WAAW,oBAAoBxhB,eAAeghB,GAAGI,cAAc/rB,YAAwJ,IAAIosB,GAAGF,GAAG,gBAAgBG,GAAGH,GAAG,sBAAsBI,GAAGJ,GAAG,kBAAkBK,GAAGL,GAAG,iBAAiBM,GAAG,IAAIvQ,IAAIwQ,GAAG,smBAAsmBjzB,MAAM,KAC/lC,SAASkzB,GAAGlxB,EAAEE,GAAG8wB,GAAG1e,IAAItS,EAAEE,GAAG6O,EAAG7O,EAAE,CAACF,GAAG,CAAC,IAAI,IAAImxB,GAAG,EAAEA,GAAGF,GAAGhyB,OAAOkyB,KAAK,CAAC,IAAIC,GAAGH,GAAGE,IAA2DD,GAApDE,GAAGphB,cAAuD,MAAtCohB,GAAG,GAAGjhB,cAAcihB,GAAGvlB,MAAM,IAAiB,CAACqlB,GAAGN,GAAG,kBAAkBM,GAAGL,GAAG,wBAAwBK,GAAGJ,GAAG,oBAAoBI,GAAG,WAAW,iBAAiBA,GAAG,UAAU,WAAWA,GAAG,WAAW,UAAUA,GAAGH,GAAG,mBAAmB/hB,EAAG,eAAe,CAAC,WAAW,cAAcA,EAAG,eAAe,CAAC,WAAW,cAAcA,EAAG,iBAAiB,CAAC,aAAa,gBAC7cA,EAAG,iBAAiB,CAAC,aAAa,gBAAgBD,EAAG,WAAW,oEAAoE/Q,MAAM,MAAM+Q,EAAG,WAAW,uFAAuF/Q,MAAM,MAAM+Q,EAAG,gBAAgB,CAAC,iBAAiB,WAAW,YAAY,UAAUA,EAAG,mBAAmB,2DAA2D/Q,MAAM,MAAM+Q,EAAG,qBAAqB,6DAA6D/Q,MAAM,MAC/f+Q,EAAG,sBAAsB,8DAA8D/Q,MAAM,MAAM,IAAIqzB,GAAG,6NAA6NrzB,MAAM,KAAKszB,GAAG,IAAIziB,IAAI,0CAA0C7Q,MAAM,KAAKiN,OAAOomB,KACzZ,SAASE,GAAGvxB,EAAEE,EAAEH,GAAG,IAAII,EAAEH,EAAEO,MAAM,gBAAgBP,EAAEwjB,cAAczjB,EAlDjE,SAAYC,EAAEE,EAAEH,EAAEI,EAAEC,EAAEjE,EAAE8D,EAAEI,EAAElB,GAA4B,GAAzB0d,GAAG/X,MAAM/C,KAAK/C,WAAcwd,GAAG,CAAC,IAAGA,GAAgC,MAAMja,MAAM7C,EAAE,MAA1C,IAAIJ,EAAEmd,GAAGD,IAAG,EAAGC,GAAG,KAA8BC,KAAKA,IAAG,EAAGC,GAAGrd,EAAE,CAAC,CAkDpEkyB,CAAGrxB,EAAED,OAAE,EAAOF,GAAGA,EAAEwjB,cAAc,IAAI,CACxG,SAAS0I,GAAGlsB,EAAEE,GAAGA,EAAE,KAAO,EAAFA,GAAK,IAAI,IAAIH,EAAE,EAAEA,EAAEC,EAAEf,OAAOc,IAAI,CAAC,IAAII,EAAEH,EAAED,GAAGK,EAAED,EAAE0rB,MAAM1rB,EAAEA,EAAE2rB,UAAU9rB,EAAE,CAAC,IAAI7D,OAAE,EAAO,GAAG+D,EAAE,IAAI,IAAID,EAAEE,EAAElB,OAAO,EAAE,GAAGgB,EAAEA,IAAI,CAAC,IAAII,EAAEF,EAAEF,GAAGd,EAAEkB,EAAEoxB,SAASnyB,EAAEe,EAAEmjB,cAA2B,GAAbnjB,EAAEA,EAAEqxB,SAAYvyB,IAAIhD,GAAGiE,EAAEwjB,uBAAuB,MAAM5jB,EAAEuxB,GAAGnxB,EAAEC,EAAEf,GAAGnD,EAAEgD,CAAC,MAAM,IAAIc,EAAE,EAAEA,EAAEE,EAAElB,OAAOgB,IAAI,CAAoD,GAA5Cd,GAAPkB,EAAEF,EAAEF,IAAOwxB,SAASnyB,EAAEe,EAAEmjB,cAAcnjB,EAAEA,EAAEqxB,SAAYvyB,IAAIhD,GAAGiE,EAAEwjB,uBAAuB,MAAM5jB,EAAEuxB,GAAGnxB,EAAEC,EAAEf,GAAGnD,EAAEgD,CAAC,CAAC,CAAC,CAAC,GAAGud,GAAG,MAAM1c,EAAE2c,GAAGD,IAAG,EAAGC,GAAG,KAAK3c,CAAE,CAC5a,SAAS6B,GAAE7B,EAAEE,GAAG,IAAIH,EAAEG,EAAEyxB,SAAI,IAAS5xB,IAAIA,EAAEG,EAAEyxB,IAAI,IAAI9iB,KAAK,IAAI1O,EAAEH,EAAE,WAAWD,EAAE6xB,IAAIzxB,KAAK0xB,GAAG3xB,EAAEF,EAAE,GAAE,GAAID,EAAEkP,IAAI9O,GAAG,CAAC,SAAS2xB,GAAG9xB,EAAEE,EAAEH,GAAG,IAAII,EAAE,EAAED,IAAIC,GAAG,GAAG0xB,GAAG9xB,EAAEC,EAAEG,EAAED,EAAE,CAAC,IAAI6xB,GAAG,kBAAkB/nB,KAAKgoB,SAASvuB,SAAS,IAAIoI,MAAM,GAAG,SAASomB,GAAGjyB,GAAG,IAAIA,EAAE+xB,IAAI,CAAC/xB,EAAE+xB,KAAI,EAAGnjB,EAAG3Q,SAAQ,SAASiC,GAAG,oBAAoBA,IAAIoxB,GAAGM,IAAI1xB,IAAI4xB,GAAG5xB,GAAE,EAAGF,GAAG8xB,GAAG5xB,GAAE,EAAGF,GAAG,IAAG,IAAIE,EAAE,IAAIF,EAAEwW,SAASxW,EAAEA,EAAE6U,cAAc,OAAO3U,GAAGA,EAAE6xB,MAAM7xB,EAAE6xB,KAAI,EAAGD,GAAG,mBAAkB,EAAG5xB,GAAG,CAAC,CACjb,SAAS2xB,GAAG7xB,EAAEE,EAAEH,EAAEI,GAAG,OAAOwiB,GAAGziB,IAAI,KAAK,EAAE,IAAIE,EAAEiiB,GAAG,MAAM,KAAK,EAAEjiB,EAAEmiB,GAAG,MAAM,QAAQniB,EAAEkiB,GAAGviB,EAAEK,EAAE+F,KAAK,KAAKjG,EAAEH,EAAEC,GAAGI,OAAE,GAAQ8b,IAAI,eAAehc,GAAG,cAAcA,GAAG,UAAUA,IAAIE,GAAE,GAAID,OAAE,IAASC,EAAEJ,EAAEoc,iBAAiBlc,EAAEH,EAAE,CAACmyB,SAAQ,EAAGC,QAAQ/xB,IAAIJ,EAAEoc,iBAAiBlc,EAAEH,GAAE,QAAI,IAASK,EAAEJ,EAAEoc,iBAAiBlc,EAAEH,EAAE,CAACoyB,QAAQ/xB,IAAIJ,EAAEoc,iBAAiBlc,EAAEH,GAAE,EAAG,CAClV,SAASyiB,GAAGxiB,EAAEE,EAAEH,EAAEI,EAAEC,GAAG,IAAIjE,EAAEgE,EAAE,GAAG,KAAO,EAAFD,IAAM,KAAO,EAAFA,IAAM,OAAOC,EAAEH,EAAE,OAAO,CAAC,GAAG,OAAOG,EAAE,OAAO,IAAIF,EAAEE,EAAEyS,IAAI,GAAG,IAAI3S,GAAG,IAAIA,EAAE,CAAC,IAAII,EAAEF,EAAEsb,UAAUiG,cAAc,GAAGrhB,IAAID,GAAG,IAAIC,EAAEmW,UAAUnW,EAAE8a,aAAa/a,EAAE,MAAM,GAAG,IAAIH,EAAE,IAAIA,EAAEE,EAAE6c,OAAO,OAAO/c,GAAG,CAAC,IAAId,EAAEc,EAAE2S,IAAI,IAAG,IAAIzT,GAAG,IAAIA,MAAKA,EAAEc,EAAEwb,UAAUiG,iBAAkBthB,GAAG,IAAIjB,EAAEqX,UAAUrX,EAAEgc,aAAa/a,GAAE,OAAOH,EAAEA,EAAE+c,MAAM,CAAC,KAAK,OAAO3c,GAAG,CAAS,GAAG,QAAXJ,EAAEshB,GAAGlhB,IAAe,OAAe,GAAG,KAAXlB,EAAEc,EAAE2S,MAAc,IAAIzT,EAAE,CAACgB,EAAEhE,EAAE8D,EAAE,SAASD,CAAC,CAACK,EAAEA,EAAE8a,UAAU,CAAC,CAAChb,EAAEA,EAAE6c,MAAM,CAAChB,IAAG,WAAW,IAAI7b,EAAEhE,EAAEiE,EAAE4a,GAAGjb,GAAGE,EAAE,GACpfD,EAAE,CAAC,IAAIK,EAAE2wB,GAAG3d,IAAIrT,GAAG,QAAG,IAASK,EAAE,CAAC,IAAIlB,EAAEulB,GAAG7mB,EAAEmC,EAAE,OAAOA,GAAG,IAAK,WAAW,GAAG,IAAIgjB,GAAGjjB,GAAG,MAAMC,EAAE,IAAK,UAAU,IAAK,QAAQb,EAAEspB,GAAG,MAAM,IAAK,UAAU5qB,EAAE,QAAQsB,EAAEmnB,GAAG,MAAM,IAAK,WAAWzoB,EAAE,OAAOsB,EAAEmnB,GAAG,MAAM,IAAK,aAAa,IAAK,YAAYnnB,EAAEmnB,GAAG,MAAM,IAAK,QAAQ,GAAG,IAAIvmB,EAAE6lB,OAAO,MAAM5lB,EAAE,IAAK,WAAW,IAAK,WAAW,IAAK,YAAY,IAAK,YAAY,IAAK,UAAU,IAAK,WAAW,IAAK,YAAY,IAAK,cAAcb,EAAEgnB,GAAG,MAAM,IAAK,OAAO,IAAK,UAAU,IAAK,YAAY,IAAK,WAAW,IAAK,YAAY,IAAK,WAAW,IAAK,YAAY,IAAK,OAAOhnB,EAC1iBinB,GAAG,MAAM,IAAK,cAAc,IAAK,WAAW,IAAK,YAAY,IAAK,aAAajnB,EAAEgqB,GAAG,MAAM,KAAKyH,GAAG,KAAKC,GAAG,KAAKC,GAAG3xB,EAAEonB,GAAG,MAAM,KAAKwK,GAAG5xB,EAAEoqB,GAAG,MAAM,IAAK,SAASpqB,EAAE2lB,GAAG,MAAM,IAAK,QAAQ3lB,EAAE6qB,GAAG,MAAM,IAAK,OAAO,IAAK,MAAM,IAAK,QAAQ7qB,EAAE0nB,GAAG,MAAM,IAAK,oBAAoB,IAAK,qBAAqB,IAAK,gBAAgB,IAAK,cAAc,IAAK,cAAc,IAAK,aAAa,IAAK,cAAc,IAAK,YAAY1nB,EAAEupB,GAAG,IAAI3nB,EAAE,KAAO,EAAFb,GAAK6C,GAAGhC,GAAG,WAAWf,EAAEmB,EAAEJ,EAAE,OAAOV,EAAEA,EAAE,UAAU,KAAKA,EAAEU,EAAE,GAAG,IAAI,IAAQC,EAAJE,EAAEf,EAAI,OAC/ee,GAAG,CAAK,IAAIiB,GAARnB,EAAEE,GAAUua,UAAsF,GAA5E,IAAIza,EAAE4R,KAAK,OAAOzQ,IAAInB,EAAEmB,EAAE,OAAOhB,IAAc,OAAVgB,EAAE8Z,GAAG/a,EAAEC,KAAYJ,EAAE6C,KAAKwuB,GAAGlxB,EAAEiB,EAAEnB,MAAS+B,EAAE,MAAM7B,EAAEA,EAAE8b,MAAM,CAAC,EAAEjc,EAAE9B,SAASoB,EAAE,IAAIlB,EAAEkB,EAAExC,EAAE,KAAKkC,EAAEK,GAAGH,EAAE2D,KAAK,CAACioB,MAAMxrB,EAAEyrB,UAAU/qB,IAAI,CAAC,CAAC,GAAG,KAAO,EAAFb,GAAK,CAA4E,GAAnCf,EAAE,aAAaa,GAAG,eAAeA,KAAtEK,EAAE,cAAcL,GAAG,gBAAgBA,IAA2CD,IAAIgb,MAAKld,EAAEkC,EAAE+lB,eAAe/lB,EAAEgmB,eAAexE,GAAG1jB,KAAIA,EAAEw0B,OAAgBlzB,GAAGkB,KAAGA,EAAED,EAAE+O,SAAS/O,EAAEA,GAAGC,EAAED,EAAEyU,eAAexU,EAAEquB,aAAaruB,EAAEiyB,aAAanjB,OAAUhQ,GAAqCA,EAAEgB,EAAiB,QAAftC,GAAnCA,EAAEkC,EAAE+lB,eAAe/lB,EAAEimB,WAAkBzE,GAAG1jB,GAAG,QAC9dA,KAARkF,EAAE+Z,GAAGjf,KAAU,IAAIA,EAAE+U,KAAK,IAAI/U,EAAE+U,OAAK/U,EAAE,QAAUsB,EAAE,KAAKtB,EAAEsC,GAAKhB,IAAItB,GAAE,CAAgU,GAA/TkD,EAAEolB,GAAGhkB,EAAE,eAAehB,EAAE,eAAeD,EAAE,QAAW,eAAelB,GAAG,gBAAgBA,IAAEe,EAAE2nB,GAAGvmB,EAAE,iBAAiBhB,EAAE,iBAAiBD,EAAE,WAAU6B,EAAE,MAAM5D,EAAEkB,EAAE+rB,GAAGjtB,GAAG6B,EAAE,MAAMnD,EAAEwC,EAAE+rB,GAAGvuB,IAAGwC,EAAE,IAAIU,EAAEoB,EAAEjB,EAAE,QAAQ/B,EAAEY,EAAEK,IAAK9B,OAAOyE,EAAE1C,EAAEylB,cAAc9kB,EAAEmB,EAAE,KAAKof,GAAGnhB,KAAKD,KAAIY,EAAE,IAAIA,EAAEI,EAAED,EAAE,QAAQrD,EAAEkC,EAAEK,IAAK9B,OAAO0C,EAAED,EAAE+kB,cAAc/iB,EAAEZ,EAAEpB,GAAGgC,EAAEZ,EAAKhD,GAAGtB,EAAEqC,EAAE,CAAa,IAARiB,EAAEtD,EAAEqD,EAAE,EAAMF,EAAhBD,EAAE5B,EAAkB6B,EAAEA,EAAEuxB,GAAGvxB,GAAGE,IAAQ,IAAJF,EAAE,EAAMmB,EAAEhB,EAAEgB,EAAEA,EAAEowB,GAAGpwB,GAAGnB,IAAI,KAAK,EAAEE,EAAEF,GAAGD,EAAEwxB,GAAGxxB,GAAGG,IAAI,KAAK,EAAEF,EAAEE,GAAGC,EACpfoxB,GAAGpxB,GAAGH,IAAI,KAAKE,KAAK,CAAC,GAAGH,IAAII,GAAG,OAAOA,GAAGJ,IAAII,EAAE4b,UAAU,MAAM7c,EAAEa,EAAEwxB,GAAGxxB,GAAGI,EAAEoxB,GAAGpxB,EAAE,CAACJ,EAAE,IAAI,MAAMA,EAAE,KAAK,OAAO5B,GAAGqzB,GAAGvyB,EAAEI,EAAElB,EAAE4B,GAAE,GAAI,OAAOlD,GAAG,OAAOkF,GAAGyvB,GAAGvyB,EAAE8C,EAAElF,EAAEkD,GAAE,EAAG,CAA8D,GAAG,YAA1C5B,GAAjBkB,EAAEF,EAAEisB,GAAGjsB,GAAGgP,QAAW8D,UAAU5S,EAAE4S,SAASjD,gBAA+B,UAAU7Q,GAAG,SAASkB,EAAEE,KAAK,IAAIkyB,EAAGpG,QAAQ,GAAGX,GAAGrrB,GAAG,GAAGisB,GAAGmG,EAAGvF,OAAO,CAACuF,EAAGzF,GAAG,IAAI0F,EAAG5F,EAAE,MAAM3tB,EAAEkB,EAAE4S,WAAW,UAAU9T,EAAE6Q,gBAAgB,aAAa3P,EAAEE,MAAM,UAAUF,EAAEE,QAAQkyB,EAAGxF,IACrV,OAD4VwF,IAAKA,EAAGA,EAAGzyB,EAAEG,IAAKwrB,GAAG1rB,EAAEwyB,EAAG1yB,EAAEK,IAAWsyB,GAAIA,EAAG1yB,EAAEK,EAAEF,GAAG,aAAaH,IAAI0yB,EAAGryB,EAAE+T,gBAClfse,EAAGle,YAAY,WAAWnU,EAAEE,MAAMoU,GAAGtU,EAAE,SAASA,EAAEhE,QAAOq2B,EAAGvyB,EAAEisB,GAAGjsB,GAAGgP,OAAcnP,GAAG,IAAK,WAAa0rB,GAAGgH,IAAK,SAASA,EAAG1E,mBAAgB6B,GAAG6C,EAAG5C,GAAG3vB,EAAE4vB,GAAG,MAAK,MAAM,IAAK,WAAWA,GAAGD,GAAGD,GAAG,KAAK,MAAM,IAAK,YAAYG,IAAG,EAAG,MAAM,IAAK,cAAc,IAAK,UAAU,IAAK,UAAUA,IAAG,EAAGC,GAAGhwB,EAAEF,EAAEK,GAAG,MAAM,IAAK,kBAAkB,GAAGwvB,GAAG,MAAM,IAAK,UAAU,IAAK,QAAQK,GAAGhwB,EAAEF,EAAEK,GAAG,IAAIuyB,EAAG,GAAGzI,GAAGhqB,EAAE,CAAC,OAAOF,GAAG,IAAK,mBAAmB,IAAI4yB,EAAG,qBAAqB,MAAM1yB,EAAE,IAAK,iBAAiB0yB,EAAG,mBACpe,MAAM1yB,EAAE,IAAK,oBAAoB0yB,EAAG,sBAAsB,MAAM1yB,EAAE0yB,OAAG,CAAM,MAAMjI,GAAGF,GAAGzqB,EAAED,KAAK6yB,EAAG,oBAAoB,YAAY5yB,GAAG,MAAMD,EAAEkjB,UAAU2P,EAAG,sBAAsBA,IAAKtI,IAAI,OAAOvqB,EAAEwoB,SAASoC,IAAI,uBAAuBiI,EAAG,qBAAqBA,GAAIjI,KAAKgI,EAAG5P,OAAYF,GAAG,UAARD,GAAGxiB,GAAkBwiB,GAAGvmB,MAAMumB,GAAGnN,YAAYkV,IAAG,IAAiB,GAAZ+H,EAAG9G,GAAGzrB,EAAEyyB,IAAS3zB,SAAS2zB,EAAG,IAAI9L,GAAG8L,EAAG5yB,EAAE,KAAKD,EAAEK,GAAGH,EAAE2D,KAAK,CAACioB,MAAM+G,EAAG9G,UAAU4G,IAAKC,EAAGC,EAAG7L,KAAK4L,EAAa,QAATA,EAAGjI,GAAG3qB,MAAe6yB,EAAG7L,KAAK4L,MAAUA,EAAGtI,GA5BhM,SAAYrqB,EAAEE,GAAG,OAAOF,GAAG,IAAK,iBAAiB,OAAO0qB,GAAGxqB,GAAG,IAAK,WAAW,OAAG,KAAKA,EAAEsoB,MAAa,MAAKgC,IAAG,EAAUD,IAAG,IAAK,YAAY,OAAOvqB,EAAEE,EAAE6mB,QAASwD,IAAIC,GAAG,KAAKxqB,EAAE,QAAQ,OAAO,KAAK,CA4BE6yB,CAAG7yB,EAAED,GA3Bzd,SAAYC,EAAEE,GAAG,GAAGyqB,GAAG,MAAM,mBAAmB3qB,IAAIkqB,IAAIO,GAAGzqB,EAAEE,IAAIF,EAAE+iB,KAAKD,GAAGD,GAAGD,GAAG,KAAK+H,IAAG,EAAG3qB,GAAG,KAAK,OAAOA,GAAG,IAAK,QAAgQ,QAAQ,OAAO,KAA3P,IAAK,WAAW,KAAKE,EAAEolB,SAASplB,EAAEslB,QAAQtlB,EAAEulB,UAAUvlB,EAAEolB,SAASplB,EAAEslB,OAAO,CAAC,GAAGtlB,EAAE4yB,MAAM,EAAE5yB,EAAE4yB,KAAK7zB,OAAO,OAAOiB,EAAE4yB,KAAK,GAAG5yB,EAAEsoB,MAAM,OAAOhrB,OAAOI,aAAasC,EAAEsoB,MAAM,CAAC,OAAO,KAAK,IAAK,iBAAiB,OAAO8B,IAAI,OAAOpqB,EAAEqoB,OAAO,KAAKroB,EAAE6mB,KAAyB,CA2BqFgM,CAAG/yB,EAAED,MACje,GADoeI,EAAEyrB,GAAGzrB,EAAE,kBACvelB,SAASmB,EAAE,IAAI0mB,GAAG,gBAAgB,cAAc,KAAK/mB,EAAEK,GAAGH,EAAE2D,KAAK,CAACioB,MAAMzrB,EAAE0rB,UAAU3rB,IAAIC,EAAE2mB,KAAK4L,GAAG,CAACzG,GAAGjsB,EAAEC,EAAE,GAAE,CAAC,SAASkyB,GAAGpyB,EAAEE,EAAEH,GAAG,MAAM,CAAC0xB,SAASzxB,EAAE0xB,SAASxxB,EAAEsjB,cAAczjB,EAAE,CAAC,SAAS6rB,GAAG5rB,EAAEE,GAAG,IAAI,IAAIH,EAAEG,EAAE,UAAUC,EAAE,GAAG,OAAOH,GAAG,CAAC,IAAII,EAAEJ,EAAE7D,EAAEiE,EAAEqb,UAAU,IAAIrb,EAAEwS,KAAK,OAAOzW,IAAIiE,EAAEjE,EAAY,OAAVA,EAAE8f,GAAGjc,EAAED,KAAYI,EAAE6yB,QAAQZ,GAAGpyB,EAAE7D,EAAEiE,IAAc,OAAVjE,EAAE8f,GAAGjc,EAAEE,KAAYC,EAAEyD,KAAKwuB,GAAGpyB,EAAE7D,EAAEiE,KAAKJ,EAAEA,EAAEgd,MAAM,CAAC,OAAO7c,CAAC,CAAC,SAASoyB,GAAGvyB,GAAG,GAAG,OAAOA,EAAE,OAAO,KAAK,GAAGA,EAAEA,EAAEgd,aAAahd,GAAG,IAAIA,EAAE4S,KAAK,OAAO5S,GAAI,IAAI,CACnd,SAASwyB,GAAGxyB,EAAEE,EAAEH,EAAEI,EAAEC,GAAG,IAAI,IAAIjE,EAAE+D,EAAEojB,WAAWrjB,EAAE,GAAG,OAAOF,GAAGA,IAAII,GAAG,CAAC,IAAIE,EAAEN,EAAEZ,EAAEkB,EAAE0c,UAAUzd,EAAEe,EAAEob,UAAU,GAAG,OAAOtc,GAAGA,IAAIgB,EAAE,MAAM,IAAIE,EAAEuS,KAAK,OAAOtT,IAAIe,EAAEf,EAAEc,EAAa,OAAVjB,EAAE8c,GAAGlc,EAAE5D,KAAY8D,EAAE+yB,QAAQZ,GAAGryB,EAAEZ,EAAEkB,IAAKD,GAAc,OAAVjB,EAAE8c,GAAGlc,EAAE5D,KAAY8D,EAAE2D,KAAKwuB,GAAGryB,EAAEZ,EAAEkB,KAAMN,EAAEA,EAAEid,MAAM,CAAC,IAAI/c,EAAEhB,QAAQe,EAAE4D,KAAK,CAACioB,MAAM3rB,EAAE4rB,UAAU7rB,GAAG,CAAC,IAAIgzB,GAAG,SAASC,GAAG,iBAAiB,SAASC,GAAGnzB,GAAG,OAAO,kBAAkBA,EAAEA,EAAE,GAAGA,GAAGuD,QAAQ0vB,GAAG,MAAM1vB,QAAQ2vB,GAAG,GAAG,CAAC,SAASE,GAAGpzB,EAAEE,EAAEH,GAAW,GAARG,EAAEizB,GAAGjzB,GAAMizB,GAAGnzB,KAAKE,GAAGH,EAAE,MAAMwC,MAAM7C,EAAE,KAAM,CAAC,SAAS2zB,KAAK,CAC9e,IAAIC,GAAG,KAAKC,GAAG,KAAK,SAASC,GAAGxzB,EAAEE,GAAG,MAAM,aAAaF,GAAG,aAAaA,GAAG,kBAAkBE,EAAEiD,UAAU,kBAAkBjD,EAAEiD,UAAU,kBAAkBjD,EAAEmV,yBAAyB,OAAOnV,EAAEmV,yBAAyB,MAAMnV,EAAEmV,wBAAwBoe,MAAM,CAC5P,IAAIC,GAAG,oBAAoBprB,WAAWA,gBAAW,EAAOqrB,GAAG,oBAAoBprB,aAAaA,kBAAa,EAAOqrB,GAAG,oBAAoBC,QAAQA,aAAQ,EAAOC,GAAG,oBAAoBC,eAAeA,eAAe,qBAAqBH,GAAG,SAAS5zB,GAAG,OAAO4zB,GAAGI,QAAQ,MAAM5vB,KAAKpE,GAAGi0B,MAAMC,GAAG,EAAER,GAAG,SAASQ,GAAGl0B,GAAGsI,YAAW,WAAW,MAAMtI,CAAE,GAAE,CACpV,SAASm0B,GAAGn0B,EAAEE,GAAG,IAAIH,EAAEG,EAAEC,EAAE,EAAE,EAAE,CAAC,IAAIC,EAAEL,EAAEwtB,YAA6B,GAAjBvtB,EAAEkW,YAAYnW,GAAMK,GAAG,IAAIA,EAAEoW,SAAS,GAAY,QAATzW,EAAEK,EAAE2mB,MAAc,CAAC,GAAG,IAAI5mB,EAA0B,OAAvBH,EAAEkW,YAAY9V,QAAG8hB,GAAGhiB,GAAUC,GAAG,KAAK,MAAMJ,GAAG,OAAOA,GAAG,OAAOA,GAAGI,IAAIJ,EAAEK,CAAC,OAAOL,GAAGmiB,GAAGhiB,EAAE,CAAC,SAASk0B,GAAGp0B,GAAG,KAAK,MAAMA,EAAEA,EAAEA,EAAEutB,YAAY,CAAC,IAAIrtB,EAAEF,EAAEwW,SAAS,GAAG,IAAItW,GAAG,IAAIA,EAAE,MAAM,GAAG,IAAIA,EAAE,CAAU,GAAG,OAAZA,EAAEF,EAAE+mB,OAAiB,OAAO7mB,GAAG,OAAOA,EAAE,MAAM,GAAG,OAAOA,EAAE,OAAO,IAAI,CAAC,CAAC,OAAOF,CAAC,CACjY,SAASq0B,GAAGr0B,GAAGA,EAAEA,EAAEs0B,gBAAgB,IAAI,IAAIp0B,EAAE,EAAEF,GAAG,CAAC,GAAG,IAAIA,EAAEwW,SAAS,CAAC,IAAIzW,EAAEC,EAAE+mB,KAAK,GAAG,MAAMhnB,GAAG,OAAOA,GAAG,OAAOA,EAAE,CAAC,GAAG,IAAIG,EAAE,OAAOF,EAAEE,GAAG,KAAK,OAAOH,GAAGG,GAAG,CAACF,EAAEA,EAAEs0B,eAAe,CAAC,OAAO,IAAI,CAAC,IAAIC,GAAGvqB,KAAKgoB,SAASvuB,SAAS,IAAIoI,MAAM,GAAG2oB,GAAG,gBAAgBD,GAAGE,GAAG,gBAAgBF,GAAGlC,GAAG,oBAAoBkC,GAAG5C,GAAG,iBAAiB4C,GAAGG,GAAG,oBAAoBH,GAAGI,GAAG,kBAAkBJ,GAClX,SAAShT,GAAGvhB,GAAG,IAAIE,EAAEF,EAAEw0B,IAAI,GAAGt0B,EAAE,OAAOA,EAAE,IAAI,IAAIH,EAAEC,EAAEmb,WAAWpb,GAAG,CAAC,GAAGG,EAAEH,EAAEsyB,KAAKtyB,EAAEy0B,IAAI,CAAe,GAAdz0B,EAAEG,EAAE6c,UAAa,OAAO7c,EAAEqd,OAAO,OAAOxd,GAAG,OAAOA,EAAEwd,MAAM,IAAIvd,EAAEq0B,GAAGr0B,GAAG,OAAOA,GAAG,CAAC,GAAGD,EAAEC,EAAEw0B,IAAI,OAAOz0B,EAAEC,EAAEq0B,GAAGr0B,EAAE,CAAC,OAAOE,CAAC,CAAKH,GAAJC,EAAED,GAAMob,UAAU,CAAC,OAAO,IAAI,CAAC,SAASK,GAAGxb,GAAkB,QAAfA,EAAEA,EAAEw0B,KAAKx0B,EAAEqyB,MAAc,IAAIryB,EAAE4S,KAAK,IAAI5S,EAAE4S,KAAK,KAAK5S,EAAE4S,KAAK,IAAI5S,EAAE4S,IAAI,KAAK5S,CAAC,CAAC,SAASosB,GAAGpsB,GAAG,GAAG,IAAIA,EAAE4S,KAAK,IAAI5S,EAAE4S,IAAI,OAAO5S,EAAEyb,UAAU,MAAMlZ,MAAM7C,EAAE,IAAK,CAAC,SAASgc,GAAG1b,GAAG,OAAOA,EAAEy0B,KAAK,IAAI,CAAC,IAAIG,GAAG,GAAGC,IAAI,EAAE,SAASC,GAAG90B,GAAG,MAAM,CAACU,QAAQV,EAAE,CACve,SAAS8B,GAAE9B,GAAG,EAAE60B,KAAK70B,EAAEU,QAAQk0B,GAAGC,IAAID,GAAGC,IAAI,KAAKA,KAAK,CAAC,SAASzyB,GAAEpC,EAAEE,GAAG20B,KAAKD,GAAGC,IAAI70B,EAAEU,QAAQV,EAAEU,QAAQR,CAAC,CAAC,IAAI60B,GAAG,CAAC,EAAEtyB,GAAEqyB,GAAGC,IAAIC,GAAGF,IAAG,GAAIG,GAAGF,GAAG,SAASG,GAAGl1B,EAAEE,GAAG,IAAIH,EAAEC,EAAEO,KAAK40B,aAAa,IAAIp1B,EAAE,OAAOg1B,GAAG,IAAI50B,EAAEH,EAAEyb,UAAU,GAAGtb,GAAGA,EAAEi1B,8CAA8Cl1B,EAAE,OAAOC,EAAEk1B,0CAA0C,IAASl5B,EAALiE,EAAE,CAAC,EAAI,IAAIjE,KAAK4D,EAAEK,EAAEjE,GAAG+D,EAAE/D,GAAoH,OAAjHgE,KAAIH,EAAEA,EAAEyb,WAAY2Z,4CAA4Cl1B,EAAEF,EAAEq1B,0CAA0Cj1B,GAAUA,CAAC,CAC9d,SAASk1B,GAAGt1B,GAAyB,OAAO,QAA7BA,EAAEA,EAAEu1B,yBAAmC,IAASv1B,CAAC,CAAC,SAASw1B,KAAK1zB,GAAEkzB,IAAIlzB,GAAEW,GAAE,CAAC,SAASgzB,GAAGz1B,EAAEE,EAAEH,GAAG,GAAG0C,GAAE/B,UAAUq0B,GAAG,MAAMxyB,MAAM7C,EAAE,MAAM0C,GAAEK,GAAEvC,GAAGkC,GAAE4yB,GAAGj1B,EAAE,CAAC,SAAS21B,GAAG11B,EAAEE,EAAEH,GAAG,IAAII,EAAEH,EAAEyb,UAAgC,GAAtBvb,EAAEA,EAAEq1B,kBAAqB,oBAAoBp1B,EAAEw1B,gBAAgB,OAAO51B,EAAwB,IAAI,IAAIK,KAA9BD,EAAEA,EAAEw1B,kBAAiC,KAAKv1B,KAAKF,GAAG,MAAMqC,MAAM7C,EAAE,IAAIoT,EAAG9S,IAAI,UAAUI,IAAI,OAAOyD,EAAE,CAAC,EAAE9D,EAAEI,EAAE,CACxX,SAASy1B,GAAG51B,GAA2G,OAAxGA,GAAGA,EAAEA,EAAEyb,YAAYzb,EAAE61B,2CAA2Cd,GAAGE,GAAGxyB,GAAE/B,QAAQ0B,GAAEK,GAAEzC,GAAGoC,GAAE4yB,GAAGA,GAAGt0B,UAAe,CAAE,CAAC,SAASo1B,GAAG91B,EAAEE,EAAEH,GAAG,IAAII,EAAEH,EAAEyb,UAAU,IAAItb,EAAE,MAAMoC,MAAM7C,EAAE,MAAMK,GAAGC,EAAE01B,GAAG11B,EAAEE,EAAE+0B,IAAI90B,EAAE01B,0CAA0C71B,EAAE8B,GAAEkzB,IAAIlzB,GAAEW,IAAGL,GAAEK,GAAEzC,IAAI8B,GAAEkzB,IAAI5yB,GAAE4yB,GAAGj1B,EAAE,CAAC,IAAIg2B,GAAG,KAAKC,IAAG,EAAGC,IAAG,EAAG,SAASC,GAAGl2B,GAAG,OAAO+1B,GAAGA,GAAG,CAAC/1B,GAAG+1B,GAAGnyB,KAAK5D,EAAE,CAChW,SAASm2B,KAAK,IAAIF,IAAI,OAAOF,GAAG,CAACE,IAAG,EAAG,IAAIj2B,EAAE,EAAEE,EAAE0B,GAAE,IAAI,IAAI7B,EAAEg2B,GAAG,IAAIn0B,GAAE,EAAE5B,EAAED,EAAEd,OAAOe,IAAI,CAAC,IAAIG,EAAEJ,EAAEC,GAAG,GAAGG,EAAEA,GAAE,SAAU,OAAOA,EAAE,CAAC41B,GAAG,KAAKC,IAAG,CAAE,CAAC,MAAM51B,GAAG,MAAM,OAAO21B,KAAKA,GAAGA,GAAGlqB,MAAM7L,EAAE,IAAI2d,GAAGK,GAAGmY,IAAI/1B,CAAE,CAAC,QAAQwB,GAAE1B,EAAE+1B,IAAG,CAAE,CAAC,CAAC,OAAO,IAAI,CAAC,IAAIG,GAAG,GAAGC,GAAG,EAAEC,GAAG,KAAKC,GAAG,EAAEC,GAAG,GAAGC,GAAG,EAAEC,GAAG,KAAKC,GAAG,EAAEC,GAAG,GAAG,SAASC,GAAG72B,EAAEE,GAAGk2B,GAAGC,MAAME,GAAGH,GAAGC,MAAMC,GAAGA,GAAGt2B,EAAEu2B,GAAGr2B,CAAC,CACjV,SAAS42B,GAAG92B,EAAEE,EAAEH,GAAGy2B,GAAGC,MAAME,GAAGH,GAAGC,MAAMG,GAAGJ,GAAGC,MAAMC,GAAGA,GAAG12B,EAAE,IAAIG,EAAEw2B,GAAG32B,EAAE42B,GAAG,IAAIx2B,EAAE,GAAGme,GAAGpe,GAAG,EAAEA,KAAK,GAAGC,GAAGL,GAAG,EAAE,IAAI5D,EAAE,GAAGoiB,GAAGre,GAAGE,EAAE,GAAG,GAAGjE,EAAE,CAAC,IAAI8D,EAAEG,EAAEA,EAAE,EAAEjE,GAAGgE,GAAG,GAAGF,GAAG,GAAGwD,SAAS,IAAItD,IAAIF,EAAEG,GAAGH,EAAE02B,GAAG,GAAG,GAAGpY,GAAGre,GAAGE,EAAEL,GAAGK,EAAED,EAAEy2B,GAAGz6B,EAAE6D,CAAC,MAAM22B,GAAG,GAAGx6B,EAAE4D,GAAGK,EAAED,EAAEy2B,GAAG52B,CAAC,CAAC,SAAS+2B,GAAG/2B,GAAG,OAAOA,EAAEgd,SAAS6Z,GAAG72B,EAAE,GAAG82B,GAAG92B,EAAE,EAAE,GAAG,CAAC,SAASg3B,GAAGh3B,GAAG,KAAKA,IAAIs2B,IAAIA,GAAGF,KAAKC,IAAID,GAAGC,IAAI,KAAKE,GAAGH,KAAKC,IAAID,GAAGC,IAAI,KAAK,KAAKr2B,IAAI02B,IAAIA,GAAGF,KAAKC,IAAID,GAAGC,IAAI,KAAKG,GAAGJ,KAAKC,IAAID,GAAGC,IAAI,KAAKE,GAAGH,KAAKC,IAAID,GAAGC,IAAI,IAAI,CAAC,IAAIQ,GAAG,KAAKC,GAAG,KAAKt0B,IAAE,EAAGu0B,GAAG,KACje,SAASC,GAAGp3B,EAAEE,GAAG,IAAIH,EAAEs3B,GAAG,EAAE,KAAK,KAAK,GAAGt3B,EAAE0N,YAAY,UAAU1N,EAAE0b,UAAUvb,EAAEH,EAAEid,OAAOhd,EAAgB,QAAdE,EAAEF,EAAEs3B,YAAoBt3B,EAAEs3B,UAAU,CAACv3B,GAAGC,EAAEid,OAAO,IAAI/c,EAAE0D,KAAK7D,EAAE,CACxJ,SAASw3B,GAAGv3B,EAAEE,GAAG,OAAOF,EAAE4S,KAAK,KAAK,EAAE,IAAI7S,EAAEC,EAAEO,KAAyE,OAAO,QAA3EL,EAAE,IAAIA,EAAEsW,UAAUzW,EAAEiQ,gBAAgB9P,EAAE+S,SAASjD,cAAc,KAAK9P,KAAmBF,EAAEyb,UAAUvb,EAAE+2B,GAAGj3B,EAAEk3B,GAAG9C,GAAGl0B,EAAE+V,aAAY,GAAO,KAAK,EAAE,OAAoD,QAA7C/V,EAAE,KAAKF,EAAEw3B,cAAc,IAAIt3B,EAAEsW,SAAS,KAAKtW,KAAYF,EAAEyb,UAAUvb,EAAE+2B,GAAGj3B,EAAEk3B,GAAG,MAAK,GAAO,KAAK,GAAG,OAA+B,QAAxBh3B,EAAE,IAAIA,EAAEsW,SAAS,KAAKtW,KAAYH,EAAE,OAAO22B,GAAG,CAACzuB,GAAG0uB,GAAGc,SAASb,IAAI,KAAK52B,EAAEmd,cAAc,CAACC,WAAWld,EAAEw3B,YAAY33B,EAAE43B,UAAU,aAAY53B,EAAEs3B,GAAG,GAAG,KAAK,KAAK,IAAK5b,UAAUvb,EAAEH,EAAEid,OAAOhd,EAAEA,EAAEud,MAAMxd,EAAEk3B,GAAGj3B,EAAEk3B,GAClf,MAAK,GAAO,QAAQ,OAAM,EAAG,CAAC,SAASU,GAAG53B,GAAG,OAAO,KAAY,EAAPA,EAAE63B,OAAS,KAAa,IAAR73B,EAAEid,MAAU,CAAC,SAAS6a,GAAG93B,GAAG,GAAG4C,GAAE,CAAC,IAAI1C,EAAEg3B,GAAG,GAAGh3B,EAAE,CAAC,IAAIH,EAAEG,EAAE,IAAIq3B,GAAGv3B,EAAEE,GAAG,CAAC,GAAG03B,GAAG53B,GAAG,MAAMuC,MAAM7C,EAAE,MAAMQ,EAAEk0B,GAAGr0B,EAAEwtB,aAAa,IAAIptB,EAAE82B,GAAG/2B,GAAGq3B,GAAGv3B,EAAEE,GAAGk3B,GAAGj3B,EAAEJ,IAAIC,EAAEid,OAAe,KAATjd,EAAEid,MAAY,EAAEra,IAAE,EAAGq0B,GAAGj3B,EAAE,CAAC,KAAK,CAAC,GAAG43B,GAAG53B,GAAG,MAAMuC,MAAM7C,EAAE,MAAMM,EAAEid,OAAe,KAATjd,EAAEid,MAAY,EAAEra,IAAE,EAAGq0B,GAAGj3B,CAAC,CAAC,CAAC,CAAC,SAAS+3B,GAAG/3B,GAAG,IAAIA,EAAEA,EAAEgd,OAAO,OAAOhd,GAAG,IAAIA,EAAE4S,KAAK,IAAI5S,EAAE4S,KAAK,KAAK5S,EAAE4S,KAAK5S,EAAEA,EAAEgd,OAAOia,GAAGj3B,CAAC,CACha,SAASg4B,GAAGh4B,GAAG,GAAGA,IAAIi3B,GAAG,OAAM,EAAG,IAAIr0B,GAAE,OAAOm1B,GAAG/3B,GAAG4C,IAAE,GAAG,EAAG,IAAI1C,EAAkG,IAA/FA,EAAE,IAAIF,EAAE4S,QAAQ1S,EAAE,IAAIF,EAAE4S,OAAgB1S,EAAE,UAAXA,EAAEF,EAAEO,OAAmB,SAASL,IAAIszB,GAAGxzB,EAAEO,KAAKP,EAAEi4B,gBAAmB/3B,IAAIA,EAAEg3B,IAAI,CAAC,GAAGU,GAAG53B,GAAG,MAAMk4B,KAAK31B,MAAM7C,EAAE,MAAM,KAAKQ,GAAGk3B,GAAGp3B,EAAEE,GAAGA,EAAEk0B,GAAGl0B,EAAEqtB,YAAY,CAAO,GAANwK,GAAG/3B,GAAM,KAAKA,EAAE4S,IAAI,CAAgD,KAA7B5S,EAAE,QAApBA,EAAEA,EAAEmd,eAAyBnd,EAAEod,WAAW,MAAW,MAAM7a,MAAM7C,EAAE,MAAMM,EAAE,CAAiB,IAAhBA,EAAEA,EAAEutB,YAAgBrtB,EAAE,EAAEF,GAAG,CAAC,GAAG,IAAIA,EAAEwW,SAAS,CAAC,IAAIzW,EAAEC,EAAE+mB,KAAK,GAAG,OAAOhnB,EAAE,CAAC,GAAG,IAAIG,EAAE,CAACg3B,GAAG9C,GAAGp0B,EAAEutB,aAAa,MAAMvtB,CAAC,CAACE,GAAG,KAAK,MAAMH,GAAG,OAAOA,GAAG,OAAOA,GAAGG,GAAG,CAACF,EAAEA,EAAEutB,WAAW,CAAC2J,GACjgB,IAAI,CAAC,MAAMA,GAAGD,GAAG7C,GAAGp0B,EAAEyb,UAAU8R,aAAa,KAAK,OAAM,CAAE,CAAC,SAAS2K,KAAK,IAAI,IAAIl4B,EAAEk3B,GAAGl3B,GAAGA,EAAEo0B,GAAGp0B,EAAEutB,YAAY,CAAC,SAAS4K,KAAKjB,GAAGD,GAAG,KAAKr0B,IAAE,CAAE,CAAC,SAASw1B,GAAGp4B,GAAG,OAAOm3B,GAAGA,GAAG,CAACn3B,GAAGm3B,GAAGvzB,KAAK5D,EAAE,CAAC,IAAIq4B,GAAGvnB,EAAGnM,wBAChM,SAAS2zB,GAAGt4B,EAAEE,EAAEH,GAAW,GAAG,QAAXC,EAAED,EAAEJ,MAAiB,oBAAoBK,GAAG,kBAAkBA,EAAE,CAAC,GAAGD,EAAEU,OAAO,CAAY,GAAXV,EAAEA,EAAEU,OAAY,CAAC,GAAG,IAAIV,EAAE6S,IAAI,MAAMrQ,MAAM7C,EAAE,MAAM,IAAIS,EAAEJ,EAAE0b,SAAS,CAAC,IAAItb,EAAE,MAAMoC,MAAM7C,EAAE,IAAIM,IAAI,IAAII,EAAED,EAAEhE,EAAE,GAAG6D,EAAE,OAAG,OAAOE,GAAG,OAAOA,EAAEP,KAAK,oBAAoBO,EAAEP,KAAKO,EAAEP,IAAI44B,aAAap8B,EAAS+D,EAAEP,KAAIO,EAAE,SAASF,GAAG,IAAIE,EAAEE,EAAE6B,KAAK,OAAOjC,SAASE,EAAE/D,GAAG+D,EAAE/D,GAAG6D,CAAC,EAAEE,EAAEq4B,WAAWp8B,EAAS+D,EAAC,CAAC,GAAG,kBAAkBF,EAAE,MAAMuC,MAAM7C,EAAE,MAAM,IAAIK,EAAEU,OAAO,MAAM8B,MAAM7C,EAAE,IAAIM,GAAI,CAAC,OAAOA,CAAC,CAC/c,SAASw4B,GAAGx4B,EAAEE,GAAuC,MAApCF,EAAE/C,OAAOE,UAAUsG,SAASvE,KAAKgB,GAASqC,MAAM7C,EAAE,GAAG,oBAAoBM,EAAE,qBAAqB/C,OAAOkB,KAAK+B,GAAGpC,KAAK,MAAM,IAAIkC,GAAI,CAAC,SAASy4B,GAAGz4B,GAAiB,OAAOE,EAAfF,EAAE0G,OAAe1G,EAAEyG,SAAS,CACrM,SAASiyB,GAAG14B,GAAG,SAASE,EAAEA,EAAEH,GAAG,GAAGC,EAAE,CAAC,IAAIG,EAAED,EAAEo3B,UAAU,OAAOn3B,GAAGD,EAAEo3B,UAAU,CAACv3B,GAAGG,EAAE+c,OAAO,IAAI9c,EAAEyD,KAAK7D,EAAE,CAAC,CAAC,SAASA,EAAEA,EAAEI,GAAG,IAAIH,EAAE,OAAO,KAAK,KAAK,OAAOG,GAAGD,EAAEH,EAAEI,GAAGA,EAAEA,EAAEqd,QAAQ,OAAO,IAAI,CAAC,SAASrd,EAAEH,EAAEE,GAAG,IAAIF,EAAE,IAAIygB,IAAI,OAAOvgB,GAAG,OAAOA,EAAEnE,IAAIiE,EAAEsS,IAAIpS,EAAEnE,IAAImE,GAAGF,EAAEsS,IAAIpS,EAAEpE,MAAMoE,GAAGA,EAAEA,EAAEsd,QAAQ,OAAOxd,CAAC,CAAC,SAASI,EAAEJ,EAAEE,GAAsC,OAAnCF,EAAE24B,GAAG34B,EAAEE,IAAKpE,MAAM,EAAEkE,EAAEwd,QAAQ,KAAYxd,CAAC,CAAC,SAAS7D,EAAE+D,EAAEH,EAAEI,GAAa,OAAVD,EAAEpE,MAAMqE,EAAMH,EAA6C,QAAjBG,EAAED,EAAE6c,YAA6B5c,EAAEA,EAAErE,OAAQiE,GAAGG,EAAE+c,OAAO,EAAEld,GAAGI,GAAED,EAAE+c,OAAO,EAASld,IAArGG,EAAE+c,OAAO,QAAQld,EAAqF,CAAC,SAASE,EAAEC,GACzd,OAD4dF,GAC7f,OAAOE,EAAE6c,YAAY7c,EAAE+c,OAAO,GAAU/c,CAAC,CAAC,SAASG,EAAEL,EAAEE,EAAEH,EAAEI,GAAG,OAAG,OAAOD,GAAG,IAAIA,EAAE0S,MAAW1S,EAAE04B,GAAG74B,EAAEC,EAAE63B,KAAK13B,IAAK6c,OAAOhd,EAAEE,KAAEA,EAAEE,EAAEF,EAAEH,IAAKid,OAAOhd,EAASE,EAAC,CAAC,SAASf,EAAEa,EAAEE,EAAEH,EAAEI,GAAG,IAAIhE,EAAE4D,EAAEQ,KAAK,OAAGpE,IAAI8U,EAAU1R,EAAES,EAAEE,EAAEH,EAAES,MAAM2C,SAAShD,EAAEJ,EAAEhE,KAAQ,OAAOmE,IAAIA,EAAEuN,cAActR,GAAG,kBAAkBA,GAAG,OAAOA,GAAGA,EAAEmE,WAAWoR,GAAI+mB,GAAGt8B,KAAK+D,EAAEK,QAAaJ,EAAEC,EAAEF,EAAEH,EAAES,QAASb,IAAI24B,GAAGt4B,EAAEE,EAAEH,GAAGI,EAAE6c,OAAOhd,EAAEG,KAAEA,EAAE04B,GAAG94B,EAAEQ,KAAKR,EAAEhE,IAAIgE,EAAES,MAAM,KAAKR,EAAE63B,KAAK13B,IAAKR,IAAI24B,GAAGt4B,EAAEE,EAAEH,GAAGI,EAAE6c,OAAOhd,EAASG,EAAC,CAAC,SAASb,EAAEU,EAAEE,EAAEH,EAAEI,GAAG,OAAG,OAAOD,GAAG,IAAIA,EAAE0S,KACjf1S,EAAEub,UAAUiG,gBAAgB3hB,EAAE2hB,eAAexhB,EAAEub,UAAUqd,iBAAiB/4B,EAAE+4B,iBAAsB54B,EAAE64B,GAAGh5B,EAAEC,EAAE63B,KAAK13B,IAAK6c,OAAOhd,EAAEE,KAAEA,EAAEE,EAAEF,EAAEH,EAAEoD,UAAU,KAAM6Z,OAAOhd,EAASE,EAAC,CAAC,SAASX,EAAES,EAAEE,EAAEH,EAAEI,EAAEhE,GAAG,OAAG,OAAO+D,GAAG,IAAIA,EAAE0S,MAAW1S,EAAE84B,GAAGj5B,EAAEC,EAAE63B,KAAK13B,EAAEhE,IAAK6gB,OAAOhd,EAAEE,KAAEA,EAAEE,EAAEF,EAAEH,IAAKid,OAAOhd,EAASE,EAAC,CAAC,SAASJ,EAAEE,EAAEE,EAAEH,GAAG,GAAG,kBAAkBG,GAAG,KAAKA,GAAG,kBAAkBA,EAAE,OAAOA,EAAE04B,GAAG,GAAG14B,EAAEF,EAAE63B,KAAK93B,IAAKid,OAAOhd,EAAEE,EAAE,GAAG,kBAAkBA,GAAG,OAAOA,EAAE,CAAC,OAAOA,EAAEI,UAAU,KAAKyQ,EAAG,OAAOhR,EAAE84B,GAAG34B,EAAEK,KAAKL,EAAEnE,IAAImE,EAAEM,MAAM,KAAKR,EAAE63B,KAAK93B,IACjfJ,IAAI24B,GAAGt4B,EAAE,KAAKE,GAAGH,EAAEid,OAAOhd,EAAED,EAAE,KAAKiR,EAAG,OAAO9Q,EAAE64B,GAAG74B,EAAEF,EAAE63B,KAAK93B,IAAKid,OAAOhd,EAAEE,EAAE,KAAKwR,EAAiB,OAAO5R,EAAEE,GAAEG,EAAnBD,EAAEwG,OAAmBxG,EAAEuG,UAAU1G,GAAG,GAAG+U,GAAG5U,IAAI2R,EAAG3R,GAAG,OAAOA,EAAE84B,GAAG94B,EAAEF,EAAE63B,KAAK93B,EAAE,OAAQid,OAAOhd,EAAEE,EAAEs4B,GAAGx4B,EAAEE,EAAE,CAAC,OAAO,IAAI,CAAC,SAASY,EAAEd,EAAEE,EAAEH,EAAEI,GAAG,IAAIC,EAAE,OAAOF,EAAEA,EAAEnE,IAAI,KAAK,GAAG,kBAAkBgE,GAAG,KAAKA,GAAG,kBAAkBA,EAAE,OAAO,OAAOK,EAAE,KAAKC,EAAEL,EAAEE,EAAE,GAAGH,EAAEI,GAAG,GAAG,kBAAkBJ,GAAG,OAAOA,EAAE,CAAC,OAAOA,EAAEO,UAAU,KAAKyQ,EAAG,OAAOhR,EAAEhE,MAAMqE,EAAEjB,EAAEa,EAAEE,EAAEH,EAAEI,GAAG,KAAK,KAAK6Q,EAAG,OAAOjR,EAAEhE,MAAMqE,EAAEd,EAAEU,EAAEE,EAAEH,EAAEI,GAAG,KAAK,KAAKuR,EAAG,OAAiB5Q,EAAEd,EACpfE,GADweE,EAAEL,EAAE2G,OACxe3G,EAAE0G,UAAUtG,GAAG,GAAG2U,GAAG/U,IAAI8R,EAAG9R,GAAG,OAAO,OAAOK,EAAE,KAAKb,EAAES,EAAEE,EAAEH,EAAEI,EAAE,MAAMq4B,GAAGx4B,EAAED,EAAE,CAAC,OAAO,IAAI,CAAC,SAASqB,EAAEpB,EAAEE,EAAEH,EAAEI,EAAEC,GAAG,GAAG,kBAAkBD,GAAG,KAAKA,GAAG,kBAAkBA,EAAE,OAAwBE,EAAEH,EAAnBF,EAAEA,EAAEqT,IAAItT,IAAI,KAAW,GAAGI,EAAEC,GAAG,GAAG,kBAAkBD,GAAG,OAAOA,EAAE,CAAC,OAAOA,EAAEG,UAAU,KAAKyQ,EAAG,OAA2C5R,EAAEe,EAAtCF,EAAEA,EAAEqT,IAAI,OAAOlT,EAAEpE,IAAIgE,EAAEI,EAAEpE,MAAM,KAAWoE,EAAEC,GAAG,KAAK4Q,EAAG,OAA2C1R,EAAEY,EAAtCF,EAAEA,EAAEqT,IAAI,OAAOlT,EAAEpE,IAAIgE,EAAEI,EAAEpE,MAAM,KAAWoE,EAAEC,GAAG,KAAKsR,EAAiB,OAAOtQ,EAAEpB,EAAEE,EAAEH,GAAE5D,EAAvBgE,EAAEuG,OAAuBvG,EAAEsG,UAAUrG,GAAG,GAAG0U,GAAG3U,IAAI0R,EAAG1R,GAAG,OAAwBZ,EAAEW,EAAnBF,EAAEA,EAAEqT,IAAItT,IAAI,KAAWI,EAAEC,EAAE,MAAMo4B,GAAGt4B,EAAEC,EAAE,CAAC,OAAO,IAAI,CAC9f,SAAStC,EAAEuC,EAAEH,EAAEI,EAAElB,GAAG,IAAI,IAAIG,EAAE,KAAKC,EAAE,KAAKyB,EAAEf,EAAEiB,EAAEjB,EAAE,EAAEkB,EAAE,KAAK,OAAOH,GAAGE,EAAEb,EAAEpB,OAAOiC,IAAI,CAACF,EAAElF,MAAMoF,GAAGC,EAAEH,EAAEA,EAAE,MAAMG,EAAEH,EAAEwc,QAAQ,IAAI3f,EAAEiD,EAAEV,EAAEY,EAAEX,EAAEa,GAAG/B,GAAG,GAAG,OAAOtB,EAAE,CAAC,OAAOmD,IAAIA,EAAEG,GAAG,KAAK,CAACnB,GAAGgB,GAAG,OAAOnD,EAAEkf,WAAW7c,EAAEE,EAAEY,GAAGf,EAAE9D,EAAE0B,EAAEoC,EAAEiB,GAAG,OAAO3B,EAAED,EAAEzB,EAAE0B,EAAEie,QAAQ3f,EAAE0B,EAAE1B,EAAEmD,EAAEG,CAAC,CAAC,GAAGD,IAAIb,EAAEpB,OAAO,OAAOc,EAAEK,EAAEY,GAAG4B,IAAGi0B,GAAGz2B,EAAEc,GAAG5B,EAAE,GAAG,OAAO0B,EAAE,CAAC,KAAKE,EAAEb,EAAEpB,OAAOiC,IAAkB,QAAdF,EAAElB,EAAEM,EAAEC,EAAEa,GAAG/B,MAAcc,EAAE9D,EAAE6E,EAAEf,EAAEiB,GAAG,OAAO3B,EAAED,EAAE0B,EAAEzB,EAAEie,QAAQxc,EAAEzB,EAAEyB,GAAc,OAAX4B,IAAGi0B,GAAGz2B,EAAEc,GAAU5B,CAAC,CAAC,IAAI0B,EAAEb,EAAEC,EAAEY,GAAGE,EAAEb,EAAEpB,OAAOiC,IAAsB,QAAlBC,EAAEC,EAAEJ,EAAEZ,EAAEc,EAAEb,EAAEa,GAAG/B,MAAca,GAAG,OAAOmB,EAAE4b,WAAW/b,EAAE8f,OAAO,OACvf3f,EAAEpF,IAAImF,EAAEC,EAAEpF,KAAKkE,EAAE9D,EAAEgF,EAAElB,EAAEiB,GAAG,OAAO3B,EAAED,EAAE6B,EAAE5B,EAAEie,QAAQrc,EAAE5B,EAAE4B,GAAuD,OAApDnB,GAAGgB,EAAE/C,SAAQ,SAAS+B,GAAG,OAAOE,EAAEE,EAAEJ,EAAE,IAAG4C,IAAGi0B,GAAGz2B,EAAEc,GAAU5B,CAAC,CAAC,SAASyB,EAAEX,EAAEH,EAAEI,EAAElB,GAAG,IAAIG,EAAEuS,EAAGxR,GAAG,GAAG,oBAAoBf,EAAE,MAAMiD,MAAM7C,EAAE,MAAkB,GAAG,OAAfW,EAAEf,EAAEJ,KAAKmB,IAAc,MAAMkC,MAAM7C,EAAE,MAAM,IAAI,IAAIsB,EAAE1B,EAAE,KAAKC,EAAEU,EAAEiB,EAAEjB,EAAE,EAAEkB,EAAE,KAAKtD,EAAEwC,EAAEyD,OAAO,OAAOvE,IAAI1B,EAAEkG,KAAK7C,IAAIrD,EAAEwC,EAAEyD,OAAO,CAACvE,EAAEzD,MAAMoF,GAAGC,EAAE5B,EAAEA,EAAE,MAAM4B,EAAE5B,EAAEie,QAAQ,IAAIzc,EAAED,EAAEV,EAAEb,EAAE1B,EAAExB,MAAM8C,GAAG,GAAG,OAAO4B,EAAE,CAAC,OAAOxB,IAAIA,EAAE4B,GAAG,KAAK,CAACnB,GAAGT,GAAG,OAAOwB,EAAEgc,WAAW7c,EAAEE,EAAEb,GAAGU,EAAE9D,EAAE4E,EAAEd,EAAEiB,GAAG,OAAOF,EAAE1B,EAAEyB,EAAEC,EAAEwc,QAAQzc,EAAEC,EAAED,EAAExB,EAAE4B,CAAC,CAAC,GAAGtD,EAAEkG,KAAK,OAAOhE,EAAEK,EACzfb,GAAGqD,IAAGi0B,GAAGz2B,EAAEc,GAAG5B,EAAE,GAAG,OAAOC,EAAE,CAAC,MAAM1B,EAAEkG,KAAK7C,IAAIrD,EAAEwC,EAAEyD,OAAwB,QAAjBjG,EAAEiC,EAAEM,EAAEvC,EAAExB,MAAM8C,MAAcc,EAAE9D,EAAE0B,EAAEoC,EAAEiB,GAAG,OAAOF,EAAE1B,EAAEzB,EAAEmD,EAAEwc,QAAQ3f,EAAEmD,EAAEnD,GAAc,OAAX+E,IAAGi0B,GAAGz2B,EAAEc,GAAU5B,CAAC,CAAC,IAAIC,EAAEY,EAAEC,EAAEb,IAAI1B,EAAEkG,KAAK7C,IAAIrD,EAAEwC,EAAEyD,OAA4B,QAArBjG,EAAEuD,EAAE7B,EAAEa,EAAEc,EAAErD,EAAExB,MAAM8C,MAAca,GAAG,OAAOnC,EAAEkf,WAAWxd,EAAEuhB,OAAO,OAAOjjB,EAAE9B,IAAImF,EAAErD,EAAE9B,KAAKkE,EAAE9D,EAAE0B,EAAEoC,EAAEiB,GAAG,OAAOF,EAAE1B,EAAEzB,EAAEmD,EAAEwc,QAAQ3f,EAAEmD,EAAEnD,GAAuD,OAApDmC,GAAGT,EAAEtB,SAAQ,SAAS+B,GAAG,OAAOE,EAAEE,EAAEJ,EAAE,IAAG4C,IAAGi0B,GAAGz2B,EAAEc,GAAU5B,CAAC,CAG3T,OAH4T,SAASyD,EAAE/C,EAAEG,EAAEhE,EAAEkE,GAAkF,GAA/E,kBAAkBlE,GAAG,OAAOA,GAAGA,EAAEoE,OAAO0Q,GAAI,OAAO9U,EAAEJ,MAAMI,EAAEA,EAAEqE,MAAM2C,UAAa,kBAAkBhH,GAAG,OAAOA,EAAE,CAAC,OAAOA,EAAEmE,UAAU,KAAKyQ,EAAG/Q,EAAE,CAAC,IAAI,IAAIb,EAC7hBhD,EAAEJ,IAAIuD,EAAEa,EAAE,OAAOb,GAAG,CAAC,GAAGA,EAAEvD,MAAMoD,EAAE,CAAU,IAATA,EAAEhD,EAAEoE,QAAY0Q,GAAI,GAAG,IAAI3R,EAAEsT,IAAI,CAAC7S,EAAEC,EAAEV,EAAEke,UAASrd,EAAEC,EAAEd,EAAEnD,EAAEqE,MAAM2C,WAAY6Z,OAAOhd,EAAEA,EAAEG,EAAE,MAAMH,CAAC,OAAO,GAAGV,EAAEmO,cAActO,GAAG,kBAAkBA,GAAG,OAAOA,GAAGA,EAAEmB,WAAWoR,GAAI+mB,GAAGt5B,KAAKG,EAAEiB,KAAK,CAACR,EAAEC,EAAEV,EAAEke,UAASrd,EAAEC,EAAEd,EAAEnD,EAAEqE,QAASb,IAAI24B,GAAGt4B,EAAEV,EAAEnD,GAAGgE,EAAE6c,OAAOhd,EAAEA,EAAEG,EAAE,MAAMH,CAAC,CAACD,EAAEC,EAAEV,GAAG,KAAK,CAAMY,EAAEF,EAAEV,GAAGA,EAAEA,EAAEke,OAAO,CAACrhB,EAAEoE,OAAO0Q,IAAI9Q,EAAE64B,GAAG78B,EAAEqE,MAAM2C,SAASnD,EAAE63B,KAAKx3B,EAAElE,EAAEJ,MAAOihB,OAAOhd,EAAEA,EAAEG,KAAIE,EAAEw4B,GAAG18B,EAAEoE,KAAKpE,EAAEJ,IAAII,EAAEqE,MAAM,KAAKR,EAAE63B,KAAKx3B,IAAKV,IAAI24B,GAAGt4B,EAAEG,EAAEhE,GAAGkE,EAAE2c,OAAOhd,EAAEA,EAAEK,EAAE,CAAC,OAAOJ,EAAED,GAAG,KAAKgR,EAAGhR,EAAE,CAAC,IAAIV,EAAEnD,EAAEJ,IAAI,OACzfoE,GAAG,CAAC,GAAGA,EAAEpE,MAAMuD,EAAC,CAAC,GAAG,IAAIa,EAAEyS,KAAKzS,EAAEsb,UAAUiG,gBAAgBvlB,EAAEulB,eAAevhB,EAAEsb,UAAUqd,iBAAiB38B,EAAE28B,eAAe,CAAC/4B,EAAEC,EAAEG,EAAEqd,UAASrd,EAAEC,EAAED,EAAEhE,EAAEgH,UAAU,KAAM6Z,OAAOhd,EAAEA,EAAEG,EAAE,MAAMH,CAAC,CAAMD,EAAEC,EAAEG,GAAG,KAAM,CAAKD,EAAEF,EAAEG,GAAGA,EAAEA,EAAEqd,OAAO,EAACrd,EAAE44B,GAAG58B,EAAE6D,EAAE63B,KAAKx3B,IAAK2c,OAAOhd,EAAEA,EAAEG,CAAC,CAAC,OAAOF,EAAED,GAAG,KAAK0R,EAAG,OAAiB3O,EAAE/C,EAAEG,GAAdb,EAAEnD,EAAEuK,OAAcvK,EAAEsK,UAAUpG,GAAG,GAAGyU,GAAG3Y,GAAG,OAAO0B,EAAEmC,EAAEG,EAAEhE,EAAEkE,GAAG,GAAGwR,EAAG1V,GAAG,OAAO4E,EAAEf,EAAEG,EAAEhE,EAAEkE,GAAGm4B,GAAGx4B,EAAE7D,EAAE,CAAC,MAAM,kBAAkBA,GAAG,KAAKA,GAAG,kBAAkBA,GAAGA,EAAE,GAAGA,EAAE,OAAOgE,GAAG,IAAIA,EAAEyS,KAAK7S,EAAEC,EAAEG,EAAEqd,UAASrd,EAAEC,EAAED,EAAEhE,IAAK6gB,OAAOhd,EAAEA,EAAEG,IACnfJ,EAAEC,EAAEG,IAAGA,EAAEy4B,GAAGz8B,EAAE6D,EAAE63B,KAAKx3B,IAAK2c,OAAOhd,EAAEA,EAAEG,GAAGF,EAAED,IAAID,EAAEC,EAAEG,EAAE,CAAS,CAAC,IAAI84B,GAAGP,IAAG,GAAIQ,GAAGR,IAAG,GAAIS,GAAGrE,GAAG,MAAMsE,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAK,SAASC,KAAKD,GAAGD,GAAGD,GAAG,IAAI,CAAC,SAASI,GAAGx5B,GAAG,IAAIE,EAAEi5B,GAAGz4B,QAAQoB,GAAEq3B,IAAIn5B,EAAE0F,cAAcxF,CAAC,CAAC,SAASu5B,GAAGz5B,EAAEE,EAAEH,GAAG,KAAK,OAAOC,GAAG,CAAC,IAAIG,EAAEH,EAAE+c,UAA+H,IAApH/c,EAAE05B,WAAWx5B,KAAKA,GAAGF,EAAE05B,YAAYx5B,EAAE,OAAOC,IAAIA,EAAEu5B,YAAYx5B,IAAI,OAAOC,IAAIA,EAAEu5B,WAAWx5B,KAAKA,IAAIC,EAAEu5B,YAAYx5B,GAAMF,IAAID,EAAE,MAAMC,EAAEA,EAAEgd,MAAM,CAAC,CACnZ,SAAS2c,GAAG35B,EAAEE,GAAGk5B,GAAGp5B,EAAEs5B,GAAGD,GAAG,KAAsB,QAAjBr5B,EAAEA,EAAE45B,eAAuB,OAAO55B,EAAE65B,eAAe,KAAK75B,EAAE85B,MAAM55B,KAAK65B,IAAG,GAAI/5B,EAAE65B,aAAa,KAAK,CAAC,SAASG,GAAGh6B,GAAG,IAAIE,EAAEF,EAAE0F,cAAc,GAAG4zB,KAAKt5B,EAAE,GAAGA,EAAE,CAACgC,QAAQhC,EAAEi6B,cAAc/5B,EAAE4D,KAAK,MAAM,OAAOu1B,GAAG,CAAC,GAAG,OAAOD,GAAG,MAAM72B,MAAM7C,EAAE,MAAM25B,GAAGr5B,EAAEo5B,GAAGQ,aAAa,CAACE,MAAM,EAAED,aAAa75B,EAAE,MAAMq5B,GAAGA,GAAGv1B,KAAK9D,EAAE,OAAOE,CAAC,CAAC,IAAIg6B,GAAG,KAAK,SAASC,GAAGn6B,GAAG,OAAOk6B,GAAGA,GAAG,CAACl6B,GAAGk6B,GAAGt2B,KAAK5D,EAAE,CACvY,SAASo6B,GAAGp6B,EAAEE,EAAEH,EAAEI,GAAG,IAAIC,EAAEF,EAAEm6B,YAA+E,OAAnE,OAAOj6B,GAAGL,EAAE+D,KAAK/D,EAAEo6B,GAAGj6B,KAAKH,EAAE+D,KAAK1D,EAAE0D,KAAK1D,EAAE0D,KAAK/D,GAAGG,EAAEm6B,YAAYt6B,EAASu6B,GAAGt6B,EAAEG,EAAE,CAAC,SAASm6B,GAAGt6B,EAAEE,GAAGF,EAAE85B,OAAO55B,EAAE,IAAIH,EAAEC,EAAE+c,UAAqC,IAA3B,OAAOhd,IAAIA,EAAE+5B,OAAO55B,GAAGH,EAAEC,EAAMA,EAAEA,EAAEgd,OAAO,OAAOhd,GAAGA,EAAE05B,YAAYx5B,EAAgB,QAAdH,EAAEC,EAAE+c,aAAqBhd,EAAE25B,YAAYx5B,GAAGH,EAAEC,EAAEA,EAAEA,EAAEgd,OAAO,OAAO,IAAIjd,EAAE6S,IAAI7S,EAAE0b,UAAU,IAAI,CAAC,IAAI8e,IAAG,EAAG,SAASC,GAAGx6B,GAAGA,EAAEy6B,YAAY,CAACC,UAAU16B,EAAEmd,cAAcwd,gBAAgB,KAAKC,eAAe,KAAKC,OAAO,CAACC,QAAQ,KAAKT,YAAY,KAAKP,MAAM,GAAGiB,QAAQ,KAAK,CAC/e,SAASC,GAAGh7B,EAAEE,GAAGF,EAAEA,EAAEy6B,YAAYv6B,EAAEu6B,cAAcz6B,IAAIE,EAAEu6B,YAAY,CAACC,UAAU16B,EAAE06B,UAAUC,gBAAgB36B,EAAE26B,gBAAgBC,eAAe56B,EAAE46B,eAAeC,OAAO76B,EAAE66B,OAAOE,QAAQ/6B,EAAE+6B,SAAS,CAAC,SAASE,GAAGj7B,EAAEE,GAAG,MAAM,CAACg7B,UAAUl7B,EAAEm7B,KAAKj7B,EAAE0S,IAAI,EAAEwoB,QAAQ,KAAK3yB,SAAS,KAAK3E,KAAK,KAAK,CACtR,SAASu3B,GAAGr7B,EAAEE,EAAEH,GAAG,IAAII,EAAEH,EAAEy6B,YAAY,GAAG,OAAOt6B,EAAE,OAAO,KAAgB,GAAXA,EAAEA,EAAE06B,OAAU,KAAO,EAAF73B,IAAK,CAAC,IAAI5C,EAAED,EAAE26B,QAA+D,OAAvD,OAAO16B,EAAEF,EAAE4D,KAAK5D,GAAGA,EAAE4D,KAAK1D,EAAE0D,KAAK1D,EAAE0D,KAAK5D,GAAGC,EAAE26B,QAAQ56B,EAASo6B,GAAGt6B,EAAED,EAAE,CAAoF,OAAnE,QAAhBK,EAAED,EAAEk6B,cAAsBn6B,EAAE4D,KAAK5D,EAAEi6B,GAAGh6B,KAAKD,EAAE4D,KAAK1D,EAAE0D,KAAK1D,EAAE0D,KAAK5D,GAAGC,EAAEk6B,YAAYn6B,EAASo6B,GAAGt6B,EAAED,EAAE,CAAC,SAASu7B,GAAGt7B,EAAEE,EAAEH,GAAmB,GAAG,QAAnBG,EAAEA,EAAEu6B,eAA0Bv6B,EAAEA,EAAE26B,OAAO,KAAO,QAAF96B,IAAY,CAAC,IAAII,EAAED,EAAE45B,MAAwB/5B,GAAlBI,GAAGH,EAAEif,aAAkB/e,EAAE45B,MAAM/5B,EAAE6f,GAAG5f,EAAED,EAAE,CAAC,CACrZ,SAASw7B,GAAGv7B,EAAEE,GAAG,IAAIH,EAAEC,EAAEy6B,YAAYt6B,EAAEH,EAAE+c,UAAU,GAAG,OAAO5c,GAAoBJ,KAAhBI,EAAEA,EAAEs6B,aAAmB,CAAC,IAAIr6B,EAAE,KAAKjE,EAAE,KAAyB,GAAG,QAAvB4D,EAAEA,EAAE46B,iBAA4B,CAAC,EAAE,CAAC,IAAI16B,EAAE,CAACi7B,UAAUn7B,EAAEm7B,UAAUC,KAAKp7B,EAAEo7B,KAAKvoB,IAAI7S,EAAE6S,IAAIwoB,QAAQr7B,EAAEq7B,QAAQ3yB,SAAS1I,EAAE0I,SAAS3E,KAAK,MAAM,OAAO3H,EAAEiE,EAAEjE,EAAE8D,EAAE9D,EAAEA,EAAE2H,KAAK7D,EAAEF,EAAEA,EAAE+D,IAAI,OAAO,OAAO/D,GAAG,OAAO5D,EAAEiE,EAAEjE,EAAE+D,EAAE/D,EAAEA,EAAE2H,KAAK5D,CAAC,MAAME,EAAEjE,EAAE+D,EAAiH,OAA/GH,EAAE,CAAC26B,UAAUv6B,EAAEu6B,UAAUC,gBAAgBv6B,EAAEw6B,eAAez+B,EAAE0+B,OAAO16B,EAAE06B,OAAOE,QAAQ56B,EAAE46B,cAAS/6B,EAAEy6B,YAAY16B,EAAQ,CAAoB,QAAnBC,EAAED,EAAE66B,gBAAwB76B,EAAE46B,gBAAgBz6B,EAAEF,EAAE8D,KACnf5D,EAAEH,EAAE66B,eAAe16B,CAAC,CACpB,SAASs7B,GAAGx7B,EAAEE,EAAEH,EAAEI,GAAG,IAAIC,EAAEJ,EAAEy6B,YAAYF,IAAG,EAAG,IAAIp+B,EAAEiE,EAAEu6B,gBAAgB16B,EAAEG,EAAEw6B,eAAev6B,EAAED,EAAEy6B,OAAOC,QAAQ,GAAG,OAAOz6B,EAAE,CAACD,EAAEy6B,OAAOC,QAAQ,KAAK,IAAI37B,EAAEkB,EAAEf,EAAEH,EAAE2E,KAAK3E,EAAE2E,KAAK,KAAK,OAAO7D,EAAE9D,EAAEmD,EAAEW,EAAE6D,KAAKxE,EAAEW,EAAEd,EAAE,IAAII,EAAES,EAAE+c,UAAU,OAAOxd,KAAoBc,GAAhBd,EAAEA,EAAEk7B,aAAgBG,kBAAmB36B,IAAI,OAAOI,EAAEd,EAAEo7B,gBAAgBr7B,EAAEe,EAAEyD,KAAKxE,EAAEC,EAAEq7B,eAAez7B,GAAG,CAAC,GAAG,OAAOhD,EAAE,CAAC,IAAI2D,EAAEM,EAAEs6B,UAA6B,IAAnBz6B,EAAE,EAAEV,EAAED,EAAEH,EAAE,KAAKkB,EAAElE,IAAI,CAAC,IAAI2E,EAAET,EAAE86B,KAAK/5B,EAAEf,EAAE66B,UAAU,IAAI/6B,EAAEW,KAAKA,EAAE,CAAC,OAAOvB,IAAIA,EAAEA,EAAEuE,KAAK,CAACo3B,UAAU95B,EAAE+5B,KAAK,EAAEvoB,IAAIvS,EAAEuS,IAAIwoB,QAAQ/6B,EAAE+6B,QAAQ3yB,SAASpI,EAAEoI,SACvf3E,KAAK,OAAO9D,EAAE,CAAC,IAAInC,EAAEmC,EAAEe,EAAEV,EAAU,OAARS,EAAEZ,EAAEkB,EAAErB,EAASgB,EAAE6R,KAAK,KAAK,EAAc,GAAG,oBAAf/U,EAAEkD,EAAEq6B,SAAiC,CAACt7B,EAAEjC,EAAEqB,KAAKkC,EAAEtB,EAAEgB,GAAG,MAAMd,CAAC,CAACF,EAAEjC,EAAE,MAAMmC,EAAE,KAAK,EAAEnC,EAAEof,OAAe,MAATpf,EAAEof,MAAa,IAAI,KAAK,EAAsD,GAAG,QAA3Cnc,EAAE,oBAAdjD,EAAEkD,EAAEq6B,SAAgCv9B,EAAEqB,KAAKkC,EAAEtB,EAAEgB,GAAGjD,SAAe,IAASiD,EAAE,MAAMd,EAAEF,EAAE+D,EAAE,CAAC,EAAE/D,EAAEgB,GAAG,MAAMd,EAAE,KAAK,EAAEu6B,IAAG,EAAG,CAAC,OAAOl6B,EAAEoI,UAAU,IAAIpI,EAAE86B,OAAOn7B,EAAEid,OAAO,GAAe,QAAZnc,EAAEV,EAAE26B,SAAiB36B,EAAE26B,QAAQ,CAAC16B,GAAGS,EAAE8C,KAAKvD,GAAG,MAAMe,EAAE,CAAC85B,UAAU95B,EAAE+5B,KAAKr6B,EAAE8R,IAAIvS,EAAEuS,IAAIwoB,QAAQ/6B,EAAE+6B,QAAQ3yB,SAASpI,EAAEoI,SAAS3E,KAAK,MAAM,OAAOvE,GAAGD,EAAEC,EAAE6B,EAAEjC,EAAEW,GAAGP,EAAEA,EAAEuE,KAAK1C,EAAEnB,GAAGa,EAC3e,GAAG,QAAZT,EAAEA,EAAEyD,MAAiB,IAAsB,QAAnBzD,EAAED,EAAEy6B,OAAOC,SAAiB,MAAez6B,GAAJS,EAAET,GAAMyD,KAAKhD,EAAEgD,KAAK,KAAK1D,EAAEw6B,eAAe95B,EAAEV,EAAEy6B,OAAOC,QAAQ,IAAI,EAAsG,GAA5F,OAAOv7B,IAAIJ,EAAEW,GAAGM,EAAEs6B,UAAUv7B,EAAEiB,EAAEu6B,gBAAgBr7B,EAAEc,EAAEw6B,eAAer7B,EAA4B,QAA1BW,EAAEE,EAAEy6B,OAAOR,aAAwB,CAACj6B,EAAEF,EAAE,GAAGD,GAAGG,EAAE+6B,KAAK/6B,EAAEA,EAAE0D,WAAW1D,IAAIF,EAAE,MAAM,OAAO/D,IAAIiE,EAAEy6B,OAAOf,MAAM,GAAG2B,IAAIx7B,EAAED,EAAE85B,MAAM75B,EAAED,EAAEmd,cAAcrd,CAAC,CAAC,CAC9V,SAAS47B,GAAG17B,EAAEE,EAAEH,GAA8B,GAA3BC,EAAEE,EAAE66B,QAAQ76B,EAAE66B,QAAQ,KAAQ,OAAO/6B,EAAE,IAAIE,EAAE,EAAEA,EAAEF,EAAEf,OAAOiB,IAAI,CAAC,IAAIC,EAAEH,EAAEE,GAAGE,EAAED,EAAEsI,SAAS,GAAG,OAAOrI,EAAE,CAAqB,GAApBD,EAAEsI,SAAS,KAAKtI,EAAEJ,EAAK,oBAAoBK,EAAE,MAAMmC,MAAM7C,EAAE,IAAIU,IAAIA,EAAElB,KAAKiB,EAAE,CAAC,CAAC,CAAC,IAAIw7B,GAAG,CAAC,EAAEC,GAAG9G,GAAG6G,IAAIE,GAAG/G,GAAG6G,IAAIG,GAAGhH,GAAG6G,IAAI,SAASI,GAAG/7B,GAAG,GAAGA,IAAI27B,GAAG,MAAMp5B,MAAM7C,EAAE,MAAM,OAAOM,CAAC,CACnS,SAASg8B,GAAGh8B,EAAEE,GAAyC,OAAtCkC,GAAE05B,GAAG57B,GAAGkC,GAAEy5B,GAAG77B,GAAGoC,GAAEw5B,GAAGD,IAAI37B,EAAEE,EAAEsW,UAAmB,KAAK,EAAE,KAAK,GAAGtW,GAAGA,EAAEA,EAAEkuB,iBAAiBluB,EAAE4V,aAAaH,GAAG,KAAK,IAAI,MAAM,QAAkEzV,EAAEyV,GAArCzV,GAAvBF,EAAE,IAAIA,EAAEE,EAAEib,WAAWjb,GAAM4V,cAAc,KAAK9V,EAAEA,EAAEi8B,SAAkBn6B,GAAE85B,IAAIx5B,GAAEw5B,GAAG17B,EAAE,CAAC,SAASg8B,KAAKp6B,GAAE85B,IAAI95B,GAAE+5B,IAAI/5B,GAAEg6B,GAAG,CAAC,SAASK,GAAGn8B,GAAG+7B,GAAGD,GAAGp7B,SAAS,IAAIR,EAAE67B,GAAGH,GAAGl7B,SAAaX,EAAE4V,GAAGzV,EAAEF,EAAEO,MAAML,IAAIH,IAAIqC,GAAEy5B,GAAG77B,GAAGoC,GAAEw5B,GAAG77B,GAAG,CAAC,SAASq8B,GAAGp8B,GAAG67B,GAAGn7B,UAAUV,IAAI8B,GAAE85B,IAAI95B,GAAE+5B,IAAI,CAAC,IAAI54B,GAAE6xB,GAAG,GACxZ,SAASuH,GAAGr8B,GAAG,IAAI,IAAIE,EAAEF,EAAE,OAAOE,GAAG,CAAC,GAAG,KAAKA,EAAE0S,IAAI,CAAC,IAAI7S,EAAEG,EAAEid,cAAc,GAAG,OAAOpd,IAAmB,QAAfA,EAAEA,EAAEqd,aAAqB,OAAOrd,EAAEgnB,MAAM,OAAOhnB,EAAEgnB,MAAM,OAAO7mB,CAAC,MAAM,GAAG,KAAKA,EAAE0S,UAAK,IAAS1S,EAAE+3B,cAAcqE,aAAa,GAAG,KAAa,IAARp8B,EAAE+c,OAAW,OAAO/c,OAAO,GAAG,OAAOA,EAAEqd,MAAM,CAACrd,EAAEqd,MAAMP,OAAO9c,EAAEA,EAAEA,EAAEqd,MAAM,QAAQ,CAAC,GAAGrd,IAAIF,EAAE,MAAM,KAAK,OAAOE,EAAEsd,SAAS,CAAC,GAAG,OAAOtd,EAAE8c,QAAQ9c,EAAE8c,SAAShd,EAAE,OAAO,KAAKE,EAAEA,EAAE8c,MAAM,CAAC9c,EAAEsd,QAAQR,OAAO9c,EAAE8c,OAAO9c,EAAEA,EAAEsd,OAAO,CAAC,OAAO,IAAI,CAAC,IAAI+e,GAAG,GACrc,SAASC,KAAK,IAAI,IAAIx8B,EAAE,EAAEA,EAAEu8B,GAAGt9B,OAAOe,IAAIu8B,GAAGv8B,GAAGy8B,8BAA8B,KAAKF,GAAGt9B,OAAO,CAAC,CAAC,IAAIy9B,GAAG5rB,EAAGpM,uBAAuBi4B,GAAG7rB,EAAGnM,wBAAwBi4B,GAAG,EAAE15B,GAAE,KAAKS,GAAE,KAAKP,GAAE,KAAKy5B,IAAG,EAAGC,IAAG,EAAGC,GAAG,EAAEC,GAAG,EAAE,SAAS35B,KAAI,MAAMd,MAAM7C,EAAE,KAAM,CAAC,SAASu9B,GAAGj9B,EAAEE,GAAG,GAAG,OAAOA,EAAE,OAAM,EAAG,IAAI,IAAIH,EAAE,EAAEA,EAAEG,EAAEjB,QAAQc,EAAEC,EAAEf,OAAOc,IAAI,IAAIotB,GAAGntB,EAAED,GAAGG,EAAEH,IAAI,OAAM,EAAG,OAAM,CAAE,CAChW,SAASm9B,GAAGl9B,EAAEE,EAAEH,EAAEI,EAAEC,EAAEjE,GAAyH,GAAtHygC,GAAGzgC,EAAE+G,GAAEhD,EAAEA,EAAEid,cAAc,KAAKjd,EAAEu6B,YAAY,KAAKv6B,EAAE45B,MAAM,EAAE4C,GAAGh8B,QAAQ,OAAOV,GAAG,OAAOA,EAAEmd,cAAcggB,GAAGC,GAAGp9B,EAAED,EAAEI,EAAEC,GAAM08B,GAAG,CAAC3gC,EAAE,EAAE,EAAE,CAAY,GAAX2gC,IAAG,EAAGC,GAAG,EAAK,IAAI5gC,EAAE,MAAMoG,MAAM7C,EAAE,MAAMvD,GAAG,EAAEiH,GAAEO,GAAE,KAAKzD,EAAEu6B,YAAY,KAAKiC,GAAGh8B,QAAQ28B,GAAGr9B,EAAED,EAAEI,EAAEC,EAAE,OAAO08B,GAAG,CAA+D,GAA9DJ,GAAGh8B,QAAQ48B,GAAGp9B,EAAE,OAAOyD,IAAG,OAAOA,GAAEG,KAAK84B,GAAG,EAAEx5B,GAAEO,GAAET,GAAE,KAAK25B,IAAG,EAAM38B,EAAE,MAAMqC,MAAM7C,EAAE,MAAM,OAAOM,CAAC,CAAC,SAASu9B,KAAK,IAAIv9B,EAAE,IAAI+8B,GAAQ,OAALA,GAAG,EAAS/8B,CAAC,CAC/Y,SAASw9B,KAAK,IAAIx9B,EAAE,CAACmd,cAAc,KAAKud,UAAU,KAAK+C,UAAU,KAAKC,MAAM,KAAK55B,KAAK,MAA8C,OAAxC,OAAOV,GAAEF,GAAEia,cAAc/Z,GAAEpD,EAAEoD,GAAEA,GAAEU,KAAK9D,EAASoD,EAAC,CAAC,SAASu6B,KAAK,GAAG,OAAOh6B,GAAE,CAAC,IAAI3D,EAAEkD,GAAE6Z,UAAU/c,EAAE,OAAOA,EAAEA,EAAEmd,cAAc,IAAI,MAAMnd,EAAE2D,GAAEG,KAAK,IAAI5D,EAAE,OAAOkD,GAAEF,GAAEia,cAAc/Z,GAAEU,KAAK,GAAG,OAAO5D,EAAEkD,GAAElD,EAAEyD,GAAE3D,MAAM,CAAC,GAAG,OAAOA,EAAE,MAAMuC,MAAM7C,EAAE,MAAUM,EAAE,CAACmd,eAAPxZ,GAAE3D,GAAqBmd,cAAcud,UAAU/2B,GAAE+2B,UAAU+C,UAAU95B,GAAE85B,UAAUC,MAAM/5B,GAAE+5B,MAAM55B,KAAK,MAAM,OAAOV,GAAEF,GAAEia,cAAc/Z,GAAEpD,EAAEoD,GAAEA,GAAEU,KAAK9D,CAAC,CAAC,OAAOoD,EAAC,CACje,SAASw6B,GAAG59B,EAAEE,GAAG,MAAM,oBAAoBA,EAAEA,EAAEF,GAAGE,CAAC,CACnD,SAAS29B,GAAG79B,GAAG,IAAIE,EAAEy9B,KAAK59B,EAAEG,EAAEw9B,MAAM,GAAG,OAAO39B,EAAE,MAAMwC,MAAM7C,EAAE,MAAMK,EAAE+9B,oBAAoB99B,EAAE,IAAIG,EAAEwD,GAAEvD,EAAED,EAAEs9B,UAAUthC,EAAE4D,EAAE+6B,QAAQ,GAAG,OAAO3+B,EAAE,CAAC,GAAG,OAAOiE,EAAE,CAAC,IAAIH,EAAEG,EAAE0D,KAAK1D,EAAE0D,KAAK3H,EAAE2H,KAAK3H,EAAE2H,KAAK7D,CAAC,CAACE,EAAEs9B,UAAUr9B,EAAEjE,EAAE4D,EAAE+6B,QAAQ,IAAI,CAAC,GAAG,OAAO16B,EAAE,CAACjE,EAAEiE,EAAE0D,KAAK3D,EAAEA,EAAEu6B,UAAU,IAAIr6B,EAAEJ,EAAE,KAAKd,EAAE,KAAKG,EAAEnD,EAAE,EAAE,CAAC,IAAIoD,EAAED,EAAE67B,KAAK,IAAIyB,GAAGr9B,KAAKA,EAAE,OAAOJ,IAAIA,EAAEA,EAAE2E,KAAK,CAACq3B,KAAK,EAAE4C,OAAOz+B,EAAEy+B,OAAOC,cAAc1+B,EAAE0+B,cAAcC,WAAW3+B,EAAE2+B,WAAWn6B,KAAK,OAAO3D,EAAEb,EAAE0+B,cAAc1+B,EAAE2+B,WAAWj+B,EAAEG,EAAEb,EAAEy+B,YAAY,CAAC,IAAIj+B,EAAE,CAACq7B,KAAK57B,EAAEw+B,OAAOz+B,EAAEy+B,OAAOC,cAAc1+B,EAAE0+B,cACngBC,WAAW3+B,EAAE2+B,WAAWn6B,KAAK,MAAM,OAAO3E,GAAGkB,EAAElB,EAAEW,EAAEG,EAAEE,GAAGhB,EAAEA,EAAE2E,KAAKhE,EAAEoD,GAAE42B,OAAOv6B,EAAEk8B,IAAIl8B,CAAC,CAACD,EAAEA,EAAEwE,IAAI,OAAO,OAAOxE,GAAGA,IAAInD,GAAG,OAAOgD,EAAEc,EAAEE,EAAEhB,EAAE2E,KAAKzD,EAAE8sB,GAAGhtB,EAAED,EAAEid,iBAAiB4c,IAAG,GAAI75B,EAAEid,cAAchd,EAAED,EAAEw6B,UAAUz6B,EAAEC,EAAEu9B,UAAUt+B,EAAEY,EAAEm+B,kBAAkB/9B,CAAC,CAAiB,GAAG,QAAnBH,EAAED,EAAEs6B,aAAwB,CAACj6B,EAAEJ,EAAE,GAAG7D,EAAEiE,EAAE+6B,KAAKj4B,GAAE42B,OAAO39B,EAAEs/B,IAAIt/B,EAAEiE,EAAEA,EAAE0D,WAAW1D,IAAIJ,EAAE,MAAM,OAAOI,IAAIL,EAAE+5B,MAAM,GAAG,MAAM,CAAC55B,EAAEid,cAAcpd,EAAEo+B,SAAS,CAC9X,SAASC,GAAGp+B,GAAG,IAAIE,EAAEy9B,KAAK59B,EAAEG,EAAEw9B,MAAM,GAAG,OAAO39B,EAAE,MAAMwC,MAAM7C,EAAE,MAAMK,EAAE+9B,oBAAoB99B,EAAE,IAAIG,EAAEJ,EAAEo+B,SAAS/9B,EAAEL,EAAE+6B,QAAQ3+B,EAAE+D,EAAEid,cAAc,GAAG,OAAO/c,EAAE,CAACL,EAAE+6B,QAAQ,KAAK,IAAI76B,EAAEG,EAAEA,EAAE0D,KAAK,GAAG3H,EAAE6D,EAAE7D,EAAE8D,EAAE89B,QAAQ99B,EAAEA,EAAE6D,WAAW7D,IAAIG,GAAG+sB,GAAGhxB,EAAE+D,EAAEid,iBAAiB4c,IAAG,GAAI75B,EAAEid,cAAchhB,EAAE,OAAO+D,EAAEu9B,YAAYv9B,EAAEw6B,UAAUv+B,GAAG4D,EAAEm+B,kBAAkB/hC,CAAC,CAAC,MAAM,CAACA,EAAEgE,EAAE,CAAC,SAASk+B,KAAK,CACpW,SAASC,GAAGt+B,EAAEE,GAAG,IAAIH,EAAEmD,GAAE/C,EAAEw9B,KAAKv9B,EAAEF,IAAI/D,GAAGgxB,GAAGhtB,EAAEgd,cAAc/c,GAAsE,GAAnEjE,IAAIgE,EAAEgd,cAAc/c,EAAE25B,IAAG,GAAI55B,EAAEA,EAAEu9B,MAAMa,GAAGC,GAAGr4B,KAAK,KAAKpG,EAAEI,EAAEH,GAAG,CAACA,IAAOG,EAAEs+B,cAAcv+B,GAAG/D,GAAG,OAAOiH,IAAuB,EAApBA,GAAE+Z,cAAcvK,IAAM,CAAuD,GAAtD7S,EAAEkd,OAAO,KAAKyhB,GAAG,EAAEC,GAAGx4B,KAAK,KAAKpG,EAAEI,EAAEC,EAAEF,QAAG,EAAO,MAAS,OAAOoD,GAAE,MAAMf,MAAM7C,EAAE,MAAM,KAAQ,GAAHk9B,KAAQgC,GAAG7+B,EAAEG,EAAEE,EAAE,CAAC,OAAOA,CAAC,CAAC,SAASw+B,GAAG5+B,EAAEE,EAAEH,GAAGC,EAAEid,OAAO,MAAMjd,EAAE,CAACy+B,YAAYv+B,EAAE7D,MAAM0D,GAAmB,QAAhBG,EAAEgD,GAAEu3B,cAAsBv6B,EAAE,CAAC2+B,WAAW,KAAKC,OAAO,MAAM57B,GAAEu3B,YAAYv6B,EAAEA,EAAE4+B,OAAO,CAAC9+B,IAAgB,QAAXD,EAAEG,EAAE4+B,QAAgB5+B,EAAE4+B,OAAO,CAAC9+B,GAAGD,EAAE6D,KAAK5D,EAAG,CAClf,SAAS2+B,GAAG3+B,EAAEE,EAAEH,EAAEI,GAAGD,EAAE7D,MAAM0D,EAAEG,EAAEu+B,YAAYt+B,EAAE4+B,GAAG7+B,IAAI8+B,GAAGh/B,EAAE,CAAC,SAASw+B,GAAGx+B,EAAEE,EAAEH,GAAG,OAAOA,GAAE,WAAWg/B,GAAG7+B,IAAI8+B,GAAGh/B,EAAE,GAAE,CAAC,SAAS++B,GAAG/+B,GAAG,IAAIE,EAAEF,EAAEy+B,YAAYz+B,EAAEA,EAAE3D,MAAM,IAAI,IAAI0D,EAAEG,IAAI,OAAOitB,GAAGntB,EAAED,EAAE,CAAC,MAAMI,GAAG,OAAM,CAAE,CAAC,CAAC,SAAS6+B,GAAGh/B,GAAG,IAAIE,EAAEo6B,GAAGt6B,EAAE,GAAG,OAAOE,GAAG++B,GAAG/+B,EAAEF,EAAE,GAAG,EAAE,CAClQ,SAASk/B,GAAGl/B,GAAG,IAAIE,EAAEs9B,KAA8M,MAAzM,oBAAoBx9B,IAAIA,EAAEA,KAAKE,EAAEid,cAAcjd,EAAEw6B,UAAU16B,EAAEA,EAAE,CAAC86B,QAAQ,KAAKT,YAAY,KAAKP,MAAM,EAAEqE,SAAS,KAAKL,oBAAoBF,GAAGM,kBAAkBl+B,GAAGE,EAAEw9B,MAAM19B,EAAEA,EAAEA,EAAEm+B,SAASgB,GAAGh5B,KAAK,KAAKjD,GAAElD,GAAS,CAACE,EAAEid,cAAcnd,EAAE,CAC5P,SAAS0+B,GAAG1+B,EAAEE,EAAEH,EAAEI,GAA8O,OAA3OH,EAAE,CAAC4S,IAAI5S,EAAEo/B,OAAOl/B,EAAEm/B,QAAQt/B,EAAEu/B,KAAKn/B,EAAE2D,KAAK,MAAsB,QAAhB5D,EAAEgD,GAAEu3B,cAAsBv6B,EAAE,CAAC2+B,WAAW,KAAKC,OAAO,MAAM57B,GAAEu3B,YAAYv6B,EAAEA,EAAE2+B,WAAW7+B,EAAE8D,KAAK9D,GAAmB,QAAfD,EAAEG,EAAE2+B,YAAoB3+B,EAAE2+B,WAAW7+B,EAAE8D,KAAK9D,GAAGG,EAAEJ,EAAE+D,KAAK/D,EAAE+D,KAAK9D,EAAEA,EAAE8D,KAAK3D,EAAED,EAAE2+B,WAAW7+B,GAAWA,CAAC,CAAC,SAASu/B,KAAK,OAAO5B,KAAKxgB,aAAa,CAAC,SAASqiB,GAAGx/B,EAAEE,EAAEH,EAAEI,GAAG,IAAIC,EAAEo9B,KAAKt6B,GAAE+Z,OAAOjd,EAAEI,EAAE+c,cAAcuhB,GAAG,EAAEx+B,EAAEH,OAAE,OAAO,IAASI,EAAE,KAAKA,EAAE,CAC9Y,SAASs/B,GAAGz/B,EAAEE,EAAEH,EAAEI,GAAG,IAAIC,EAAEu9B,KAAKx9B,OAAE,IAASA,EAAE,KAAKA,EAAE,IAAIhE,OAAE,EAAO,GAAG,OAAOwH,GAAE,CAAC,IAAI1D,EAAE0D,GAAEwZ,cAA0B,GAAZhhB,EAAE8D,EAAEo/B,QAAW,OAAOl/B,GAAG88B,GAAG98B,EAAEF,EAAEq/B,MAAmC,YAA5Bl/B,EAAE+c,cAAcuhB,GAAGx+B,EAAEH,EAAE5D,EAAEgE,GAAU,CAAC+C,GAAE+Z,OAAOjd,EAAEI,EAAE+c,cAAcuhB,GAAG,EAAEx+B,EAAEH,EAAE5D,EAAEgE,EAAE,CAAC,SAASu/B,GAAG1/B,EAAEE,GAAG,OAAOs/B,GAAG,QAAQ,EAAEx/B,EAAEE,EAAE,CAAC,SAASq+B,GAAGv+B,EAAEE,GAAG,OAAOu/B,GAAG,KAAK,EAAEz/B,EAAEE,EAAE,CAAC,SAASy/B,GAAG3/B,EAAEE,GAAG,OAAOu/B,GAAG,EAAE,EAAEz/B,EAAEE,EAAE,CAAC,SAAS0/B,GAAG5/B,EAAEE,GAAG,OAAOu/B,GAAG,EAAE,EAAEz/B,EAAEE,EAAE,CAChX,SAAS2/B,GAAG7/B,EAAEE,GAAG,MAAG,oBAAoBA,GAASF,EAAEA,IAAIE,EAAEF,GAAG,WAAWE,EAAE,KAAK,GAAK,OAAOA,QAAG,IAASA,GAASF,EAAEA,IAAIE,EAAEQ,QAAQV,EAAE,WAAWE,EAAEQ,QAAQ,IAAI,QAA1E,CAA2E,CAAC,SAASo/B,GAAG9/B,EAAEE,EAAEH,GAA6C,OAA1CA,EAAE,OAAOA,QAAG,IAASA,EAAEA,EAAEkL,OAAO,CAACjL,IAAI,KAAYy/B,GAAG,EAAE,EAAEI,GAAG15B,KAAK,KAAKjG,EAAEF,GAAGD,EAAE,CAAC,SAASggC,KAAK,CAAC,SAASC,GAAGhgC,EAAEE,GAAG,IAAIH,EAAE49B,KAAKz9B,OAAE,IAASA,EAAE,KAAKA,EAAE,IAAIC,EAAEJ,EAAEod,cAAc,OAAG,OAAOhd,GAAG,OAAOD,GAAG+8B,GAAG/8B,EAAEC,EAAE,IAAWA,EAAE,IAAGJ,EAAEod,cAAc,CAACnd,EAAEE,GAAUF,EAAC,CAC7Z,SAASigC,GAAGjgC,EAAEE,GAAG,IAAIH,EAAE49B,KAAKz9B,OAAE,IAASA,EAAE,KAAKA,EAAE,IAAIC,EAAEJ,EAAEod,cAAc,OAAG,OAAOhd,GAAG,OAAOD,GAAG+8B,GAAG/8B,EAAEC,EAAE,IAAWA,EAAE,IAAGH,EAAEA,IAAID,EAAEod,cAAc,CAACnd,EAAEE,GAAUF,EAAC,CAAC,SAASkgC,GAAGlgC,EAAEE,EAAEH,GAAG,OAAG,KAAQ,GAAH68B,KAAc58B,EAAE06B,YAAY16B,EAAE06B,WAAU,EAAGX,IAAG,GAAI/5B,EAAEmd,cAAcpd,IAAEotB,GAAGptB,EAAEG,KAAKH,EAAEyf,KAAKtc,GAAE42B,OAAO/5B,EAAE07B,IAAI17B,EAAEC,EAAE06B,WAAU,GAAWx6B,EAAC,CAAC,SAASigC,GAAGngC,EAAEE,GAAG,IAAIH,EAAE6B,GAAEA,GAAE,IAAI7B,GAAG,EAAEA,EAAEA,EAAE,EAAEC,GAAE,GAAI,IAAIG,EAAEw8B,GAAGn4B,WAAWm4B,GAAGn4B,WAAW,CAAC,EAAE,IAAIxE,GAAE,GAAIE,GAAG,CAAC,QAAQ0B,GAAE7B,EAAE48B,GAAGn4B,WAAWrE,CAAC,CAAC,CAAC,SAASigC,KAAK,OAAOzC,KAAKxgB,aAAa,CAC1d,SAASkjB,GAAGrgC,EAAEE,EAAEH,GAAG,IAAII,EAAEmgC,GAAGtgC,GAAkE,GAA/DD,EAAE,CAACo7B,KAAKh7B,EAAE49B,OAAOh+B,EAAEi+B,eAAc,EAAGC,WAAW,KAAKn6B,KAAK,MAASy8B,GAAGvgC,GAAGwgC,GAAGtgC,EAAEH,QAAQ,GAAiB,QAAdA,EAAEq6B,GAAGp6B,EAAEE,EAAEH,EAAEI,IAAY,CAAW8+B,GAAGl/B,EAAEC,EAAEG,EAAXuD,MAAgB+8B,GAAG1gC,EAAEG,EAAEC,EAAE,CAAC,CAC/K,SAASg/B,GAAGn/B,EAAEE,EAAEH,GAAG,IAAII,EAAEmgC,GAAGtgC,GAAGI,EAAE,CAAC+6B,KAAKh7B,EAAE49B,OAAOh+B,EAAEi+B,eAAc,EAAGC,WAAW,KAAKn6B,KAAK,MAAM,GAAGy8B,GAAGvgC,GAAGwgC,GAAGtgC,EAAEE,OAAO,CAAC,IAAIjE,EAAE6D,EAAE+c,UAAU,GAAG,IAAI/c,EAAE85B,QAAQ,OAAO39B,GAAG,IAAIA,EAAE29B,QAAiC,QAAxB39B,EAAE+D,EAAE49B,qBAA8B,IAAI,IAAI79B,EAAEC,EAAEg+B,kBAAkB79B,EAAElE,EAAE8D,EAAEF,GAAqC,GAAlCK,EAAE49B,eAAc,EAAG59B,EAAE69B,WAAW59B,EAAK8sB,GAAG9sB,EAAEJ,GAAG,CAAC,IAAId,EAAEe,EAAEm6B,YAA+E,OAAnE,OAAOl7B,GAAGiB,EAAE0D,KAAK1D,EAAE+5B,GAAGj6B,KAAKE,EAAE0D,KAAK3E,EAAE2E,KAAK3E,EAAE2E,KAAK1D,QAAGF,EAAEm6B,YAAYj6B,EAAQ,CAAC,CAAC,MAAMd,GAAG,CAAwB,QAAdS,EAAEq6B,GAAGp6B,EAAEE,EAAEE,EAAED,MAAoB8+B,GAAGl/B,EAAEC,EAAEG,EAAbC,EAAEsD,MAAgB+8B,GAAG1gC,EAAEG,EAAEC,GAAG,CAAC,CAC/c,SAASogC,GAAGvgC,GAAG,IAAIE,EAAEF,EAAE+c,UAAU,OAAO/c,IAAIkD,IAAG,OAAOhD,GAAGA,IAAIgD,EAAC,CAAC,SAASs9B,GAAGxgC,EAAEE,GAAG48B,GAAGD,IAAG,EAAG,IAAI98B,EAAEC,EAAE86B,QAAQ,OAAO/6B,EAAEG,EAAE4D,KAAK5D,GAAGA,EAAE4D,KAAK/D,EAAE+D,KAAK/D,EAAE+D,KAAK5D,GAAGF,EAAE86B,QAAQ56B,CAAC,CAAC,SAASugC,GAAGzgC,EAAEE,EAAEH,GAAG,GAAG,KAAO,QAAFA,GAAW,CAAC,IAAII,EAAED,EAAE45B,MAAwB/5B,GAAlBI,GAAGH,EAAEif,aAAkB/e,EAAE45B,MAAM/5B,EAAE6f,GAAG5f,EAAED,EAAE,CAAC,CAC9P,IAAIu9B,GAAG,CAACoD,YAAY1G,GAAGjzB,YAAY1D,GAAE2D,WAAW3D,GAAE8D,UAAU9D,GAAEgE,oBAAoBhE,GAAEiE,mBAAmBjE,GAAEkE,gBAAgBlE,GAAEmE,QAAQnE,GAAEoE,WAAWpE,GAAEqE,OAAOrE,GAAEsE,SAAStE,GAAE4D,cAAc5D,GAAE6D,iBAAiB7D,GAAEwE,cAAcxE,GAAEs9B,iBAAiBt9B,GAAEuE,qBAAqBvE,GAAE+D,MAAM/D,GAAEu9B,0BAAyB,GAAIzD,GAAG,CAACuD,YAAY1G,GAAGjzB,YAAY,SAAS/G,EAAEE,GAA4C,OAAzCs9B,KAAKrgB,cAAc,CAACnd,OAAE,IAASE,EAAE,KAAKA,GAAUF,CAAC,EAAEgH,WAAWgzB,GAAG7yB,UAAUu4B,GAAGr4B,oBAAoB,SAASrH,EAAEE,EAAEH,GAA6C,OAA1CA,EAAE,OAAOA,QAAG,IAASA,EAAEA,EAAEkL,OAAO,CAACjL,IAAI,KAAYw/B,GAAG,QAC3f,EAAEK,GAAG15B,KAAK,KAAKjG,EAAEF,GAAGD,EAAE,EAAEwH,gBAAgB,SAASvH,EAAEE,GAAG,OAAOs/B,GAAG,QAAQ,EAAEx/B,EAAEE,EAAE,EAAEoH,mBAAmB,SAAStH,EAAEE,GAAG,OAAOs/B,GAAG,EAAE,EAAEx/B,EAAEE,EAAE,EAAEsH,QAAQ,SAASxH,EAAEE,GAAG,IAAIH,EAAEy9B,KAAqD,OAAhDt9B,OAAE,IAASA,EAAE,KAAKA,EAAEF,EAAEA,IAAID,EAAEod,cAAc,CAACnd,EAAEE,GAAUF,CAAC,EAAEyH,WAAW,SAASzH,EAAEE,EAAEH,GAAG,IAAII,EAAEq9B,KAAkM,OAA7Lt9B,OAAE,IAASH,EAAEA,EAAEG,GAAGA,EAAEC,EAAEgd,cAAchd,EAAEu6B,UAAUx6B,EAAEF,EAAE,CAAC86B,QAAQ,KAAKT,YAAY,KAAKP,MAAM,EAAEqE,SAAS,KAAKL,oBAAoB99B,EAAEk+B,kBAAkBh+B,GAAGC,EAAEu9B,MAAM19B,EAAEA,EAAEA,EAAEm+B,SAASkC,GAAGl6B,KAAK,KAAKjD,GAAElD,GAAS,CAACG,EAAEgd,cAAcnd,EAAE,EAAE0H,OAAO,SAAS1H,GAC3d,OAAdA,EAAE,CAACU,QAAQV,GAAhBw9B,KAA4BrgB,cAAcnd,CAAC,EAAE2H,SAASu3B,GAAGj4B,cAAc84B,GAAG74B,iBAAiB,SAASlH,GAAG,OAAOw9B,KAAKrgB,cAAcnd,CAAC,EAAE6H,cAAc,WAAW,IAAI7H,EAAEk/B,IAAG,GAAIh/B,EAAEF,EAAE,GAA6C,OAA1CA,EAAEmgC,GAAGh6B,KAAK,KAAKnG,EAAE,IAAIw9B,KAAKrgB,cAAcnd,EAAQ,CAACE,EAAEF,EAAE,EAAE2gC,iBAAiB,WAAW,EAAE/4B,qBAAqB,SAAS5H,EAAEE,EAAEH,GAAG,IAAII,EAAE+C,GAAE9C,EAAEo9B,KAAK,GAAG56B,GAAE,CAAC,QAAG,IAAS7C,EAAE,MAAMwC,MAAM7C,EAAE,MAAMK,EAAEA,GAAG,KAAK,CAAO,GAANA,EAAEG,IAAO,OAAOoD,GAAE,MAAMf,MAAM7C,EAAE,MAAM,KAAQ,GAAHk9B,KAAQgC,GAAGz+B,EAAED,EAAEH,EAAE,CAACK,EAAE+c,cAAcpd,EAAE,IAAI5D,EAAE,CAACE,MAAM0D,EAAE0+B,YAAYv+B,GACvZ,OAD0ZE,EAAEs9B,MAAMvhC,EAAEujC,GAAGlB,GAAGr4B,KAAK,KAAKhG,EACpfhE,EAAE6D,GAAG,CAACA,IAAIG,EAAE8c,OAAO,KAAKyhB,GAAG,EAAEC,GAAGx4B,KAAK,KAAKhG,EAAEhE,EAAE4D,EAAEG,QAAG,EAAO,MAAaH,CAAC,EAAEqH,MAAM,WAAW,IAAIpH,EAAEw9B,KAAKt9B,EAAEoD,GAAEu9B,iBAAiB,GAAGj+B,GAAE,CAAC,IAAI7C,EAAE62B,GAAkD12B,EAAE,IAAIA,EAAE,KAA9CH,GAAH42B,KAAU,GAAG,GAAGpY,GAAhBoY,IAAsB,IAAIlzB,SAAS,IAAI1D,GAAuB,GAAPA,EAAEg9B,QAAW78B,GAAG,IAAIH,EAAE0D,SAAS,KAAKvD,GAAG,GAAG,MAAaA,EAAE,IAAIA,EAAE,KAAfH,EAAEi9B,MAAmBv5B,SAAS,IAAI,IAAI,OAAOzD,EAAEmd,cAAcjd,CAAC,EAAE0gC,0BAAyB,GAAIxD,GAAG,CAACsD,YAAY1G,GAAGjzB,YAAYi5B,GAAGh5B,WAAWgzB,GAAG7yB,UAAUo3B,GAAGl3B,oBAAoBy4B,GAAGx4B,mBAAmBq4B,GAAGp4B,gBAAgBq4B,GAAGp4B,QAAQy4B,GAAGx4B,WAAWo2B,GAAGn2B,OAAO63B,GAAG53B,SAAS,WAAW,OAAOk2B,GAAGD,GAAG,EACrhB32B,cAAc84B,GAAG74B,iBAAiB,SAASlH,GAAc,OAAOkgC,GAAZvC,KAAiBh6B,GAAEwZ,cAAcnd,EAAE,EAAE6H,cAAc,WAAgD,MAAM,CAArCg2B,GAAGD,IAAI,GAAKD,KAAKxgB,cAAyB,EAAEwjB,iBAAiBtC,GAAGz2B,qBAAqB02B,GAAGl3B,MAAMg5B,GAAGQ,0BAAyB,GAAIvD,GAAG,CAACqD,YAAY1G,GAAGjzB,YAAYi5B,GAAGh5B,WAAWgzB,GAAG7yB,UAAUo3B,GAAGl3B,oBAAoBy4B,GAAGx4B,mBAAmBq4B,GAAGp4B,gBAAgBq4B,GAAGp4B,QAAQy4B,GAAGx4B,WAAW22B,GAAG12B,OAAO63B,GAAG53B,SAAS,WAAW,OAAOy2B,GAAGR,GAAG,EAAE32B,cAAc84B,GAAG74B,iBAAiB,SAASlH,GAAG,IAAIE,EAAEy9B,KAAK,OAAO,OACzfh6B,GAAEzD,EAAEid,cAAcnd,EAAEkgC,GAAGhgC,EAAEyD,GAAEwZ,cAAcnd,EAAE,EAAE6H,cAAc,WAAgD,MAAM,CAArCu2B,GAAGR,IAAI,GAAKD,KAAKxgB,cAAyB,EAAEwjB,iBAAiBtC,GAAGz2B,qBAAqB02B,GAAGl3B,MAAMg5B,GAAGQ,0BAAyB,GAAI,SAASE,GAAG9gC,EAAEE,GAAG,GAAGF,GAAGA,EAAElD,aAAa,CAA4B,IAAI,IAAIiD,KAAnCG,EAAE2D,EAAE,CAAC,EAAE3D,GAAGF,EAAEA,EAAElD,kBAA4B,IAASoD,EAAEH,KAAKG,EAAEH,GAAGC,EAAED,IAAI,OAAOG,CAAC,CAAC,OAAOA,CAAC,CAAC,SAAS6gC,GAAG/gC,EAAEE,EAAEH,EAAEI,GAA8BJ,EAAE,QAAXA,EAAEA,EAAEI,EAAtBD,EAAEF,EAAEmd,sBAAmC,IAASpd,EAAEG,EAAE2D,EAAE,CAAC,EAAE3D,EAAEH,GAAGC,EAAEmd,cAAcpd,EAAE,IAAIC,EAAE85B,QAAQ95B,EAAEy6B,YAAYC,UAAU36B,EAAE,CACrd,IAAIihC,GAAG,CAACx/B,UAAU,SAASxB,GAAG,SAAOA,EAAEA,EAAEihC,kBAAiBnkB,GAAG9c,KAAKA,CAAI,EAAE2B,gBAAgB,SAAS3B,EAAEE,EAAEH,GAAGC,EAAEA,EAAEihC,gBAAgB,IAAI9gC,EAAEuD,KAAItD,EAAEkgC,GAAGtgC,GAAG7D,EAAE8+B,GAAG96B,EAAEC,GAAGjE,EAAEi/B,QAAQl7B,OAAE,IAASH,GAAG,OAAOA,IAAI5D,EAAEsM,SAAS1I,GAAe,QAAZG,EAAEm7B,GAAGr7B,EAAE7D,EAAEiE,MAAc6+B,GAAG/+B,EAAEF,EAAEI,EAAED,GAAGm7B,GAAGp7B,EAAEF,EAAEI,GAAG,EAAEsB,oBAAoB,SAAS1B,EAAEE,EAAEH,GAAGC,EAAEA,EAAEihC,gBAAgB,IAAI9gC,EAAEuD,KAAItD,EAAEkgC,GAAGtgC,GAAG7D,EAAE8+B,GAAG96B,EAAEC,GAAGjE,EAAEyW,IAAI,EAAEzW,EAAEi/B,QAAQl7B,OAAE,IAASH,GAAG,OAAOA,IAAI5D,EAAEsM,SAAS1I,GAAe,QAAZG,EAAEm7B,GAAGr7B,EAAE7D,EAAEiE,MAAc6+B,GAAG/+B,EAAEF,EAAEI,EAAED,GAAGm7B,GAAGp7B,EAAEF,EAAEI,GAAG,EAAEqB,mBAAmB,SAASzB,EAAEE,GAAGF,EAAEA,EAAEihC,gBAAgB,IAAIlhC,EAAE2D,KAAIvD,EACnfmgC,GAAGtgC,GAAGI,EAAE66B,GAAGl7B,EAAEI,GAAGC,EAAEwS,IAAI,OAAE,IAAS1S,GAAG,OAAOA,IAAIE,EAAEqI,SAASvI,GAAe,QAAZA,EAAEm7B,GAAGr7B,EAAEI,EAAED,MAAc8+B,GAAG/+B,EAAEF,EAAEG,EAAEJ,GAAGu7B,GAAGp7B,EAAEF,EAAEG,GAAG,GAAG,SAAS+gC,GAAGlhC,EAAEE,EAAEH,EAAEI,EAAEC,EAAEjE,EAAE8D,GAAiB,MAAM,oBAApBD,EAAEA,EAAEyb,WAAsC0lB,sBAAsBnhC,EAAEmhC,sBAAsBhhC,EAAEhE,EAAE8D,IAAGC,EAAE/C,YAAW+C,EAAE/C,UAAUwF,wBAAsByqB,GAAGrtB,EAAEI,KAAKitB,GAAGhtB,EAAEjE,GAAK,CAC1S,SAASilC,GAAGphC,EAAEE,EAAEH,GAAG,IAAII,GAAE,EAAGC,EAAE20B,GAAO54B,EAAE+D,EAAEmhC,YAA2W,MAA/V,kBAAkBllC,GAAG,OAAOA,EAAEA,EAAE69B,GAAG79B,IAAIiE,EAAEk1B,GAAGp1B,GAAG+0B,GAAGxyB,GAAE/B,QAAyBvE,GAAGgE,EAAE,QAAtBA,EAAED,EAAEi1B,oBAA4B,IAASh1B,GAAG+0B,GAAGl1B,EAAEI,GAAG20B,IAAI70B,EAAE,IAAIA,EAAEH,EAAE5D,GAAG6D,EAAEmd,cAAc,OAAOjd,EAAEohC,YAAO,IAASphC,EAAEohC,MAAMphC,EAAEohC,MAAM,KAAKphC,EAAEgC,QAAQ8+B,GAAGhhC,EAAEyb,UAAUvb,EAAEA,EAAE+gC,gBAAgBjhC,EAAEG,KAAIH,EAAEA,EAAEyb,WAAY2Z,4CAA4Ch1B,EAAEJ,EAAEq1B,0CAA0Cl5B,GAAU+D,CAAC,CAC5Z,SAASqhC,GAAGvhC,EAAEE,EAAEH,EAAEI,GAAGH,EAAEE,EAAEohC,MAAM,oBAAoBphC,EAAEshC,2BAA2BthC,EAAEshC,0BAA0BzhC,EAAEI,GAAG,oBAAoBD,EAAEuhC,kCAAkCvhC,EAAEuhC,iCAAiC1hC,EAAEI,GAAGD,EAAEohC,QAAQthC,GAAGghC,GAAGt/B,oBAAoBxB,EAAEA,EAAEohC,MAAM,KAAK,CACpQ,SAASI,GAAG1hC,EAAEE,EAAEH,EAAEI,GAAG,IAAIC,EAAEJ,EAAEyb,UAAUrb,EAAEI,MAAMT,EAAEK,EAAEkhC,MAAMthC,EAAEmd,cAAc/c,EAAE6B,KAAK,CAAC,EAAEu4B,GAAGx6B,GAAG,IAAI7D,EAAE+D,EAAEmhC,YAAY,kBAAkBllC,GAAG,OAAOA,EAAEiE,EAAE4B,QAAQg4B,GAAG79B,IAAIA,EAAEm5B,GAAGp1B,GAAG+0B,GAAGxyB,GAAE/B,QAAQN,EAAE4B,QAAQkzB,GAAGl1B,EAAE7D,IAAIiE,EAAEkhC,MAAMthC,EAAEmd,cAA2C,oBAA7BhhB,EAAE+D,EAAEyhC,4BAAiDZ,GAAG/gC,EAAEE,EAAE/D,EAAE4D,GAAGK,EAAEkhC,MAAMthC,EAAEmd,eAAe,oBAAoBjd,EAAEyhC,0BAA0B,oBAAoBvhC,EAAEwhC,yBAAyB,oBAAoBxhC,EAAEyhC,2BAA2B,oBAAoBzhC,EAAE0hC,qBAAqB5hC,EAAEE,EAAEkhC,MACrf,oBAAoBlhC,EAAE0hC,oBAAoB1hC,EAAE0hC,qBAAqB,oBAAoB1hC,EAAEyhC,2BAA2BzhC,EAAEyhC,4BAA4B3hC,IAAIE,EAAEkhC,OAAON,GAAGt/B,oBAAoBtB,EAAEA,EAAEkhC,MAAM,MAAM9F,GAAGx7B,EAAED,EAAEK,EAAED,GAAGC,EAAEkhC,MAAMthC,EAAEmd,eAAe,oBAAoB/c,EAAE2hC,oBAAoB/hC,EAAEid,OAAO,QAAQ,CAAC,SAAS+kB,GAAGhiC,EAAEE,GAAG,IAAI,IAAIH,EAAE,GAAGI,EAAED,EAAE,GAAGH,GAAG4S,EAAGxS,GAAGA,EAAEA,EAAE6c,aAAa7c,GAAG,IAAIC,EAAEL,CAAC,CAAC,MAAM5D,GAAGiE,EAAE,6BAA6BjE,EAAE8lC,QAAQ,KAAK9lC,EAAE6V,KAAK,CAAC,MAAM,CAAC3V,MAAM2D,EAAEzB,OAAO2B,EAAE8R,MAAM5R,EAAE8hC,OAAO,KAAK,CAC1d,SAASC,GAAGniC,EAAEE,EAAEH,GAAG,MAAM,CAAC1D,MAAM2D,EAAEzB,OAAO,KAAKyT,MAAM,MAAMjS,EAAEA,EAAE,KAAKmiC,OAAO,MAAMhiC,EAAEA,EAAE,KAAK,CAAC,SAASkiC,GAAGpiC,EAAEE,GAAG,IAAI4J,QAAQC,MAAM7J,EAAE7D,MAAM,CAAC,MAAM0D,GAAGuI,YAAW,WAAW,MAAMvI,CAAE,GAAE,CAAC,CAAC,IAAIsiC,GAAG,oBAAoBC,QAAQA,QAAQ7hB,IAAI,SAAS8hB,GAAGviC,EAAEE,EAAEH,IAAGA,EAAEk7B,IAAI,EAAEl7B,IAAK6S,IAAI,EAAE7S,EAAEq7B,QAAQ,CAAC5tB,QAAQ,MAAM,IAAIrN,EAAED,EAAE7D,MAAsD,OAAhD0D,EAAE0I,SAAS,WAAW+5B,KAAKA,IAAG,EAAGC,GAAGtiC,GAAGiiC,GAAGpiC,EAAEE,EAAE,EAASH,CAAC,CACrW,SAAS2iC,GAAG1iC,EAAEE,EAAEH,IAAGA,EAAEk7B,IAAI,EAAEl7B,IAAK6S,IAAI,EAAE,IAAIzS,EAAEH,EAAEO,KAAKoiC,yBAAyB,GAAG,oBAAoBxiC,EAAE,CAAC,IAAIC,EAAEF,EAAE7D,MAAM0D,EAAEq7B,QAAQ,WAAW,OAAOj7B,EAAEC,EAAE,EAAEL,EAAE0I,SAAS,WAAW25B,GAAGpiC,EAAEE,EAAE,CAAC,CAAC,IAAI/D,EAAE6D,EAAEyb,UAA8O,OAApO,OAAOtf,GAAG,oBAAoBA,EAAEymC,oBAAoB7iC,EAAE0I,SAAS,WAAW25B,GAAGpiC,EAAEE,GAAG,oBAAoBC,IAAI,OAAO0iC,GAAGA,GAAG,IAAIh0B,IAAI,CAAC9M,OAAO8gC,GAAG5zB,IAAIlN,OAAO,IAAIhC,EAAEG,EAAE8R,MAAMjQ,KAAK6gC,kBAAkB1iC,EAAE7D,MAAM,CAACymC,eAAe,OAAO/iC,EAAEA,EAAE,IAAI,GAAUA,CAAC,CACnb,SAASgjC,GAAG/iC,EAAEE,EAAEH,GAAG,IAAII,EAAEH,EAAEgjC,UAAU,GAAG,OAAO7iC,EAAE,CAACA,EAAEH,EAAEgjC,UAAU,IAAIX,GAAG,IAAIjiC,EAAE,IAAIyO,IAAI1O,EAAEmS,IAAIpS,EAAEE,EAAE,WAAiB,KAAXA,EAAED,EAAEkT,IAAInT,MAAgBE,EAAE,IAAIyO,IAAI1O,EAAEmS,IAAIpS,EAAEE,IAAIA,EAAEwxB,IAAI7xB,KAAKK,EAAE6O,IAAIlP,GAAGC,EAAEijC,GAAG98B,KAAK,KAAKnG,EAAEE,EAAEH,GAAGG,EAAEkE,KAAKpE,EAAEA,GAAG,CAAC,SAASkjC,GAAGljC,GAAG,EAAE,CAAC,IAAIE,EAA4E,IAAvEA,EAAE,KAAKF,EAAE4S,OAAsB1S,EAAE,QAApBA,EAAEF,EAAEmd,gBAAyB,OAAOjd,EAAEkd,YAAuBld,EAAE,OAAOF,EAAEA,EAAEA,EAAEgd,MAAM,OAAO,OAAOhd,GAAG,OAAO,IAAI,CAChW,SAASmjC,GAAGnjC,EAAEE,EAAEH,EAAEI,EAAEC,GAAG,OAAG,KAAY,EAAPJ,EAAE63B,OAAe73B,IAAIE,EAAEF,EAAEid,OAAO,OAAOjd,EAAEid,OAAO,IAAIld,EAAEkd,OAAO,OAAOld,EAAEkd,QAAQ,MAAM,IAAIld,EAAE6S,MAAM,OAAO7S,EAAEgd,UAAUhd,EAAE6S,IAAI,KAAI1S,EAAE+6B,IAAI,EAAE,IAAKroB,IAAI,EAAEyoB,GAAGt7B,EAAEG,EAAE,KAAKH,EAAE+5B,OAAO,GAAG95B,IAAEA,EAAEid,OAAO,MAAMjd,EAAE85B,MAAM15B,EAASJ,EAAC,CAAC,IAAIojC,GAAGtyB,EAAGrR,kBAAkBs6B,IAAG,EAAG,SAASsJ,GAAGrjC,EAAEE,EAAEH,EAAEI,GAAGD,EAAEqd,MAAM,OAAOvd,EAAEk5B,GAAGh5B,EAAE,KAAKH,EAAEI,GAAG84B,GAAG/4B,EAAEF,EAAEud,MAAMxd,EAAEI,EAAE,CACnV,SAASmjC,GAAGtjC,EAAEE,EAAEH,EAAEI,EAAEC,GAAGL,EAAEA,EAAEuG,OAAO,IAAInK,EAAE+D,EAAEP,IAAqC,OAAjCg6B,GAAGz5B,EAAEE,GAAGD,EAAE+8B,GAAGl9B,EAAEE,EAAEH,EAAEI,EAAEhE,EAAEiE,GAAGL,EAAEw9B,KAAQ,OAAOv9B,GAAI+5B,IAA2En3B,IAAG7C,GAAGg3B,GAAG72B,GAAGA,EAAE+c,OAAO,EAAEomB,GAAGrjC,EAAEE,EAAEC,EAAEC,GAAUF,EAAEqd,QAA7Grd,EAAEu6B,YAAYz6B,EAAEy6B,YAAYv6B,EAAE+c,QAAQ,KAAKjd,EAAE85B,QAAQ15B,EAAEmjC,GAAGvjC,EAAEE,EAAEE,GAAoD,CACzN,SAASojC,GAAGxjC,EAAEE,EAAEH,EAAEI,EAAEC,GAAG,GAAG,OAAOJ,EAAE,CAAC,IAAI7D,EAAE4D,EAAEQ,KAAK,MAAG,oBAAoBpE,GAAIsnC,GAAGtnC,SAAI,IAASA,EAAEW,cAAc,OAAOiD,EAAE6G,cAAS,IAAS7G,EAAEjD,eAAoDkD,EAAE64B,GAAG94B,EAAEQ,KAAK,KAAKJ,EAAED,EAAEA,EAAE23B,KAAKz3B,IAAKT,IAAIO,EAAEP,IAAIK,EAAEgd,OAAO9c,EAASA,EAAEqd,MAAMvd,IAArGE,EAAE0S,IAAI,GAAG1S,EAAEK,KAAKpE,EAAEunC,GAAG1jC,EAAEE,EAAE/D,EAAEgE,EAAEC,GAAyE,CAAW,GAAVjE,EAAE6D,EAAEud,MAAS,KAAKvd,EAAE85B,MAAM15B,GAAG,CAAC,IAAIH,EAAE9D,EAAE87B,cAA0C,IAAhBl4B,EAAE,QAAdA,EAAEA,EAAE6G,SAAmB7G,EAAEqtB,IAAQntB,EAAEE,IAAIH,EAAEL,MAAMO,EAAEP,IAAI,OAAO4jC,GAAGvjC,EAAEE,EAAEE,EAAE,CAA6C,OAA5CF,EAAE+c,OAAO,GAAEjd,EAAE24B,GAAGx8B,EAAEgE,IAAKR,IAAIO,EAAEP,IAAIK,EAAEgd,OAAO9c,EAASA,EAAEqd,MAAMvd,CAAC,CAC1b,SAAS0jC,GAAG1jC,EAAEE,EAAEH,EAAEI,EAAEC,GAAG,GAAG,OAAOJ,EAAE,CAAC,IAAI7D,EAAE6D,EAAEi4B,cAAc,GAAG7K,GAAGjxB,EAAEgE,IAAIH,EAAEL,MAAMO,EAAEP,IAAI,IAAGo6B,IAAG,EAAG75B,EAAEs3B,aAAar3B,EAAEhE,EAAE,KAAK6D,EAAE85B,MAAM15B,GAAsC,OAAOF,EAAE45B,MAAM95B,EAAE85B,MAAMyJ,GAAGvjC,EAAEE,EAAEE,GAAjE,KAAa,OAARJ,EAAEid,SAAgB8c,IAAG,EAAyC,EAAC,OAAO4J,GAAG3jC,EAAEE,EAAEH,EAAEI,EAAEC,EAAE,CACxN,SAASwjC,GAAG5jC,EAAEE,EAAEH,GAAG,IAAII,EAAED,EAAEs3B,aAAap3B,EAAED,EAAEgD,SAAShH,EAAE,OAAO6D,EAAEA,EAAEmd,cAAc,KAAK,GAAG,WAAWhd,EAAE03B,KAAK,GAAG,KAAY,EAAP33B,EAAE23B,MAAQ33B,EAAEid,cAAc,CAAC0mB,UAAU,EAAEC,UAAU,KAAKC,YAAY,MAAM3hC,GAAE4hC,GAAGC,IAAIA,IAAIlkC,MAAM,CAAC,GAAG,KAAO,WAAFA,GAAc,OAAOC,EAAE,OAAO7D,EAAEA,EAAE0nC,UAAU9jC,EAAEA,EAAEG,EAAE45B,MAAM55B,EAAEw5B,WAAW,WAAWx5B,EAAEid,cAAc,CAAC0mB,UAAU7jC,EAAE8jC,UAAU,KAAKC,YAAY,MAAM7jC,EAAEu6B,YAAY,KAAKr4B,GAAE4hC,GAAGC,IAAIA,IAAIjkC,EAAE,KAAKE,EAAEid,cAAc,CAAC0mB,UAAU,EAAEC,UAAU,KAAKC,YAAY,MAAM5jC,EAAE,OAAOhE,EAAEA,EAAE0nC,UAAU9jC,EAAEqC,GAAE4hC,GAAGC,IAAIA,IAAI9jC,CAAC,MAAM,OACtfhE,GAAGgE,EAAEhE,EAAE0nC,UAAU9jC,EAAEG,EAAEid,cAAc,MAAMhd,EAAEJ,EAAEqC,GAAE4hC,GAAGC,IAAIA,IAAI9jC,EAAc,OAAZkjC,GAAGrjC,EAAEE,EAAEE,EAAEL,GAAUG,EAAEqd,KAAK,CAAC,SAAS2mB,GAAGlkC,EAAEE,GAAG,IAAIH,EAAEG,EAAEP,KAAO,OAAOK,GAAG,OAAOD,GAAG,OAAOC,GAAGA,EAAEL,MAAMI,KAAEG,EAAE+c,OAAO,IAAI/c,EAAE+c,OAAO,QAAO,CAAC,SAAS0mB,GAAG3jC,EAAEE,EAAEH,EAAEI,EAAEC,GAAG,IAAIjE,EAAEm5B,GAAGv1B,GAAGk1B,GAAGxyB,GAAE/B,QAAmD,OAA3CvE,EAAE+4B,GAAGh1B,EAAE/D,GAAGw9B,GAAGz5B,EAAEE,GAAGL,EAAEm9B,GAAGl9B,EAAEE,EAAEH,EAAEI,EAAEhE,EAAEiE,GAAGD,EAAEo9B,KAAQ,OAAOv9B,GAAI+5B,IAA2En3B,IAAGzC,GAAG42B,GAAG72B,GAAGA,EAAE+c,OAAO,EAAEomB,GAAGrjC,EAAEE,EAAEH,EAAEK,GAAUF,EAAEqd,QAA7Grd,EAAEu6B,YAAYz6B,EAAEy6B,YAAYv6B,EAAE+c,QAAQ,KAAKjd,EAAE85B,QAAQ15B,EAAEmjC,GAAGvjC,EAAEE,EAAEE,GAAoD,CACla,SAAS+jC,GAAGnkC,EAAEE,EAAEH,EAAEI,EAAEC,GAAG,GAAGk1B,GAAGv1B,GAAG,CAAC,IAAI5D,GAAE,EAAGy5B,GAAG11B,EAAE,MAAM/D,GAAE,EAAW,GAARw9B,GAAGz5B,EAAEE,GAAM,OAAOF,EAAEub,UAAU2oB,GAAGpkC,EAAEE,GAAGkhC,GAAGlhC,EAAEH,EAAEI,GAAGuhC,GAAGxhC,EAAEH,EAAEI,EAAEC,GAAGD,GAAE,OAAQ,GAAG,OAAOH,EAAE,CAAC,IAAIC,EAAEC,EAAEub,UAAUpb,EAAEH,EAAE+3B,cAAch4B,EAAEO,MAAMH,EAAE,IAAIlB,EAAEc,EAAE+B,QAAQ1C,EAAES,EAAEshC,YAAY,kBAAkB/hC,GAAG,OAAOA,EAAEA,EAAE06B,GAAG16B,GAAyBA,EAAE41B,GAAGh1B,EAA1BZ,EAAEg2B,GAAGv1B,GAAGk1B,GAAGxyB,GAAE/B,SAAmB,IAAInB,EAAEQ,EAAE4hC,yBAAyB7hC,EAAE,oBAAoBP,GAAG,oBAAoBU,EAAE2hC,wBAAwB9hC,GAAG,oBAAoBG,EAAEwhC,kCAAkC,oBAAoBxhC,EAAEuhC,4BAC1dnhC,IAAIF,GAAGhB,IAAIG,IAAIiiC,GAAGrhC,EAAED,EAAEE,EAAEb,GAAGi7B,IAAG,EAAG,IAAIz5B,EAAEZ,EAAEid,cAAcld,EAAEqhC,MAAMxgC,EAAE06B,GAAGt7B,EAAEC,EAAEF,EAAEG,GAAGjB,EAAEe,EAAEid,cAAc9c,IAAIF,GAAGW,IAAI3B,GAAG61B,GAAGt0B,SAAS65B,IAAI,oBAAoBh7B,IAAIwhC,GAAG7gC,EAAEH,EAAER,EAAEY,GAAGhB,EAAEe,EAAEid,gBAAgB9c,EAAEk6B,IAAI2G,GAAGhhC,EAAEH,EAAEM,EAAEF,EAAEW,EAAE3B,EAAEG,KAAKQ,GAAG,oBAAoBG,EAAE4hC,2BAA2B,oBAAoB5hC,EAAE6hC,qBAAqB,oBAAoB7hC,EAAE6hC,oBAAoB7hC,EAAE6hC,qBAAqB,oBAAoB7hC,EAAE4hC,2BAA2B5hC,EAAE4hC,6BAA6B,oBAAoB5hC,EAAE8hC,oBAAoB7hC,EAAE+c,OAAO,WAClf,oBAAoBhd,EAAE8hC,oBAAoB7hC,EAAE+c,OAAO,SAAS/c,EAAE+3B,cAAc93B,EAAED,EAAEid,cAAche,GAAGc,EAAEO,MAAML,EAAEF,EAAEqhC,MAAMniC,EAAEc,EAAE+B,QAAQ1C,EAAEa,EAAEE,IAAI,oBAAoBJ,EAAE8hC,oBAAoB7hC,EAAE+c,OAAO,SAAS9c,GAAE,EAAG,KAAK,CAACF,EAAEC,EAAEub,UAAUuf,GAAGh7B,EAAEE,GAAGG,EAAEH,EAAE+3B,cAAc34B,EAAEY,EAAEK,OAAOL,EAAEuN,YAAYpN,EAAEygC,GAAG5gC,EAAEK,KAAKF,GAAGJ,EAAEO,MAAMlB,EAAEQ,EAAEI,EAAEs3B,aAAa12B,EAAEb,EAAE+B,QAAwB,kBAAhB7C,EAAEY,EAAEshC,cAAiC,OAAOliC,EAAEA,EAAE66B,GAAG76B,GAAyBA,EAAE+1B,GAAGh1B,EAA1Bf,EAAEm2B,GAAGv1B,GAAGk1B,GAAGxyB,GAAE/B,SAAmB,IAAIU,EAAErB,EAAE4hC,0BAA0BpiC,EAAE,oBAAoB6B,GAAG,oBAAoBnB,EAAE2hC,0BAC9e,oBAAoB3hC,EAAEwhC,kCAAkC,oBAAoBxhC,EAAEuhC,4BAA4BnhC,IAAIP,GAAGgB,IAAI3B,IAAIoiC,GAAGrhC,EAAED,EAAEE,EAAEhB,GAAGo7B,IAAG,EAAGz5B,EAAEZ,EAAEid,cAAcld,EAAEqhC,MAAMxgC,EAAE06B,GAAGt7B,EAAEC,EAAEF,EAAEG,GAAG,IAAIvC,EAAEqC,EAAEid,cAAc9c,IAAIP,GAAGgB,IAAIjD,GAAGm3B,GAAGt0B,SAAS65B,IAAI,oBAAoBn5B,IAAI2/B,GAAG7gC,EAAEH,EAAEqB,EAAEjB,GAAGtC,EAAEqC,EAAEid,gBAAgB7d,EAAEi7B,IAAI2G,GAAGhhC,EAAEH,EAAET,EAAEa,EAAEW,EAAEjD,EAAEsB,KAAI,IAAKI,GAAG,oBAAoBU,EAAEokC,4BAA4B,oBAAoBpkC,EAAEqkC,sBAAsB,oBAAoBrkC,EAAEqkC,qBAAqBrkC,EAAEqkC,oBAAoBnkC,EAAEtC,EAAEsB,GAAG,oBAAoBc,EAAEokC,4BAC5fpkC,EAAEokC,2BAA2BlkC,EAAEtC,EAAEsB,IAAI,oBAAoBc,EAAEskC,qBAAqBrkC,EAAE+c,OAAO,GAAG,oBAAoBhd,EAAE2hC,0BAA0B1hC,EAAE+c,OAAO,QAAQ,oBAAoBhd,EAAEskC,oBAAoBlkC,IAAIL,EAAEi4B,eAAen3B,IAAId,EAAEmd,gBAAgBjd,EAAE+c,OAAO,GAAG,oBAAoBhd,EAAE2hC,yBAAyBvhC,IAAIL,EAAEi4B,eAAen3B,IAAId,EAAEmd,gBAAgBjd,EAAE+c,OAAO,MAAM/c,EAAE+3B,cAAc93B,EAAED,EAAEid,cAActf,GAAGoC,EAAEO,MAAML,EAAEF,EAAEqhC,MAAMzjC,EAAEoC,EAAE+B,QAAQ7C,EAAEgB,EAAEb,IAAI,oBAAoBW,EAAEskC,oBAAoBlkC,IAAIL,EAAEi4B,eAAen3B,IACjfd,EAAEmd,gBAAgBjd,EAAE+c,OAAO,GAAG,oBAAoBhd,EAAE2hC,yBAAyBvhC,IAAIL,EAAEi4B,eAAen3B,IAAId,EAAEmd,gBAAgBjd,EAAE+c,OAAO,MAAM9c,GAAE,EAAG,CAAC,OAAOqkC,GAAGxkC,EAAEE,EAAEH,EAAEI,EAAEhE,EAAEiE,EAAE,CACnK,SAASokC,GAAGxkC,EAAEE,EAAEH,EAAEI,EAAEC,EAAEjE,GAAG+nC,GAAGlkC,EAAEE,GAAG,IAAID,EAAE,KAAa,IAARC,EAAE+c,OAAW,IAAI9c,IAAIF,EAAE,OAAOG,GAAG01B,GAAG51B,EAAEH,GAAE,GAAIwjC,GAAGvjC,EAAEE,EAAE/D,GAAGgE,EAAED,EAAEub,UAAU2nB,GAAG1iC,QAAQR,EAAE,IAAIG,EAAEJ,GAAG,oBAAoBF,EAAE4iC,yBAAyB,KAAKxiC,EAAEmG,SAAwI,OAA/HpG,EAAE+c,OAAO,EAAE,OAAOjd,GAAGC,GAAGC,EAAEqd,MAAM0b,GAAG/4B,EAAEF,EAAEud,MAAM,KAAKphB,GAAG+D,EAAEqd,MAAM0b,GAAG/4B,EAAE,KAAKG,EAAElE,IAAIknC,GAAGrjC,EAAEE,EAAEG,EAAElE,GAAG+D,EAAEid,cAAchd,EAAEmhC,MAAMlhC,GAAG01B,GAAG51B,EAAEH,GAAE,GAAWG,EAAEqd,KAAK,CAAC,SAASknB,GAAGzkC,GAAG,IAAIE,EAAEF,EAAEyb,UAAUvb,EAAEwkC,eAAejP,GAAGz1B,EAAEE,EAAEwkC,eAAexkC,EAAEwkC,iBAAiBxkC,EAAE8B,SAAS9B,EAAE8B,SAASyzB,GAAGz1B,EAAEE,EAAE8B,SAAQ,GAAIg6B,GAAGh8B,EAAEE,EAAEwhB,cAAc,CAC5e,SAASijB,GAAG3kC,EAAEE,EAAEH,EAAEI,EAAEC,GAAuC,OAApC+3B,KAAKC,GAAGh4B,GAAGF,EAAE+c,OAAO,IAAIomB,GAAGrjC,EAAEE,EAAEH,EAAEI,GAAUD,EAAEqd,KAAK,CAAC,IAaqLqnB,GAAGC,GAAGC,GAAGC,GAb1LC,GAAG,CAAC5nB,WAAW,KAAKsa,YAAY,KAAKC,UAAU,GAAG,SAASsN,GAAGjlC,GAAG,MAAM,CAAC6jC,UAAU7jC,EAAE8jC,UAAU,KAAKC,YAAY,KAAK,CAClM,SAASmB,GAAGllC,EAAEE,EAAEH,GAAG,IAA0DM,EAAtDF,EAAED,EAAEs3B,aAAap3B,EAAE6C,GAAEvC,QAAQvE,GAAE,EAAG8D,EAAE,KAAa,IAARC,EAAE+c,OAAqJ,IAAvI5c,EAAEJ,KAAKI,GAAE,OAAOL,GAAG,OAAOA,EAAEmd,gBAAiB,KAAO,EAAF/c,IAASC,GAAElE,GAAE,EAAG+D,EAAE+c,QAAQ,KAAY,OAAOjd,GAAG,OAAOA,EAAEmd,gBAAc/c,GAAG,GAAEgC,GAAEa,GAAI,EAAF7C,GAAQ,OAAOJ,EAA2B,OAAxB83B,GAAG53B,GAAwB,QAArBF,EAAEE,EAAEid,gBAA2C,QAAfnd,EAAEA,EAAEod,aAA4B,KAAY,EAAPld,EAAE23B,MAAQ33B,EAAE45B,MAAM,EAAE,OAAO95B,EAAE+mB,KAAK7mB,EAAE45B,MAAM,EAAE55B,EAAE45B,MAAM,WAAW,OAAK75B,EAAEE,EAAEgD,SAASnD,EAAEG,EAAEglC,SAAgBhpC,GAAGgE,EAAED,EAAE23B,KAAK17B,EAAE+D,EAAEqd,MAAMtd,EAAE,CAAC43B,KAAK,SAAS10B,SAASlD,GAAG,KAAO,EAAFE,IAAM,OAAOhE,GAAGA,EAAEu9B,WAAW,EAAEv9B,EAAEq7B,aAC7ev3B,GAAG9D,EAAEipC,GAAGnlC,EAAEE,EAAE,EAAE,MAAMH,EAAEg5B,GAAGh5B,EAAEG,EAAEJ,EAAE,MAAM5D,EAAE6gB,OAAO9c,EAAEF,EAAEgd,OAAO9c,EAAE/D,EAAEqhB,QAAQxd,EAAEE,EAAEqd,MAAMphB,EAAE+D,EAAEqd,MAAMJ,cAAc8nB,GAAGllC,GAAGG,EAAEid,cAAc6nB,GAAGhlC,GAAGqlC,GAAGnlC,EAAED,IAAqB,GAAG,QAArBG,EAAEJ,EAAEmd,gBAA2C,QAAf9c,EAAED,EAAEgd,YAAqB,OAGpM,SAAYpd,EAAEE,EAAEH,EAAEI,EAAEC,EAAEjE,EAAE8D,GAAG,GAAGF,EAAG,OAAW,IAARG,EAAE+c,OAAiB/c,EAAE+c,QAAQ,IAAwBqoB,GAAGtlC,EAAEE,EAAED,EAA3BE,EAAEgiC,GAAG5/B,MAAM7C,EAAE,SAAsB,OAAOQ,EAAEid,eAAqBjd,EAAEqd,MAAMvd,EAAEud,MAAMrd,EAAE+c,OAAO,IAAI,OAAK9gB,EAAEgE,EAAEglC,SAAS/kC,EAAEF,EAAE23B,KAAK13B,EAAEilC,GAAG,CAACvN,KAAK,UAAU10B,SAAShD,EAAEgD,UAAU/C,EAAE,EAAE,OAAMjE,EAAE68B,GAAG78B,EAAEiE,EAAEH,EAAE,OAAQgd,OAAO,EAAE9c,EAAE6c,OAAO9c,EAAE/D,EAAE6gB,OAAO9c,EAAEC,EAAEqd,QAAQrhB,EAAE+D,EAAEqd,MAAMpd,EAAE,KAAY,EAAPD,EAAE23B,OAASoB,GAAG/4B,EAAEF,EAAEud,MAAM,KAAKtd,GAAGC,EAAEqd,MAAMJ,cAAc8nB,GAAGhlC,GAAGC,EAAEid,cAAc6nB,GAAU7oC,GAAE,GAAG,KAAY,EAAP+D,EAAE23B,MAAQ,OAAOyN,GAAGtlC,EAAEE,EAAED,EAAE,MAAM,GAAG,OAAOG,EAAE2mB,KAAK,CAChd,GADid5mB,EAAEC,EAAEmtB,aAAantB,EAAEmtB,YAAYgY,QAC3e,IAAIllC,EAAEF,EAAEqlC,KAA0C,OAArCrlC,EAAEE,EAA0CilC,GAAGtlC,EAAEE,EAAED,EAA/BE,EAAEgiC,GAAlBhmC,EAAEoG,MAAM7C,EAAE,MAAaS,OAAE,GAA0B,CAAwB,GAAvBE,EAAE,KAAKJ,EAAED,EAAE05B,YAAeK,IAAI15B,EAAE,CAAK,GAAG,QAAPF,EAAEmD,IAAc,CAAC,OAAOrD,GAAGA,GAAG,KAAK,EAAEG,EAAE,EAAE,MAAM,KAAK,GAAGA,EAAE,EAAE,MAAM,KAAK,GAAG,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,SAAS,KAAK,SAAS,KAAK,SAASA,EAAE,GAAG,MAAM,KAAK,UAAUA,EAAE,UAAU,MAAM,QAAQA,EAAE,EAChd,KADkdA,EAAE,KAAKA,GAAGD,EAAE+e,eAAejf,IAAI,EAAEG,IAC5eA,IAAIjE,EAAEw7B,YAAYx7B,EAAEw7B,UAAUv3B,EAAEk6B,GAAGt6B,EAAEI,GAAG6+B,GAAG9+B,EAAEH,EAAEI,GAAG,GAAG,CAA0B,OAAzBqlC,KAAgCH,GAAGtlC,EAAEE,EAAED,EAAlCE,EAAEgiC,GAAG5/B,MAAM7C,EAAE,OAAyB,CAAC,MAAG,OAAOU,EAAE2mB,MAAY7mB,EAAE+c,OAAO,IAAI/c,EAAEqd,MAAMvd,EAAEud,MAAMrd,EAAEwlC,GAAGv/B,KAAK,KAAKnG,GAAGI,EAAEulC,YAAYzlC,EAAE,OAAKF,EAAE7D,EAAEu7B,YAAYR,GAAG9C,GAAGh0B,EAAEmtB,aAAa0J,GAAG/2B,EAAE0C,IAAE,EAAGu0B,GAAG,KAAK,OAAOn3B,IAAIw2B,GAAGC,MAAME,GAAGH,GAAGC,MAAMG,GAAGJ,GAAGC,MAAMC,GAAGC,GAAG32B,EAAEiI,GAAG2uB,GAAG52B,EAAEy3B,SAASf,GAAGx2B,GAAGA,EAAEmlC,GAAGnlC,EAAEC,EAAEgD,UAAUjD,EAAE+c,OAAO,KAAY/c,EAAC,CALrK0lC,CAAG5lC,EAAEE,EAAED,EAAEE,EAAEE,EAAED,EAAEL,GAAG,GAAG5D,EAAE,CAACA,EAAEgE,EAAEglC,SAASllC,EAAEC,EAAE23B,KAAex3B,GAAVD,EAAEJ,EAAEud,OAAUC,QAAQ,IAAIre,EAAE,CAAC04B,KAAK,SAAS10B,SAAShD,EAAEgD,UAChF,OAD0F,KAAO,EAAFlD,IAAMC,EAAEqd,QAAQnd,IAAGD,EAAED,EAAEqd,OAAQmc,WAAW,EAAEv5B,EAAEq3B,aAAar4B,EAAEe,EAAEo3B,UAAU,OAAOn3B,EAAEw4B,GAAGv4B,EAAEjB,IAAK0mC,aAA4B,SAAfzlC,EAAEylC,aAAuB,OAAOxlC,EAAElE,EAAEw8B,GAAGt4B,EAAElE,IAAIA,EAAE68B,GAAG78B,EAAE8D,EAAEF,EAAE,OAAQkd,OAAO,EAAG9gB,EAAE6gB,OACnf9c,EAAEC,EAAE6c,OAAO9c,EAAEC,EAAEqd,QAAQrhB,EAAE+D,EAAEqd,MAAMpd,EAAEA,EAAEhE,EAAEA,EAAE+D,EAAEqd,MAA8Btd,EAAE,QAA1BA,EAAED,EAAEud,MAAMJ,eAAyB8nB,GAAGllC,GAAG,CAAC8jC,UAAU5jC,EAAE4jC,UAAU9jC,EAAE+jC,UAAU,KAAKC,YAAY9jC,EAAE8jC,aAAa5nC,EAAEghB,cAAcld,EAAE9D,EAAEu9B,WAAW15B,EAAE05B,YAAY35B,EAAEG,EAAEid,cAAc6nB,GAAU7kC,CAAC,CAAoO,OAAzNH,GAAV7D,EAAE6D,EAAEud,OAAUC,QAAQrd,EAAEw4B,GAAGx8B,EAAE,CAAC07B,KAAK,UAAU10B,SAAShD,EAAEgD,WAAW,KAAY,EAAPjD,EAAE23B,QAAU13B,EAAE25B,MAAM/5B,GAAGI,EAAE6c,OAAO9c,EAAEC,EAAEqd,QAAQ,KAAK,OAAOxd,IAAkB,QAAdD,EAAEG,EAAEo3B,YAAoBp3B,EAAEo3B,UAAU,CAACt3B,GAAGE,EAAE+c,OAAO,IAAIld,EAAE6D,KAAK5D,IAAIE,EAAEqd,MAAMpd,EAAED,EAAEid,cAAc,KAAYhd,CAAC,CACnd,SAASklC,GAAGrlC,EAAEE,GAA8D,OAA3DA,EAAEklC,GAAG,CAACvN,KAAK,UAAU10B,SAASjD,GAAGF,EAAE63B,KAAK,EAAE,OAAQ7a,OAAOhd,EAASA,EAAEud,MAAMrd,CAAC,CAAC,SAASolC,GAAGtlC,EAAEE,EAAEH,EAAEI,GAAwG,OAArG,OAAOA,GAAGi4B,GAAGj4B,GAAG84B,GAAG/4B,EAAEF,EAAEud,MAAM,KAAKxd,IAAGC,EAAEqlC,GAAGnlC,EAAEA,EAAEs3B,aAAar0B,WAAY8Z,OAAO,EAAE/c,EAAEid,cAAc,KAAYnd,CAAC,CAGkJ,SAAS8lC,GAAG9lC,EAAEE,EAAEH,GAAGC,EAAE85B,OAAO55B,EAAE,IAAIC,EAAEH,EAAE+c,UAAU,OAAO5c,IAAIA,EAAE25B,OAAO55B,GAAGu5B,GAAGz5B,EAAEgd,OAAO9c,EAAEH,EAAE,CACxc,SAASgmC,GAAG/lC,EAAEE,EAAEH,EAAEI,EAAEC,GAAG,IAAIjE,EAAE6D,EAAEmd,cAAc,OAAOhhB,EAAE6D,EAAEmd,cAAc,CAAC6oB,YAAY9lC,EAAE+lC,UAAU,KAAKC,mBAAmB,EAAEC,KAAKhmC,EAAEimC,KAAKrmC,EAAEsmC,SAASjmC,IAAIjE,EAAE6pC,YAAY9lC,EAAE/D,EAAE8pC,UAAU,KAAK9pC,EAAE+pC,mBAAmB,EAAE/pC,EAAEgqC,KAAKhmC,EAAEhE,EAAEiqC,KAAKrmC,EAAE5D,EAAEkqC,SAASjmC,EAAE,CAC3O,SAASkmC,GAAGtmC,EAAEE,EAAEH,GAAG,IAAII,EAAED,EAAEs3B,aAAap3B,EAAED,EAAEm8B,YAAYngC,EAAEgE,EAAEimC,KAAsC,GAAjC/C,GAAGrjC,EAAEE,EAAEC,EAAEgD,SAASpD,GAAkB,KAAO,GAAtBI,EAAE8C,GAAEvC,UAAqBP,EAAI,EAAFA,EAAI,EAAED,EAAE+c,OAAO,QAAQ,CAAC,GAAG,OAAOjd,GAAG,KAAa,IAARA,EAAEid,OAAWjd,EAAE,IAAIA,EAAEE,EAAEqd,MAAM,OAAOvd,GAAG,CAAC,GAAG,KAAKA,EAAE4S,IAAI,OAAO5S,EAAEmd,eAAe2oB,GAAG9lC,EAAED,EAAEG,QAAQ,GAAG,KAAKF,EAAE4S,IAAIkzB,GAAG9lC,EAAED,EAAEG,QAAQ,GAAG,OAAOF,EAAEud,MAAM,CAACvd,EAAEud,MAAMP,OAAOhd,EAAEA,EAAEA,EAAEud,MAAM,QAAQ,CAAC,GAAGvd,IAAIE,EAAE,MAAMF,EAAE,KAAK,OAAOA,EAAEwd,SAAS,CAAC,GAAG,OAAOxd,EAAEgd,QAAQhd,EAAEgd,SAAS9c,EAAE,MAAMF,EAAEA,EAAEA,EAAEgd,MAAM,CAAChd,EAAEwd,QAAQR,OAAOhd,EAAEgd,OAAOhd,EAAEA,EAAEwd,OAAO,CAACrd,GAAG,CAAC,CAAQ,GAAPiC,GAAEa,GAAE9C,GAAM,KAAY,EAAPD,EAAE23B,MAAQ33B,EAAEid,cAC/e,UAAU,OAAO/c,GAAG,IAAK,WAAqB,IAAVL,EAAEG,EAAEqd,MAAUnd,EAAE,KAAK,OAAOL,GAAiB,QAAdC,EAAED,EAAEgd,YAAoB,OAAOsf,GAAGr8B,KAAKI,EAAEL,GAAGA,EAAEA,EAAEyd,QAAY,QAAJzd,EAAEK,IAAYA,EAAEF,EAAEqd,MAAMrd,EAAEqd,MAAM,OAAOnd,EAAEL,EAAEyd,QAAQzd,EAAEyd,QAAQ,MAAMuoB,GAAG7lC,GAAE,EAAGE,EAAEL,EAAE5D,GAAG,MAAM,IAAK,YAA6B,IAAjB4D,EAAE,KAAKK,EAAEF,EAAEqd,MAAUrd,EAAEqd,MAAM,KAAK,OAAOnd,GAAG,CAAe,GAAG,QAAjBJ,EAAEI,EAAE2c,YAAuB,OAAOsf,GAAGr8B,GAAG,CAACE,EAAEqd,MAAMnd,EAAE,KAAK,CAACJ,EAAEI,EAAEod,QAAQpd,EAAEod,QAAQzd,EAAEA,EAAEK,EAAEA,EAAEJ,CAAC,CAAC+lC,GAAG7lC,GAAE,EAAGH,EAAE,KAAK5D,GAAG,MAAM,IAAK,WAAW4pC,GAAG7lC,GAAE,EAAG,KAAK,UAAK,GAAQ,MAAM,QAAQA,EAAEid,cAAc,KAAK,OAAOjd,EAAEqd,KAAK,CAC7d,SAAS6mB,GAAGpkC,EAAEE,GAAG,KAAY,EAAPA,EAAE23B,OAAS,OAAO73B,IAAIA,EAAE+c,UAAU,KAAK7c,EAAE6c,UAAU,KAAK7c,EAAE+c,OAAO,EAAE,CAAC,SAASsmB,GAAGvjC,EAAEE,EAAEH,GAAyD,GAAtD,OAAOC,IAAIE,EAAE05B,aAAa55B,EAAE45B,cAAc6B,IAAIv7B,EAAE45B,MAAS,KAAK/5B,EAAEG,EAAEw5B,YAAY,OAAO,KAAK,GAAG,OAAO15B,GAAGE,EAAEqd,QAAQvd,EAAEud,MAAM,MAAMhb,MAAM7C,EAAE,MAAM,GAAG,OAAOQ,EAAEqd,MAAM,CAA4C,IAAjCxd,EAAE44B,GAAZ34B,EAAEE,EAAEqd,MAAavd,EAAEw3B,cAAct3B,EAAEqd,MAAMxd,EAAMA,EAAEid,OAAO9c,EAAE,OAAOF,EAAEwd,SAASxd,EAAEA,EAAEwd,SAAQzd,EAAEA,EAAEyd,QAAQmb,GAAG34B,EAAEA,EAAEw3B,eAAgBxa,OAAO9c,EAAEH,EAAEyd,QAAQ,IAAI,CAAC,OAAOtd,EAAEqd,KAAK,CAO9a,SAASgpB,GAAGvmC,EAAEE,GAAG,IAAI0C,GAAE,OAAO5C,EAAEqmC,UAAU,IAAK,SAASnmC,EAAEF,EAAEomC,KAAK,IAAI,IAAIrmC,EAAE,KAAK,OAAOG,GAAG,OAAOA,EAAE6c,YAAYhd,EAAEG,GAAGA,EAAEA,EAAEsd,QAAQ,OAAOzd,EAAEC,EAAEomC,KAAK,KAAKrmC,EAAEyd,QAAQ,KAAK,MAAM,IAAK,YAAYzd,EAAEC,EAAEomC,KAAK,IAAI,IAAIjmC,EAAE,KAAK,OAAOJ,GAAG,OAAOA,EAAEgd,YAAY5c,EAAEJ,GAAGA,EAAEA,EAAEyd,QAAQ,OAAOrd,EAAED,GAAG,OAAOF,EAAEomC,KAAKpmC,EAAEomC,KAAK,KAAKpmC,EAAEomC,KAAK5oB,QAAQ,KAAKrd,EAAEqd,QAAQ,KAAK,CAC5U,SAASxZ,GAAEhE,GAAG,IAAIE,EAAE,OAAOF,EAAE+c,WAAW/c,EAAE+c,UAAUQ,QAAQvd,EAAEud,MAAMxd,EAAE,EAAEI,EAAE,EAAE,GAAGD,EAAE,IAAI,IAAIE,EAAEJ,EAAEud,MAAM,OAAOnd,GAAGL,GAAGK,EAAE05B,MAAM15B,EAAEs5B,WAAWv5B,GAAkB,SAAfC,EAAEylC,aAAsB1lC,GAAW,SAARC,EAAE6c,MAAe7c,EAAE4c,OAAOhd,EAAEI,EAAEA,EAAEod,aAAa,IAAIpd,EAAEJ,EAAEud,MAAM,OAAOnd,GAAGL,GAAGK,EAAE05B,MAAM15B,EAAEs5B,WAAWv5B,GAAGC,EAAEylC,aAAa1lC,GAAGC,EAAE6c,MAAM7c,EAAE4c,OAAOhd,EAAEI,EAAEA,EAAEod,QAAyC,OAAjCxd,EAAE6lC,cAAc1lC,EAAEH,EAAE05B,WAAW35B,EAASG,CAAC,CAC7V,SAASsmC,GAAGxmC,EAAEE,EAAEH,GAAG,IAAII,EAAED,EAAEs3B,aAAmB,OAANR,GAAG92B,GAAUA,EAAE0S,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,OAAO5O,GAAE9D,GAAG,KAAK,KAAK,EAUtD,KAAK,GAAG,OAAOo1B,GAAGp1B,EAAEK,OAAOi1B,KAAKxxB,GAAE9D,GAAG,KAVqD,KAAK,EAA2Q,OAAzQC,EAAED,EAAEub,UAAUygB,KAAKp6B,GAAEkzB,IAAIlzB,GAAEW,IAAG+5B,KAAKr8B,EAAEukC,iBAAiBvkC,EAAE6B,QAAQ7B,EAAEukC,eAAevkC,EAAEukC,eAAe,MAAS,OAAO1kC,GAAG,OAAOA,EAAEud,QAAMya,GAAG93B,GAAGA,EAAE+c,OAAO,EAAE,OAAOjd,GAAGA,EAAEmd,cAAcsE,cAAc,KAAa,IAARvhB,EAAE+c,SAAa/c,EAAE+c,OAAO,KAAK,OAAOka,KAAKsP,GAAGtP,IAAIA,GAAG,QAAO0N,GAAG7kC,EAAEE,GAAG8D,GAAE9D,GAAU,KAAK,KAAK,EAAEk8B,GAAGl8B,GAAG,IAAIE,EAAE27B,GAAGD,GAAGp7B,SAC7e,GAATX,EAAEG,EAAEK,KAAQ,OAAOP,GAAG,MAAME,EAAEub,UAAUqpB,GAAG9kC,EAAEE,EAAEH,EAAEI,EAAEC,GAAGJ,EAAEL,MAAMO,EAAEP,MAAMO,EAAE+c,OAAO,IAAI/c,EAAE+c,OAAO,aAAa,CAAC,IAAI9c,EAAE,CAAC,GAAG,OAAOD,EAAEub,UAAU,MAAMlZ,MAAM7C,EAAE,MAAW,OAALsE,GAAE9D,GAAU,IAAI,CAAkB,GAAjBF,EAAE+7B,GAAGH,GAAGl7B,SAAYs3B,GAAG93B,GAAG,CAACC,EAAED,EAAEub,UAAU1b,EAAEG,EAAEK,KAAK,IAAIpE,EAAE+D,EAAE+3B,cAA+C,OAAjC93B,EAAEq0B,IAAIt0B,EAAEC,EAAEs0B,IAAIt4B,EAAE6D,EAAE,KAAY,EAAPE,EAAE23B,MAAe93B,GAAG,IAAK,SAAS8B,GAAE,SAAS1B,GAAG0B,GAAE,QAAQ1B,GAAG,MAAM,IAAK,SAAS,IAAK,SAAS,IAAK,QAAQ0B,GAAE,OAAO1B,GAAG,MAAM,IAAK,QAAQ,IAAK,QAAQ,IAAIC,EAAE,EAAEA,EAAEixB,GAAGpyB,OAAOmB,IAAIyB,GAAEwvB,GAAGjxB,GAAGD,GAAG,MAAM,IAAK,SAAS0B,GAAE,QAAQ1B,GAAG,MAAM,IAAK,MAAM,IAAK,QAAQ,IAAK,OAAO0B,GAAE,QACnhB1B,GAAG0B,GAAE,OAAO1B,GAAG,MAAM,IAAK,UAAU0B,GAAE,SAAS1B,GAAG,MAAM,IAAK,QAAQmU,EAAGnU,EAAEhE,GAAG0F,GAAE,UAAU1B,GAAG,MAAM,IAAK,SAASA,EAAEiU,cAAc,CAACsyB,cAAcvqC,EAAEwqC,UAAU9kC,GAAE,UAAU1B,GAAG,MAAM,IAAK,WAAWmV,GAAGnV,EAAEhE,GAAG0F,GAAE,UAAU1B,GAAkB,IAAI,IAAIF,KAAvB2a,GAAG7a,EAAE5D,GAAGiE,EAAE,KAAkBjE,EAAE,GAAGA,EAAEe,eAAe+C,GAAG,CAAC,IAAII,EAAElE,EAAE8D,GAAG,aAAaA,EAAE,kBAAkBI,EAAEF,EAAEsV,cAAcpV,KAAI,IAAKlE,EAAEyqC,0BAA0BxT,GAAGjzB,EAAEsV,YAAYpV,EAAEL,GAAGI,EAAE,CAAC,WAAWC,IAAI,kBAAkBA,GAAGF,EAAEsV,cAAc,GAAGpV,KAAI,IAAKlE,EAAEyqC,0BAA0BxT,GAAGjzB,EAAEsV,YAC1epV,EAAEL,GAAGI,EAAE,CAAC,WAAW,GAAGC,IAAIyO,EAAG5R,eAAe+C,IAAI,MAAMI,GAAG,aAAaJ,GAAG4B,GAAE,SAAS1B,EAAE,CAAC,OAAOJ,GAAG,IAAK,QAAQmT,EAAG/S,GAAGyU,EAAGzU,EAAEhE,GAAE,GAAI,MAAM,IAAK,WAAW+W,EAAG/S,GAAGqV,GAAGrV,GAAG,MAAM,IAAK,SAAS,IAAK,SAAS,MAAM,QAAQ,oBAAoBhE,EAAE0qC,UAAU1mC,EAAE2mC,QAAQzT,IAAIlzB,EAAEC,EAAEF,EAAEu6B,YAAYt6B,EAAE,OAAOA,IAAID,EAAE+c,OAAO,EAAE,KAAK,CAAChd,EAAE,IAAIG,EAAEoW,SAASpW,EAAEA,EAAEyU,cAAc,iCAAiC7U,IAAIA,EAAE0V,GAAG3V,IAAI,iCAAiCC,EAAE,WAAWD,IAAGC,EAAEC,EAAEpF,cAAc,QAASkb,UAAU,qBAAuB/V,EAAEA,EAAEkW,YAAYlW,EAAEiW,aAC/f,kBAAkB9V,EAAE2a,GAAG9a,EAAEC,EAAEpF,cAAckF,EAAE,CAAC+a,GAAG3a,EAAE2a,MAAM9a,EAAEC,EAAEpF,cAAckF,GAAG,WAAWA,IAAIE,EAAED,EAAEG,EAAEwmC,SAAS1mC,EAAE0mC,UAAS,EAAGxmC,EAAE4mC,OAAO9mC,EAAE8mC,KAAK5mC,EAAE4mC,QAAQ/mC,EAAEC,EAAE+mC,gBAAgBhnC,EAAED,GAAGC,EAAEw0B,IAAIt0B,EAAEF,EAAEy0B,IAAIt0B,EAAEykC,GAAG5kC,EAAEE,GAAE,GAAG,GAAIA,EAAEub,UAAUzb,EAAEA,EAAE,CAAW,OAAVC,EAAE4a,GAAG9a,EAAEI,GAAUJ,GAAG,IAAK,SAAS8B,GAAE,SAAS7B,GAAG6B,GAAE,QAAQ7B,GAAGI,EAAED,EAAE,MAAM,IAAK,SAAS,IAAK,SAAS,IAAK,QAAQ0B,GAAE,OAAO7B,GAAGI,EAAED,EAAE,MAAM,IAAK,QAAQ,IAAK,QAAQ,IAAIC,EAAE,EAAEA,EAAEixB,GAAGpyB,OAAOmB,IAAIyB,GAAEwvB,GAAGjxB,GAAGJ,GAAGI,EAAED,EAAE,MAAM,IAAK,SAAS0B,GAAE,QAAQ7B,GAAGI,EAAED,EAAE,MAAM,IAAK,MAAM,IAAK,QAAQ,IAAK,OAAO0B,GAAE,QAClf7B,GAAG6B,GAAE,OAAO7B,GAAGI,EAAED,EAAE,MAAM,IAAK,UAAU0B,GAAE,SAAS7B,GAAGI,EAAED,EAAE,MAAM,IAAK,QAAQmU,EAAGtU,EAAEG,GAAGC,EAAE6T,EAAGjU,EAAEG,GAAG0B,GAAE,UAAU7B,GAAG,MAAM,IAAK,SAAiL,QAAQI,EAAED,QAAxK,IAAK,SAASH,EAAEoU,cAAc,CAACsyB,cAAcvmC,EAAEwmC,UAAUvmC,EAAEyD,EAAE,CAAC,EAAE1D,EAAE,CAAC9D,WAAM,IAASwF,GAAE,UAAU7B,GAAG,MAAM,IAAK,WAAWsV,GAAGtV,EAAEG,GAAGC,EAAEgV,GAAGpV,EAAEG,GAAG0B,GAAE,UAAU7B,GAAiC,IAAI7D,KAAhBye,GAAG7a,EAAEK,GAAGC,EAAED,EAAa,GAAGC,EAAEnD,eAAef,GAAG,CAAC,IAAIgD,EAAEkB,EAAElE,GAAG,UAAUA,EAAEod,GAAGvZ,EAAEb,GAAG,4BAA4BhD,EAAuB,OAApBgD,EAAEA,EAAEA,EAAEs0B,YAAO,IAAgB5d,GAAG7V,EAAEb,GAAI,aAAahD,EAAE,kBAAkBgD,GAAG,aAC7eY,GAAG,KAAKZ,IAAImX,GAAGtW,EAAEb,GAAG,kBAAkBA,GAAGmX,GAAGtW,EAAE,GAAGb,GAAG,mCAAmChD,GAAG,6BAA6BA,GAAG,cAAcA,IAAI2S,EAAG5R,eAAef,GAAG,MAAMgD,GAAG,aAAahD,GAAG0F,GAAE,SAAS7B,GAAG,MAAMb,GAAGiR,EAAGpQ,EAAE7D,EAAEgD,EAAEc,GAAG,CAAC,OAAOF,GAAG,IAAK,QAAQmT,EAAGlT,GAAG4U,EAAG5U,EAAEG,GAAE,GAAI,MAAM,IAAK,WAAW+S,EAAGlT,GAAGwV,GAAGxV,GAAG,MAAM,IAAK,SAAS,MAAMG,EAAE9D,OAAO2D,EAAE2Q,aAAa,QAAQ,GAAGoC,EAAG5S,EAAE9D,QAAQ,MAAM,IAAK,SAAS2D,EAAE2mC,WAAWxmC,EAAEwmC,SAAmB,OAAVxqC,EAAEgE,EAAE9D,OAAc0Y,GAAG/U,IAAIG,EAAEwmC,SAASxqC,GAAE,GAAI,MAAMgE,EAAEgU,cAAcY,GAAG/U,IAAIG,EAAEwmC,SAASxmC,EAAEgU,cAClf,GAAI,MAAM,QAAQ,oBAAoB/T,EAAEymC,UAAU7mC,EAAE8mC,QAAQzT,IAAI,OAAOtzB,GAAG,IAAK,SAAS,IAAK,QAAQ,IAAK,SAAS,IAAK,WAAWI,IAAIA,EAAE8mC,UAAU,MAAMjnC,EAAE,IAAK,MAAMG,GAAE,EAAG,MAAMH,EAAE,QAAQG,GAAE,EAAG,CAACA,IAAID,EAAE+c,OAAO,EAAE,CAAC,OAAO/c,EAAEP,MAAMO,EAAE+c,OAAO,IAAI/c,EAAE+c,OAAO,QAAQ,CAAM,OAALjZ,GAAE9D,GAAU,KAAK,KAAK,EAAE,GAAGF,GAAG,MAAME,EAAEub,UAAUspB,GAAG/kC,EAAEE,EAAEF,EAAEi4B,cAAc93B,OAAO,CAAC,GAAG,kBAAkBA,GAAG,OAAOD,EAAEub,UAAU,MAAMlZ,MAAM7C,EAAE,MAAsC,GAAhCK,EAAEg8B,GAAGD,GAAGp7B,SAASq7B,GAAGH,GAAGl7B,SAAYs3B,GAAG93B,GAAG,CAAyC,GAAxCC,EAAED,EAAEub,UAAU1b,EAAEG,EAAE+3B,cAAc93B,EAAEq0B,IAAIt0B,GAAK/D,EAAEgE,EAAEsW,YAAY1W,IAC/e,QADofC,EACvfi3B,IAAY,OAAOj3B,EAAE4S,KAAK,KAAK,EAAEwgB,GAAGjzB,EAAEsW,UAAU1W,EAAE,KAAY,EAAPC,EAAE63B,OAAS,MAAM,KAAK,GAAE,IAAK73B,EAAEi4B,cAAc2O,0BAA0BxT,GAAGjzB,EAAEsW,UAAU1W,EAAE,KAAY,EAAPC,EAAE63B,OAAS17B,IAAI+D,EAAE+c,OAAO,EAAE,MAAM9c,GAAG,IAAIJ,EAAEyW,SAASzW,EAAEA,EAAE8U,eAAeqyB,eAAe/mC,IAAKq0B,IAAIt0B,EAAEA,EAAEub,UAAUtb,CAAC,CAAM,OAAL6D,GAAE9D,GAAU,KAAK,KAAK,GAA0B,GAAvB4B,GAAEmB,IAAG9C,EAAED,EAAEid,cAAiB,OAAOnd,GAAG,OAAOA,EAAEmd,eAAe,OAAOnd,EAAEmd,cAAcC,WAAW,CAAC,GAAGxa,IAAG,OAAOs0B,IAAI,KAAY,EAAPh3B,EAAE23B,OAAS,KAAa,IAAR33B,EAAE+c,OAAWib,KAAKC,KAAKj4B,EAAE+c,OAAO,MAAM9gB,GAAE,OAAQ,GAAGA,EAAE67B,GAAG93B,GAAG,OAAOC,GAAG,OAAOA,EAAEid,WAAW,CAAC,GAAG,OAC5fpd,EAAE,CAAC,IAAI7D,EAAE,MAAMoG,MAAM7C,EAAE,MAAqD,KAA7BvD,EAAE,QAApBA,EAAE+D,EAAEid,eAAyBhhB,EAAEihB,WAAW,MAAW,MAAM7a,MAAM7C,EAAE,MAAMvD,EAAEq4B,IAAIt0B,CAAC,MAAMi4B,KAAK,KAAa,IAARj4B,EAAE+c,SAAa/c,EAAEid,cAAc,MAAMjd,EAAE+c,OAAO,EAAEjZ,GAAE9D,GAAG/D,GAAE,CAAE,MAAM,OAAOg7B,KAAKsP,GAAGtP,IAAIA,GAAG,MAAMh7B,GAAE,EAAG,IAAIA,EAAE,OAAe,MAAR+D,EAAE+c,MAAY/c,EAAE,IAAI,CAAC,OAAG,KAAa,IAARA,EAAE+c,QAAkB/c,EAAE45B,MAAM/5B,EAAEG,KAAEC,EAAE,OAAOA,MAAO,OAAOH,GAAG,OAAOA,EAAEmd,gBAAgBhd,IAAID,EAAEqd,MAAMN,OAAO,KAAK,KAAY,EAAP/c,EAAE23B,QAAU,OAAO73B,GAAG,KAAe,EAAViD,GAAEvC,SAAW,IAAIuD,KAAIA,GAAE,GAAGwhC,OAAO,OAAOvlC,EAAEu6B,cAAcv6B,EAAE+c,OAAO,GAAGjZ,GAAE9D,GAAU,MAAK,KAAK,EAAE,OAAOg8B,KACrf2I,GAAG7kC,EAAEE,GAAG,OAAOF,GAAGiyB,GAAG/xB,EAAEub,UAAUiG,eAAe1d,GAAE9D,GAAG,KAAK,KAAK,GAAG,OAAOs5B,GAAGt5B,EAAEK,KAAK0F,UAAUjC,GAAE9D,GAAG,KAA+C,KAAK,GAA0B,GAAvB4B,GAAEmB,IAAwB,QAArB9G,EAAE+D,EAAEid,eAA0B,OAAOnZ,GAAE9D,GAAG,KAAuC,GAAlCC,EAAE,KAAa,IAARD,EAAE+c,OAA4B,QAAjBhd,EAAE9D,EAAE8pC,WAAsB,GAAG9lC,EAAEomC,GAAGpqC,GAAE,OAAQ,CAAC,GAAG,IAAI8H,IAAG,OAAOjE,GAAG,KAAa,IAARA,EAAEid,OAAW,IAAIjd,EAAEE,EAAEqd,MAAM,OAAOvd,GAAG,CAAS,GAAG,QAAXC,EAAEo8B,GAAGr8B,IAAe,CAAmG,IAAlGE,EAAE+c,OAAO,IAAIspB,GAAGpqC,GAAE,GAAoB,QAAhBgE,EAAEF,EAAEw6B,eAAuBv6B,EAAEu6B,YAAYt6B,EAAED,EAAE+c,OAAO,GAAG/c,EAAE2lC,aAAa,EAAE1lC,EAAEJ,EAAMA,EAAEG,EAAEqd,MAAM,OAAOxd,GAAOC,EAAEG,GAANhE,EAAE4D,GAAQkd,OAAO,SAC/d,QAAdhd,EAAE9D,EAAE4gB,YAAoB5gB,EAAEu9B,WAAW,EAAEv9B,EAAE29B,MAAM95B,EAAE7D,EAAEohB,MAAM,KAAKphB,EAAE0pC,aAAa,EAAE1pC,EAAE87B,cAAc,KAAK97B,EAAEghB,cAAc,KAAKhhB,EAAEs+B,YAAY,KAAKt+B,EAAEy9B,aAAa,KAAKz9B,EAAEsf,UAAU,OAAOtf,EAAEu9B,WAAWz5B,EAAEy5B,WAAWv9B,EAAE29B,MAAM75B,EAAE65B,MAAM39B,EAAEohB,MAAMtd,EAAEsd,MAAMphB,EAAE0pC,aAAa,EAAE1pC,EAAEm7B,UAAU,KAAKn7B,EAAE87B,cAAch4B,EAAEg4B,cAAc97B,EAAEghB,cAAcld,EAAEkd,cAAchhB,EAAEs+B,YAAYx6B,EAAEw6B,YAAYt+B,EAAEoE,KAAKN,EAAEM,KAAKP,EAAEC,EAAE25B,aAAaz9B,EAAEy9B,aAAa,OAAO55B,EAAE,KAAK,CAAC85B,MAAM95B,EAAE85B,MAAMD,aAAa75B,EAAE65B,eAAe95B,EAAEA,EAAEyd,QAA2B,OAAnBpb,GAAEa,GAAY,EAAVA,GAAEvC,QAAU,GAAUR,EAAEqd,KAAK,CAACvd,EAClgBA,EAAEwd,OAAO,CAAC,OAAOrhB,EAAEiqC,MAAM7kC,KAAI4lC,KAAKjnC,EAAE+c,OAAO,IAAI9c,GAAE,EAAGomC,GAAGpqC,GAAE,GAAI+D,EAAE45B,MAAM,QAAQ,KAAK,CAAC,IAAI35B,EAAE,GAAW,QAARH,EAAEq8B,GAAGp8B,KAAa,GAAGC,EAAE+c,OAAO,IAAI9c,GAAE,EAAmB,QAAhBJ,EAAEC,EAAEy6B,eAAuBv6B,EAAEu6B,YAAY16B,EAAEG,EAAE+c,OAAO,GAAGspB,GAAGpqC,GAAE,GAAI,OAAOA,EAAEiqC,MAAM,WAAWjqC,EAAEkqC,WAAWpmC,EAAE8c,YAAYna,GAAE,OAAOoB,GAAE9D,GAAG,UAAU,EAAEqB,KAAIpF,EAAE+pC,mBAAmBiB,IAAI,aAAapnC,IAAIG,EAAE+c,OAAO,IAAI9c,GAAE,EAAGomC,GAAGpqC,GAAE,GAAI+D,EAAE45B,MAAM,SAAS39B,EAAE6pC,aAAa/lC,EAAEud,QAAQtd,EAAEqd,MAAMrd,EAAEqd,MAAMtd,IAAa,QAATF,EAAE5D,EAAEgqC,MAAcpmC,EAAEyd,QAAQvd,EAAEC,EAAEqd,MAAMtd,EAAE9D,EAAEgqC,KAAKlmC,EAAE,CAAC,OAAG,OAAO9D,EAAEiqC,MAAYlmC,EAAE/D,EAAEiqC,KAAKjqC,EAAE8pC,UAC9e/lC,EAAE/D,EAAEiqC,KAAKlmC,EAAEsd,QAAQrhB,EAAE+pC,mBAAmB3kC,KAAIrB,EAAEsd,QAAQ,KAAKzd,EAAEkD,GAAEvC,QAAQ0B,GAAEa,GAAE9C,EAAI,EAAFJ,EAAI,EAAI,EAAFA,GAAKG,IAAE8D,GAAE9D,GAAU,MAAK,KAAK,GAAG,KAAK,GAAG,OAAOknC,KAAKjnC,EAAE,OAAOD,EAAEid,cAAc,OAAOnd,GAAG,OAAOA,EAAEmd,gBAAgBhd,IAAID,EAAE+c,OAAO,MAAM9c,GAAG,KAAY,EAAPD,EAAE23B,MAAQ,KAAQ,WAAHoM,MAAiBjgC,GAAE9D,GAAkB,EAAfA,EAAE2lC,eAAiB3lC,EAAE+c,OAAO,OAAOjZ,GAAE9D,GAAG,KAAK,KAAK,GAAe,KAAK,GAAG,OAAO,KAAK,MAAMqC,MAAM7C,EAAE,IAAIQ,EAAE0S,KAAM,CAClX,SAASy0B,GAAGrnC,EAAEE,GAAS,OAAN82B,GAAG92B,GAAUA,EAAE0S,KAAK,KAAK,EAAE,OAAO0iB,GAAGp1B,EAAEK,OAAOi1B,KAAiB,OAAZx1B,EAAEE,EAAE+c,QAAe/c,EAAE+c,OAAS,MAAHjd,EAAS,IAAIE,GAAG,KAAK,KAAK,EAAE,OAAOg8B,KAAKp6B,GAAEkzB,IAAIlzB,GAAEW,IAAG+5B,KAAe,KAAO,OAAjBx8B,EAAEE,EAAE+c,SAAqB,KAAO,IAAFjd,IAAQE,EAAE+c,OAAS,MAAHjd,EAAS,IAAIE,GAAG,KAAK,KAAK,EAAE,OAAOk8B,GAAGl8B,GAAG,KAAK,KAAK,GAA0B,GAAvB4B,GAAEmB,IAAwB,QAArBjD,EAAEE,EAAEid,gBAA2B,OAAOnd,EAAEod,WAAW,CAAC,GAAG,OAAOld,EAAE6c,UAAU,MAAMxa,MAAM7C,EAAE,MAAMy4B,IAAI,CAAW,OAAS,OAAnBn4B,EAAEE,EAAE+c,QAAsB/c,EAAE+c,OAAS,MAAHjd,EAAS,IAAIE,GAAG,KAAK,KAAK,GAAG,OAAO4B,GAAEmB,IAAG,KAAK,KAAK,EAAE,OAAOi5B,KAAK,KAAK,KAAK,GAAG,OAAO1C,GAAGt5B,EAAEK,KAAK0F,UAAU,KAAK,KAAK,GAAG,KAAK,GAAG,OAAOmhC,KAC1gB,KAAyB,QAAQ,OAAO,KAAK,CArB7CxC,GAAG,SAAS5kC,EAAEE,GAAG,IAAI,IAAIH,EAAEG,EAAEqd,MAAM,OAAOxd,GAAG,CAAC,GAAG,IAAIA,EAAE6S,KAAK,IAAI7S,EAAE6S,IAAI5S,EAAEmW,YAAYpW,EAAE0b,gBAAgB,GAAG,IAAI1b,EAAE6S,KAAK,OAAO7S,EAAEwd,MAAM,CAACxd,EAAEwd,MAAMP,OAAOjd,EAAEA,EAAEA,EAAEwd,MAAM,QAAQ,CAAC,GAAGxd,IAAIG,EAAE,MAAM,KAAK,OAAOH,EAAEyd,SAAS,CAAC,GAAG,OAAOzd,EAAEid,QAAQjd,EAAEid,SAAS9c,EAAE,OAAOH,EAAEA,EAAEid,MAAM,CAACjd,EAAEyd,QAAQR,OAAOjd,EAAEid,OAAOjd,EAAEA,EAAEyd,OAAO,CAAC,EAAEqnB,GAAG,WAAW,EACxTC,GAAG,SAAS9kC,EAAEE,EAAEH,EAAEI,GAAG,IAAIC,EAAEJ,EAAEi4B,cAAc,GAAG73B,IAAID,EAAE,CAACH,EAAEE,EAAEub,UAAUsgB,GAAGH,GAAGl7B,SAAS,IAA4RT,EAAxR9D,EAAE,KAAK,OAAO4D,GAAG,IAAK,QAAQK,EAAE6T,EAAGjU,EAAEI,GAAGD,EAAE8T,EAAGjU,EAAEG,GAAGhE,EAAE,GAAG,MAAM,IAAK,SAASiE,EAAEyD,EAAE,CAAC,EAAEzD,EAAE,CAAC/D,WAAM,IAAS8D,EAAE0D,EAAE,CAAC,EAAE1D,EAAE,CAAC9D,WAAM,IAASF,EAAE,GAAG,MAAM,IAAK,WAAWiE,EAAEgV,GAAGpV,EAAEI,GAAGD,EAAEiV,GAAGpV,EAAEG,GAAGhE,EAAE,GAAG,MAAM,QAAQ,oBAAoBiE,EAAEymC,SAAS,oBAAoB1mC,EAAE0mC,UAAU7mC,EAAE8mC,QAAQzT,IAAyB,IAAI/zB,KAAzBsb,GAAG7a,EAAEI,GAASJ,EAAE,KAAcK,EAAE,IAAID,EAAEjD,eAAeoC,IAAIc,EAAElD,eAAeoC,IAAI,MAAMc,EAAEd,GAAG,GAAG,UAAUA,EAAE,CAAC,IAAIe,EAAED,EAAEd,GAAG,IAAIW,KAAKI,EAAEA,EAAEnD,eAAe+C,KACjfF,IAAIA,EAAE,CAAC,GAAGA,EAAEE,GAAG,GAAG,KAAK,4BAA4BX,GAAG,aAAaA,GAAG,mCAAmCA,GAAG,6BAA6BA,GAAG,cAAcA,IAAIwP,EAAG5R,eAAeoC,GAAGnD,IAAIA,EAAE,KAAKA,EAAEA,GAAG,IAAIyH,KAAKtE,EAAE,OAAO,IAAIA,KAAKa,EAAE,CAAC,IAAIhB,EAAEgB,EAAEb,GAAyB,GAAtBe,EAAE,MAAMD,EAAEA,EAAEd,QAAG,EAAUa,EAAEjD,eAAeoC,IAAIH,IAAIkB,IAAI,MAAMlB,GAAG,MAAMkB,GAAG,GAAG,UAAUf,EAAE,GAAGe,EAAE,CAAC,IAAIJ,KAAKI,GAAGA,EAAEnD,eAAe+C,IAAId,GAAGA,EAAEjC,eAAe+C,KAAKF,IAAIA,EAAE,CAAC,GAAGA,EAAEE,GAAG,IAAI,IAAIA,KAAKd,EAAEA,EAAEjC,eAAe+C,IAAII,EAAEJ,KAAKd,EAAEc,KAAKF,IAAIA,EAAE,CAAC,GAAGA,EAAEE,GAAGd,EAAEc,GAAG,MAAMF,IAAI5D,IAAIA,EAAE,IAAIA,EAAEyH,KAAKtE,EACpfS,IAAIA,EAAEZ,MAAM,4BAA4BG,GAAGH,EAAEA,EAAEA,EAAEs0B,YAAO,EAAOpzB,EAAEA,EAAEA,EAAEozB,YAAO,EAAO,MAAMt0B,GAAGkB,IAAIlB,IAAIhD,EAAEA,GAAG,IAAIyH,KAAKtE,EAAEH,IAAI,aAAaG,EAAE,kBAAkBH,GAAG,kBAAkBA,IAAIhD,EAAEA,GAAG,IAAIyH,KAAKtE,EAAE,GAAGH,GAAG,mCAAmCG,GAAG,6BAA6BA,IAAIwP,EAAG5R,eAAeoC,IAAI,MAAMH,GAAG,aAAaG,GAAGuC,GAAE,SAAS7B,GAAG7D,GAAGkE,IAAIlB,IAAIhD,EAAE,MAAMA,EAAEA,GAAG,IAAIyH,KAAKtE,EAAEH,GAAG,CAACY,IAAI5D,EAAEA,GAAG,IAAIyH,KAAK,QAAQ7D,GAAG,IAAIT,EAAEnD,GAAK+D,EAAEu6B,YAAYn7B,KAAEY,EAAE+c,OAAO,EAAC,CAAC,EAAE8nB,GAAG,SAAS/kC,EAAEE,EAAEH,EAAEI,GAAGJ,IAAII,IAAID,EAAE+c,OAAO,EAAE,EAkBlb,IAAIqqB,IAAG,EAAGhjC,IAAE,EAAGijC,GAAG,oBAAoBC,QAAQA,QAAQ34B,IAAItK,GAAE,KAAK,SAASkjC,GAAGznC,EAAEE,GAAG,IAAIH,EAAEC,EAAEL,IAAI,GAAG,OAAOI,EAAE,GAAG,oBAAoBA,EAAE,IAAIA,EAAE,KAAK,CAAC,MAAMI,GAAGsE,GAAEzE,EAAEE,EAAEC,EAAE,MAAMJ,EAAEW,QAAQ,IAAI,CAAC,SAASgnC,GAAG1nC,EAAEE,EAAEH,GAAG,IAAIA,GAAG,CAAC,MAAMI,GAAGsE,GAAEzE,EAAEE,EAAEC,EAAE,CAAC,CAAC,IAAIwnC,IAAG,EAIxR,SAASC,GAAG5nC,EAAEE,EAAEH,GAAG,IAAII,EAAED,EAAEu6B,YAAyC,GAAG,QAAhCt6B,EAAE,OAAOA,EAAEA,EAAE0+B,WAAW,MAAiB,CAAC,IAAIz+B,EAAED,EAAEA,EAAE2D,KAAK,EAAE,CAAC,IAAI1D,EAAEwS,IAAI5S,KAAKA,EAAE,CAAC,IAAI7D,EAAEiE,EAAEi/B,QAAQj/B,EAAEi/B,aAAQ,OAAO,IAASljC,GAAGurC,GAAGxnC,EAAEH,EAAE5D,EAAE,CAACiE,EAAEA,EAAE0D,IAAI,OAAO1D,IAAID,EAAE,CAAC,CAAC,SAAS0nC,GAAG7nC,EAAEE,GAAgD,GAAG,QAAhCA,EAAE,QAAlBA,EAAEA,EAAEu6B,aAAuBv6B,EAAE2+B,WAAW,MAAiB,CAAC,IAAI9+B,EAAEG,EAAEA,EAAE4D,KAAK,EAAE,CAAC,IAAI/D,EAAE6S,IAAI5S,KAAKA,EAAE,CAAC,IAAIG,EAAEJ,EAAEq/B,OAAOr/B,EAAEs/B,QAAQl/B,GAAG,CAACJ,EAAEA,EAAE+D,IAAI,OAAO/D,IAAIG,EAAE,CAAC,CAAC,SAAS4nC,GAAG9nC,GAAG,IAAIE,EAAEF,EAAEL,IAAI,GAAG,OAAOO,EAAE,CAAC,IAAIH,EAAEC,EAAEyb,UAAiBzb,EAAE4S,IAA8B5S,EAAED,EAAE,oBAAoBG,EAAEA,EAAEF,GAAGE,EAAEQ,QAAQV,CAAC,CAAC,CAClf,SAAS+nC,GAAG/nC,GAAG,IAAIE,EAAEF,EAAE+c,UAAU,OAAO7c,IAAIF,EAAE+c,UAAU,KAAKgrB,GAAG7nC,IAAIF,EAAEud,MAAM,KAAKvd,EAAEs3B,UAAU,KAAKt3B,EAAEwd,QAAQ,KAAK,IAAIxd,EAAE4S,MAAoB,QAAd1S,EAAEF,EAAEyb,oBAA4Bvb,EAAEs0B,WAAWt0B,EAAEu0B,WAAWv0B,EAAEyxB,WAAWzxB,EAAEw0B,WAAWx0B,EAAEy0B,MAAM30B,EAAEyb,UAAU,KAAKzb,EAAEgd,OAAO,KAAKhd,EAAE45B,aAAa,KAAK55B,EAAEi4B,cAAc,KAAKj4B,EAAEmd,cAAc,KAAKnd,EAAEw3B,aAAa,KAAKx3B,EAAEyb,UAAU,KAAKzb,EAAEy6B,YAAY,IAAI,CAAC,SAASuN,GAAGhoC,GAAG,OAAO,IAAIA,EAAE4S,KAAK,IAAI5S,EAAE4S,KAAK,IAAI5S,EAAE4S,GAAG,CACna,SAASq1B,GAAGjoC,GAAGA,EAAE,OAAO,CAAC,KAAK,OAAOA,EAAEwd,SAAS,CAAC,GAAG,OAAOxd,EAAEgd,QAAQgrB,GAAGhoC,EAAEgd,QAAQ,OAAO,KAAKhd,EAAEA,EAAEgd,MAAM,CAA2B,IAA1Bhd,EAAEwd,QAAQR,OAAOhd,EAAEgd,OAAWhd,EAAEA,EAAEwd,QAAQ,IAAIxd,EAAE4S,KAAK,IAAI5S,EAAE4S,KAAK,KAAK5S,EAAE4S,KAAK,CAAC,GAAW,EAAR5S,EAAEid,MAAQ,SAASjd,EAAE,GAAG,OAAOA,EAAEud,OAAO,IAAIvd,EAAE4S,IAAI,SAAS5S,EAAOA,EAAEud,MAAMP,OAAOhd,EAAEA,EAAEA,EAAEud,KAAK,CAAC,KAAa,EAARvd,EAAEid,OAAS,OAAOjd,EAAEyb,SAAS,CAAC,CACzT,SAASysB,GAAGloC,EAAEE,EAAEH,GAAG,IAAII,EAAEH,EAAE4S,IAAI,GAAG,IAAIzS,GAAG,IAAIA,EAAEH,EAAEA,EAAEyb,UAAUvb,EAAE,IAAIH,EAAEyW,SAASzW,EAAEob,WAAWgtB,aAAanoC,EAAEE,GAAGH,EAAEooC,aAAanoC,EAAEE,IAAI,IAAIH,EAAEyW,UAAUtW,EAAEH,EAAEob,YAAagtB,aAAanoC,EAAED,IAAKG,EAAEH,GAAIoW,YAAYnW,GAA4B,QAAxBD,EAAEA,EAAEqoC,2BAA8B,IAASroC,GAAG,OAAOG,EAAE4mC,UAAU5mC,EAAE4mC,QAAQzT,UAAU,GAAG,IAAIlzB,GAAc,QAAVH,EAAEA,EAAEud,OAAgB,IAAI2qB,GAAGloC,EAAEE,EAAEH,GAAGC,EAAEA,EAAEwd,QAAQ,OAAOxd,GAAGkoC,GAAGloC,EAAEE,EAAEH,GAAGC,EAAEA,EAAEwd,OAAO,CAC1X,SAAS6qB,GAAGroC,EAAEE,EAAEH,GAAG,IAAII,EAAEH,EAAE4S,IAAI,GAAG,IAAIzS,GAAG,IAAIA,EAAEH,EAAEA,EAAEyb,UAAUvb,EAAEH,EAAEooC,aAAanoC,EAAEE,GAAGH,EAAEoW,YAAYnW,QAAQ,GAAG,IAAIG,GAAc,QAAVH,EAAEA,EAAEud,OAAgB,IAAI8qB,GAAGroC,EAAEE,EAAEH,GAAGC,EAAEA,EAAEwd,QAAQ,OAAOxd,GAAGqoC,GAAGroC,EAAEE,EAAEH,GAAGC,EAAEA,EAAEwd,OAAO,CAAC,IAAI5Y,GAAE,KAAK0jC,IAAG,EAAG,SAASC,GAAGvoC,EAAEE,EAAEH,GAAG,IAAIA,EAAEA,EAAEwd,MAAM,OAAOxd,GAAGyoC,GAAGxoC,EAAEE,EAAEH,GAAGA,EAAEA,EAAEyd,OAAO,CACnR,SAASgrB,GAAGxoC,EAAEE,EAAEH,GAAG,GAAGue,IAAI,oBAAoBA,GAAGmqB,qBAAqB,IAAInqB,GAAGmqB,qBAAqBpqB,GAAGte,EAAE,CAAC,MAAMM,GAAG,CAAC,OAAON,EAAE6S,KAAK,KAAK,EAAEtO,IAAGmjC,GAAG1nC,EAAEG,GAAG,KAAK,EAAE,IAAIC,EAAEyE,GAAExE,EAAEkoC,GAAG1jC,GAAE,KAAK2jC,GAAGvoC,EAAEE,EAAEH,GAAOuoC,GAAGloC,EAAE,QAATwE,GAAEzE,KAAkBmoC,IAAItoC,EAAE4E,GAAE7E,EAAEA,EAAE0b,UAAU,IAAIzb,EAAEwW,SAASxW,EAAEmb,WAAWjF,YAAYnW,GAAGC,EAAEkW,YAAYnW,IAAI6E,GAAEsR,YAAYnW,EAAE0b,YAAY,MAAM,KAAK,GAAG,OAAO7W,KAAI0jC,IAAItoC,EAAE4E,GAAE7E,EAAEA,EAAE0b,UAAU,IAAIzb,EAAEwW,SAAS2d,GAAGn0B,EAAEmb,WAAWpb,GAAG,IAAIC,EAAEwW,UAAU2d,GAAGn0B,EAAED,GAAGmiB,GAAGliB,IAAIm0B,GAAGvvB,GAAE7E,EAAE0b,YAAY,MAAM,KAAK,EAAEtb,EAAEyE,GAAExE,EAAEkoC,GAAG1jC,GAAE7E,EAAE0b,UAAUiG,cAAc4mB,IAAG,EAClfC,GAAGvoC,EAAEE,EAAEH,GAAG6E,GAAEzE,EAAEmoC,GAAGloC,EAAE,MAAM,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,IAAIkE,KAAoB,QAAhBnE,EAAEJ,EAAE06B,cAAsC,QAAft6B,EAAEA,EAAE0+B,aAAsB,CAACz+B,EAAED,EAAEA,EAAE2D,KAAK,EAAE,CAAC,IAAI3H,EAAEiE,EAAEH,EAAE9D,EAAEkjC,QAAQljC,EAAEA,EAAEyW,SAAI,IAAS3S,IAAI,KAAO,EAAF9D,IAAe,KAAO,EAAFA,KAAfurC,GAAG3nC,EAAEG,EAAED,GAAyBG,EAAEA,EAAE0D,IAAI,OAAO1D,IAAID,EAAE,CAACooC,GAAGvoC,EAAEE,EAAEH,GAAG,MAAM,KAAK,EAAE,IAAIuE,KAAImjC,GAAG1nC,EAAEG,GAAiB,oBAAdC,EAAEJ,EAAE0b,WAAgCitB,sBAAsB,IAAIvoC,EAAEK,MAAMT,EAAEk4B,cAAc93B,EAAEmhC,MAAMvhC,EAAEod,cAAchd,EAAEuoC,sBAAsB,CAAC,MAAMroC,GAAGoE,GAAE1E,EAAEG,EAAEG,EAAE,CAACkoC,GAAGvoC,EAAEE,EAAEH,GAAG,MAAM,KAAK,GAAGwoC,GAAGvoC,EAAEE,EAAEH,GAAG,MAAM,KAAK,GAAU,EAAPA,EAAE83B,MAAQvzB,IAAGnE,EAAEmE,KAAI,OAChfvE,EAAEod,cAAcorB,GAAGvoC,EAAEE,EAAEH,GAAGuE,GAAEnE,GAAGooC,GAAGvoC,EAAEE,EAAEH,GAAG,MAAM,QAAQwoC,GAAGvoC,EAAEE,EAAEH,GAAG,CAAC,SAAS4oC,GAAG3oC,GAAG,IAAIE,EAAEF,EAAEy6B,YAAY,GAAG,OAAOv6B,EAAE,CAACF,EAAEy6B,YAAY,KAAK,IAAI16B,EAAEC,EAAEyb,UAAU,OAAO1b,IAAIA,EAAEC,EAAEyb,UAAU,IAAI8rB,IAAIrnC,EAAEjC,SAAQ,SAASiC,GAAG,IAAIC,EAAEyoC,GAAGziC,KAAK,KAAKnG,EAAEE,GAAGH,EAAE6xB,IAAI1xB,KAAKH,EAAEkP,IAAI/O,GAAGA,EAAEkE,KAAKjE,EAAEA,GAAG,GAAE,CAAC,CACzQ,SAAS0oC,GAAG7oC,EAAEE,GAAG,IAAIH,EAAEG,EAAEo3B,UAAU,GAAG,OAAOv3B,EAAE,IAAI,IAAII,EAAE,EAAEA,EAAEJ,EAAEd,OAAOkB,IAAI,CAAC,IAAIC,EAAEL,EAAEI,GAAG,IAAI,IAAIhE,EAAE6D,EAAEC,EAAEC,EAAEG,EAAEJ,EAAED,EAAE,KAAK,OAAOK,GAAG,CAAC,OAAOA,EAAEuS,KAAK,KAAK,EAAEhO,GAAEvE,EAAEob,UAAU6sB,IAAG,EAAG,MAAMtoC,EAAE,KAAK,EAA4C,KAAK,EAAE4E,GAAEvE,EAAEob,UAAUiG,cAAc4mB,IAAG,EAAG,MAAMtoC,EAAEK,EAAEA,EAAE2c,MAAM,CAAC,GAAG,OAAOpY,GAAE,MAAMrC,MAAM7C,EAAE,MAAM8oC,GAAGrsC,EAAE8D,EAAEG,GAAGwE,GAAE,KAAK0jC,IAAG,EAAG,IAAInpC,EAAEiB,EAAE2c,UAAU,OAAO5d,IAAIA,EAAE6d,OAAO,MAAM5c,EAAE4c,OAAO,IAAI,CAAC,MAAM1d,GAAGmF,GAAErE,EAAEF,EAAEZ,EAAE,CAAC,CAAC,GAAkB,MAAfY,EAAE2lC,aAAmB,IAAI3lC,EAAEA,EAAEqd,MAAM,OAAOrd,GAAG4oC,GAAG5oC,EAAEF,GAAGE,EAAEA,EAAEsd,OAAO,CACje,SAASsrB,GAAG9oC,EAAEE,GAAG,IAAIH,EAAEC,EAAE+c,UAAU5c,EAAEH,EAAEid,MAAM,OAAOjd,EAAE4S,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAAiB,GAAdi2B,GAAG3oC,EAAEF,GAAG+oC,GAAG/oC,GAAQ,EAAFG,EAAI,CAAC,IAAIynC,GAAG,EAAE5nC,EAAEA,EAAEgd,QAAQ6qB,GAAG,EAAE7nC,EAAE,CAAC,MAAMe,GAAG0D,GAAEzE,EAAEA,EAAEgd,OAAOjc,EAAE,CAAC,IAAI6mC,GAAG,EAAE5nC,EAAEA,EAAEgd,OAAO,CAAC,MAAMjc,GAAG0D,GAAEzE,EAAEA,EAAEgd,OAAOjc,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE8nC,GAAG3oC,EAAEF,GAAG+oC,GAAG/oC,GAAK,IAAFG,GAAO,OAAOJ,GAAG0nC,GAAG1nC,EAAEA,EAAEid,QAAQ,MAAM,KAAK,EAAgD,GAA9C6rB,GAAG3oC,EAAEF,GAAG+oC,GAAG/oC,GAAK,IAAFG,GAAO,OAAOJ,GAAG0nC,GAAG1nC,EAAEA,EAAEid,QAAmB,GAARhd,EAAEid,MAAS,CAAC,IAAI7c,EAAEJ,EAAEyb,UAAU,IAAInF,GAAGlW,EAAE,GAAG,CAAC,MAAMW,GAAG0D,GAAEzE,EAAEA,EAAEgd,OAAOjc,EAAE,CAAC,CAAC,GAAK,EAAFZ,GAAoB,OAAdC,EAAEJ,EAAEyb,WAAmB,CAAC,IAAItf,EAAE6D,EAAEi4B,cAAch4B,EAAE,OAAOF,EAAEA,EAAEk4B,cAAc97B,EAAEkE,EAAEL,EAAEO,KAAKpB,EAAEa,EAAEy6B,YACje,GAAnBz6B,EAAEy6B,YAAY,KAAQ,OAAOt7B,EAAE,IAAI,UAAUkB,GAAG,UAAUlE,EAAEoE,MAAM,MAAMpE,EAAE6Q,MAAMyH,EAAGrU,EAAEjE,GAAG0e,GAAGxa,EAAEJ,GAAG,IAAIX,EAAEub,GAAGxa,EAAElE,GAAG,IAAI8D,EAAE,EAAEA,EAAEd,EAAEF,OAAOgB,GAAG,EAAE,CAAC,IAAIV,EAAEJ,EAAEc,GAAGH,EAAEX,EAAEc,EAAE,GAAG,UAAUV,EAAEga,GAAGnZ,EAAEN,GAAG,4BAA4BP,EAAEsW,GAAGzV,EAAEN,GAAG,aAAaP,EAAE+W,GAAGlW,EAAEN,GAAGsQ,EAAGhQ,EAAEb,EAAEO,EAAER,EAAE,CAAC,OAAOe,GAAG,IAAK,QAAQqU,EAAGtU,EAAEjE,GAAG,MAAM,IAAK,WAAWoZ,GAAGnV,EAAEjE,GAAG,MAAM,IAAK,SAAS,IAAI2E,EAAEV,EAAEgU,cAAcsyB,YAAYtmC,EAAEgU,cAAcsyB,cAAcvqC,EAAEwqC,SAAS,IAAIvlC,EAAEjF,EAAEE,MAAM,MAAM+E,EAAE2T,GAAG3U,IAAIjE,EAAEwqC,SAASvlC,GAAE,GAAIN,MAAM3E,EAAEwqC,WAAW,MAAMxqC,EAAEgY,aAAaY,GAAG3U,IAAIjE,EAAEwqC,SACnfxqC,EAAEgY,cAAa,GAAIY,GAAG3U,IAAIjE,EAAEwqC,SAASxqC,EAAEwqC,SAAS,GAAG,IAAG,IAAKvmC,EAAEq0B,IAAIt4B,CAAC,CAAC,MAAM4E,GAAG0D,GAAEzE,EAAEA,EAAEgd,OAAOjc,EAAE,CAAC,CAAC,MAAM,KAAK,EAAgB,GAAd8nC,GAAG3oC,EAAEF,GAAG+oC,GAAG/oC,GAAQ,EAAFG,EAAI,CAAC,GAAG,OAAOH,EAAEyb,UAAU,MAAMlZ,MAAM7C,EAAE,MAAMU,EAAEJ,EAAEyb,UAAUtf,EAAE6D,EAAEi4B,cAAc,IAAI73B,EAAEqW,UAAUta,CAAC,CAAC,MAAM4E,GAAG0D,GAAEzE,EAAEA,EAAEgd,OAAOjc,EAAE,CAAC,CAAC,MAAM,KAAK,EAAgB,GAAd8nC,GAAG3oC,EAAEF,GAAG+oC,GAAG/oC,GAAQ,EAAFG,GAAK,OAAOJ,GAAGA,EAAEod,cAAcsE,aAAa,IAAIS,GAAGhiB,EAAEwhB,cAAc,CAAC,MAAM3gB,GAAG0D,GAAEzE,EAAEA,EAAEgd,OAAOjc,EAAE,CAAC,MAAM,KAAK,EAG4G,QAAQ8nC,GAAG3oC,EACnfF,GAAG+oC,GAAG/oC,SAJ4Y,KAAK,GAAG6oC,GAAG3oC,EAAEF,GAAG+oC,GAAG/oC,GAAqB,MAAlBI,EAAEJ,EAAEud,OAAQN,QAAa9gB,EAAE,OAAOiE,EAAE+c,cAAc/c,EAAEqb,UAAUutB,SAAS7sC,GAAGA,GAClf,OAAOiE,EAAE2c,WAAW,OAAO3c,EAAE2c,UAAUI,gBAAgB8rB,GAAG1nC,OAAQ,EAAFpB,GAAKwoC,GAAG3oC,GAAG,MAAM,KAAK,GAAsF,GAAnFT,EAAE,OAAOQ,GAAG,OAAOA,EAAEod,cAAqB,EAAPnd,EAAE63B,MAAQvzB,IAAGhF,EAAEgF,KAAI/E,EAAEspC,GAAG3oC,EAAEF,GAAGsE,GAAEhF,GAAGupC,GAAG3oC,EAAEF,GAAG+oC,GAAG/oC,GAAQ,KAAFG,EAAO,CAA0B,GAAzBb,EAAE,OAAOU,EAAEmd,eAAkBnd,EAAEyb,UAAUutB,SAAS1pC,KAAKC,GAAG,KAAY,EAAPS,EAAE63B,MAAQ,IAAItzB,GAAEvE,EAAET,EAAES,EAAEud,MAAM,OAAOhe,GAAG,CAAC,IAAIO,EAAEyE,GAAEhF,EAAE,OAAOgF,IAAG,CAAe,OAAVnD,GAAJN,EAAEyD,IAAMgZ,MAAazc,EAAE8R,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAAGg1B,GAAG,EAAE9mC,EAAEA,EAAEkc,QAAQ,MAAM,KAAK,EAAEyqB,GAAG3mC,EAAEA,EAAEkc,QAAQ,IAAInf,EAAEiD,EAAE2a,UAAU,GAAG,oBAAoB5d,EAAE6qC,qBAAqB,CAACvoC,EAAEW,EAAEf,EAAEe,EAAEkc,OAAO,IAAI9c,EAAEC,EAAEtC,EAAE2C,MACpfN,EAAE+3B,cAAcp6B,EAAEyjC,MAAMphC,EAAEid,cAActf,EAAE6qC,sBAAsB,CAAC,MAAM3nC,GAAG0D,GAAEtE,EAAEJ,EAAEgB,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE0mC,GAAG3mC,EAAEA,EAAEkc,QAAQ,MAAM,KAAK,GAAG,GAAG,OAAOlc,EAAEqc,cAAc,CAAC+rB,GAAGppC,GAAG,QAAQ,EAAE,OAAOsB,GAAGA,EAAE4b,OAAOlc,EAAEyD,GAAEnD,GAAG8nC,GAAGppC,EAAE,CAACP,EAAEA,EAAEie,OAAO,CAACxd,EAAE,IAAIT,EAAE,KAAKO,EAAEE,IAAI,CAAC,GAAG,IAAIF,EAAE8S,KAAK,GAAG,OAAOrT,EAAE,CAACA,EAAEO,EAAE,IAAIM,EAAEN,EAAE2b,UAAUnc,EAAa,oBAAVnD,EAAEiE,EAAEoZ,OAA4BC,YAAYtd,EAAEsd,YAAY,UAAU,OAAO,aAAatd,EAAEgtC,QAAQ,QAAS9oC,EAAEP,EAAE2b,UAAkCxb,OAAE,KAA1Bd,EAAEW,EAAEm4B,cAAcze,QAAoB,OAAOra,GAAGA,EAAEjC,eAAe,WAAWiC,EAAEgqC,QAAQ,KAAK9oC,EAAEmZ,MAAM2vB,QACzf7vB,GAAG,UAAUrZ,GAAG,CAAC,MAAMc,GAAG0D,GAAEzE,EAAEA,EAAEgd,OAAOjc,EAAE,CAAC,OAAO,GAAG,IAAIjB,EAAE8S,KAAK,GAAG,OAAOrT,EAAE,IAAIO,EAAE2b,UAAUhF,UAAUnX,EAAE,GAAGQ,EAAEm4B,aAAa,CAAC,MAAMl3B,GAAG0D,GAAEzE,EAAEA,EAAEgd,OAAOjc,EAAE,OAAO,IAAI,KAAKjB,EAAE8S,KAAK,KAAK9S,EAAE8S,KAAK,OAAO9S,EAAEqd,eAAerd,IAAIE,IAAI,OAAOF,EAAEyd,MAAM,CAACzd,EAAEyd,MAAMP,OAAOld,EAAEA,EAAEA,EAAEyd,MAAM,QAAQ,CAAC,GAAGzd,IAAIE,EAAE,MAAMA,EAAE,KAAK,OAAOF,EAAE0d,SAAS,CAAC,GAAG,OAAO1d,EAAEkd,QAAQld,EAAEkd,SAAShd,EAAE,MAAMA,EAAET,IAAIO,IAAIP,EAAE,MAAMO,EAAEA,EAAEkd,MAAM,CAACzd,IAAIO,IAAIP,EAAE,MAAMO,EAAE0d,QAAQR,OAAOld,EAAEkd,OAAOld,EAAEA,EAAE0d,OAAO,CAAC,CAAC,MAAM,KAAK,GAAGqrB,GAAG3oC,EAAEF,GAAG+oC,GAAG/oC,GAAK,EAAFG,GAAKwoC,GAAG3oC,GAAS,KAAK,IACtd,CAAC,SAAS+oC,GAAG/oC,GAAG,IAAIE,EAAEF,EAAEid,MAAM,GAAK,EAAF/c,EAAI,CAAC,IAAIF,EAAE,CAAC,IAAI,IAAID,EAAEC,EAAEgd,OAAO,OAAOjd,GAAG,CAAC,GAAGioC,GAAGjoC,GAAG,CAAC,IAAII,EAAEJ,EAAE,MAAMC,CAAC,CAACD,EAAEA,EAAEid,MAAM,CAAC,MAAMza,MAAM7C,EAAE,KAAM,CAAC,OAAOS,EAAEyS,KAAK,KAAK,EAAE,IAAIxS,EAAED,EAAEsb,UAAkB,GAARtb,EAAE8c,QAAW3G,GAAGlW,EAAE,IAAID,EAAE8c,QAAQ,IAAgBorB,GAAGroC,EAATioC,GAAGjoC,GAAUI,GAAG,MAAM,KAAK,EAAE,KAAK,EAAE,IAAIH,EAAEE,EAAEsb,UAAUiG,cAAsBwmB,GAAGloC,EAATioC,GAAGjoC,GAAUC,GAAG,MAAM,QAAQ,MAAMsC,MAAM7C,EAAE,MAAO,CAAC,MAAMP,GAAGsF,GAAEzE,EAAEA,EAAEgd,OAAO7d,EAAE,CAACa,EAAEid,QAAQ,CAAC,CAAG,KAAF/c,IAASF,EAAEid,QAAQ,KAAK,CAAC,SAASmsB,GAAGppC,EAAEE,EAAEH,GAAGwE,GAAEvE,EAAEqpC,GAAGrpC,EAAEE,EAAEH,EAAE,CACvb,SAASspC,GAAGrpC,EAAEE,EAAEH,GAAG,IAAI,IAAII,EAAE,KAAY,EAAPH,EAAE63B,MAAQ,OAAOtzB,IAAG,CAAC,IAAInE,EAAEmE,GAAEpI,EAAEiE,EAAEmd,MAAM,GAAG,KAAKnd,EAAEwS,KAAKzS,EAAE,CAAC,IAAIF,EAAE,OAAOG,EAAE+c,eAAemqB,GAAG,IAAIrnC,EAAE,CAAC,IAAII,EAAED,EAAE2c,UAAU5d,EAAE,OAAOkB,GAAG,OAAOA,EAAE8c,eAAe7Y,GAAEjE,EAAEinC,GAAG,IAAIhoC,EAAEgF,GAAO,GAALgjC,GAAGrnC,GAAMqE,GAAEnF,KAAKG,EAAE,IAAIiF,GAAEnE,EAAE,OAAOmE,IAAOpF,GAAJc,EAAEsE,IAAMgZ,MAAM,KAAKtd,EAAE2S,KAAK,OAAO3S,EAAEkd,cAAcmsB,GAAGlpC,GAAG,OAAOjB,GAAGA,EAAE6d,OAAO/c,EAAEsE,GAAEpF,GAAGmqC,GAAGlpC,GAAG,KAAK,OAAOjE,GAAGoI,GAAEpI,EAAEktC,GAAGltC,EAAE+D,EAAEH,GAAG5D,EAAEA,EAAEqhB,QAAQjZ,GAAEnE,EAAEknC,GAAGjnC,EAAEiE,GAAEhF,CAAC,CAACiqC,GAAGvpC,EAAM,MAAM,KAAoB,KAAfI,EAAEylC,eAAoB,OAAO1pC,GAAGA,EAAE6gB,OAAO5c,EAAEmE,GAAEpI,GAAGotC,GAAGvpC,EAAM,CAAC,CACvc,SAASupC,GAAGvpC,GAAG,KAAK,OAAOuE,IAAG,CAAC,IAAIrE,EAAEqE,GAAE,GAAG,KAAa,KAARrE,EAAE+c,OAAY,CAAC,IAAIld,EAAEG,EAAE6c,UAAU,IAAI,GAAG,KAAa,KAAR7c,EAAE+c,OAAY,OAAO/c,EAAE0S,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAGtO,IAAGujC,GAAG,EAAE3nC,GAAG,MAAM,KAAK,EAAE,IAAIC,EAAED,EAAEub,UAAU,GAAW,EAARvb,EAAE+c,QAAU3Y,GAAE,GAAG,OAAOvE,EAAEI,EAAE4hC,wBAAwB,CAAC,IAAI3hC,EAAEF,EAAEuN,cAAcvN,EAAEK,KAAKR,EAAEk4B,cAAc6I,GAAG5gC,EAAEK,KAAKR,EAAEk4B,eAAe93B,EAAEokC,mBAAmBnkC,EAAEL,EAAEod,cAAchd,EAAEqpC,oCAAoC,CAAC,IAAIrtC,EAAE+D,EAAEu6B,YAAY,OAAOt+B,GAAGu/B,GAAGx7B,EAAE/D,EAAEgE,GAAG,MAAM,KAAK,EAAE,IAAIF,EAAEC,EAAEu6B,YAAY,GAAG,OAAOx6B,EAAE,CAAQ,GAAPF,EAAE,KAAQ,OAAOG,EAAEqd,MAAM,OAAOrd,EAAEqd,MAAM3K,KAAK,KAAK,EACvf,KAAK,EAAE7S,EAAEG,EAAEqd,MAAM9B,UAAUigB,GAAGx7B,EAAED,EAAEF,EAAE,CAAC,MAAM,KAAK,EAAE,IAAIM,EAAEH,EAAEub,UAAU,GAAG,OAAO1b,GAAW,EAARG,EAAE+c,MAAQ,CAACld,EAAEM,EAAE,IAAIlB,EAAEe,EAAE+3B,cAAc,OAAO/3B,EAAEK,MAAM,IAAK,SAAS,IAAK,QAAQ,IAAK,SAAS,IAAK,WAAWpB,EAAE8nC,WAAWlnC,EAAE4vB,QAAQ,MAAM,IAAK,MAAMxwB,EAAEsqC,MAAM1pC,EAAE0pC,IAAItqC,EAAEsqC,KAAK,CAAC,MAAM,KAAK,EAAQ,KAAK,EAAQ,KAAK,GAAyJ,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,MAAhM,KAAK,GAAG,GAAG,OAAOvpC,EAAEid,cAAc,CAAC,IAAI7d,EAAEY,EAAE6c,UAAU,GAAG,OAAOzd,EAAE,CAAC,IAAIC,EAAED,EAAE6d,cAAc,GAAG,OAAO5d,EAAE,CAAC,IAAIO,EAAEP,EAAE6d,WAAW,OAAOtd,GAAGoiB,GAAGpiB,EAAE,CAAC,CAAC,CAAC,MAC5c,QAAQ,MAAMyC,MAAM7C,EAAE,MAAO4E,IAAW,IAARpE,EAAE+c,OAAW6qB,GAAG5nC,EAAE,CAAC,MAAMY,GAAG2D,GAAEvE,EAAEA,EAAE8c,OAAOlc,EAAE,CAAC,CAAC,GAAGZ,IAAIF,EAAE,CAACuE,GAAE,KAAK,KAAK,CAAa,GAAG,QAAfxE,EAAEG,EAAEsd,SAAoB,CAACzd,EAAEid,OAAO9c,EAAE8c,OAAOzY,GAAExE,EAAE,KAAK,CAACwE,GAAErE,EAAE8c,MAAM,CAAC,CAAC,SAASksB,GAAGlpC,GAAG,KAAK,OAAOuE,IAAG,CAAC,IAAIrE,EAAEqE,GAAE,GAAGrE,IAAIF,EAAE,CAACuE,GAAE,KAAK,KAAK,CAAC,IAAIxE,EAAEG,EAAEsd,QAAQ,GAAG,OAAOzd,EAAE,CAACA,EAAEid,OAAO9c,EAAE8c,OAAOzY,GAAExE,EAAE,KAAK,CAACwE,GAAErE,EAAE8c,MAAM,CAAC,CACvS,SAASssB,GAAGtpC,GAAG,KAAK,OAAOuE,IAAG,CAAC,IAAIrE,EAAEqE,GAAE,IAAI,OAAOrE,EAAE0S,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,IAAI7S,EAAEG,EAAE8c,OAAO,IAAI6qB,GAAG,EAAE3nC,EAAE,CAAC,MAAMf,GAAGsF,GAAEvE,EAAEH,EAAEZ,EAAE,CAAC,MAAM,KAAK,EAAE,IAAIgB,EAAED,EAAEub,UAAU,GAAG,oBAAoBtb,EAAE4hC,kBAAkB,CAAC,IAAI3hC,EAAEF,EAAE8c,OAAO,IAAI7c,EAAE4hC,mBAAmB,CAAC,MAAM5iC,GAAGsF,GAAEvE,EAAEE,EAAEjB,EAAE,CAAC,CAAC,IAAIhD,EAAE+D,EAAE8c,OAAO,IAAI8qB,GAAG5nC,EAAE,CAAC,MAAMf,GAAGsF,GAAEvE,EAAE/D,EAAEgD,EAAE,CAAC,MAAM,KAAK,EAAE,IAAIc,EAAEC,EAAE8c,OAAO,IAAI8qB,GAAG5nC,EAAE,CAAC,MAAMf,GAAGsF,GAAEvE,EAAED,EAAEd,EAAE,EAAE,CAAC,MAAMA,GAAGsF,GAAEvE,EAAEA,EAAE8c,OAAO7d,EAAE,CAAC,GAAGe,IAAIF,EAAE,CAACuE,GAAE,KAAK,KAAK,CAAC,IAAIlE,EAAEH,EAAEsd,QAAQ,GAAG,OAAOnd,EAAE,CAACA,EAAE2c,OAAO9c,EAAE8c,OAAOzY,GAAElE,EAAE,KAAK,CAACkE,GAAErE,EAAE8c,MAAM,CAAC,CAC7d,IAwBkN0sB,GAxB9MC,GAAG3/B,KAAK4/B,KAAKC,GAAG/4B,EAAGpM,uBAAuBolC,GAAGh5B,EAAGrR,kBAAkBsqC,GAAGj5B,EAAGnM,wBAAwB3B,GAAE,EAAEM,GAAE,KAAK0mC,GAAE,KAAKC,GAAE,EAAEhG,GAAG,EAAED,GAAGlP,GAAG,GAAG7wB,GAAE,EAAEimC,GAAG,KAAKzO,GAAG,EAAE0O,GAAG,EAAEC,GAAG,EAAEC,GAAG,KAAKC,GAAG,KAAKrB,GAAG,EAAE9B,GAAGoD,IAASC,GAAG,KAAKhI,IAAG,EAAGC,GAAG,KAAKI,GAAG,KAAK4H,IAAG,EAAGC,GAAG,KAAKC,GAAG,EAAEC,GAAG,EAAEC,GAAG,KAAKC,IAAI,EAAEC,GAAG,EAAE,SAASrnC,KAAI,OAAO,KAAO,EAAFV,IAAKzB,MAAK,IAAIupC,GAAGA,GAAGA,GAAGvpC,IAAG,CAChU,SAAS++B,GAAGtgC,GAAG,OAAG,KAAY,EAAPA,EAAE63B,MAAe,EAAK,KAAO,EAAF70B,KAAM,IAAIinC,GAASA,IAAGA,GAAK,OAAO5R,GAAG7zB,YAAkB,IAAIumC,KAAKA,GAAGvrB,MAAMurB,IAAU,KAAP/qC,EAAE4B,IAAkB5B,EAAiBA,OAAE,KAAjBA,EAAEmP,OAAO0c,OAAmB,GAAGlJ,GAAG3iB,EAAEO,KAAc,CAAC,SAAS0+B,GAAGj/B,EAAEE,EAAEH,EAAEI,GAAG,GAAG,GAAGyqC,GAAG,MAAMA,GAAG,EAAEC,GAAG,KAAKtoC,MAAM7C,EAAE,MAAMggB,GAAG1f,EAAED,EAAEI,GAAM,KAAO,EAAF6C,KAAMhD,IAAIsD,KAAEtD,IAAIsD,KAAI,KAAO,EAAFN,MAAOmnC,IAAIpqC,GAAG,IAAIkE,IAAG+mC,GAAGhrC,EAAEiqC,KAAIgB,GAAGjrC,EAAEG,GAAG,IAAIJ,GAAG,IAAIiD,IAAG,KAAY,EAAP9C,EAAE23B,QAAUsP,GAAG5lC,KAAI,IAAIy0B,IAAIG,MAAK,CAC1Y,SAAS8U,GAAGjrC,EAAEE,GAAG,IAAIH,EAAEC,EAAEkrC,cA3MzB,SAAYlrC,EAAEE,GAAG,IAAI,IAAIH,EAAEC,EAAEkf,eAAe/e,EAAEH,EAAEmf,YAAY/e,EAAEJ,EAAEmrC,gBAAgBhvC,EAAE6D,EAAEif,aAAa,EAAE9iB,GAAG,CAAC,IAAI8D,EAAE,GAAGse,GAAGpiB,GAAGkE,EAAE,GAAGJ,EAAEd,EAAEiB,EAAEH,IAAO,IAAId,EAAM,KAAKkB,EAAEN,IAAI,KAAKM,EAAEF,KAAGC,EAAEH,GAAGqf,GAAGjf,EAAEH,IAAQf,GAAGe,IAAIF,EAAEorC,cAAc/qC,GAAGlE,IAAIkE,CAAC,CAAC,CA2MnLgrC,CAAGrrC,EAAEE,GAAG,IAAIC,EAAE6e,GAAGhf,EAAEA,IAAIsD,GAAE2mC,GAAE,GAAG,GAAG,IAAI9pC,EAAE,OAAOJ,GAAG6d,GAAG7d,GAAGC,EAAEkrC,aAAa,KAAKlrC,EAAEsrC,iBAAiB,OAAO,GAAGprC,EAAEC,GAAGA,EAAEH,EAAEsrC,mBAAmBprC,EAAE,CAAgB,GAAf,MAAMH,GAAG6d,GAAG7d,GAAM,IAAIG,EAAE,IAAIF,EAAE4S,IA5IsJ,SAAY5S,GAAGg2B,IAAG,EAAGE,GAAGl2B,EAAE,CA4I5KurC,CAAGC,GAAGrlC,KAAK,KAAKnG,IAAIk2B,GAAGsV,GAAGrlC,KAAK,KAAKnG,IAAI8zB,IAAG,WAAW,KAAO,EAAF9wB,KAAMmzB,IAAI,IAAGp2B,EAAE,SAAS,CAAC,OAAO8f,GAAG1f,IAAI,KAAK,EAAEJ,EAAEie,GAAG,MAAM,KAAK,EAAEje,EAAEke,GAAG,MAAM,KAAK,GAAwC,QAAQle,EAAEme,SAApC,KAAK,UAAUne,EAAEqe,GAAsBre,EAAE0rC,GAAG1rC,EAAE2rC,GAAGvlC,KAAK,KAAKnG,GAAG,CAACA,EAAEsrC,iBAAiBprC,EAAEF,EAAEkrC,aAAanrC,CAAC,CAAC,CAC7c,SAAS2rC,GAAG1rC,EAAEE,GAAc,GAAX4qC,IAAI,EAAEC,GAAG,EAAK,KAAO,EAAF/nC,IAAK,MAAMT,MAAM7C,EAAE,MAAM,IAAIK,EAAEC,EAAEkrC,aAAa,GAAGS,MAAM3rC,EAAEkrC,eAAenrC,EAAE,OAAO,KAAK,IAAII,EAAE6e,GAAGhf,EAAEA,IAAIsD,GAAE2mC,GAAE,GAAG,GAAG,IAAI9pC,EAAE,OAAO,KAAK,GAAG,KAAO,GAAFA,IAAO,KAAKA,EAAEH,EAAEorC,eAAelrC,EAAEA,EAAE0rC,GAAG5rC,EAAEG,OAAO,CAACD,EAAEC,EAAE,IAAIC,EAAE4C,GAAEA,IAAG,EAAE,IAAI7G,EAAE0vC,KAAgD,IAAxCvoC,KAAItD,GAAGiqC,KAAI/pC,IAAEsqC,GAAG,KAAKrD,GAAG5lC,KAAI,IAAIuqC,GAAG9rC,EAAEE,UAAU6rC,KAAK,KAAK,CAAC,MAAM1rC,GAAG2rC,GAAGhsC,EAAEK,EAAE,CAAUk5B,KAAKsQ,GAAGnpC,QAAQvE,EAAE6G,GAAE5C,EAAE,OAAO4pC,GAAE9pC,EAAE,GAAGoD,GAAE,KAAK2mC,GAAE,EAAE/pC,EAAE+D,GAAE,CAAC,GAAG,IAAI/D,EAAE,CAAyC,GAAxC,IAAIA,IAAY,KAARE,EAAEmf,GAAGvf,MAAWG,EAAEC,EAAEF,EAAE+rC,GAAGjsC,EAAEI,KAAQ,IAAIF,EAAE,MAAMH,EAAEmqC,GAAG4B,GAAG9rC,EAAE,GAAGgrC,GAAGhrC,EAAEG,GAAG8qC,GAAGjrC,EAAEuB,MAAKxB,EAAE,GAAG,IAAIG,EAAE8qC,GAAGhrC,EAAEG,OAChf,CAAuB,GAAtBC,EAAEJ,EAAEU,QAAQqc,UAAa,KAAO,GAAF5c,KAGnC,SAAYH,GAAG,IAAI,IAAIE,EAAEF,IAAI,CAAC,GAAW,MAARE,EAAE+c,MAAY,CAAC,IAAIld,EAAEG,EAAEu6B,YAAY,GAAG,OAAO16B,GAAe,QAAXA,EAAEA,EAAE++B,QAAiB,IAAI,IAAI3+B,EAAE,EAAEA,EAAEJ,EAAEd,OAAOkB,IAAI,CAAC,IAAIC,EAAEL,EAAEI,GAAGhE,EAAEiE,EAAEq+B,YAAYr+B,EAAEA,EAAE/D,MAAM,IAAI,IAAI8wB,GAAGhxB,IAAIiE,GAAG,OAAM,CAAE,CAAC,MAAMH,GAAG,OAAM,CAAE,CAAC,CAAC,CAAW,GAAVF,EAAEG,EAAEqd,MAAwB,MAAfrd,EAAE2lC,cAAoB,OAAO9lC,EAAEA,EAAEid,OAAO9c,EAAEA,EAAEH,MAAM,CAAC,GAAGG,IAAIF,EAAE,MAAM,KAAK,OAAOE,EAAEsd,SAAS,CAAC,GAAG,OAAOtd,EAAE8c,QAAQ9c,EAAE8c,SAAShd,EAAE,OAAM,EAAGE,EAAEA,EAAE8c,MAAM,CAAC9c,EAAEsd,QAAQR,OAAO9c,EAAE8c,OAAO9c,EAAEA,EAAEsd,OAAO,CAAC,CAAC,OAAM,CAAE,CAHvX0uB,CAAG9rC,KAAe,KAAVF,EAAE0rC,GAAG5rC,EAAEG,MAAmB,KAARhE,EAAEojB,GAAGvf,MAAWG,EAAEhE,EAAE+D,EAAE+rC,GAAGjsC,EAAE7D,KAAK,IAAI+D,GAAG,MAAMH,EAAEmqC,GAAG4B,GAAG9rC,EAAE,GAAGgrC,GAAGhrC,EAAEG,GAAG8qC,GAAGjrC,EAAEuB,MAAKxB,EAAqC,OAAnCC,EAAEmsC,aAAa/rC,EAAEJ,EAAEosC,cAAcjsC,EAASD,GAAG,KAAK,EAAE,KAAK,EAAE,MAAMqC,MAAM7C,EAAE,MAAM,KAAK,EAC8B,KAAK,EAAE2sC,GAAGrsC,EAAEsqC,GAAGE,IAAI,MAD7B,KAAK,EAAU,GAARQ,GAAGhrC,EAAEG,IAAS,UAAFA,KAAeA,GAAiB,IAAbD,EAAE+oC,GAAG,IAAI1nC,MAAU,CAAC,GAAG,IAAIyd,GAAGhf,EAAE,GAAG,MAAyB,KAAnBI,EAAEJ,EAAEkf,gBAAqB/e,KAAKA,EAAE,CAACuD,KAAI1D,EAAEmf,aAAanf,EAAEkf,eAAe9e,EAAE,KAAK,CAACJ,EAAEssC,cAAc5Y,GAAG2Y,GAAGlmC,KAAK,KAAKnG,EAAEsqC,GAAGE,IAAItqC,GAAG,KAAK,CAACmsC,GAAGrsC,EAAEsqC,GAAGE,IAAI,MAAM,KAAK,EAAU,GAARQ,GAAGhrC,EAAEG,IAAS,QAAFA,KAC9eA,EAAE,MAAqB,IAAfD,EAAEF,EAAE2f,WAAevf,GAAG,EAAE,EAAED,GAAG,CAAC,IAAIF,EAAE,GAAGse,GAAGpe,GAAGhE,EAAE,GAAG8D,GAAEA,EAAEC,EAAED,IAAKG,IAAIA,EAAEH,GAAGE,IAAIhE,CAAC,CAAqG,GAApGgE,EAAEC,EAAqG,IAA3FD,GAAG,KAAXA,EAAEoB,KAAIpB,GAAW,IAAI,IAAIA,EAAE,IAAI,KAAKA,EAAE,KAAK,KAAKA,EAAE,KAAK,IAAIA,EAAE,IAAI,KAAKA,EAAE,KAAK,KAAKwpC,GAAGxpC,EAAE,OAAOA,GAAU,CAACH,EAAEssC,cAAc5Y,GAAG2Y,GAAGlmC,KAAK,KAAKnG,EAAEsqC,GAAGE,IAAIrqC,GAAG,KAAK,CAACksC,GAAGrsC,EAAEsqC,GAAGE,IAAI,MAA+B,QAAQ,MAAMjoC,MAAM7C,EAAE,MAAO,CAAC,CAAW,OAAVurC,GAAGjrC,EAAEuB,MAAYvB,EAAEkrC,eAAenrC,EAAE2rC,GAAGvlC,KAAK,KAAKnG,GAAG,IAAI,CACrX,SAASisC,GAAGjsC,EAAEE,GAAG,IAAIH,EAAEsqC,GAA2G,OAAxGrqC,EAAEU,QAAQyc,cAAcsE,eAAeqqB,GAAG9rC,EAAEE,GAAG+c,OAAO,KAAe,KAAVjd,EAAE4rC,GAAG5rC,EAAEE,MAAWA,EAAEoqC,GAAGA,GAAGvqC,EAAE,OAAOG,GAAGumC,GAAGvmC,IAAWF,CAAC,CAAC,SAASymC,GAAGzmC,GAAG,OAAOsqC,GAAGA,GAAGtqC,EAAEsqC,GAAG1mC,KAAKkB,MAAMwlC,GAAGtqC,EAAE,CAE5L,SAASgrC,GAAGhrC,EAAEE,GAAuD,IAApDA,IAAIkqC,GAAGlqC,IAAIiqC,GAAGnqC,EAAEkf,gBAAgBhf,EAAEF,EAAEmf,cAAcjf,EAAMF,EAAEA,EAAEmrC,gBAAgB,EAAEjrC,GAAG,CAAC,IAAIH,EAAE,GAAGwe,GAAGre,GAAGC,EAAE,GAAGJ,EAAEC,EAAED,IAAI,EAAEG,IAAIC,CAAC,CAAC,CAAC,SAASqrC,GAAGxrC,GAAG,GAAG,KAAO,EAAFgD,IAAK,MAAMT,MAAM7C,EAAE,MAAMisC,KAAK,IAAIzrC,EAAE8e,GAAGhf,EAAE,GAAG,GAAG,KAAO,EAAFE,GAAK,OAAO+qC,GAAGjrC,EAAEuB,MAAK,KAAK,IAAIxB,EAAE6rC,GAAG5rC,EAAEE,GAAG,GAAG,IAAIF,EAAE4S,KAAK,IAAI7S,EAAE,CAAC,IAAII,EAAEof,GAAGvf,GAAG,IAAIG,IAAID,EAAEC,EAAEJ,EAAEksC,GAAGjsC,EAAEG,GAAG,CAAC,GAAG,IAAIJ,EAAE,MAAMA,EAAEmqC,GAAG4B,GAAG9rC,EAAE,GAAGgrC,GAAGhrC,EAAEE,GAAG+qC,GAAGjrC,EAAEuB,MAAKxB,EAAE,GAAG,IAAIA,EAAE,MAAMwC,MAAM7C,EAAE,MAAiF,OAA3EM,EAAEmsC,aAAansC,EAAEU,QAAQqc,UAAU/c,EAAEosC,cAAclsC,EAAEmsC,GAAGrsC,EAAEsqC,GAAGE,IAAIS,GAAGjrC,EAAEuB,MAAY,IAAI,CACvd,SAASgrC,GAAGvsC,EAAEE,GAAG,IAAIH,EAAEiD,GAAEA,IAAG,EAAE,IAAI,OAAOhD,EAAEE,EAAE,CAAC,QAAY,KAAJ8C,GAAEjD,KAAUonC,GAAG5lC,KAAI,IAAIy0B,IAAIG,KAAK,CAAC,CAAC,SAASqW,GAAGxsC,GAAG,OAAO0qC,IAAI,IAAIA,GAAG93B,KAAK,KAAO,EAAF5P,KAAM2oC,KAAK,IAAIzrC,EAAE8C,GAAEA,IAAG,EAAE,IAAIjD,EAAEgqC,GAAGvlC,WAAWrE,EAAEyB,GAAE,IAAI,GAAGmoC,GAAGvlC,WAAW,KAAK5C,GAAE,EAAE5B,EAAE,OAAOA,GAAG,CAAC,QAAQ4B,GAAEzB,EAAE4pC,GAAGvlC,WAAWzE,EAAM,KAAO,GAAXiD,GAAE9C,KAAai2B,IAAI,CAAC,CAAC,SAASiR,KAAKnD,GAAGD,GAAGtjC,QAAQoB,GAAEkiC,GAAG,CAChT,SAAS8H,GAAG9rC,EAAEE,GAAGF,EAAEmsC,aAAa,KAAKnsC,EAAEosC,cAAc,EAAE,IAAIrsC,EAAEC,EAAEssC,cAAiD,IAAlC,IAAIvsC,IAAIC,EAAEssC,eAAe,EAAE3Y,GAAG5zB,IAAO,OAAOiqC,GAAE,IAAIjqC,EAAEiqC,GAAEhtB,OAAO,OAAOjd,GAAG,CAAC,IAAII,EAAEJ,EAAQ,OAANi3B,GAAG72B,GAAUA,EAAEyS,KAAK,KAAK,EAA6B,QAA3BzS,EAAEA,EAAEI,KAAKg1B,yBAA4B,IAASp1B,GAAGq1B,KAAK,MAAM,KAAK,EAAE0G,KAAKp6B,GAAEkzB,IAAIlzB,GAAEW,IAAG+5B,KAAK,MAAM,KAAK,EAAEJ,GAAGj8B,GAAG,MAAM,KAAK,EAAE+7B,KAAK,MAAM,KAAK,GAAc,KAAK,GAAGp6B,GAAEmB,IAAG,MAAM,KAAK,GAAGu2B,GAAGr5B,EAAEI,KAAK0F,UAAU,MAAM,KAAK,GAAG,KAAK,GAAGmhC,KAAKrnC,EAAEA,EAAEid,MAAM,CAAqE,GAApE1Z,GAAEtD,EAAEgqC,GAAEhqC,EAAE24B,GAAG34B,EAAEU,QAAQ,MAAMupC,GAAEhG,GAAG/jC,EAAE+D,GAAE,EAAEimC,GAAG,KAAKE,GAAGD,GAAG1O,GAAG,EAAE6O,GAAGD,GAAG,KAAQ,OAAOnQ,GAAG,CAAC,IAAIh6B,EAC1f,EAAEA,EAAEg6B,GAAGj7B,OAAOiB,IAAI,GAA2B,QAAhBC,GAARJ,EAAEm6B,GAAGh6B,IAAOm6B,aAAqB,CAACt6B,EAAEs6B,YAAY,KAAK,IAAIj6B,EAAED,EAAE2D,KAAK3H,EAAE4D,EAAE+6B,QAAQ,GAAG,OAAO3+B,EAAE,CAAC,IAAI8D,EAAE9D,EAAE2H,KAAK3H,EAAE2H,KAAK1D,EAAED,EAAE2D,KAAK7D,CAAC,CAACF,EAAE+6B,QAAQ36B,CAAC,CAAC+5B,GAAG,IAAI,CAAC,OAAOl6B,CAAC,CAC3K,SAASgsC,GAAGhsC,EAAEE,GAAG,OAAE,CAAC,IAAIH,EAAEiqC,GAAE,IAAuB,GAAnBzQ,KAAKmD,GAAGh8B,QAAQ48B,GAAMT,GAAG,CAAC,IAAI,IAAI18B,EAAE+C,GAAEia,cAAc,OAAOhd,GAAG,CAAC,IAAIC,EAAED,EAAEu9B,MAAM,OAAOt9B,IAAIA,EAAE06B,QAAQ,MAAM36B,EAAEA,EAAE2D,IAAI,CAAC+4B,IAAG,CAAE,CAA4C,GAA3CD,GAAG,EAAEx5B,GAAEO,GAAET,GAAE,KAAK45B,IAAG,EAAGC,GAAG,EAAE+M,GAAGppC,QAAQ,KAAQ,OAAOX,GAAG,OAAOA,EAAEid,OAAO,CAAC/Y,GAAE,EAAEimC,GAAGhqC,EAAE8pC,GAAE,KAAK,KAAK,CAAChqC,EAAE,CAAC,IAAI7D,EAAE6D,EAAEC,EAAEF,EAAEid,OAAO3c,EAAEN,EAAEZ,EAAEe,EAAqB,GAAnBA,EAAE+pC,GAAE5pC,EAAE4c,OAAO,MAAS,OAAO9d,GAAG,kBAAkBA,GAAG,oBAAoBA,EAAEiF,KAAK,CAAC,IAAI9E,EAAEH,EAAEI,EAAEc,EAAEP,EAAEP,EAAEqT,IAAI,GAAG,KAAY,EAAPrT,EAAEs4B,QAAU,IAAI/3B,GAAG,KAAKA,GAAG,KAAKA,GAAG,CAAC,IAAIgB,EAAEvB,EAAEwd,UAAUjc,GAAGvB,EAAEk7B,YAAY35B,EAAE25B,YAAYl7B,EAAE4d,cAAcrc,EAAEqc,cACxe5d,EAAEu6B,MAAMh5B,EAAEg5B,QAAQv6B,EAAEk7B,YAAY,KAAKl7B,EAAE4d,cAAc,KAAK,CAAC,IAAI/b,EAAE8hC,GAAGjjC,GAAG,GAAG,OAAOmB,EAAE,CAACA,EAAE6b,QAAQ,IAAIkmB,GAAG/hC,EAAEnB,EAAEI,EAAElE,EAAE+D,GAAU,EAAPkB,EAAEy2B,MAAQkL,GAAG5mC,EAAEmD,EAAEY,GAAOf,EAAEG,EAAE,IAAIzB,GAAZqC,EAAEkB,GAAcq5B,YAAY,GAAG,OAAO58B,EAAE,CAAC,IAAIkD,EAAE,IAAI8N,IAAI9N,EAAEkO,IAAI9P,GAAGe,EAAEu6B,YAAY15B,CAAC,MAAMlD,EAAEoR,IAAI9P,GAAG,MAAMa,CAAC,CAAM,GAAG,KAAO,EAAFE,GAAK,CAAC6iC,GAAG5mC,EAAEmD,EAAEY,GAAGulC,KAAK,MAAMzlC,CAAC,CAACb,EAAEoD,MAAM7C,EAAE,KAAM,MAAM,GAAGkD,IAAU,EAAPvC,EAAEw3B,KAAO,CAAC,IAAI90B,EAAEmgC,GAAGjjC,GAAG,GAAG,OAAO8C,EAAE,CAAC,KAAa,MAARA,EAAEka,SAAela,EAAEka,OAAO,KAAKkmB,GAAGpgC,EAAE9C,EAAEI,EAAElE,EAAE+D,GAAGk4B,GAAG4J,GAAG7iC,EAAEkB,IAAI,MAAML,CAAC,CAAC,CAAC7D,EAAEgD,EAAE6iC,GAAG7iC,EAAEkB,GAAG,IAAI4D,KAAIA,GAAE,GAAG,OAAOomC,GAAGA,GAAG,CAACluC,GAAGkuC,GAAGzmC,KAAKzH,GAAGA,EAAE8D,EAAE,EAAE,CAAC,OAAO9D,EAAEyW,KAAK,KAAK,EAAEzW,EAAE8gB,OAAO,MACpf/c,IAAIA,EAAE/D,EAAE29B,OAAO55B,EAAkBq7B,GAAGp/B,EAAbomC,GAAGpmC,EAAEgD,EAAEe,IAAW,MAAMF,EAAE,KAAK,EAAEK,EAAElB,EAAE,IAAI+B,EAAE/E,EAAEoE,KAAKS,EAAE7E,EAAEsf,UAAU,GAAG,KAAa,IAARtf,EAAE8gB,SAAa,oBAAoB/b,EAAEyhC,0BAA0B,OAAO3hC,GAAG,oBAAoBA,EAAE4hC,oBAAoB,OAAOC,KAAKA,GAAGjR,IAAI5wB,KAAK,CAAC7E,EAAE8gB,OAAO,MAAM/c,IAAIA,EAAE/D,EAAE29B,OAAO55B,EAAkBq7B,GAAGp/B,EAAbumC,GAAGvmC,EAAEkE,EAAEH,IAAW,MAAMF,CAAC,EAAE7D,EAAEA,EAAE6gB,MAAM,OAAO,OAAO7gB,EAAE,CAACswC,GAAG1sC,EAAE,CAAC,MAAM0yB,GAAIvyB,EAAEuyB,EAAGuX,KAAIjqC,GAAG,OAAOA,IAAIiqC,GAAEjqC,EAAEA,EAAEid,QAAQ,QAAQ,CAAC,KAAK,CAAS,CAAC,SAAS6uB,KAAK,IAAI7rC,EAAE6pC,GAAGnpC,QAAsB,OAAdmpC,GAAGnpC,QAAQ48B,GAAU,OAAOt9B,EAAEs9B,GAAGt9B,CAAC,CACrd,SAASylC,KAAQ,IAAIxhC,IAAG,IAAIA,IAAG,IAAIA,KAAEA,GAAE,GAAE,OAAOX,IAAG,KAAQ,UAAHm4B,KAAe,KAAQ,UAAH0O,KAAea,GAAG1nC,GAAE2mC,GAAE,CAAC,SAAS2B,GAAG5rC,EAAEE,GAAG,IAAIH,EAAEiD,GAAEA,IAAG,EAAE,IAAI7C,EAAE0rC,KAAqC,IAA7BvoC,KAAItD,GAAGiqC,KAAI/pC,IAAEsqC,GAAG,KAAKsB,GAAG9rC,EAAEE,UAAUwsC,KAAK,KAAK,CAAC,MAAMtsC,GAAG4rC,GAAGhsC,EAAEI,EAAE,CAAgC,GAAtBm5B,KAAKv2B,GAAEjD,EAAE8pC,GAAGnpC,QAAQP,EAAK,OAAO6pC,GAAE,MAAMznC,MAAM7C,EAAE,MAAiB,OAAX4D,GAAE,KAAK2mC,GAAE,EAAShmC,EAAC,CAAC,SAASyoC,KAAK,KAAK,OAAO1C,IAAG2C,GAAG3C,GAAE,CAAC,SAAS+B,KAAK,KAAK,OAAO/B,KAAInsB,MAAM8uB,GAAG3C,GAAE,CAAC,SAAS2C,GAAG3sC,GAAG,IAAIE,EAAEwpC,GAAG1pC,EAAE+c,UAAU/c,EAAEikC,IAAIjkC,EAAEi4B,cAAcj4B,EAAEw3B,aAAa,OAAOt3B,EAAEusC,GAAGzsC,GAAGgqC,GAAE9pC,EAAE4pC,GAAGppC,QAAQ,IAAI,CAC1d,SAAS+rC,GAAGzsC,GAAG,IAAIE,EAAEF,EAAE,EAAE,CAAC,IAAID,EAAEG,EAAE6c,UAAqB,GAAX/c,EAAEE,EAAE8c,OAAU,KAAa,MAAR9c,EAAE+c,QAAc,GAAgB,QAAbld,EAAEymC,GAAGzmC,EAAEG,EAAE+jC,KAAkB,YAAJ+F,GAAEjqC,OAAc,CAAW,GAAG,QAAbA,EAAEsnC,GAAGtnC,EAAEG,IAAmC,OAAnBH,EAAEkd,OAAO,WAAM+sB,GAAEjqC,GAAS,GAAG,OAAOC,EAAmE,OAAXiE,GAAE,OAAE+lC,GAAE,MAA5DhqC,EAAEid,OAAO,MAAMjd,EAAE6lC,aAAa,EAAE7lC,EAAEs3B,UAAU,IAA4B,CAAa,GAAG,QAAfp3B,EAAEA,EAAEsd,SAAyB,YAAJwsB,GAAE9pC,GAAS8pC,GAAE9pC,EAAEF,CAAC,OAAO,OAAOE,GAAG,IAAI+D,KAAIA,GAAE,EAAE,CAAC,SAASooC,GAAGrsC,EAAEE,EAAEH,GAAG,IAAII,EAAEyB,GAAExB,EAAE2pC,GAAGvlC,WAAW,IAAIulC,GAAGvlC,WAAW,KAAK5C,GAAE,EAC3Y,SAAY5B,EAAEE,EAAEH,EAAEI,GAAG,GAAGwrC,WAAW,OAAOjB,IAAI,GAAG,KAAO,EAAF1nC,IAAK,MAAMT,MAAM7C,EAAE,MAAMK,EAAEC,EAAEmsC,aAAa,IAAI/rC,EAAEJ,EAAEosC,cAAc,GAAG,OAAOrsC,EAAE,OAAO,KAA2C,GAAtCC,EAAEmsC,aAAa,KAAKnsC,EAAEosC,cAAc,EAAKrsC,IAAIC,EAAEU,QAAQ,MAAM6B,MAAM7C,EAAE,MAAMM,EAAEkrC,aAAa,KAAKlrC,EAAEsrC,iBAAiB,EAAE,IAAInvC,EAAE4D,EAAE+5B,MAAM/5B,EAAE25B,WAA8J,GAzNtT,SAAY15B,EAAEE,GAAG,IAAIH,EAAEC,EAAEif,cAAc/e,EAAEF,EAAEif,aAAa/e,EAAEF,EAAEkf,eAAe,EAAElf,EAAEmf,YAAY,EAAEnf,EAAEorC,cAAclrC,EAAEF,EAAE4sC,kBAAkB1sC,EAAEF,EAAEof,gBAAgBlf,EAAEA,EAAEF,EAAEqf,cAAc,IAAIlf,EAAEH,EAAE2f,WAAW,IAAI3f,EAAEA,EAAEmrC,gBAAgB,EAAEprC,GAAG,CAAC,IAAIK,EAAE,GAAGme,GAAGxe,GAAG5D,EAAE,GAAGiE,EAAEF,EAAEE,GAAG,EAAED,EAAEC,IAAI,EAAEJ,EAAEI,IAAI,EAAEL,IAAI5D,CAAC,CAAC,CAyN5G0wC,CAAG7sC,EAAE7D,GAAG6D,IAAIsD,KAAI0mC,GAAE1mC,GAAE,KAAK2mC,GAAE,GAAG,KAAoB,KAAflqC,EAAE8lC,eAAoB,KAAa,KAAR9lC,EAAEkd,QAAawtB,KAAKA,IAAG,EAAGgB,GAAGvtB,IAAG,WAAgB,OAALytB,KAAY,IAAI,KAAIxvC,EAAE,KAAa,MAAR4D,EAAEkd,OAAgB,KAAoB,MAAfld,EAAE8lC,eAAqB1pC,EAAE,CAACA,EAAE4tC,GAAGvlC,WAAWulC,GAAGvlC,WAAW,KAChf,IAAIvE,EAAE2B,GAAEA,GAAE,EAAE,IAAIvB,EAAE2C,GAAEA,IAAG,EAAE8mC,GAAGppC,QAAQ,KA1CpC,SAAYV,EAAEE,GAAgB,GAAbozB,GAAGlR,GAAa2L,GAAV/tB,EAAE2tB,MAAc,CAAC,GAAG,mBAAmB3tB,EAAE,IAAID,EAAE,CAACsuB,MAAMruB,EAAEuuB,eAAeD,IAAItuB,EAAEwuB,mBAAmBxuB,EAAE,CAA8C,IAAIG,GAAjDJ,GAAGA,EAAEC,EAAE6U,gBAAgB9U,EAAE2uB,aAAavf,QAAewf,cAAc5uB,EAAE4uB,eAAe,GAAGxuB,GAAG,IAAIA,EAAE0uB,WAAW,CAAC9uB,EAAEI,EAAE2uB,WAAW,IAAI1uB,EAAED,EAAE4uB,aAAa5yB,EAAEgE,EAAE6uB,UAAU7uB,EAAEA,EAAE8uB,YAAY,IAAIlvB,EAAEyW,SAASra,EAAEqa,QAAQ,CAAC,MAAMrU,GAAGpC,EAAE,KAAK,MAAMC,CAAC,CAAC,IAAIC,EAAE,EAAEI,GAAG,EAAElB,GAAG,EAAEG,EAAE,EAAEC,EAAE,EAAEO,EAAEE,EAAEc,EAAE,KAAKZ,EAAE,OAAO,CAAC,IAAI,IAAIkB,EAAKtB,IAAIC,GAAG,IAAIK,GAAG,IAAIN,EAAE0W,WAAWnW,EAAEJ,EAAEG,GAAGN,IAAI3D,GAAG,IAAIgE,GAAG,IAAIL,EAAE0W,WAAWrX,EAAEc,EAAEE,GAAG,IAAIL,EAAE0W,WAAWvW,GACnfH,EAAE2W,UAAUxX,QAAW,QAAQmC,EAAEtB,EAAEmW,aAAkBnV,EAAEhB,EAAEA,EAAEsB,EAAE,OAAO,CAAC,GAAGtB,IAAIE,EAAE,MAAME,EAA8C,GAA5CY,IAAIf,KAAKT,IAAIc,IAAIC,EAAEJ,GAAGa,IAAI3E,KAAKoD,IAAIY,IAAIhB,EAAEc,GAAM,QAAQmB,EAAEtB,EAAEytB,aAAa,MAAUzsB,GAAJhB,EAAEgB,GAAMqa,UAAU,CAACrb,EAAEsB,CAAC,CAACrB,GAAG,IAAIM,IAAI,IAAIlB,EAAE,KAAK,CAACkvB,MAAMhuB,EAAEiuB,IAAInvB,EAAE,MAAMY,EAAE,IAAI,CAACA,EAAEA,GAAG,CAACsuB,MAAM,EAAEC,IAAI,EAAE,MAAMvuB,EAAE,KAA+C,IAA1CwzB,GAAG,CAACrF,YAAYluB,EAAEmuB,eAAepuB,GAAGqiB,IAAG,EAAO7d,GAAErE,EAAE,OAAOqE,IAAG,GAAOvE,GAAJE,EAAEqE,IAAMgZ,MAAM,KAAoB,KAAfrd,EAAE2lC,eAAoB,OAAO7lC,EAAEA,EAAEgd,OAAO9c,EAAEqE,GAAEvE,OAAO,KAAK,OAAOuE,IAAG,CAACrE,EAAEqE,GAAE,IAAI,IAAI1G,EAAEqC,EAAE6c,UAAU,GAAG,KAAa,KAAR7c,EAAE+c,OAAY,OAAO/c,EAAE0S,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GACvK,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,MAA3W,KAAK,EAAE,GAAG,OAAO/U,EAAE,CAAC,IAAIkD,EAAElD,EAAEo6B,cAAcl1B,EAAElF,EAAEsf,cAAchc,EAAEjB,EAAEub,UAAUva,EAAEC,EAAEygC,wBAAwB1hC,EAAEuN,cAAcvN,EAAEK,KAAKQ,EAAE+/B,GAAG5gC,EAAEK,KAAKQ,GAAGgC,GAAG5B,EAAEqoC,oCAAoCtoC,CAAC,CAAC,MAAM,KAAK,EAAE,IAAIF,EAAEd,EAAEub,UAAUiG,cAAc,IAAI1gB,EAAEwV,SAASxV,EAAEyU,YAAY,GAAG,IAAIzU,EAAEwV,UAAUxV,EAAEotB,iBAAiBptB,EAAEkV,YAAYlV,EAAEotB,iBAAiB,MAAyC,QAAQ,MAAM7rB,MAAM7C,EAAE,MAAO,CAAC,MAAMyC,GAAGsC,GAAEvE,EAAEA,EAAE8c,OAAO7a,EAAE,CAAa,GAAG,QAAfnC,EAAEE,EAAEsd,SAAoB,CAACxd,EAAEgd,OAAO9c,EAAE8c,OAAOzY,GAAEvE,EAAE,KAAK,CAACuE,GAAErE,EAAE8c,MAAM,CAACnf,EAAE8pC,GAAGA,IAAG,CAAW,CAwCldmF,CAAG9sC,EAAED,GAAG+oC,GAAG/oC,EAAEC,GAAGiuB,GAAGsF,IAAInR,KAAKkR,GAAGC,GAAGD,GAAG,KAAKtzB,EAAEU,QAAQX,EAAEqpC,GAAGrpC,EAAEC,EAAEI,GAAG0d,KAAK9a,GAAE3C,EAAEuB,GAAE3B,EAAE8pC,GAAGvlC,WAAWrI,CAAC,MAAM6D,EAAEU,QAAQX,EAAsF,GAApF0qC,KAAKA,IAAG,EAAGC,GAAG1qC,EAAE2qC,GAAGvqC,GAAGjE,EAAE6D,EAAEif,aAAa,IAAI9iB,IAAI0mC,GAAG,MAhOmJ,SAAY7iC,GAAG,GAAGse,IAAI,oBAAoBA,GAAGyuB,kBAAkB,IAAIzuB,GAAGyuB,kBAAkB1uB,GAAGre,OAAE,EAAO,OAAuB,IAAhBA,EAAEU,QAAQuc,OAAW,CAAC,MAAM/c,GAAG,CAAC,CAgOxR8sC,CAAGjtC,EAAE0b,WAAawvB,GAAGjrC,EAAEuB,MAAQ,OAAOrB,EAAE,IAAIC,EAAEH,EAAEitC,mBAAmBltC,EAAE,EAAEA,EAAEG,EAAEjB,OAAOc,IAAIK,EAAEF,EAAEH,GAAGI,EAAEC,EAAE/D,MAAM,CAACymC,eAAe1iC,EAAE4R,MAAMkwB,OAAO9hC,EAAE8hC,SAAS,GAAGM,GAAG,MAAMA,IAAG,EAAGxiC,EAAEyiC,GAAGA,GAAG,KAAKziC,EAAE,KAAQ,EAAH2qC,KAAO,IAAI3qC,EAAE4S,KAAK+4B,KAAKxvC,EAAE6D,EAAEif,aAAa,KAAO,EAAF9iB,GAAK6D,IAAI6qC,GAAGD,MAAMA,GAAG,EAAEC,GAAG7qC,GAAG4qC,GAAG,EAAEzU,IAAgB,CAFxF+W,CAAGltC,EAAEE,EAAEH,EAAEI,EAAE,CAAC,QAAQ4pC,GAAGvlC,WAAWpE,EAAEwB,GAAEzB,CAAC,CAAC,OAAO,IAAI,CAGhc,SAASwrC,KAAK,GAAG,OAAOjB,GAAG,CAAC,IAAI1qC,EAAE6f,GAAG8qB,IAAIzqC,EAAE6pC,GAAGvlC,WAAWzE,EAAE6B,GAAE,IAAmC,GAA/BmoC,GAAGvlC,WAAW,KAAK5C,GAAE,GAAG5B,EAAE,GAAGA,EAAK,OAAO0qC,GAAG,IAAIvqC,GAAE,MAAO,CAAmB,GAAlBH,EAAE0qC,GAAGA,GAAG,KAAKC,GAAG,EAAK,KAAO,EAAF3nC,IAAK,MAAMT,MAAM7C,EAAE,MAAM,IAAIU,EAAE4C,GAAO,IAALA,IAAG,EAAMuB,GAAEvE,EAAEU,QAAQ,OAAO6D,IAAG,CAAC,IAAIpI,EAAEoI,GAAEtE,EAAE9D,EAAEohB,MAAM,GAAG,KAAa,GAARhZ,GAAE0Y,OAAU,CAAC,IAAI5c,EAAElE,EAAEm7B,UAAU,GAAG,OAAOj3B,EAAE,CAAC,IAAI,IAAIlB,EAAE,EAAEA,EAAEkB,EAAEpB,OAAOE,IAAI,CAAC,IAAIG,EAAEe,EAAElB,GAAG,IAAIoF,GAAEjF,EAAE,OAAOiF,IAAG,CAAC,IAAIhF,EAAEgF,GAAE,OAAOhF,EAAEqT,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAGg1B,GAAG,EAAEroC,EAAEpD,GAAG,IAAI2D,EAAEP,EAAEge,MAAM,GAAG,OAAOzd,EAAEA,EAAEkd,OAAOzd,EAAEgF,GAAEzE,OAAO,KAAK,OAAOyE,IAAG,CAAK,IAAIzD,GAARvB,EAAEgF,IAAUiZ,QAAQpc,EAAE7B,EAAEyd,OAAa,GAAN+qB,GAAGxoC,GAAMA,IACnfD,EAAE,CAACiF,GAAE,KAAK,KAAK,CAAC,GAAG,OAAOzD,EAAE,CAACA,EAAEkc,OAAO5b,EAAEmD,GAAEzD,EAAE,KAAK,CAACyD,GAAEnD,CAAC,CAAC,CAAC,CAAC,IAAIvD,EAAE1B,EAAE4gB,UAAU,GAAG,OAAOlf,EAAE,CAAC,IAAIkD,EAAElD,EAAE0f,MAAM,GAAG,OAAOxc,EAAE,CAAClD,EAAE0f,MAAM,KAAK,EAAE,CAAC,IAAIxa,EAAEhC,EAAEyc,QAAQzc,EAAEyc,QAAQ,KAAKzc,EAAEgC,CAAC,OAAO,OAAOhC,EAAE,CAAC,CAACwD,GAAEpI,CAAC,CAAC,CAAC,GAAG,KAAoB,KAAfA,EAAE0pC,eAAoB,OAAO5lC,EAAEA,EAAE+c,OAAO7gB,EAAEoI,GAAEtE,OAAOC,EAAE,KAAK,OAAOqE,IAAG,CAAK,GAAG,KAAa,MAApBpI,EAAEoI,IAAY0Y,OAAY,OAAO9gB,EAAEyW,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAGg1B,GAAG,EAAEzrC,EAAEA,EAAE6gB,QAAQ,IAAI7b,EAAEhF,EAAEqhB,QAAQ,GAAG,OAAOrc,EAAE,CAACA,EAAE6b,OAAO7gB,EAAE6gB,OAAOzY,GAAEpD,EAAE,MAAMjB,CAAC,CAACqE,GAAEpI,EAAE6gB,MAAM,CAAC,CAAC,IAAI9b,EAAElB,EAAEU,QAAQ,IAAI6D,GAAErD,EAAE,OAAOqD,IAAG,CAAK,IAAIvD,GAARf,EAAEsE,IAAUgZ,MAAM,GAAG,KAAoB,KAAftd,EAAE4lC,eAAoB,OAClf7kC,EAAEA,EAAEgc,OAAO/c,EAAEsE,GAAEvD,OAAOd,EAAE,IAAID,EAAEiB,EAAE,OAAOqD,IAAG,CAAK,GAAG,KAAa,MAApBlE,EAAEkE,IAAY0Y,OAAY,IAAI,OAAO5c,EAAEuS,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAGi1B,GAAG,EAAExnC,GAAG,CAAC,MAAMoyB,GAAIhuB,GAAEpE,EAAEA,EAAE2c,OAAOyV,EAAG,CAAC,GAAGpyB,IAAIJ,EAAE,CAACsE,GAAE,KAAK,MAAMrE,CAAC,CAAC,IAAIiC,EAAE9B,EAAEmd,QAAQ,GAAG,OAAOrb,EAAE,CAACA,EAAE6a,OAAO3c,EAAE2c,OAAOzY,GAAEpC,EAAE,MAAMjC,CAAC,CAACqE,GAAElE,EAAE2c,MAAM,CAAC,CAAU,GAATha,GAAE5C,EAAE+1B,KAAQ7X,IAAI,oBAAoBA,GAAG6uB,sBAAsB,IAAI7uB,GAAG6uB,sBAAsB9uB,GAAGre,EAAE,CAAC,MAAMyyB,GAAI,CAACtyB,GAAE,CAAE,CAAC,OAAOA,CAAC,CAAC,QAAQyB,GAAE7B,EAAEgqC,GAAGvlC,WAAWtE,CAAC,CAAC,CAAC,OAAM,CAAE,CAAC,SAASktC,GAAGptC,EAAEE,EAAEH,GAAyBC,EAAEq7B,GAAGr7B,EAAjBE,EAAEqiC,GAAGviC,EAAfE,EAAE8hC,GAAGjiC,EAAEG,GAAY,GAAY,GAAGA,EAAEwD,KAAI,OAAO1D,IAAI0f,GAAG1f,EAAE,EAAEE,GAAG+qC,GAAGjrC,EAAEE,GAAG,CACze,SAASuE,GAAEzE,EAAEE,EAAEH,GAAG,GAAG,IAAIC,EAAE4S,IAAIw6B,GAAGptC,EAAEA,EAAED,QAAQ,KAAK,OAAOG,GAAG,CAAC,GAAG,IAAIA,EAAE0S,IAAI,CAACw6B,GAAGltC,EAAEF,EAAED,GAAG,KAAK,CAAM,GAAG,IAAIG,EAAE0S,IAAI,CAAC,IAAIzS,EAAED,EAAEub,UAAU,GAAG,oBAAoBvb,EAAEK,KAAKoiC,0BAA0B,oBAAoBxiC,EAAEyiC,oBAAoB,OAAOC,KAAKA,GAAGjR,IAAIzxB,IAAI,CAAuBD,EAAEm7B,GAAGn7B,EAAjBF,EAAE0iC,GAAGxiC,EAAfF,EAAEgiC,GAAGjiC,EAAEC,GAAY,GAAY,GAAGA,EAAE0D,KAAI,OAAOxD,IAAIwf,GAAGxf,EAAE,EAAEF,GAAGirC,GAAG/qC,EAAEF,IAAI,KAAK,CAAC,CAACE,EAAEA,EAAE8c,MAAM,CAAC,CACnV,SAASimB,GAAGjjC,EAAEE,EAAEH,GAAG,IAAII,EAAEH,EAAEgjC,UAAU,OAAO7iC,GAAGA,EAAE2gB,OAAO5gB,GAAGA,EAAEwD,KAAI1D,EAAEmf,aAAanf,EAAEkf,eAAenf,EAAEuD,KAAItD,IAAIiqC,GAAElqC,KAAKA,IAAI,IAAIkE,IAAG,IAAIA,KAAM,UAAFgmC,MAAeA,IAAG,IAAI1oC,KAAI0nC,GAAG6C,GAAG9rC,EAAE,GAAGoqC,IAAIrqC,GAAGkrC,GAAGjrC,EAAEE,EAAE,CAAC,SAASmtC,GAAGrtC,EAAEE,GAAG,IAAIA,IAAI,KAAY,EAAPF,EAAE63B,MAAQ33B,EAAE,GAAGA,EAAE4e,GAAU,KAAQ,WAAfA,KAAK,MAAuBA,GAAG,WAAW,IAAI/e,EAAE2D,KAAc,QAAV1D,EAAEs6B,GAAGt6B,EAAEE,MAAcwf,GAAG1f,EAAEE,EAAEH,GAAGkrC,GAAGjrC,EAAED,GAAG,CAAC,SAAS2lC,GAAG1lC,GAAG,IAAIE,EAAEF,EAAEmd,cAAcpd,EAAE,EAAE,OAAOG,IAAIH,EAAEG,EAAEy3B,WAAW0V,GAAGrtC,EAAED,EAAE,CACjZ,SAAS6oC,GAAG5oC,EAAEE,GAAG,IAAIH,EAAE,EAAE,OAAOC,EAAE4S,KAAK,KAAK,GAAG,IAAIzS,EAAEH,EAAEyb,UAAcrb,EAAEJ,EAAEmd,cAAc,OAAO/c,IAAIL,EAAEK,EAAEu3B,WAAW,MAAM,KAAK,GAAGx3B,EAAEH,EAAEyb,UAAU,MAAM,QAAQ,MAAMlZ,MAAM7C,EAAE,MAAO,OAAOS,GAAGA,EAAE2gB,OAAO5gB,GAAGmtC,GAAGrtC,EAAED,EAAE,CAQqK,SAAS0rC,GAAGzrC,EAAEE,GAAG,OAAOyd,GAAG3d,EAAEE,EAAE,CACjZ,SAASotC,GAAGttC,EAAEE,EAAEH,EAAEI,GAAG4B,KAAK6Q,IAAI5S,EAAE+B,KAAKhG,IAAIgE,EAAEgC,KAAKyb,QAAQzb,KAAKwb,MAAMxb,KAAKib,OAAOjb,KAAK0Z,UAAU1Z,KAAKxB,KAAKwB,KAAK0L,YAAY,KAAK1L,KAAKjG,MAAM,EAAEiG,KAAKpC,IAAI,KAAKoC,KAAKy1B,aAAat3B,EAAE6B,KAAK63B,aAAa73B,KAAKob,cAAcpb,KAAK04B,YAAY14B,KAAKk2B,cAAc,KAAKl2B,KAAK81B,KAAK13B,EAAE4B,KAAK8jC,aAAa9jC,KAAKkb,MAAM,EAAElb,KAAKu1B,UAAU,KAAKv1B,KAAK23B,WAAW33B,KAAK+3B,MAAM,EAAE/3B,KAAKgb,UAAU,IAAI,CAAC,SAASsa,GAAGr3B,EAAEE,EAAEH,EAAEI,GAAG,OAAO,IAAImtC,GAAGttC,EAAEE,EAAEH,EAAEI,EAAE,CAAC,SAASsjC,GAAGzjC,GAAiB,UAAdA,EAAEA,EAAE7C,aAAuB6C,EAAEqC,iBAAiB,CAEpd,SAASs2B,GAAG34B,EAAEE,GAAG,IAAIH,EAAEC,EAAE+c,UACuB,OADb,OAAOhd,IAAGA,EAAEs3B,GAAGr3B,EAAE4S,IAAI1S,EAAEF,EAAEjE,IAAIiE,EAAE63B,OAAQpqB,YAAYzN,EAAEyN,YAAY1N,EAAEQ,KAAKP,EAAEO,KAAKR,EAAE0b,UAAUzb,EAAEyb,UAAU1b,EAAEgd,UAAU/c,EAAEA,EAAE+c,UAAUhd,IAAIA,EAAEy3B,aAAat3B,EAAEH,EAAEQ,KAAKP,EAAEO,KAAKR,EAAEkd,MAAM,EAAEld,EAAE8lC,aAAa,EAAE9lC,EAAEu3B,UAAU,MAAMv3B,EAAEkd,MAAc,SAARjd,EAAEid,MAAeld,EAAE25B,WAAW15B,EAAE05B,WAAW35B,EAAE+5B,MAAM95B,EAAE85B,MAAM/5B,EAAEwd,MAAMvd,EAAEud,MAAMxd,EAAEk4B,cAAcj4B,EAAEi4B,cAAcl4B,EAAEod,cAAcnd,EAAEmd,cAAcpd,EAAE06B,YAAYz6B,EAAEy6B,YAAYv6B,EAAEF,EAAE45B,aAAa75B,EAAE65B,aAAa,OAAO15B,EAAE,KAAK,CAAC45B,MAAM55B,EAAE45B,MAAMD,aAAa35B,EAAE25B,cAC/e95B,EAAEyd,QAAQxd,EAAEwd,QAAQzd,EAAEjE,MAAMkE,EAAElE,MAAMiE,EAAEJ,IAAIK,EAAEL,IAAWI,CAAC,CACxD,SAAS84B,GAAG74B,EAAEE,EAAEH,EAAEI,EAAEC,EAAEjE,GAAG,IAAI8D,EAAE,EAAM,GAAJE,EAAEH,EAAK,oBAAoBA,EAAEyjC,GAAGzjC,KAAKC,EAAE,QAAQ,GAAG,kBAAkBD,EAAEC,EAAE,OAAOD,EAAE,OAAOA,GAAG,KAAKiR,EAAG,OAAO+nB,GAAGj5B,EAAEoD,SAAS/C,EAAEjE,EAAE+D,GAAG,KAAKgR,EAAGjR,EAAE,EAAEG,GAAG,EAAE,MAAM,KAAK+Q,EAAG,OAAOnR,EAAEq3B,GAAG,GAAGt3B,EAAEG,EAAI,EAAFE,IAAOqN,YAAY0D,EAAGnR,EAAE85B,MAAM39B,EAAE6D,EAAE,KAAKuR,EAAG,OAAOvR,EAAEq3B,GAAG,GAAGt3B,EAAEG,EAAEE,IAAKqN,YAAY8D,EAAGvR,EAAE85B,MAAM39B,EAAE6D,EAAE,KAAKwR,EAAG,OAAOxR,EAAEq3B,GAAG,GAAGt3B,EAAEG,EAAEE,IAAKqN,YAAY+D,EAAGxR,EAAE85B,MAAM39B,EAAE6D,EAAE,KAAK2R,EAAG,OAAOyzB,GAAGrlC,EAAEK,EAAEjE,EAAE+D,GAAG,QAAQ,GAAG,kBAAkBF,GAAG,OAAOA,EAAE,OAAOA,EAAEM,UAAU,KAAK8Q,EAAGnR,EAAE,GAAG,MAAMD,EAAE,KAAKqR,EAAGpR,EAAE,EAAE,MAAMD,EAAE,KAAKsR,EAAGrR,EAAE,GACpf,MAAMD,EAAE,KAAKyR,EAAGxR,EAAE,GAAG,MAAMD,EAAE,KAAK0R,EAAGzR,EAAE,GAAGE,EAAE,KAAK,MAAMH,EAAE,MAAMuC,MAAM7C,EAAE,IAAI,MAAMM,EAAEA,SAASA,EAAE,KAAuD,OAAjDE,EAAEm3B,GAAGp3B,EAAEF,EAAEG,EAAEE,IAAKqN,YAAYzN,EAAEE,EAAEK,KAAKJ,EAAED,EAAE45B,MAAM39B,EAAS+D,CAAC,CAAC,SAAS84B,GAAGh5B,EAAEE,EAAEH,EAAEI,GAA2B,OAAxBH,EAAEq3B,GAAG,EAAEr3B,EAAEG,EAAED,IAAK45B,MAAM/5B,EAASC,CAAC,CAAC,SAASolC,GAAGplC,EAAEE,EAAEH,EAAEI,GAAuE,OAApEH,EAAEq3B,GAAG,GAAGr3B,EAAEG,EAAED,IAAKuN,YAAYkE,EAAG3R,EAAE85B,MAAM/5B,EAAEC,EAAEyb,UAAU,CAACutB,UAAS,GAAWhpC,CAAC,CAAC,SAAS44B,GAAG54B,EAAEE,EAAEH,GAA8B,OAA3BC,EAAEq3B,GAAG,EAAEr3B,EAAE,KAAKE,IAAK45B,MAAM/5B,EAASC,CAAC,CAC5W,SAAS+4B,GAAG/4B,EAAEE,EAAEH,GAA8J,OAA3JG,EAAEm3B,GAAG,EAAE,OAAOr3B,EAAEmD,SAASnD,EAAEmD,SAAS,GAAGnD,EAAEjE,IAAImE,IAAK45B,MAAM/5B,EAAEG,EAAEub,UAAU,CAACiG,cAAc1hB,EAAE0hB,cAAc6rB,gBAAgB,KAAKzU,eAAe94B,EAAE84B,gBAAuB54B,CAAC,CACtL,SAASstC,GAAGxtC,EAAEE,EAAEH,EAAEI,EAAEC,GAAG2B,KAAK6Q,IAAI1S,EAAE6B,KAAK2f,cAAc1hB,EAAE+B,KAAKoqC,aAAapqC,KAAKihC,UAAUjhC,KAAKrB,QAAQqB,KAAKwrC,gBAAgB,KAAKxrC,KAAKuqC,eAAe,EAAEvqC,KAAKmpC,aAAanpC,KAAK2iC,eAAe3iC,KAAKC,QAAQ,KAAKD,KAAKupC,iBAAiB,EAAEvpC,KAAK4d,WAAWF,GAAG,GAAG1d,KAAKopC,gBAAgB1rB,IAAI,GAAG1d,KAAKqd,eAAerd,KAAKqqC,cAAcrqC,KAAK6qC,iBAAiB7qC,KAAKqpC,aAAarpC,KAAKod,YAAYpd,KAAKmd,eAAend,KAAKkd,aAAa,EAAEld,KAAKsd,cAAcI,GAAG,GAAG1d,KAAK8+B,iBAAiB1gC,EAAE4B,KAAKkrC,mBAAmB7sC,EAAE2B,KAAK0rC,gCAC/e,IAAI,CAAC,SAASC,GAAG1tC,EAAEE,EAAEH,EAAEI,EAAEC,EAAEjE,EAAE8D,EAAEI,EAAElB,GAAgN,OAA7Ma,EAAE,IAAIwtC,GAAGxtC,EAAEE,EAAEH,EAAEM,EAAElB,GAAG,IAAIe,GAAGA,EAAE,GAAE,IAAK/D,IAAI+D,GAAG,IAAIA,EAAE,EAAE/D,EAAEk7B,GAAG,EAAE,KAAK,KAAKn3B,GAAGF,EAAEU,QAAQvE,EAAEA,EAAEsf,UAAUzb,EAAE7D,EAAEghB,cAAc,CAAC3P,QAAQrN,EAAEshB,aAAa1hB,EAAE4tC,MAAM,KAAK5J,YAAY,KAAK6J,0BAA0B,MAAMpT,GAAGr+B,GAAU6D,CAAC,CACzP,SAAS6tC,GAAG7tC,GAAG,IAAIA,EAAE,OAAO+0B,GAAuB/0B,EAAE,CAAC,GAAG8c,GAA1B9c,EAAEA,EAAEihC,mBAA8BjhC,GAAG,IAAIA,EAAE4S,IAAI,MAAMrQ,MAAM7C,EAAE,MAAM,IAAIQ,EAAEF,EAAE,EAAE,CAAC,OAAOE,EAAE0S,KAAK,KAAK,EAAE1S,EAAEA,EAAEub,UAAUzZ,QAAQ,MAAMhC,EAAE,KAAK,EAAE,GAAGs1B,GAAGp1B,EAAEK,MAAM,CAACL,EAAEA,EAAEub,UAAUoa,0CAA0C,MAAM71B,CAAC,EAAEE,EAAEA,EAAE8c,MAAM,OAAO,OAAO9c,GAAG,MAAMqC,MAAM7C,EAAE,KAAM,CAAC,GAAG,IAAIM,EAAE4S,IAAI,CAAC,IAAI7S,EAAEC,EAAEO,KAAK,GAAG+0B,GAAGv1B,GAAG,OAAO21B,GAAG11B,EAAED,EAAEG,EAAE,CAAC,OAAOA,CAAC,CACpW,SAAS4tC,GAAG9tC,EAAEE,EAAEH,EAAEI,EAAEC,EAAEjE,EAAE8D,EAAEI,EAAElB,GAAwK,OAArKa,EAAE0tC,GAAG3tC,EAAEI,GAAE,EAAGH,EAAEI,EAAEjE,EAAE8D,EAAEI,EAAElB,IAAK6C,QAAQ6rC,GAAG,MAAM9tC,EAAEC,EAAEU,SAAsBvE,EAAE8+B,GAAhB96B,EAAEuD,KAAItD,EAAEkgC,GAAGvgC,KAAe0I,cAAS,IAASvI,GAAG,OAAOA,EAAEA,EAAE,KAAKm7B,GAAGt7B,EAAE5D,EAAEiE,GAAGJ,EAAEU,QAAQo5B,MAAM15B,EAAEsf,GAAG1f,EAAEI,EAAED,GAAG8qC,GAAGjrC,EAAEG,GAAUH,CAAC,CAAC,SAAS+tC,GAAG/tC,EAAEE,EAAEH,EAAEI,GAAG,IAAIC,EAAEF,EAAEQ,QAAQvE,EAAEuH,KAAIzD,EAAEqgC,GAAGlgC,GAAsL,OAAnLL,EAAE8tC,GAAG9tC,GAAG,OAAOG,EAAE8B,QAAQ9B,EAAE8B,QAAQjC,EAAEG,EAAEwkC,eAAe3kC,GAAEG,EAAE+6B,GAAG9+B,EAAE8D,IAAKm7B,QAAQ,CAAC5tB,QAAQxN,GAAuB,QAApBG,OAAE,IAASA,EAAE,KAAKA,KAAaD,EAAEuI,SAAStI,GAAe,QAAZH,EAAEq7B,GAAGj7B,EAAEF,EAAED,MAAcg/B,GAAGj/B,EAAEI,EAAEH,EAAE9D,GAAGm/B,GAAGt7B,EAAEI,EAAEH,IAAWA,CAAC,CAC3b,SAAS+tC,GAAGhuC,GAAe,OAAZA,EAAEA,EAAEU,SAAc6c,OAAyBvd,EAAEud,MAAM3K,IAAoD5S,EAAEud,MAAM9B,WAAhF,IAA0F,CAAC,SAASwyB,GAAGjuC,EAAEE,GAAqB,GAAG,QAArBF,EAAEA,EAAEmd,gBAA2B,OAAOnd,EAAEod,WAAW,CAAC,IAAIrd,EAAEC,EAAE23B,UAAU33B,EAAE23B,UAAU,IAAI53B,GAAGA,EAAEG,EAAEH,EAAEG,CAAC,CAAC,CAAC,SAASguC,GAAGluC,EAAEE,GAAG+tC,GAAGjuC,EAAEE,IAAIF,EAAEA,EAAE+c,YAAYkxB,GAAGjuC,EAAEE,EAAE,CAnB7SwpC,GAAG,SAAS1pC,EAAEE,EAAEH,GAAG,GAAG,OAAOC,EAAE,GAAGA,EAAEi4B,gBAAgB/3B,EAAEs3B,cAAcxC,GAAGt0B,QAAQq5B,IAAG,MAAO,CAAC,GAAG,KAAK/5B,EAAE85B,MAAM/5B,IAAI,KAAa,IAARG,EAAE+c,OAAW,OAAO8c,IAAG,EAzE1I,SAAY/5B,EAAEE,EAAEH,GAAG,OAAOG,EAAE0S,KAAK,KAAK,EAAE6xB,GAAGvkC,GAAGi4B,KAAK,MAAM,KAAK,EAAEgE,GAAGj8B,GAAG,MAAM,KAAK,EAAEo1B,GAAGp1B,EAAEK,OAAOq1B,GAAG11B,GAAG,MAAM,KAAK,EAAE87B,GAAG97B,EAAEA,EAAEub,UAAUiG,eAAe,MAAM,KAAK,GAAG,IAAIvhB,EAAED,EAAEK,KAAK0F,SAAS7F,EAAEF,EAAE+3B,cAAc57B,MAAM+F,GAAE+2B,GAAGh5B,EAAEuF,eAAevF,EAAEuF,cAActF,EAAE,MAAM,KAAK,GAAqB,GAAG,QAArBD,EAAED,EAAEid,eAA2B,OAAG,OAAOhd,EAAEid,YAAkBhb,GAAEa,GAAY,EAAVA,GAAEvC,SAAWR,EAAE+c,OAAO,IAAI,MAAQ,KAAKld,EAAEG,EAAEqd,MAAMmc,YAAmBwL,GAAGllC,EAAEE,EAAEH,IAAGqC,GAAEa,GAAY,EAAVA,GAAEvC,SAA8B,QAAnBV,EAAEujC,GAAGvjC,EAAEE,EAAEH,IAAmBC,EAAEwd,QAAQ,MAAKpb,GAAEa,GAAY,EAAVA,GAAEvC,SAAW,MAAM,KAAK,GAC7d,GADgeP,EAAE,KAAKJ,EACrfG,EAAEw5B,YAAe,KAAa,IAAR15B,EAAEid,OAAW,CAAC,GAAG9c,EAAE,OAAOmmC,GAAGtmC,EAAEE,EAAEH,GAAGG,EAAE+c,OAAO,GAAG,CAA6F,GAA1E,QAAlB7c,EAAEF,EAAEid,iBAAyB/c,EAAE6lC,UAAU,KAAK7lC,EAAEgmC,KAAK,KAAKhmC,EAAEy+B,WAAW,MAAMz8B,GAAEa,GAAEA,GAAEvC,SAAYP,EAAE,MAAW,OAAO,KAAK,KAAK,GAAG,KAAK,GAAG,OAAOD,EAAE45B,MAAM,EAAE8J,GAAG5jC,EAAEE,EAAEH,GAAG,OAAOwjC,GAAGvjC,EAAEE,EAAEH,EAAE,CAwE7GouC,CAAGnuC,EAAEE,EAAEH,GAAGg6B,GAAG,KAAa,OAAR/5B,EAAEid,MAAmB,MAAM8c,IAAG,EAAGn3B,IAAG,KAAa,QAAR1C,EAAE+c,QAAgB6Z,GAAG52B,EAAEq2B,GAAGr2B,EAAEpE,OAAiB,OAAVoE,EAAE45B,MAAM,EAAS55B,EAAE0S,KAAK,KAAK,EAAE,IAAIzS,EAAED,EAAEK,KAAK6jC,GAAGpkC,EAAEE,GAAGF,EAAEE,EAAEs3B,aAAa,IAAIp3B,EAAE80B,GAAGh1B,EAAEuC,GAAE/B,SAASi5B,GAAGz5B,EAAEH,GAAGK,EAAE88B,GAAG,KAAKh9B,EAAEC,EAAEH,EAAEI,EAAEL,GAAG,IAAI5D,EAAEohC,KACvI,OAD4Ir9B,EAAE+c,OAAO,EAAE,kBAAkB7c,GAAG,OAAOA,GAAG,oBAAoBA,EAAEkG,aAAQ,IAASlG,EAAEE,UAAUJ,EAAE0S,IAAI,EAAE1S,EAAEid,cAAc,KAAKjd,EAAEu6B,YAC1e,KAAKnF,GAAGn1B,IAAIhE,GAAE,EAAGy5B,GAAG11B,IAAI/D,GAAE,EAAG+D,EAAEid,cAAc,OAAO/c,EAAEkhC,YAAO,IAASlhC,EAAEkhC,MAAMlhC,EAAEkhC,MAAM,KAAK9G,GAAGt6B,GAAGE,EAAE8B,QAAQ8+B,GAAG9gC,EAAEub,UAAUrb,EAAEA,EAAE6gC,gBAAgB/gC,EAAEwhC,GAAGxhC,EAAEC,EAAEH,EAAED,GAAGG,EAAEskC,GAAG,KAAKtkC,EAAEC,GAAE,EAAGhE,EAAE4D,KAAKG,EAAE0S,IAAI,EAAEhQ,IAAGzG,GAAG46B,GAAG72B,GAAGmjC,GAAG,KAAKnjC,EAAEE,EAAEL,GAAGG,EAAEA,EAAEqd,OAAcrd,EAAE,KAAK,GAAGC,EAAED,EAAEuN,YAAYzN,EAAE,CAAqF,OAApFokC,GAAGpkC,EAAEE,GAAGF,EAAEE,EAAEs3B,aAAuBr3B,GAAVC,EAAED,EAAEuG,OAAUvG,EAAEsG,UAAUvG,EAAEK,KAAKJ,EAAEC,EAAEF,EAAE0S,IAQtU,SAAY5S,GAAG,GAAG,oBAAoBA,EAAE,OAAOyjC,GAAGzjC,GAAG,EAAE,EAAE,QAAG,IAASA,GAAG,OAAOA,EAAE,CAAc,IAAbA,EAAEA,EAAEM,YAAgBgR,EAAG,OAAO,GAAG,GAAGtR,IAAIyR,EAAG,OAAO,EAAE,CAAC,OAAO,CAAC,CAR2L28B,CAAGjuC,GAAGH,EAAE8gC,GAAG3gC,EAAEH,GAAUI,GAAG,KAAK,EAAEF,EAAEyjC,GAAG,KAAKzjC,EAAEC,EAAEH,EAAED,GAAG,MAAMC,EAAE,KAAK,EAAEE,EAAEikC,GAAG,KAAKjkC,EAAEC,EAAEH,EAAED,GAAG,MAAMC,EAAE,KAAK,GAAGE,EAAEojC,GAAG,KAAKpjC,EAAEC,EAAEH,EAAED,GAAG,MAAMC,EAAE,KAAK,GAAGE,EAAEsjC,GAAG,KAAKtjC,EAAEC,EAAE2gC,GAAG3gC,EAAEI,KAAKP,GAAGD,GAAG,MAAMC,EAAE,MAAMuC,MAAM7C,EAAE,IACvgBS,EAAE,IAAK,CAAC,OAAOD,EAAE,KAAK,EAAE,OAAOC,EAAED,EAAEK,KAAKH,EAAEF,EAAEs3B,aAA2CmM,GAAG3jC,EAAEE,EAAEC,EAArCC,EAAEF,EAAEuN,cAActN,EAAEC,EAAE0gC,GAAG3gC,EAAEC,GAAcL,GAAG,KAAK,EAAE,OAAOI,EAAED,EAAEK,KAAKH,EAAEF,EAAEs3B,aAA2C2M,GAAGnkC,EAAEE,EAAEC,EAArCC,EAAEF,EAAEuN,cAActN,EAAEC,EAAE0gC,GAAG3gC,EAAEC,GAAcL,GAAG,KAAK,EAAEC,EAAE,CAAO,GAANykC,GAAGvkC,GAAM,OAAOF,EAAE,MAAMuC,MAAM7C,EAAE,MAAMS,EAAED,EAAEs3B,aAA+Bp3B,GAAlBjE,EAAE+D,EAAEid,eAAkB3P,QAAQwtB,GAAGh7B,EAAEE,GAAGs7B,GAAGt7B,EAAEC,EAAE,KAAKJ,GAAG,IAAIE,EAAEC,EAAEid,cAA0B,GAAZhd,EAAEF,EAAEuN,QAAWrR,EAAEslB,aAAY,CAAC,GAAGtlB,EAAE,CAACqR,QAAQrN,EAAEshB,cAAa,EAAGksB,MAAM1tC,EAAE0tC,MAAMC,0BAA0B3tC,EAAE2tC,0BAA0B7J,YAAY9jC,EAAE8jC,aAAa7jC,EAAEu6B,YAAYC,UAChfv+B,EAAE+D,EAAEid,cAAchhB,EAAU,IAAR+D,EAAE+c,MAAU,CAAuB/c,EAAEykC,GAAG3kC,EAAEE,EAAEC,EAAEJ,EAAjCK,EAAE4hC,GAAGz/B,MAAM7C,EAAE,MAAMQ,IAAmB,MAAMF,CAAC,CAAM,GAAGG,IAAIC,EAAE,CAAuBF,EAAEykC,GAAG3kC,EAAEE,EAAEC,EAAEJ,EAAjCK,EAAE4hC,GAAGz/B,MAAM7C,EAAE,MAAMQ,IAAmB,MAAMF,CAAC,CAAM,IAAIk3B,GAAG9C,GAAGl0B,EAAEub,UAAUiG,cAAczL,YAAYghB,GAAG/2B,EAAE0C,IAAE,EAAGu0B,GAAG,KAAKp3B,EAAEm5B,GAAGh5B,EAAE,KAAKC,EAAEJ,GAAGG,EAAEqd,MAAMxd,EAAEA,GAAGA,EAAEkd,OAAe,EAATld,EAAEkd,MAAS,KAAKld,EAAEA,EAAEyd,OAAQ,KAAI,CAAM,GAAL2a,KAAQh4B,IAAIC,EAAE,CAACF,EAAEqjC,GAAGvjC,EAAEE,EAAEH,GAAG,MAAMC,CAAC,CAACqjC,GAAGrjC,EAAEE,EAAEC,EAAEJ,EAAE,CAACG,EAAEA,EAAEqd,KAAK,CAAC,OAAOrd,EAAE,KAAK,EAAE,OAAOi8B,GAAGj8B,GAAG,OAAOF,GAAG83B,GAAG53B,GAAGC,EAAED,EAAEK,KAAKH,EAAEF,EAAEs3B,aAAar7B,EAAE,OAAO6D,EAAEA,EAAEi4B,cAAc,KAAKh4B,EAAEG,EAAE+C,SAASqwB,GAAGrzB,EAAEC,GAAGH,EAAE,KAAK,OAAO9D,GAAGq3B,GAAGrzB,EAAEhE,KAAK+D,EAAE+c,OAAO,IACnfinB,GAAGlkC,EAAEE,GAAGmjC,GAAGrjC,EAAEE,EAAED,EAAEF,GAAGG,EAAEqd,MAAM,KAAK,EAAE,OAAO,OAAOvd,GAAG83B,GAAG53B,GAAG,KAAK,KAAK,GAAG,OAAOglC,GAAGllC,EAAEE,EAAEH,GAAG,KAAK,EAAE,OAAOi8B,GAAG97B,EAAEA,EAAEub,UAAUiG,eAAevhB,EAAED,EAAEs3B,aAAa,OAAOx3B,EAAEE,EAAEqd,MAAM0b,GAAG/4B,EAAE,KAAKC,EAAEJ,GAAGsjC,GAAGrjC,EAAEE,EAAEC,EAAEJ,GAAGG,EAAEqd,MAAM,KAAK,GAAG,OAAOpd,EAAED,EAAEK,KAAKH,EAAEF,EAAEs3B,aAA2C8L,GAAGtjC,EAAEE,EAAEC,EAArCC,EAAEF,EAAEuN,cAActN,EAAEC,EAAE0gC,GAAG3gC,EAAEC,GAAcL,GAAG,KAAK,EAAE,OAAOsjC,GAAGrjC,EAAEE,EAAEA,EAAEs3B,aAAaz3B,GAAGG,EAAEqd,MAAM,KAAK,EAAmD,KAAK,GAAG,OAAO8lB,GAAGrjC,EAAEE,EAAEA,EAAEs3B,aAAar0B,SAASpD,GAAGG,EAAEqd,MAAM,KAAK,GAAGvd,EAAE,CACxZ,GADyZG,EAAED,EAAEK,KAAK0F,SAAS7F,EAAEF,EAAEs3B,aAAar7B,EAAE+D,EAAE+3B,cAClfh4B,EAAEG,EAAE/D,MAAM+F,GAAE+2B,GAAGh5B,EAAEuF,eAAevF,EAAEuF,cAAczF,EAAK,OAAO9D,EAAE,GAAGgxB,GAAGhxB,EAAEE,MAAM4D,IAAI,GAAG9D,EAAEgH,WAAW/C,EAAE+C,WAAW6xB,GAAGt0B,QAAQ,CAACR,EAAEqjC,GAAGvjC,EAAEE,EAAEH,GAAG,MAAMC,CAAC,OAAO,IAAc,QAAV7D,EAAE+D,EAAEqd,SAAiBphB,EAAE6gB,OAAO9c,GAAG,OAAO/D,GAAG,CAAC,IAAIkE,EAAElE,EAAEy9B,aAAa,GAAG,OAAOv5B,EAAE,CAACJ,EAAE9D,EAAEohB,MAAM,IAAI,IAAIpe,EAAEkB,EAAEw5B,aAAa,OAAO16B,GAAG,CAAC,GAAGA,EAAE6C,UAAU7B,EAAE,CAAC,GAAG,IAAIhE,EAAEyW,IAAI,EAACzT,EAAE87B,IAAI,EAAEl7B,GAAGA,IAAK6S,IAAI,EAAE,IAAItT,EAAEnD,EAAEs+B,YAAY,GAAG,OAAOn7B,EAAE,CAAY,IAAIC,GAAfD,EAAEA,EAAEu7B,QAAeC,QAAQ,OAAOv7B,EAAEJ,EAAE2E,KAAK3E,GAAGA,EAAE2E,KAAKvE,EAAEuE,KAAKvE,EAAEuE,KAAK3E,GAAGG,EAAEw7B,QAAQ37B,CAAC,CAAC,CAAChD,EAAE29B,OAAO/5B,EAAgB,QAAdZ,EAAEhD,EAAE4gB,aAAqB5d,EAAE26B,OAAO/5B,GAAG05B,GAAGt9B,EAAE6gB,OAClfjd,EAAEG,GAAGG,EAAEy5B,OAAO/5B,EAAE,KAAK,CAACZ,EAAEA,EAAE2E,IAAI,CAAC,MAAM,GAAG,KAAK3H,EAAEyW,IAAI3S,EAAE9D,EAAEoE,OAAOL,EAAEK,KAAK,KAAKpE,EAAEohB,WAAW,GAAG,KAAKphB,EAAEyW,IAAI,CAAY,GAAG,QAAd3S,EAAE9D,EAAE6gB,QAAmB,MAAMza,MAAM7C,EAAE,MAAMO,EAAE65B,OAAO/5B,EAAgB,QAAdM,EAAEJ,EAAE8c,aAAqB1c,EAAEy5B,OAAO/5B,GAAG05B,GAAGx5B,EAAEF,EAAEG,GAAGD,EAAE9D,EAAEqhB,OAAO,MAAMvd,EAAE9D,EAAEohB,MAAM,GAAG,OAAOtd,EAAEA,EAAE+c,OAAO7gB,OAAO,IAAI8D,EAAE9D,EAAE,OAAO8D,GAAG,CAAC,GAAGA,IAAIC,EAAE,CAACD,EAAE,KAAK,KAAK,CAAa,GAAG,QAAf9D,EAAE8D,EAAEud,SAAoB,CAACrhB,EAAE6gB,OAAO/c,EAAE+c,OAAO/c,EAAE9D,EAAE,KAAK,CAAC8D,EAAEA,EAAE+c,MAAM,CAAC7gB,EAAE8D,CAAC,CAACojC,GAAGrjC,EAAEE,EAAEE,EAAE+C,SAASpD,GAAGG,EAAEA,EAAEqd,KAAK,CAAC,OAAOrd,EAAE,KAAK,EAAE,OAAOE,EAAEF,EAAEK,KAAKJ,EAAED,EAAEs3B,aAAar0B,SAASw2B,GAAGz5B,EAAEH,GAAWI,EAAEA,EAAVC,EAAE45B,GAAG55B,IAAUF,EAAE+c,OAAO,EAAEomB,GAAGrjC,EAAEE,EAAEC,EAAEJ,GACpfG,EAAEqd,MAAM,KAAK,GAAG,OAAgBnd,EAAE0gC,GAAX3gC,EAAED,EAAEK,KAAYL,EAAEs3B,cAA6BgM,GAAGxjC,EAAEE,EAAEC,EAAtBC,EAAE0gC,GAAG3gC,EAAEI,KAAKH,GAAcL,GAAG,KAAK,GAAG,OAAO2jC,GAAG1jC,EAAEE,EAAEA,EAAEK,KAAKL,EAAEs3B,aAAaz3B,GAAG,KAAK,GAAG,OAAOI,EAAED,EAAEK,KAAKH,EAAEF,EAAEs3B,aAAap3B,EAAEF,EAAEuN,cAActN,EAAEC,EAAE0gC,GAAG3gC,EAAEC,GAAGgkC,GAAGpkC,EAAEE,GAAGA,EAAE0S,IAAI,EAAE0iB,GAAGn1B,IAAIH,GAAE,EAAG41B,GAAG11B,IAAIF,GAAE,EAAG25B,GAAGz5B,EAAEH,GAAGqhC,GAAGlhC,EAAEC,EAAEC,GAAGshC,GAAGxhC,EAAEC,EAAEC,EAAEL,GAAGykC,GAAG,KAAKtkC,EAAEC,GAAE,EAAGH,EAAED,GAAG,KAAK,GAAG,OAAOumC,GAAGtmC,EAAEE,EAAEH,GAAG,KAAK,GAAG,OAAO6jC,GAAG5jC,EAAEE,EAAEH,GAAG,MAAMwC,MAAM7C,EAAE,IAAIQ,EAAE0S,KAAM,EAYxC,IAAIy7B,GAAG,oBAAoBC,YAAYA,YAAY,SAAStuC,GAAG8J,QAAQC,MAAM/J,EAAE,EAAE,SAASuuC,GAAGvuC,GAAG+B,KAAKysC,cAAcxuC,CAAC,CACjI,SAASyuC,GAAGzuC,GAAG+B,KAAKysC,cAAcxuC,CAAC,CAC5J,SAAS0uC,GAAG1uC,GAAG,SAASA,GAAG,IAAIA,EAAEwW,UAAU,IAAIxW,EAAEwW,UAAU,KAAKxW,EAAEwW,SAAS,CAAC,SAASm4B,GAAG3uC,GAAG,SAASA,GAAG,IAAIA,EAAEwW,UAAU,IAAIxW,EAAEwW,UAAU,KAAKxW,EAAEwW,WAAW,IAAIxW,EAAEwW,UAAU,iCAAiCxW,EAAEyW,WAAW,CAAC,SAASm4B,KAAK,CAExa,SAASC,GAAG7uC,EAAEE,EAAEH,EAAEI,EAAEC,GAAG,IAAIjE,EAAE4D,EAAEqoC,oBAAoB,GAAGjsC,EAAE,CAAC,IAAI8D,EAAE9D,EAAE,GAAG,oBAAoBiE,EAAE,CAAC,IAAIC,EAAED,EAAEA,EAAE,WAAW,IAAIJ,EAAEguC,GAAG/tC,GAAGI,EAAEnB,KAAKc,EAAE,CAAC,CAAC+tC,GAAG7tC,EAAED,EAAED,EAAEI,EAAE,MAAMH,EADxJ,SAAYD,EAAEE,EAAEH,EAAEI,EAAEC,GAAG,GAAGA,EAAE,CAAC,GAAG,oBAAoBD,EAAE,CAAC,IAAIhE,EAAEgE,EAAEA,EAAE,WAAW,IAAIH,EAAEguC,GAAG/tC,GAAG9D,EAAE+C,KAAKc,EAAE,CAAC,CAAC,IAAIC,EAAE6tC,GAAG5tC,EAAEC,EAAEH,EAAE,EAAE,MAAK,EAAG,EAAG,GAAG4uC,IAAmF,OAA/E5uC,EAAEooC,oBAAoBnoC,EAAED,EAAEqyB,IAAIpyB,EAAES,QAAQuxB,GAAG,IAAIjyB,EAAEwW,SAASxW,EAAEmb,WAAWnb,GAAGwsC,KAAYvsC,CAAC,CAAC,KAAKG,EAAEJ,EAAEuW,WAAWvW,EAAEkW,YAAY9V,GAAG,GAAG,oBAAoBD,EAAE,CAAC,IAAIE,EAAEF,EAAEA,EAAE,WAAW,IAAIH,EAAEguC,GAAG7uC,GAAGkB,EAAEnB,KAAKc,EAAE,CAAC,CAAC,IAAIb,EAAEuuC,GAAG1tC,EAAE,GAAE,EAAG,KAAK,GAAK,EAAG,EAAG,GAAG4uC,IAA0G,OAAtG5uC,EAAEooC,oBAAoBjpC,EAAEa,EAAEqyB,IAAIlzB,EAAEuB,QAAQuxB,GAAG,IAAIjyB,EAAEwW,SAASxW,EAAEmb,WAAWnb,GAAGwsC,IAAG,WAAWuB,GAAG7tC,EAAEf,EAAEY,EAAEI,EAAE,IAAUhB,CAAC,CACpU2vC,CAAG/uC,EAAEG,EAAEF,EAAEI,EAAED,GAAG,OAAO6tC,GAAG/tC,EAAE,CAHpLwuC,GAAGtxC,UAAUmJ,OAAOioC,GAAGpxC,UAAUmJ,OAAO,SAAStG,GAAG,IAAIE,EAAE6B,KAAKysC,cAAc,GAAG,OAAOtuC,EAAE,MAAMqC,MAAM7C,EAAE,MAAMquC,GAAG/tC,EAAEE,EAAE,KAAK,KAAK,EAAEuuC,GAAGtxC,UAAU4xC,QAAQR,GAAGpxC,UAAU4xC,QAAQ,WAAW,IAAI/uC,EAAE+B,KAAKysC,cAAc,GAAG,OAAOxuC,EAAE,CAAC+B,KAAKysC,cAAc,KAAK,IAAItuC,EAAEF,EAAE0hB,cAAc8qB,IAAG,WAAWuB,GAAG,KAAK/tC,EAAE,KAAK,KAAK,IAAGE,EAAEmyB,IAAI,IAAI,CAAC,EACzToc,GAAGtxC,UAAU6xC,2BAA2B,SAAShvC,GAAG,GAAGA,EAAE,CAAC,IAAIE,EAAE+f,KAAKjgB,EAAE,CAACkhB,UAAU,KAAK5iB,OAAO0B,EAAEwhB,SAASthB,GAAG,IAAI,IAAIH,EAAE,EAAEA,EAAE4gB,GAAG1hB,QAAQ,IAAIiB,GAAGA,EAAEygB,GAAG5gB,GAAGyhB,SAASzhB,KAAK4gB,GAAGsuB,OAAOlvC,EAAE,EAAEC,GAAG,IAAID,GAAGuhB,GAAGthB,EAAE,CAAC,EAEX8f,GAAG,SAAS9f,GAAG,OAAOA,EAAE4S,KAAK,KAAK,EAAE,IAAI1S,EAAEF,EAAEyb,UAAU,GAAGvb,EAAEQ,QAAQyc,cAAcsE,aAAa,CAAC,IAAI1hB,EAAEgf,GAAG7e,EAAE+e,cAAc,IAAIlf,IAAI6f,GAAG1f,EAAI,EAAFH,GAAKkrC,GAAG/qC,EAAEqB,MAAK,KAAO,EAAFyB,MAAOmkC,GAAG5lC,KAAI,IAAI40B,MAAM,CAAC,MAAM,KAAK,GAAGqW,IAAG,WAAW,IAAItsC,EAAEo6B,GAAGt6B,EAAE,GAAG,GAAG,OAAOE,EAAE,CAAC,IAAIH,EAAE2D,KAAIu7B,GAAG/+B,EAAEF,EAAE,EAAED,EAAE,CAAC,IAAGmuC,GAAGluC,EAAE,GAAG,EAC/b+f,GAAG,SAAS/f,GAAG,GAAG,KAAKA,EAAE4S,IAAI,CAAC,IAAI1S,EAAEo6B,GAAGt6B,EAAE,WAAW,GAAG,OAAOE,EAAa++B,GAAG/+B,EAAEF,EAAE,UAAX0D,MAAwBwqC,GAAGluC,EAAE,UAAU,CAAC,EAAEggB,GAAG,SAAShgB,GAAG,GAAG,KAAKA,EAAE4S,IAAI,CAAC,IAAI1S,EAAEogC,GAAGtgC,GAAGD,EAAEu6B,GAAGt6B,EAAEE,GAAG,GAAG,OAAOH,EAAak/B,GAAGl/B,EAAEC,EAAEE,EAAXwD,MAAgBwqC,GAAGluC,EAAEE,EAAE,CAAC,EAAE+f,GAAG,WAAW,OAAOre,EAAC,EAAEse,GAAG,SAASlgB,EAAEE,GAAG,IAAIH,EAAE6B,GAAE,IAAI,OAAOA,GAAE5B,EAAEE,GAAG,CAAC,QAAQ0B,GAAE7B,CAAC,CAAC,EAClSqb,GAAG,SAASpb,EAAEE,EAAEH,GAAG,OAAOG,GAAG,IAAK,QAAyB,GAAjBwU,EAAG1U,EAAED,GAAGG,EAAEH,EAAEiN,KAAQ,UAAUjN,EAAEQ,MAAM,MAAML,EAAE,CAAC,IAAIH,EAAEC,EAAED,EAAEob,YAAYpb,EAAEA,EAAEob,WAAsF,IAA3Epb,EAAEA,EAAEmvC,iBAAiB,cAAcC,KAAKC,UAAU,GAAGlvC,GAAG,mBAAuBA,EAAE,EAAEA,EAAEH,EAAEd,OAAOiB,IAAI,CAAC,IAAIC,EAAEJ,EAAEG,GAAG,GAAGC,IAAIH,GAAGG,EAAEkvC,OAAOrvC,EAAEqvC,KAAK,CAAC,IAAIjvC,EAAEsb,GAAGvb,GAAG,IAAIC,EAAE,MAAMmC,MAAM7C,EAAE,KAAKkU,EAAGzT,GAAGuU,EAAGvU,EAAEC,EAAE,CAAC,CAAC,CAAC,MAAM,IAAK,WAAWmV,GAAGvV,EAAED,GAAG,MAAM,IAAK,SAAmB,OAAVG,EAAEH,EAAE1D,QAAe0Y,GAAG/U,IAAID,EAAE4mC,SAASzmC,GAAE,GAAI,EAAE2b,GAAG0wB,GAAGzwB,GAAG0wB,GACpa,IAAI8C,GAAG,CAACC,uBAAsB,EAAGC,OAAO,CAACh0B,GAAG4Q,GAAG1Q,GAAGC,GAAGC,GAAG2wB,KAAKkD,GAAG,CAACC,wBAAwBnuB,GAAGouB,WAAW,EAAE7nC,QAAQ,SAAS8nC,oBAAoB,aAC1IC,GAAG,CAACF,WAAWF,GAAGE,WAAW7nC,QAAQ2nC,GAAG3nC,QAAQ8nC,oBAAoBH,GAAGG,oBAAoBE,eAAeL,GAAGK,eAAeC,kBAAkB,KAAKC,4BAA4B,KAAKC,4BAA4B,KAAKC,cAAc,KAAKC,wBAAwB,KAAKC,wBAAwB,KAAKC,gBAAgB,KAAKC,mBAAmB,KAAKC,eAAe,KAAKC,qBAAqB1/B,EAAGpM,uBAAuB+rC,wBAAwB,SAASzwC,GAAW,OAAO,QAAfA,EAAEsd,GAAGtd,IAAmB,KAAKA,EAAEyb,SAAS,EAAEi0B,wBAAwBD,GAAGC,yBARjN,WAAc,OAAO,IAAI,EASpUgB,4BAA4B,KAAKC,gBAAgB,KAAKC,aAAa,KAAKC,kBAAkB,KAAKC,gBAAgB,KAAKC,kBAAkB,mCAAmC,GAAG,qBAAqBC,+BAA+B,CAAC,IAAIC,GAAGD,+BAA+B,IAAIC,GAAGC,YAAYD,GAAGE,cAAc,IAAI9yB,GAAG4yB,GAAGG,OAAOvB,IAAIvxB,GAAG2yB,EAAE,CAAC,MAAMjxC,IAAG,CAAC,CAACnG,EAAQ2F,mDAAmD8vC,GAC/Yz1C,EAAQw3C,aAAa,SAASrxC,EAAEE,GAAG,IAAIH,EAAE,EAAEf,UAAUC,aAAQ,IAASD,UAAU,GAAGA,UAAU,GAAG,KAAK,IAAI0vC,GAAGxuC,GAAG,MAAMqC,MAAM7C,EAAE,MAAM,OAbuH,SAAYM,EAAEE,EAAEH,GAAG,IAAII,EAAE,EAAEnB,UAAUC,aAAQ,IAASD,UAAU,GAAGA,UAAU,GAAG,KAAK,MAAM,CAACsB,SAAS0Q,EAAGjV,IAAI,MAAMoE,EAAE,KAAK,GAAGA,EAAEgD,SAASnD,EAAE0hB,cAAcxhB,EAAE44B,eAAe/4B,EAAE,CAa1RuxC,CAAGtxC,EAAEE,EAAE,KAAKH,EAAE,EAAElG,EAAQuS,WAAW,SAASpM,EAAEE,GAAG,IAAIwuC,GAAG1uC,GAAG,MAAMuC,MAAM7C,EAAE,MAAM,IAAIK,GAAE,EAAGI,EAAE,GAAGC,EAAEiuC,GAA4P,OAAzP,OAAOnuC,QAAG,IAASA,KAAI,IAAKA,EAAEqxC,sBAAsBxxC,GAAE,QAAI,IAASG,EAAE2gC,mBAAmB1gC,EAAED,EAAE2gC,uBAAkB,IAAS3gC,EAAE+sC,qBAAqB7sC,EAAEF,EAAE+sC,qBAAqB/sC,EAAEwtC,GAAG1tC,EAAE,GAAE,EAAG,KAAK,EAAKD,EAAE,EAAGI,EAAEC,GAAGJ,EAAEqyB,IAAInyB,EAAEQ,QAAQuxB,GAAG,IAAIjyB,EAAEwW,SAASxW,EAAEmb,WAAWnb,GAAU,IAAIuuC,GAAGruC,EAAE,EACrfrG,EAAQ23C,YAAY,SAASxxC,GAAG,GAAG,MAAMA,EAAE,OAAO,KAAK,GAAG,IAAIA,EAAEwW,SAAS,OAAOxW,EAAE,IAAIE,EAAEF,EAAEihC,gBAAgB,QAAG,IAAS/gC,EAAE,CAAC,GAAG,oBAAoBF,EAAEsG,OAAO,MAAM/D,MAAM7C,EAAE,MAAiC,MAA3BM,EAAE/C,OAAOkB,KAAK6B,GAAGlC,KAAK,KAAWyE,MAAM7C,EAAE,IAAIM,GAAI,CAAqC,OAA5BA,EAAE,QAAVA,EAAEsd,GAAGpd,IAAc,KAAKF,EAAEyb,SAAkB,EAAE5hB,EAAQ43C,UAAU,SAASzxC,GAAG,OAAOwsC,GAAGxsC,EAAE,EAAEnG,EAAQ63C,QAAQ,SAAS1xC,EAAEE,EAAEH,GAAG,IAAI4uC,GAAGzuC,GAAG,MAAMqC,MAAM7C,EAAE,MAAM,OAAOmvC,GAAG,KAAK7uC,EAAEE,GAAE,EAAGH,EAAE,EAC/YlG,EAAQwS,YAAY,SAASrM,EAAEE,EAAEH,GAAG,IAAI2uC,GAAG1uC,GAAG,MAAMuC,MAAM7C,EAAE,MAAM,IAAIS,EAAE,MAAMJ,GAAGA,EAAE4xC,iBAAiB,KAAKvxC,GAAE,EAAGjE,EAAE,GAAG8D,EAAEouC,GAAyO,GAAtO,OAAOtuC,QAAG,IAASA,KAAI,IAAKA,EAAEwxC,sBAAsBnxC,GAAE,QAAI,IAASL,EAAE8gC,mBAAmB1kC,EAAE4D,EAAE8gC,uBAAkB,IAAS9gC,EAAEktC,qBAAqBhtC,EAAEF,EAAEktC,qBAAqB/sC,EAAE4tC,GAAG5tC,EAAE,KAAKF,EAAE,EAAE,MAAMD,EAAEA,EAAE,KAAKK,EAAE,EAAGjE,EAAE8D,GAAGD,EAAEqyB,IAAInyB,EAAEQ,QAAQuxB,GAAGjyB,GAAMG,EAAE,IAAIH,EAAE,EAAEA,EAAEG,EAAElB,OAAOe,IAA2BI,GAAhBA,GAAPL,EAAEI,EAAEH,IAAO4xC,aAAgB7xC,EAAE8xC,SAAS,MAAM3xC,EAAEutC,gCAAgCvtC,EAAEutC,gCAAgC,CAAC1tC,EAAEK,GAAGF,EAAEutC,gCAAgC7pC,KAAK7D,EACvhBK,GAAG,OAAO,IAAIquC,GAAGvuC,EAAE,EAAErG,EAAQyM,OAAO,SAAStG,EAAEE,EAAEH,GAAG,IAAI4uC,GAAGzuC,GAAG,MAAMqC,MAAM7C,EAAE,MAAM,OAAOmvC,GAAG,KAAK7uC,EAAEE,GAAE,EAAGH,EAAE,EAAElG,EAAQi4C,uBAAuB,SAAS9xC,GAAG,IAAI2uC,GAAG3uC,GAAG,MAAMuC,MAAM7C,EAAE,KAAK,QAAOM,EAAEooC,sBAAqBoE,IAAG,WAAWqC,GAAG,KAAK,KAAK7uC,GAAE,GAAG,WAAWA,EAAEooC,oBAAoB,KAAKpoC,EAAEqyB,IAAI,IAAI,GAAE,KAAG,EAAM,EAAEx4B,EAAQk4C,wBAAwBxF,GAC/U1yC,EAAQm4C,oCAAoC,SAAShyC,EAAEE,EAAEH,EAAEI,GAAG,IAAIwuC,GAAG5uC,GAAG,MAAMwC,MAAM7C,EAAE,MAAM,GAAG,MAAMM,QAAG,IAASA,EAAEihC,gBAAgB,MAAM1+B,MAAM7C,EAAE,KAAK,OAAOmvC,GAAG7uC,EAAEE,EAAEH,GAAE,EAAGI,EAAE,EAAEtG,EAAQiO,QAAQ,8DC9T3LlO,EAAOC,QAAU,EAAjBD,iCCMW,IAAI0F,EAAEtF,EAAQ,KAAiB6D,EAAE,oBAAoBuB,QAAQA,OAAOC,IAAIK,EAAE7B,EAAEuB,OAAOC,IAAI,iBAAiB,MAAMS,EAAEjC,EAAEuB,OAAOC,IAAI,gBAAgB,MAAMyB,EAAEjD,EAAEuB,OAAOC,IAAI,kBAAkB,MAAM0B,EAAElD,EAAEuB,OAAOC,IAAI,qBAAqB,MAAM2B,EAAEnD,EAAEuB,OAAOC,IAAI,kBAAkB,MAAM4B,EAAEpD,EAAEuB,OAAOC,IAAI,kBAAkB,MAAM6B,EAAErD,EAAEuB,OAAOC,IAAI,iBAAiB,MAAM8B,EAAEtD,EAAEuB,OAAOC,IAAI,qBAAqB,MAAM+B,EAAEvD,EAAEuB,OAAOC,IAAI,kBAAkB,MAAMgC,EAAExD,EAAEuB,OAAOC,IAAI,cAAc,MAAMwE,EAAEhG,EAAEuB,OAAOC,IAAI,cACxe,MAAMkC,EAAE,oBAAoBnC,QAAQA,OAAOkC,SAAS,SAASM,EAAE5B,GAAG,IAAI,IAAIE,EAAE,yDAAyDF,EAAED,EAAE,EAAEA,EAAEf,UAAUC,OAAOc,IAAIG,GAAG,WAAWyO,mBAAmB3P,UAAUe,IAAI,MAAM,yBAAyBC,EAAE,WAAWE,EAAE,gHAAgH,CAC/W,IAAI2B,EAAE,CAACL,UAAU,WAAW,OAAM,CAAE,EAAEC,mBAAmB,WAAW,EAAEC,oBAAoB,WAAW,EAAEC,gBAAgB,WAAW,GAAGG,EAAE,CAAC,EAAE,SAASK,EAAEnC,EAAEE,EAAEH,GAAGgC,KAAKvB,MAAMR,EAAE+B,KAAKC,QAAQ9B,EAAE6B,KAAKE,KAAKH,EAAEC,KAAKG,QAAQnC,GAAG8B,CAAC,CACrN,SAASO,IAAI,CAAyB,SAASK,EAAEzC,EAAEE,EAAEH,GAAGgC,KAAKvB,MAAMR,EAAE+B,KAAKC,QAAQ9B,EAAE6B,KAAKE,KAAKH,EAAEC,KAAKG,QAAQnC,GAAG8B,CAAC,CADqGM,EAAEhF,UAAUkF,iBAAiB,CAAC,EAAEF,EAAEhF,UAAUmF,SAAS,SAAStC,EAAEE,GAAG,GAAG,kBAAkBF,GAAG,oBAAoBA,GAAG,MAAMA,EAAE,MAAMuC,MAAMX,EAAE,KAAKG,KAAKG,QAAQP,gBAAgBI,KAAK/B,EAAEE,EAAE,WAAW,EAAEiC,EAAEhF,UAAUqF,YAAY,SAASxC,GAAG+B,KAAKG,QAAQT,mBAAmBM,KAAK/B,EAAE,cAAc,EACjeoC,EAAEjF,UAAUgF,EAAEhF,UAAsF,IAAIyF,EAAEH,EAAEtF,UAAU,IAAIiF,EAAEQ,EAAEF,YAAYD,EAAEnD,EAAEsD,EAAET,EAAEhF,WAAWyF,EAAED,sBAAqB,EAAG,IAAII,EAAE,CAACrC,QAAQ,MAAMsC,EAAE/F,OAAOE,UAAUD,eAAe+F,EAAE,CAAClH,KAAI,EAAG4D,KAAI,EAAGC,QAAO,EAAGC,UAAS,GAChS,SAASqD,EAAElD,EAAEE,EAAEH,GAAG,IAAIK,EAAED,EAAE,CAAC,EAAEF,EAAE,KAAKd,EAAE,KAAK,GAAG,MAAMe,EAAE,IAAIE,UAAK,IAASF,EAAEP,MAAMR,EAAEe,EAAEP,UAAK,IAASO,EAAEnE,MAAMkE,EAAE,GAAGC,EAAEnE,KAAKmE,EAAE8C,EAAE9D,KAAKgB,EAAEE,KAAK6C,EAAE/F,eAAekD,KAAKD,EAAEC,GAAGF,EAAEE,IAAI,IAAIjE,EAAE6C,UAAUC,OAAO,EAAE,GAAG,IAAI9C,EAAEgE,EAAEgD,SAASpD,OAAO,GAAG,EAAE5D,EAAE,CAAC,IAAI,IAAIkE,EAAEwC,MAAM1G,GAAGoD,EAAE,EAAEA,EAAEpD,EAAEoD,IAAIc,EAAEd,GAAGP,UAAUO,EAAE,GAAGY,EAAEgD,SAAS9C,CAAC,CAAC,GAAGL,GAAGA,EAAElD,aAAa,IAAIsD,KAAKjE,EAAE6D,EAAElD,kBAAe,IAASqD,EAAEC,KAAKD,EAAEC,GAAGjE,EAAEiE,IAAI,MAAM,CAACE,SAASZ,EAAEa,KAAKP,EAAEjE,IAAIkE,EAAEN,IAAIR,EAAEqB,MAAML,EAAEM,OAAOsC,EAAErC,QAAQ,CAChV,SAAS0C,EAAEpD,GAAG,MAAM,kBAAkBA,GAAG,OAAOA,GAAGA,EAAEM,WAAWZ,CAAC,CAAyG,IAAI2D,EAAE,OAAOC,EAAE,GAAG,SAASI,EAAE1D,EAAEE,EAAEH,EAAEK,GAAG,GAAGkD,EAAErE,OAAO,CAAC,IAAIkB,EAAEmD,EAAEyE,MAA8D,OAAxD5H,EAAE8xC,OAAOjyC,EAAEG,EAAE+xC,UAAUhyC,EAAEC,EAAEiN,KAAKrN,EAAEI,EAAE6B,QAAQ5B,EAAED,EAAE4E,MAAM,EAAS5E,CAAC,CAAC,MAAM,CAAC8xC,OAAOjyC,EAAEkyC,UAAUhyC,EAAEkN,KAAKrN,EAAEiC,QAAQ5B,EAAE2E,MAAM,EAAE,CAC9b,SAASf,EAAEhE,GAAGA,EAAEiyC,OAAO,KAAKjyC,EAAEkyC,UAAU,KAAKlyC,EAAEoN,KAAK,KAAKpN,EAAEgC,QAAQ,KAAKhC,EAAE+E,MAAM,EAAE,GAAGzB,EAAErE,QAAQqE,EAAEM,KAAK5D,EAAE,CACxG,SAASiE,EAAEjE,EAAEE,EAAEH,EAAEK,GAAG,IAAID,SAASH,EAAK,cAAcG,GAAG,YAAYA,IAAEH,EAAE,MAAK,IAAIC,GAAE,EAAG,GAAG,OAAOD,EAAEC,GAAE,OAAQ,OAAOE,GAAG,IAAK,SAAS,IAAK,SAASF,GAAE,EAAG,MAAM,IAAK,SAAS,OAAOD,EAAEM,UAAU,KAAKZ,EAAE,KAAKI,EAAEG,GAAE,GAAI,GAAGA,EAAE,OAAOF,EAAEK,EAAEJ,EAAE,KAAKE,EAAE,IAAIoE,EAAEtE,EAAE,GAAGE,GAAG,EAAyB,GAAvBD,EAAE,EAAEC,EAAE,KAAKA,EAAE,IAAIA,EAAE,IAAO2C,MAAMC,QAAQ9C,GAAG,IAAI,IAAIb,EAAE,EAAEA,EAAEa,EAAEf,OAAOE,IAAI,CAAQ,IAAIhD,EAAE+D,EAAEoE,EAAfnE,EAAEH,EAAEb,GAAeA,GAAGc,GAAGgE,EAAE9D,EAAEhE,EAAE4D,EAAEK,EAAE,MAAM,GAAG,OAAOJ,GAAG,kBAAkBA,EAAE7D,EAAE,KAAiCA,EAAE,oBAA7BA,EAAEoF,GAAGvB,EAAEuB,IAAIvB,EAAE,eAAsC7D,EAAE,KAAM,oBAAoBA,EAAE,IAAI6D,EAAE7D,EAAE+C,KAAKc,GAAGb,EACpf,IAAIgB,EAAEH,EAAE8D,QAAQC,MAA6B9D,GAAGgE,EAA1B9D,EAAEA,EAAE9D,MAAMF,EAAE+D,EAAEoE,EAAEnE,EAAEhB,KAAcY,EAAEK,QAAQ,GAAG,WAAWD,EAAE,MAAMJ,EAAE,GAAGC,EAAEuC,MAAMX,EAAE,GAAG,oBAAoB7B,EAAE,qBAAqB9C,OAAOkB,KAAK6B,GAAGlC,KAAK,MAAM,IAAIiC,EAAE,KAAK,OAAOE,CAAC,CAAC,SAASsE,EAAEvE,EAAEE,EAAEH,GAAG,OAAO,MAAMC,EAAE,EAAEiE,EAAEjE,EAAE,GAAGE,EAAEH,EAAE,CAAC,SAASuE,EAAEtE,EAAEE,GAAG,MAAM,kBAAkBF,GAAG,OAAOA,GAAG,MAAMA,EAAEjE,IAH9I,SAAgBiE,GAAG,IAAIE,EAAE,CAAC,IAAI,KAAK,IAAI,MAAM,MAAM,KAAK,GAAGF,GAAGuD,QAAQ,SAAQ,SAASvD,GAAG,OAAOE,EAAEF,EAAE,GAAE,CAG2CwD,CAAOxD,EAAEjE,KAAKmE,EAAEuD,SAAS,GAAG,CAAC,SAASgB,EAAEzE,EAAEE,GAAGF,EAAEoN,KAAKlO,KAAKc,EAAEgC,QAAQ9B,EAAEF,EAAE+E,QAAQ,CAChY,SAAS0J,EAAGzO,EAAEE,EAAEH,GAAG,IAAIK,EAAEJ,EAAEiyC,OAAO9xC,EAAEH,EAAEkyC,UAAUlyC,EAAEA,EAAEoN,KAAKlO,KAAKc,EAAEgC,QAAQ9B,EAAEF,EAAE+E,SAASlC,MAAMC,QAAQ9C,GAAG4E,EAAE5E,EAAEI,EAAEL,GAAE,SAASC,GAAG,OAAOA,CAAC,IAAG,MAAMA,IAAIoD,EAAEpD,KAAKA,EAJtJ,SAAWA,EAAEE,GAAG,MAAM,CAACI,SAASZ,EAAEa,KAAKP,EAAEO,KAAKxE,IAAImE,EAAEP,IAAIK,EAAEL,IAAIa,MAAMR,EAAEQ,MAAMC,OAAOT,EAAES,OAAO,CAI4DkD,CAAE3D,EAAEG,IAAIH,EAAEjE,KAAKmE,GAAGA,EAAEnE,MAAMiE,EAAEjE,IAAI,IAAI,GAAGiE,EAAEjE,KAAKwH,QAAQF,EAAE,OAAO,KAAKtD,IAAIK,EAAEwD,KAAK5D,GAAG,CAAC,SAAS4E,EAAE5E,EAAEE,EAAEH,EAAEK,EAAED,GAAG,IAAIF,EAAE,GAAG,MAAMF,IAAIE,GAAG,GAAGF,GAAGwD,QAAQF,EAAE,OAAO,KAAkBkB,EAAEvE,EAAEyO,EAAjBvO,EAAEwD,EAAExD,EAAED,EAAEG,EAAED,IAAa6D,EAAE9D,EAAE,CAAC,IAAI8pC,EAAE,CAACtpC,QAAQ,MAAM,SAASupC,IAAI,IAAIjqC,EAAEgqC,EAAEtpC,QAAQ,GAAG,OAAOV,EAAE,MAAMuC,MAAMX,EAAE,MAAM,OAAO5B,CAAC,CACza,IAAI4yB,EAAG,CAACluB,uBAAuBslC,EAAErlC,wBAAwB,CAACwtC,SAAS,MAAM1yC,kBAAkBsD,EAAEqvC,qBAAqB,CAAC1xC,SAAQ,GAAIpD,OAAOgC,GAAGzF,EAAQgL,SAAS,CAACjJ,IAAI,SAASoE,EAAEE,EAAEH,GAAG,GAAG,MAAMC,EAAE,OAAOA,EAAE,IAAII,EAAE,GAAmB,OAAhBwE,EAAE5E,EAAEI,EAAE,KAAKF,EAAEH,GAAUK,CAAC,EAAEnC,QAAQ,SAAS+B,EAAEE,EAAEH,GAAG,GAAG,MAAMC,EAAE,OAAOA,EAAqBuE,EAAEvE,EAAEyE,EAAvBvE,EAAEwD,EAAE,KAAK,KAAKxD,EAAEH,IAAYiE,EAAE9D,EAAE,EAAE6E,MAAM,SAAS/E,GAAG,OAAOuE,EAAEvE,GAAE,WAAW,OAAO,IAAI,GAAE,KAAK,EAAEgF,QAAQ,SAAShF,GAAG,IAAIE,EAAE,GAAqC,OAAlC0E,EAAE5E,EAAEE,EAAE,MAAK,SAASF,GAAG,OAAOA,CAAC,IAAUE,CAAC,EAAE+E,KAAK,SAASjF,GAAG,IAAIoD,EAAEpD,GAAG,MAAMuC,MAAMX,EAAE,MAAM,OAAO5B,CAAC,GAC/enG,EAAQqL,UAAU/C,EAAEtI,EAAQ8G,SAASG,EAAEjH,EAAQsL,SAASnE,EAAEnH,EAAQuL,cAAc3C,EAAE5I,EAAQwL,WAAWtE,EAAElH,EAAQyL,SAASlE,EAAEvH,EAAQ2F,mDAAmDozB,EACrL/4B,EAAQ2L,aAAa,SAASxF,EAAEE,EAAEH,GAAG,GAAG,OAAOC,QAAG,IAASA,EAAE,MAAMuC,MAAMX,EAAE,IAAI5B,IAAI,IAAII,EAAEd,EAAE,CAAC,EAAEU,EAAEQ,OAAOL,EAAEH,EAAEjE,IAAIkE,EAAED,EAAEL,IAAIR,EAAEa,EAAES,OAAO,GAAG,MAAMP,EAAE,CAAoE,QAAnE,IAASA,EAAEP,MAAMM,EAAEC,EAAEP,IAAIR,EAAE4D,EAAErC,cAAS,IAASR,EAAEnE,MAAMoE,EAAE,GAAGD,EAAEnE,KAAQiE,EAAEO,MAAMP,EAAEO,KAAKzD,aAAa,IAAIX,EAAE6D,EAAEO,KAAKzD,aAAa,IAAIuD,KAAKH,EAAE8C,EAAE9D,KAAKgB,EAAEG,KAAK4C,EAAE/F,eAAemD,KAAKD,EAAEC,QAAG,IAASH,EAAEG,SAAI,IAASlE,EAAEA,EAAEkE,GAAGH,EAAEG,GAAG,CAAC,IAAIA,EAAErB,UAAUC,OAAO,EAAE,GAAG,IAAIoB,EAAED,EAAE+C,SAASpD,OAAO,GAAG,EAAEM,EAAE,CAAClE,EAAE0G,MAAMxC,GAAG,IAAI,IAAId,EAAE,EAAEA,EAAEc,EAAEd,IAAIpD,EAAEoD,GAAGP,UAAUO,EAAE,GAAGa,EAAE+C,SAAShH,CAAC,CAAC,MAAM,CAACmE,SAASZ,EAAEa,KAAKP,EAAEO,KACxfxE,IAAIoE,EAAER,IAAIM,EAAEO,MAAMJ,EAAEK,OAAOtB,EAAE,EAAEtF,EAAQ4L,cAAc,SAASzF,EAAEE,GAA8K,YAA3K,IAASA,IAAIA,EAAE,OAAMF,EAAE,CAACM,SAASY,EAAEmxC,sBAAsBnyC,EAAEwF,cAAc1F,EAAE2F,eAAe3F,EAAE4F,aAAa,EAAEC,SAAS,KAAKC,SAAS,OAAQD,SAAS,CAACvF,SAASW,EAAEgF,SAASjG,GAAUA,EAAE8F,SAAS9F,CAAC,EAAEnG,EAAQgB,cAAcqI,EAAErJ,EAAQqM,cAAc,SAASlG,GAAG,IAAIE,EAAEgD,EAAEiD,KAAK,KAAKnG,GAAY,OAATE,EAAEK,KAAKP,EAASE,CAAC,EAAErG,EAAQuM,UAAU,WAAW,MAAM,CAAC1F,QAAQ,KAAK,EAAE7G,EAAQwM,WAAW,SAASrG,GAAG,MAAM,CAACM,SAASa,EAAEmF,OAAOtG,EAAE,EAAEnG,EAAQ0M,eAAenD,EAC3evJ,EAAQ2M,KAAK,SAASxG,GAAG,MAAM,CAACM,SAASuD,EAAEyuC,MAAMtyC,EAAEkE,SAAS,EAAEC,QAAQ,KAAK,EAAEtK,EAAQ8M,KAAK,SAAS3G,EAAEE,GAAG,MAAM,CAACI,SAASe,EAAEd,KAAKP,EAAE4G,aAAQ,IAAS1G,EAAE,KAAKA,EAAE,EAAErG,EAAQkN,YAAY,SAAS/G,EAAEE,GAAG,OAAO+pC,IAAIljC,YAAY/G,EAAEE,EAAE,EAAErG,EAAQmN,WAAW,SAAShH,EAAEE,GAAG,OAAO+pC,IAAIjjC,WAAWhH,EAAEE,EAAE,EAAErG,EAAQoN,cAAc,WAAW,EAAEpN,EAAQsN,UAAU,SAASnH,EAAEE,GAAG,OAAO+pC,IAAI9iC,UAAUnH,EAAEE,EAAE,EAAErG,EAAQwN,oBAAoB,SAASrH,EAAEE,EAAEH,GAAG,OAAOkqC,IAAI5iC,oBAAoBrH,EAAEE,EAAEH,EAAE,EACxclG,EAAQ0N,gBAAgB,SAASvH,EAAEE,GAAG,OAAO+pC,IAAI1iC,gBAAgBvH,EAAEE,EAAE,EAAErG,EAAQ2N,QAAQ,SAASxH,EAAEE,GAAG,OAAO+pC,IAAIziC,QAAQxH,EAAEE,EAAE,EAAErG,EAAQ4N,WAAW,SAASzH,EAAEE,EAAEH,GAAG,OAAOkqC,IAAIxiC,WAAWzH,EAAEE,EAAEH,EAAE,EAAElG,EAAQ6N,OAAO,SAAS1H,GAAG,OAAOiqC,IAAIviC,OAAO1H,EAAE,EAAEnG,EAAQ8N,SAAS,SAAS3H,GAAG,OAAOiqC,IAAItiC,SAAS3H,EAAE,EAAEnG,EAAQiO,QAAQ,uCCtBrT,SAASyqC,IAEP,GAC4C,qBAAnCvB,gCAC4C,oBAA5CA,+BAA+BuB,SAcxC,IAEEvB,+BAA+BuB,SAASA,EAC1C,CAAE,MAAOn0C,GAGP0L,QAAQC,MAAM3L,EAChB,CACF,CAKEm0C,GACA34C,EAAOC,QAAU,EAAjBD,iCChCFqD,OAAO2N,eAAe/Q,EAAS,aAAc,CAC3CwC,OAAO,IAETxC,EAAiB,aAAI,EAErB,IAAIC,EAASC,EAAuBC,EAAQ,MAExCC,EAAaF,EAAuBC,EAAQ,MAEhD,SAASD,EAAuBO,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAE,QAAWA,EAAO,CAEhG,IAAIk4C,EAAgB,CAClB,EAAG,CAAC,GAAI,GAAI,GAAI,GAAI,IACpB,EAAG,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,KAErBC,EAAgB,CAAC,KAAM,KAAM,GAAI,IACjCtkC,EAAS,CACX,EAAG,EACH,GAAI,GAEFD,EAAY,CACdzR,OAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAC7BD,KAAM,EAAE,EAAG,IAAK,GAAI,GAAI,GAAI,IAC5BR,OAAQ,EAAE,EAAG,EAAG,KAAM,KAAM,OAG1BoS,EAAoB,SAA2B3R,EAAQnB,GACzD,OAAO4S,EAAUzR,OAAOA,EAAS0R,EAAO7S,GAC1C,EAaIo3C,EAAQ,SAAej4C,GACzB,IAAIoB,EAAQpB,EAAKoB,MACbN,EAAQd,EAAKc,MACbC,EAAOf,EAAKe,KACZQ,EAASvB,EAAKuB,OACdpB,EAAOH,EAAKG,KACZU,EAAUC,EAAM0D,OAChB0zC,EAlBW,SAAoBp3C,EAAOM,GAC1C,OAAON,EAAMK,KAAI,SAAUO,EAAGL,GAC5B,MAAO,CACLM,SAAUN,EACVO,MAAOF,EAEX,IAAGG,QAAO,SAAUH,GAClB,OAAOA,EAAEE,QAAUR,CACrB,GACF,CASmB+2C,CAAWr3C,EAAOM,GAC/Bg3C,EAAUF,EAAW,GAAGv2C,SAExBtB,EAA8B,IADpB63C,EAAWA,EAAW1zC,OAAS,GAAG7C,SACzBy2C,GACnBzxC,EAAIqxC,EAAc52C,EAAQ,GAC9B,OAAO/B,EAAgB,QAAEe,cAAc,IAAK,KAAMW,GAAQ1B,EAAgB,QAAEe,cAAc,IAAK,KAAMf,EAAgB,QAAEe,cAAc,IAAK,CACxIK,UAAW,aAAa+P,OAAOmD,EAAkB9S,EAASA,GAAU,MAAM2P,OAAOiD,EAAU1R,KAAKm2C,EAAW,GAAGt2C,OAAQ,MACrHvC,EAAgB,QAAEe,cAAc,OAAQ,CACzCsF,EAAG,qFACHwL,KAAM,OACNmN,YAAa,GACb5d,UAAW,iBACRpB,EAAgB,QAAEe,cAAc,OAAQ,CAC3C8Q,KAAM,OACNxK,EAAGqxC,EAAcl3C,GAAS,GAC1B8F,EAAGqxC,EAAc52C,EAAQ,GACzBf,MAAuB,IAAfQ,EAAU,GAClBwd,YAAa,GACb6P,OAAQ,OACN7uB,EAAgB,QAAEe,cAAc,IAAK,CACvCK,UAAW,aAAa+P,OAAOmD,EAAkB,EAAG9S,GAAU,MAAM2P,OAAOiD,EAAU1R,KAAKm2C,EAAW,GAAGt2C,OAAQ,MAC/GvC,EAAgB,QAAEe,cAAc,OAAQ,CACzCsF,EAAG,qFACHwL,KAAM,OACNmN,YAAa,GACb5d,UAAW,iBACPy3C,EAAW/2C,KAAI,SAAUY,GAC7B,OAAO1C,EAAgB,QAAEe,cAAc,SAAU,CAC/CkB,IAAKS,EAAKJ,SACVmP,YAAa,OACbD,OAAQ,OACRK,KAAM,OACN4C,GAAIH,EAAkB9S,EAAUkB,EAAKJ,SAAUd,GAC/CkT,GAAIN,EAAU1R,KAAKA,EAAKH,OACxByE,EAAG,GAEP,IAAIhH,EAAgB,QAAEe,cAAc,OAAQ,CAC1C8Q,KAAM,OACNxK,EAAGqxC,EAAcl3C,GAASu3C,GAC1BzxC,EAAGA,EACHtG,MAAOA,EACP6tB,OAAQ,QACL/tB,GAAQoB,GAAU22C,EAAW/2C,KAAI,SAAUY,GAC9C,OAAO1C,EAAgB,QAAEe,cAAc,OAAQ,CAC7CkB,IAAKS,EAAKJ,SACVsP,SAAU,MACVE,WAAY,UACZG,WAAY,SACZJ,KAAM,QACNxK,EAAGiN,EAAkB9S,EAAUkB,EAAKJ,SAAUd,GAC9C8F,EAAG8M,EAAUlS,OAAOQ,EAAKH,QACxBL,EACL,IACF,EAEA02C,EAAMh2C,UAAY,CAChBnB,MAAOtB,EAAoB,QAAE+R,MAC7BnQ,MAAO5B,EAAoB,QAAEgS,OAC7BzQ,KAAMvB,EAAoB,QAAE4C,KAC5BjC,KAAMX,EAAoB,QAAE4C,KAC5Bb,OAAQ/B,EAAoB,QAAEkS,MAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,KAEtD,IAAIpP,EAAW21C,EACf74C,EAAiB,QAAIkD,8BC/GrBE,OAAO2N,eAAe/Q,EAAS,aAAc,CAC3CwC,OAAO,IAETxC,EAAQ+C,yBAAsB,EAE9B,IAEgCtC,EAF5BL,GAE4BK,EAFQN,EAAQ,OAEKM,EAAIC,WAAaD,EAAM,CAAE,QAAWA,GAEzF,IAAIsC,EAAsB3C,EAAoB,QAAE6T,MAAM,CACpDxS,QAASrB,EAAoB,QAAEgS,OAAOC,WACtCzQ,aAAcxB,EAAoB,QAAEgS,OAAOC,WAC3Cc,KAAM/S,EAAoB,QAAEwC,OAAOyP,WACnC/N,KAAMlE,EAAoB,QAAEsT,QAAQtT,EAAoB,QAAEkS,MAAM,CAAC,IAAK,KAAM,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,QAC1J/Q,QAASnB,EAAoB,QAAE6T,MAAM,CACnCzS,SAAUpB,EAAoB,QAAEsT,QAAQtT,EAAoB,QAAEwC,QAAQyP,aACrEA,aAGLrS,EAAQ+C,oBAAsBA,ICpB1Bk2C,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBp0C,IAAjBq0C,EACH,OAAOA,EAAap5C,QAGrB,IAAID,EAASk5C,EAAyBE,GAAY,CAGjDn5C,QAAS,CAAC,GAOX,OAHAq5C,EAAoBF,GAAUp5C,EAAQA,EAAOC,QAASk5C,GAG/Cn5C,EAAOC,OACf,yCCtBO,MAAMs5C,UAAqB5wC,MAC9BG,WAAAA,CAAY2lB,GACR+qB,MAAM,kBAAoB/qB,EAAO,MADZrpB,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,KAExB+C,KAAKsmB,KAAOA,CAChB,EAEG,SAASgrB,IACZ,MAA0B,qBAAfC,WACAA,WAES,qBAATC,KACAA,KAEW,qBAAXpkC,OACAA,OAEW,qBAAXqkC,OACAA,OAEJC,SAAS,cAATA,EACX,CACO,SAASC,EAAQvyC,GACpB,QAAUvC,IAANuC,EACA,MAAM,IAAIgyC,EAFan0C,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,YAAoBA,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,IAIrD,OAAOmC,CACX,CACO,SAASwd,EAAIg1B,GAAgB,QAAAC,EAAA50C,UAAAC,OAAN40C,EAAI,IAAAhxC,MAAA+wC,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,EAAA,GAAA90C,UAAA80C,GAC9B,IAAKD,EACD,OACJ,MAAME,EAAOlxC,MAAM1F,UAAU0O,MAAM3M,KAAK20C,GAAM/1C,KAAK,KACnDu1C,IAAevpC,QAAQ6U,IAAIg1B,EAAQ,KAAOI,EAC9C,CASO,SAASC,EAAQh0C,EAAGE,GACvB,IAAI8zC,EAAU9zC,GAAKF,EAAIE,GAAK,EAJhC,IAAgBiB,EAAGtD,EAQf,OAHIm2C,EAAU,EAAI,IACdA,IANQ7yC,EAMmB,GAAV6yC,IANNn2C,EAMoB,IALnBA,EAAI,EAAIo2C,SAAS,GAADhpC,OAAI9J,EAAItD,GAAK,IAAMA,EAAIA,EAAIo2C,SAAS,GAADhpC,OAAI9J,EAAItD,GAAK,IAAMA,GAK9C,IAEjCm2C,CACX,CACO,SAASE,EAAO5oB,GACnB,MAAO,MAAPrgB,OAAaqgB,EACjB,CAIO,SAAS6oB,EAAen0C,GAK3B,OAJAA,GAAS,EAAIgK,KAAKoqC,IACV,IACJp0C,GAAK,EAAIgK,KAAKoqC,IAEXp0C,CACX,CACO,SAASq0C,EAASC,GACrB,OAAOA,EAAIC,QAAO,CAACv0C,EAAGE,IAAMF,EAAIE,GAAG,EACvC,CC9DO,MAAMs0C,EACT,mBAAWC,GACP,MAAO,UACX,CACA,UAAOC,CAAI10C,EAAGE,GACV,GAAiB,kBAANF,GAAkB20C,OAAOrkC,MAAMtQ,IAAmB,kBAANE,GAAkBy0C,OAAOrkC,MAAMpQ,GAClF,MAAM,IAAIizC,EAAa,cAAe,oBAAFloC,OAAsBjL,EAAC,MAAAiL,OAAK/K,IAEpE,IAAIa,EACJ,KAAa,IAANb,GACHa,EAAIb,EACJA,EAAIF,EAAIE,EACRF,EAAIe,EAER,OAAOf,CACX,CACA,UAAO40C,CAAI50C,EAAGE,GACV,OAAQF,EAAIE,EAAKs0C,EAASE,IAAI10C,EAAGE,EACrC,CACA,WAAO20C,CAAKhB,GACR,OAAoB,IAAhBA,EAAK50C,OACE,EAEc,IAAhB40C,EAAK50C,OACH40C,EAAK,GAES,IAAhBA,EAAK50C,OACHu1C,EAASI,IAAIf,EAAK,GAAIA,EAAK,IAG3BW,EAASI,IAAIf,EAAK/xB,QAAS0yB,EAASK,KAAKhB,GAExD,CACAnxC,WAAAA,CAAYoyC,EAAWC,GACnBhzC,KAAK+yC,UAAY,EACjB/yC,KAAKgzC,YAAc,EACnBhzC,KAAKuQ,IAAIwiC,EAAWC,EACxB,CACAziC,GAAAA,GAAoC,IAAhCwiC,EAAS91C,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,EAAG+1C,EAAW/1C,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,EAG7B,OAFA+C,KAAK+yC,UAAYA,EACjB/yC,KAAKgzC,YAAcA,EACZhzC,IACX,CACA1F,KAAAA,GACI,OAAO0F,KAAK+yC,UAAY/yC,KAAKgzC,WACjC,CACAC,QAAAA,GACI,IAAIh0C,EAAIe,KAAK+yC,UACT30C,EAAI4B,KAAKgzC,YACb,MAAME,EAAMT,EAASE,IAAI1zC,EAAGb,GAO5B,OANAa,GAAKi0C,EACL90C,GAAK80C,EACD90C,EAAI,IACJA,GAAKA,EACLa,GAAKA,GAEFe,KAAKuQ,IAAItR,EAAGb,EACvB,CACA8O,GAAAA,GAA4B,IAAxBimC,EAAMl2C,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,EAAGm2C,EAAMn2C,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,EACrB,MAAOo2C,EAAgBC,GAAoBC,EAA2BJ,EAAQC,GACxEI,EAAMf,EAASI,IAAI7yC,KAAKgzC,YAAaM,GACrCr1C,EAAIu1C,EAAMxzC,KAAKgzC,YACf70C,EAAIq1C,EAAMF,EACVr0C,EAAIe,KAAK+yC,UAAY90C,EAAIo1C,EAAiBl1C,EAChD,OAAO6B,KAAKuQ,IAAItR,EAAGu0C,EACvB,CACAC,QAAAA,GAAiC,IAAxBN,EAAMl2C,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,EAAGm2C,EAAMn2C,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,EAC1B,MAAOo2C,EAAgBC,GAAoBC,EAA2BJ,EAAQC,GACxEI,EAAMf,EAASI,IAAI7yC,KAAKgzC,YAAaM,GACrCr1C,EAAIu1C,EAAMxzC,KAAKgzC,YACf70C,EAAIq1C,EAAMF,EACVr0C,EAAIe,KAAK+yC,UAAY90C,EAAIo1C,EAAiBl1C,EAChD,OAAO6B,KAAKuQ,IAAItR,EAAGu0C,EACvB,CACAE,QAAAA,GAAiC,IAAxBP,EAAMl2C,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,EAAGm2C,EAAMn2C,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,EAC1B,MAAOo2C,EAAgBC,GAAoBC,EAA2BJ,EAAQC,GAC9E,OAAOpzC,KAAKuQ,IAAIvQ,KAAK+yC,UAAYM,EAAgBrzC,KAAKgzC,YAAcM,EACxE,CACAK,MAAAA,GAA+B,IAAxBR,EAAMl2C,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,EAAGm2C,EAAMn2C,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,EACxB,MAAOo2C,EAAgBC,GAAoBC,EAA2BJ,EAAQC,GAC9E,OAAOpzC,KAAKuQ,IAAIvQ,KAAK+yC,UAAYO,EAAkBtzC,KAAKgzC,YAAcK,EAC1E,CACAO,MAAAA,CAAO/uC,GACH,MAAM5G,EAAIw0C,EAASoB,UAAUC,KAAKjvC,GAASouC,WACrC90C,EAAIs0C,EAASsB,UAAUD,KAAK9zC,MAAMizC,WACxC,OAAOh1C,EAAE80C,YAAc50C,EAAE40C,WAAa90C,EAAE+0C,cAAgB70C,EAAE60C,WAC9D,CACAgB,WAAAA,CAAYnvC,GACR,MAAM5G,EAAIw0C,EAASoB,UAAUC,KAAK9zC,MAElC,OADA/B,EAAEw1C,SAAS5uC,GACJ5G,EAAE80C,UAAY,CACzB,CACAkB,iBAAAA,CAAkBpvC,GACd,MAAM5G,EAAIw0C,EAASoB,UAAUC,KAAK9zC,MAElC,OADA/B,EAAEw1C,SAAS5uC,GACJ5G,EAAE80C,WAAa,CAC1B,CACAmB,QAAAA,CAASrvC,GACL,OAAQ7E,KAAKi0C,kBAAkBpvC,EACnC,CACAsvC,cAAAA,CAAetvC,GACX,OAAQ7E,KAAKg0C,YAAYnvC,EAC7B,CACAuvC,KAAAA,GACI,OAAO,IAAI3B,EAASzyC,KAAK+yC,UAAW/yC,KAAKgzC,YAC7C,CACAc,IAAAA,CAAKO,GACD,MAAqB,kBAAVA,EACAr0C,KAAKuQ,IAAI8jC,GAGTr0C,KAAKuQ,IAAI8jC,EAAMtB,UAAWsB,EAAMrB,YAE/C,CACAsB,QAAAA,GACI,OAAOrsC,KAAKC,MAAMlI,KAAK+yC,UAAY/yC,KAAKgzC,YAC5C,CACAuB,SAAAA,GACI,OAAOv0C,KAAK+yC,UAAY/yC,KAAKgzC,WACjC,CACAwB,OAAAA,GAGI,OAFAx0C,KAAKgzC,YAAc/qC,KAAKwsC,IAAIz0C,KAAKgzC,aACjChzC,KAAK+yC,UAAY9qC,KAAKwsC,IAAIz0C,KAAK+yC,WACxB/yC,IACX,CACA0B,QAAAA,GACI,MAAO,GAAPwH,OAAUlJ,KAAK+yC,UAAS,KAAA7pC,OAAIlJ,KAAKgzC,YACrC,CACA0B,kBAAAA,GACI,OAAOjC,EAASoB,UAAUC,KAAK9zC,MAAMizC,WAAWvxC,UACpD,CACAizC,aAAAA,GACI,IAAI33C,EAAI,GACR,MAAMe,EAAIiC,KAAKs0C,WACTl6C,EAAIq4C,EAASoB,UAAUC,KAAK9zC,MAgBlC,OAfIjC,EAAI,GACJ3D,EAAEo6C,UAEI,IAANz2C,GACAf,GAAKe,EACe,IAAhB3D,EAAE24C,YACF/1C,GAAK,IAAJkM,OAAQ9O,EAAEs6C,wBAIf13C,EADqB,IAAhB5C,EAAE24C,UACH,IAGA34C,EAAEs6C,qBAEH13C,CACX,CACA43C,KAAAA,CAAMC,GACF,MAAMj5C,EAAIi5C,EAAI54C,MAAM,KACdH,EAAIo2C,SAASt2C,EAAE,GAAI,IACnBwC,EAAIxC,EAAE,GAAKs2C,SAASt2C,EAAE,GAAI,IAAM,EACtC,OAAOoE,KAAKuQ,IAAIzU,EAAGsC,EACvB,EAIJ,SAASm1C,EAA2Bz3C,GAChC,MAAiB,kBAANA,EACA,CAACA,EAFwBmB,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,GAK5B,CAACnB,EAAEi3C,UAAWj3C,EAAEk3C,YAE/B,CATAP,EAASoB,UAAY,IAAIpB,EACzBA,EAASsB,UAAY,IAAItB,ECjKlB,MAAMqC,EACT,YAAOC,CAAM/6C,GACLA,GACAgG,KAAKg1C,UAAUj2B,OAAO/kB,GACtBgG,KAAKi1C,WAAWl2B,OAAO/kB,KAGvBgG,KAAKg1C,UAAUD,QACf/0C,KAAKi1C,WAAWF,QAExB,CACA,kBAAOG,CAAYl7C,GACf,IAAIm7C,EAAOn1C,KAAKg1C,UAAU1jC,IAAItX,GAU9B,OATKm7C,IACDA,EAAO,CACHC,OAAQN,EAAQxjC,IAAI,GAADpI,OAAIlP,EAAG,gBAC1BgrC,KAAM8P,EAAQxjC,IAAI,GAADpI,OAAIlP,EAAG,cAAe86C,EAAQxjC,IAAI,GAADpI,OAAIlP,EAAG,eACzDq7C,OAAQP,EAAQxjC,IAAI,GAADpI,OAAIlP,EAAG,gBAC1Byd,MAAOq9B,EAAQxjC,IAAI,GAADpI,OAAIlP,EAAG,gBAE7BgG,KAAKg1C,UAAUzkC,IAAIvW,EAAKm7C,IAErBG,gBAAgBH,EAC3B,CACA,eAAOI,CAASv7C,GACZ,IAAIyd,EAAQzX,KAAKi1C,WAAW3jC,IAAItX,GAYhC,OAXKyd,IACDA,EAAQ,CACJ+9B,UAAWV,EAAQxjC,IAAI,GAADpI,OAAIlP,EAAG,eAC7By7C,YAAaX,EAAQxjC,IAAI,GAADpI,OAAIlP,EAAG,iBAC/B07C,UAAWZ,EAAQxjC,IAAI,GAADpI,OAAIlP,EAAG,eAC7B27C,SAAUb,EAAQxjC,IAAI,GAADpI,OAAIlP,EAAG,cAC5B47C,WAAYd,EAAQxjC,IAAI,GAADpI,OAAIlP,EAAG,gBAC9B67C,YAAaf,EAAQxjC,IAAI,GAADpI,OAAIlP,EAAG,kBAEnCgG,KAAKi1C,WAAW1kC,IAAIvW,EAAKyd,IAEtB69B,gBAAgB79B,EAC3B,CACA,UAAOnG,CAAItX,EAAKoY,GACZ,IAAI0jC,EACJ,MAAMC,EAAW/7C,EAAIiC,MAAM,KACrB+5C,EAAcD,EAAS/vC,MAC7B,IAAIiwC,EAAOC,EACPC,EAAS/jC,EACb,KAAO6jC,GAAM,CACTE,EAAsC,QAA5BL,EAAKG,EAAKD,UAAiC,IAAPF,EAAgBA,EAAKK,EACnE,MAAMC,EAAUL,EAASh2B,QACzB,IAAIq2B,EAIA,MAHAH,EAAOA,EAAKG,EAKpB,CACA,OAAOD,CACX,EAEJrB,EAAQG,WAAa,IAAIv2B,IACzBo2B,EAAQE,UAAY,IAAIt2B,IACjB,MAAMw3B,EAAkB,CAC3BrsC,WAAY,oBACZF,SAAU,GACV0sC,UAAW,EACXhgC,WAAY,SACZigC,UAAW,SACXC,WAAY,CACRC,WAAY,CACR7sC,SAAU,IAEd8sC,MAAO,CACH9sC,SAAU,IAEd+sC,0BAA2B,EAC3BC,YAAa,EACbC,kBAAmB,GAEvBC,WAAY,CACRltC,SAAU,IAEdmtC,KAAM,CACFntC,SAAU,GACVqoC,KAAM,CACFyD,YAAa,UACbC,UAAW,IAGnBqB,YAAa,CACTptC,SAAU,GACVqtC,QAAS,IACTC,gBAAiB,GACjBC,mBAAoB,GACpBC,cAAe,IAEnBC,eAAgB,CACZztC,SAAU,EACV0M,WAAY,QAEhBghC,UAAW,CACPhB,UAAW,EAAI,GAEnBiB,aAAc,CACVjB,UAAW,EAAI,GAEnBkB,SAAU,CACNC,WAAY,GAEhBC,aAAc,CACVluB,KAAM,CACF5f,SAAU,GACV2sC,UAAW,WAGnBoB,WAAY,CACRnuB,KAAM,CACF5f,SAAU,GACV0M,WAAY,OACZshC,QAAS,GACTC,QAAS,GACTZ,QAAS,GAEba,KAAM,CACFD,QAAS,IAEbE,MAAO,CACHF,QAAS,KAGjBG,MAAO,CACHtC,YAAa,UACb9rC,SAAU,EACVquC,QAAS,GACTC,cAAe,GACfC,cAAe,EACfC,qBAAsB,IAE1BC,eAAgB,CACZ7uB,KAAM,CACF5f,SAAU,KAGlB0uC,UAAW,CACP1uC,SAAU,IAEd2uC,aAAc,CACV3uC,SAAU,GACV0M,WAAY,OACZq/B,UAAW,EACXsC,QAAS,EACTvC,YAAa,SAEjB8C,WAAY,CACR5uC,SAAU,GACV6uC,MAAO,CACH7uC,SAAU,IAEdsB,KAAM,CACFoL,WAAY,SAGpBoiC,UAAW,CACP9uC,SAAU,IAEd+uC,SAAU,CACN/uC,SAAU,IAEdgvC,KAAM,CACFlD,YAAa,SAEjBmD,aAAc,CACVjvC,SAAU,GACV0M,WAAY,OACZwiC,gBAAiB,EACjBC,YAAa,EACbnC,YAAa,EACboC,aAAc,GAElBC,OAAQ,CACJzvB,KAAM,CACF5f,SAAU,GACV2sC,UAAW,SACXjgC,WAAY,SAGpB4iC,QAAS,CACL1vB,KAAM,CACF5f,SAAU,IAGlBuvC,SAAU,CACNvvC,SAAU,GACV2sC,UAAW,SACXjgC,WAAY,QAEhB8iC,SAAU,CACN1D,YAAa,UACb9rC,SAAU,GAEdyvC,OAAQ,CACJzvC,SAAU,IAEd0vC,YAAa,CACT1vC,SAAU,GACV2sC,UAAW,UAEfgD,SAAU,CACN/vB,KAAM,CACF5f,SAAU,KAGlB4vC,QAAS,CACLvC,QAAS,GAEbwC,OAAQ,CACJC,QAAS,EACTC,YAAa,GAEjBC,MAAO,CACHhwC,SAAU,EACV0M,WAAY,SC3Nb,MAAMujC,EACT,WAAO9F,CAAK+F,GACR,OAAO,IAAID,EAAYC,EAAKz6C,EAAGy6C,EAAKx6C,EAAGw6C,EAAK16C,EAAG06C,EAAKv7C,EACxD,CACAqC,WAAAA,CAAYvB,EAAGC,EAAGF,EAAGb,GACjB0B,KAAKZ,EAAIA,EACTY,KAAKX,EAAIA,EACTW,KAAKb,EAAIA,EACTa,KAAK1B,EAAIA,CACb,CACAw7C,IAAAA,GACI,OAAO95C,KAAKZ,CAChB,CACA26C,IAAAA,GACI,OAAO/5C,KAAKX,CAChB,CACA26C,IAAAA,GACI,OAAOh6C,KAAKb,CAChB,CACA86C,IAAAA,GACI,OAAOj6C,KAAK1B,CAChB,CACA47C,IAAAA,CAAK96C,GAED,OADAY,KAAKZ,EAAIA,EACFY,IACX,CACAm6C,IAAAA,CAAK96C,GAED,OADAW,KAAKX,EAAIA,EACFW,IACX,CACAo6C,IAAAA,CAAKj7C,GAED,OADAa,KAAKb,EAAIA,EACFa,IACX,CACAq6C,IAAAA,CAAK/7C,GAED,OADA0B,KAAK1B,EAAIA,EACF0B,IACX,CACAs6C,IAAAA,CAAKl7C,EAAGC,GAGJ,OAFAW,KAAKZ,GAAKA,EACVY,KAAKX,GAAKA,EACHW,IACX,CACAo0C,KAAAA,GACI,OAAOwF,EAAY9F,KAAK9zC,KAC5B,CACAu6C,SAAAA,CAAUC,GACN,MAAMX,EAAOW,EACPC,EAAOz6C,KAAKZ,EAAIy6C,EAAKz6C,EAAIY,KAAKZ,EAAIy6C,EAAKz6C,EACvCs7C,EAAO16C,KAAKX,EAAIw6C,EAAKx6C,EAAIW,KAAKX,EAAIw6C,EAAKx6C,EACvCs7C,EAAO1yC,KAAK2yC,IAAI56C,KAAKZ,EAAIY,KAAKb,EAAG06C,EAAKz6C,EAAIy6C,EAAK16C,GAAKs7C,EACpDI,EAAO5yC,KAAK2yC,IAAI56C,KAAKX,EAAIW,KAAK1B,EAAGu7C,EAAKx6C,EAAIw6C,EAAKv7C,GAAKo8C,EAK1D,OAJA16C,KAAKZ,EAAIq7C,EACTz6C,KAAKX,EAAIq7C,EACT16C,KAAKb,EAAIw7C,EACT36C,KAAK1B,EAAIu8C,EACF76C,IACX,ECzDJ,IAUW86C,EAKAC,EAfPC,EAAwC,SAAUC,EAASC,EAAY55C,EAAG65C,GAE1E,OAAO,IAAK75C,IAAMA,EAAIwwB,WAAU,SAAUG,EAASmpB,GAC/C,SAASC,EAAU/gD,GAAS,IAAMghD,EAAKH,EAAUp5C,KAAKzH,GAAS,CAAE,MAAO+D,GAAK+8C,EAAO/8C,EAAI,CAAE,CAC1F,SAASk9C,EAASjhD,GAAS,IAAMghD,EAAKH,EAAiB,MAAE7gD,GAAS,CAAE,MAAO+D,GAAK+8C,EAAO/8C,EAAI,CAAE,CAC7F,SAASi9C,EAAKpL,GAJlB,IAAe51C,EAIa41C,EAAOluC,KAAOiwB,EAAQie,EAAO51C,QAJ1CA,EAIyD41C,EAAO51C,MAJhDA,aAAiBgH,EAAIhH,EAAQ,IAAIgH,GAAE,SAAU2wB,GAAWA,EAAQ33B,EAAQ,KAIjB+H,KAAKg5C,EAAWE,EAAW,CAC7GD,GAAMH,EAAYA,EAAUp4C,MAAMk4C,EAASC,GAAc,KAAKn5C,OAClE,GACJ,EAYA,IAAIy5C,GATJ,SAAWV,GACPA,EAAmB,OAAI,SACvBA,EAAiB,KAAI,MACxB,CAHD,CAGGA,IAAeA,EAAa,CAAC,IAEhC,SAAWC,GACPA,EAAkB,OAAI,SACtBA,EAAkB,OAAI,QACzB,CAHD,CAGGA,IAAcA,EAAY,CAAC,IAEvB,MAAMU,EACT,8BAAOC,CAAwB/xC,GAC3B,IAAImsC,EACJ,GAAwB,kBAAbnsC,EACP,OAAOA,EAAW8xC,EAAKE,cAAcC,GAEpC,CACD,MAAMthD,EAAQuhD,WAAWlyC,GACzB,GAAI4E,MAAMjU,GACN,OAAO,EAEX,MAAMwhD,EAAOnyC,EAASnI,QAAQ,WAAY,IAAIyM,cAE9C,OAAO3T,GADsD,QAAnCw7C,EAAK2F,EAAKE,cAAcG,UAA0B,IAAPhG,EAAgBA,EAAK,EAE9F,CACJ,CACA,8BAAOiG,CAAwBpyC,GAC3B,IAAImsC,EACJ,GAAwB,kBAAbnsC,EACP,OAAOA,EAEN,CACD,MAAMrP,EAAQuhD,WAAWlyC,GACzB,GAAI4E,MAAMjU,GACN,OAAO,EAEX,MAAMwhD,EAAOnyC,EAASnI,QAAQ,WAAY,IAAIyM,cAE9C,OAAO3T,IADuD,QAAnCw7C,EAAK2F,EAAKE,cAAcG,UAA0B,IAAPhG,EAAgBA,EAAK,GAAK2F,EAAKE,cAAcC,GAEvH,CACJ,CACA,eAAOI,CAAS5hD,EAAG4qC,EAAMqQ,EAAQ59B,GAC7B,GAAiB,kBAANrd,QAA2ByC,IAATmoC,QAAiCnoC,IAAXw4C,QAAkCx4C,IAAV4a,EACvE,OAAOgkC,EAAKQ,cAAc7hD,GAE9B,IAAIg7C,EA0BJ,MAzBiB,kBAANh7C,GACPg7C,EAASh7C,EAAEg7C,OACXpQ,EAAO5qC,EAAE4qC,KACTqQ,EAASj7C,EAAEi7C,OACX59B,EAAQrd,EAAEqd,OAGV29B,EAASh7C,EAEbg7C,EAAoB,OAAXA,QAA8B,IAAXA,EAAoBA,EAASN,EAAQxjC,IAAI,cACrE0zB,EAAgB,OAATA,QAA0B,IAATA,EAAkBA,EAAO8P,EAAQxjC,IAAI,YAAc,KAC3E+jC,EAAoB,OAAXA,QAA8B,IAAXA,EAAoBA,EAASyF,EAAWoB,OACpEzkC,EAAkB,OAAVA,QAA4B,IAAVA,EAAmBA,EAAQsjC,EAAUmB,OAChD,KAAX7G,IACAA,EAASyF,EAAWoB,QAEV,KAAVzkC,IACAA,EAAQsjC,EAAUmB,QAEF,kBAATlX,IACPA,EAAO,GAAH97B,OAAM87B,EAAI,OAEI,kBAAXqQ,IACPA,EAASA,EAAO3zC,YAEb,CAAE0zC,SAAQpQ,OAAMqQ,SAAQ59B,QACnC,CACA,oBAAOwkC,CAAcE,GACZX,IACDA,EAAanuC,SAASvU,cAAc,SAExC0iD,EAAW/jC,MAAM09B,KAAOgH,EACxB,MAAM,WAAEtyC,EAAU,SAAEF,EAAQ,WAAE0M,EAAU,UAAEigC,GAAckF,EAAW/jC,MACnE,MAAO,CAAE29B,OAAQvrC,EAAYm7B,KAAMr7B,EAAU0rC,OAAQh/B,EAAYoB,MAAO6+B,EAC5E,CACA,kBAAO8F,CAAYC,GACf,IAAIvG,EACJ,IAAKuG,EACD,MAAO,GAEX,IAAI5kC,EACJ,MAAM6kC,EAAKD,EAAS5kC,MAOpB,IAAI49B,EALA59B,EADA6kC,IAAOvB,EAAUmB,QAAiB,KAAPI,QAAoBz/C,IAAPy/C,EAChC,GAGAA,EAAGpsC,OAAS,IAGxB,MAAMqsC,EAAKF,EAAShH,OAUpB,IAAIrQ,EARAqQ,EADAkH,IAAOzB,EAAWoB,QAAiB,KAAPK,QAAoB1/C,IAAP0/C,EAChC,GAEU,kBAAPA,EACHA,EAAK,IAGLA,EAAGrsC,OAAS,IAGzB,MAAMssC,EAAKH,EAASrX,KAEhBA,OADOnoC,IAAP2/C,EACO1H,EAAQxjC,IAAI,YAAc,KAEd,kBAAPkrC,EACLA,EAAK,MAGLA,EAAGtsC,OAAS,IAEvB,MAAMklC,EAAoC,QAA1BU,EAAKuG,EAASjH,cAA2B,IAAPU,EAAgBA,EAAKhB,EAAQxjC,IAAI,cACnF,MAAO,GAAPpI,OAAUuO,GAAKvO,OAAGmsC,GAAMnsC,OAAG87B,GAAI97B,OAAGksC,EACtC,CACA,gBAAOqH,CAAU9yC,EAAU+yC,GACvB,GAAwB,kBAAb/yC,EACP,OAAQA,EAAW+yC,EAElB,CACD,MAAMpiD,EAAQuhD,WAAWlyC,GACnBmyC,EAAOnyC,EAASnI,QAAQ,WAAY,IAC1C,MAAO,GAAP0H,OAAU5O,EAAQoiD,GAAWxzC,OAAG4yC,EACpC,CACJ,CACA,aAAOa,CAAOtH,GACV,GAAKA,EAGA,IAAsB,kBAAXA,EACZ,OAAOA,GAAU,IAEhB,CACD,MAAMuH,EAAe1K,SAASmD,EAAQ,IACtC,OAAI9mC,MAAMquC,GAC0B,SAAzBvH,EAAOpnC,cAGP2uC,GAAgB,GAE/B,EAbI,OAAO,CAcf,CACA,eAAOC,CAASplC,GACZ,QAAKA,GAIMA,EAAMxJ,gBAAkB8sC,EAAU+B,MAEjD,CACA,WAAOC,CAAKC,EAAUvzB,EAAKwzB,GACvB,OAAOjC,EAAUh7C,UAAM,OAAQ,GAAQ,YACnC,GAAwB,qBAAbk9C,SACP,OAAOprB,QAAQspB,OAAO,IAAI56C,MAAM,0EAEpC,QAAY3D,IAAR4sB,EAAmB,CACnB,MAAM0zB,EAAQ1B,EAAK2B,MACnB,KAAMJ,KAAYG,GACd,OAAOrrB,QAAQspB,OAAO,IAAI56C,MAAM,QAAD0I,OAAS8zC,EAAQ,8BAEpDvzB,EAAMgyB,EAAK4B,SAAWF,EAAMH,EAChC,CACA,MAAMM,EAAW,IAAIJ,SAASF,EAAU,OAAF9zC,OAASugB,EAAG,KAAKwzB,GACjDM,EAAsBD,EAASP,OACrC,IAAIS,EAQJ,MAPwB,qBAAbnwC,SACPmwC,EAAcnwC,SAASowC,MAEF,qBAATjM,MAAwB,UAAWA,OAC/CgM,EAAchM,KAAKiM,OAEP,OAAhBD,QAAwC,IAAhBA,GAAkCA,EAAYtwC,IAAIowC,GACnEC,CACX,GACJ,CACA,oBAAOG,CAAcV,GACjB,MAAMG,EAAQ1B,EAAK2B,MACnB,GAAMJ,KAAYG,EAGlB,OAAO1B,EAAK4B,SAAWF,EAAMH,EACjC,EAEJvB,EAAKE,cAAgB,CACjBC,GAAI,EAAI,EACR+B,GAAI,EACJC,GAAI,GACJ,IAAK,IACLC,GAAI,GACJC,GAAI,GAAK,KACTC,GAAI,GAAK,MAEbtC,EAAK4B,SAAW,+CAChB5B,EAAK2B,MAAQ,CACTY,UAAW,4BACXC,QAAS,wBACT,eAAgB,gCAChBC,MAAO,0BACP,aAAc,4BACd,kBAAmB,oCACnB,kBAAmB,sCACnB,uBAAwB,8CACxB,cAAe,8BACf,mBAAoB,sCACpB,iBAAkB,oCAClB,sBAAuB,oDACvBC,SAAU,0BACVC,UAAW,4BACX,iBAAkB,oCAClBC,QAAS,wBACTC,OAAQ,sBACR,cAAe,8BACfC,SAAU,0BACV,gBAAiB,kCACjBC,QAAS,wBACTC,SAAU,0BACV,kBAAmB,sCACnB,gBAAiB,kCACjB,cAAe,0CACfC,UAAW,4BACX,iBAAkB,qCC1OtB,MAAMC,EACFh+C,WAAAA,GACIX,KAAKkG,GAAK,CAAC,EACXlG,KAAKxB,KAAO,CAAC,EACbwB,KAAK4+C,MAAQ,CAAC,CAClB,EAEG,MAAMC,EACT,yBAAOC,GACH,OAAOD,EAASE,eACpB,CACA,4BAAOC,CAAsBC,GACzBJ,EAASE,gBAAkBE,CAC/B,CACA,6BAAOC,GACHL,EAASE,qBAAkBliD,CAC/B,CACA8D,WAAAA,GACIX,KAAKjG,MAAQ,IAAI4kD,CACrB,CACA5J,KAAAA,GAEI,OADA/0C,KAAKjG,MAAQ,IAAI4kD,EACV3+C,IACX,CACAm/C,aAAAA,CAAcl0C,EAAM3Q,EAAO4L,EAAIk5C,GAC3B,MAAMrlD,EAAQiG,KAAKjG,MACdA,EAAMkR,GAAM3Q,KACbP,EAAMkR,GAAM3Q,GAAS,CAAC,GAE1BP,EAAMkR,GAAM3Q,GAAO4L,GAAMk5C,CAC7B,CACAC,WAAAA,CAAW3mD,GAAgC,IAA/B,GAAEwN,EAAE,KAAE+E,EAAI,MAAE3Q,EAAK,SAAEglD,GAAU5mD,EACrC,MAAM0mD,EAAOp/C,KAAKu/C,eAAer5C,QAChBrJ,IAAbyiD,GAA0Bt/C,KAAKjG,MAAMkR,GAAMq0C,WACpCt/C,KAAKjG,MAAMkR,GAAMq0C,GAAUp5C,GAElC5L,GAAS8kD,GACTp/C,KAAKm/C,cAAcl0C,EAAM3Q,EAAO8kD,EAAKI,aAAa,MAAOJ,EAEjE,CACAK,QAAAA,CAASL,EAAMl5C,GAEX,KADAA,EAAKA,GAAMk5C,EAAKI,aAAa,OAEzB,MAAM,IAAIpO,EAAa,wDAM3B,OAJAgO,EAAKxwC,aAAa,KAAM1I,GACxBlG,KAAKm/C,cAAc,KAAMj5C,EAAIA,EAAIk5C,GACjCp/C,KAAKq/C,YAAY,CAAEn5C,KAAI+E,KAAM,OAAQ3Q,MAAO8kD,EAAKI,aAAa,QAASF,cAAUziD,IACjFuiD,EAAKM,WAAW1/C,MACTA,IACX,CACAu/C,cAAAA,CAAer5C,GACX,IAAI4vC,EAAI6J,EACR,OAAmF,QAA3EA,EAA8B,QAAxB7J,EAAK91C,KAAKjG,MAAMmM,UAAuB,IAAP4vC,OAAgB,EAASA,EAAG5vC,UAAwB,IAAPy5C,OAAgB,EAASA,EAAGz5C,EAC3H,CACA05C,sBAAAA,CAAuBC,EAAWvlD,GAC9B,MAAMwlD,EAAY9/C,KAAKjG,MAAM8lD,GAC7B,GAAIC,EAAW,CACX,MAAMC,EAAeD,EAAUxlD,GAC/B,GAAIylD,EAAc,CAEd,OADa7kD,OAAOkB,KAAK2jD,GACblmD,KAAKuD,GAAM2iD,EAAa3iD,IACxC,CACJ,CACA,MAAO,EACX,CACA4iD,iBAAAA,CAAkBxhD,GACd,OAAOwB,KAAK4/C,uBAAuB,OAAQphD,EAC/C,CACAyhD,kBAAAA,CAAmBC,GACf,OAAOlgD,KAAK4/C,uBAAuB,QAASM,EAChD,CACAC,QAAAA,CAASC,GAKL,MAJqB,CAAC,KAAM,OAAQ,SACnBzvC,SAASyvC,EAAKn1C,OAC3BjL,KAAKq/C,YAAYe,GAEdpgD,IACX,EC1EG,MAAMqgD,EACT,mBAAW3N,GACP,MAAO,SACX,CACA,YAAO4N,GACH,MAAO,OAAPp3C,OAAcm3C,EAAQE,KAC1B,CACA,+BAAOC,CAAyBC,GAC5BJ,EAAQK,UAAYD,CACxB,CACA,+BAAOE,GACH,IAAID,EAAYL,EAAQK,UAUxB,OATKA,IACuB,qBAAbrzC,SACPqzC,EAAYrzC,SAASvU,cAAc,UAEH,qBAApB8nD,kBACZF,EAAY,IAAIE,gBAAgB,IAAK,MAEzCP,EAAQK,UAAYA,GAEjBA,CACX,CACA//C,WAAAA,CAAYkgD,GACR,IAAI/K,EACJ91C,KAAKoB,SAAW,GAChBpB,KAAKyX,MAAQ,CAAC,EACdzX,KAAK8gD,MAAQ,GACb9gD,KAAK+gD,cAAe,EACpB/gD,KAAKghD,aAAe,CAChBC,sBAAuB,EACvBC,uBAAwB,EACxBC,wBAAyB,EACzBC,yBAA0B,EAC1BC,sBAAuB,EACvBC,uBAAwB,EACxBvoD,MAAO,EACPwoD,mBAAoB,EACpBC,eAAgB,EAChBC,gBAAiB,EACjBC,gBAAiB,EACjBC,oBAAqB,GAEzB3hD,KAAK4hD,QAAU,EACf5hD,KAAK6hD,OAAS,EACd7hD,KAAK8hD,OAAS,EACd9hD,KAAK+hD,OAAS,EACd/hD,KAAKZ,EAAI,EACTY,KAAKX,EAAI,EACTW,KAAKgiD,MAAQ,CACT97C,GAAIm6C,EAAQC,QACZ9hD,KAAmB,OAAbqiD,QAAkC,IAAbA,EAAsBA,EAAW7gD,KAAKW,YAAY+xC,SAC7EkM,MAAO,IAEX5+C,KAAKiiD,UAAW,EAChBjiD,KAAKkiD,UAAYpN,EAAQI,YAAYl1C,KAAKgiD,MAAMxjD,MAChDwB,KAAKyX,MAAQq9B,EAAQS,SAASv1C,KAAKgiD,MAAMxjD,MACzCwB,KAAKq2C,UAAYvB,EAAQxjC,IAAI,GAADpI,OAAIlJ,KAAKgiD,MAAMxjD,KAAI,eACN,QAAxCs3C,EAAK+I,EAASC,4BAAyC,IAAPhJ,GAAyBA,EAAG2J,SAASz/C,KAC1F,CACAmiD,QAAAA,CAAS3mC,GACL,GAAIA,EAAM4mC,OACN,MAAM,IAAIhR,EAAa,UAAW,0BAGtC,OAFA51B,EAAM4mC,OAASpiD,KACfA,KAAKoB,SAASS,KAAK2Z,GACZxb,IACX,CACAqiD,WAAAA,GACI,OAAOriD,KAAKgiD,MAAMxjD,IACtB,CACA8jD,QAAAA,CAAS7qC,GAEL,OADAzX,KAAKyX,MAAQA,EACNzX,IACX,CACAuiD,aAAAA,CAAc9qC,GAGV,OAFAzX,KAAKyX,MAAQA,EACbzX,KAAKoB,SAASlF,SAASsf,GAAUA,EAAM+mC,cAAc9qC,KAC9CzX,IACX,CACAu1C,QAAAA,GACI,OAAOv1C,KAAKyX,KAChB,CACA+qC,UAAAA,GAA4D,IAAjDviD,EAAOhD,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG+C,KAAKC,QAASwX,EAAKxa,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG+C,KAAKu1C,WAC5C,OAAKt1C,GAEDwX,EAAMo+B,aACN51C,EAAQwiD,eAAehrC,EAAMo+B,aAC7Bp+B,EAAMm+B,YACN31C,EAAQyiD,cAAcjrC,EAAMm+B,YAC5Bn+B,EAAM+9B,WACNv1C,EAAQ0iD,aAAalrC,EAAM+9B,WAC3B/9B,EAAMg+B,aACNx1C,EAAQ2iD,eAAenrC,EAAMg+B,aAC7Bh+B,EAAMi+B,WACNz1C,EAAQ4iD,aAAaprC,EAAMi+B,WAC3Bj+B,EAAMk+B,UACN11C,EAAQ6iD,YAAYrrC,EAAMk+B,SAAS15C,MAAM,KAAKpC,IAAI+4C,SAC/C5yC,MAbIA,IAcf,CACA+iD,aAAAA,GACI,MAAMC,EAAMhjD,KAAKijD,eAKjB,OAJAD,EAAIE,OACJljD,KAAKwiD,WAAWQ,GAChBhjD,KAAKmjD,OACLH,EAAII,UACGpjD,IACX,CACAmjD,IAAAA,GACI,MAAM,IAAI/R,EAAa,UAAW,mBACtC,CACAiS,QAAAA,CAASnD,GACL,IAAIpK,EACJ,QAAK91C,KAAKgiD,MAAMpD,QAE4F,KAAxE,QAA3B9I,EAAK91C,KAAKgiD,MAAMpD,aAA0B,IAAP9I,OAAgB,EAASA,EAAG75C,MAAM,KAAK9B,QAAQ+lD,GAC/F,CACAoD,QAAAA,CAASpD,GACL,IAAIpK,EACJ,OAAI91C,KAAKqjD,SAASnD,KAEblgD,KAAKgiD,MAAMpD,MAGZ5+C,KAAKgiD,MAAMpD,MAAQ,GAAH11C,OAAMlJ,KAAKgiD,MAAMpD,MAAK,KAAA11C,OAAIg3C,GAF1ClgD,KAAKgiD,MAAMpD,MAAQ,GAAH11C,OAAMg3C,GAGD,QAAxBpK,EAAK91C,KAAKi/C,gBAA6B,IAAPnJ,GAAyBA,EAAGqK,SAAS,CAClEj6C,GAAIlG,KAAKgiD,MAAM97C,GACf+E,KAAM,QACN3Q,MAAO4lD,EACPZ,cAAUziD,KATHmD,IAYf,CACAujD,WAAAA,CAAYrD,GACR,IAAIpK,EAAI6J,EACR,IAAK3/C,KAAKqjD,SAASnD,GACf,OAAOlgD,KACX,MAAMuyC,EAAkC,QAA3BuD,EAAK91C,KAAKgiD,MAAMpD,aAA0B,IAAP9I,OAAgB,EAASA,EAAG75C,MAAM,KAWlF,OAVIs2C,IACAA,EAAIrF,OAAOqF,EAAIp4C,QAAQ+lD,IACvBlgD,KAAKgiD,MAAMpD,MAAQrM,EAAIx2C,KAAK,MAEP,QAAxB4jD,EAAK3/C,KAAKi/C,gBAA6B,IAAPU,GAAyBA,EAAGQ,SAAS,CAClEj6C,GAAIlG,KAAKgiD,MAAM97C,GACf+E,KAAM,QACN3Q,WAAOuC,EACPyiD,SAAUY,IAEPlgD,IACX,CACA0/C,UAAAA,CAAWT,GAEP,OADAj/C,KAAKi/C,SAAWA,EACTj/C,IACX,CACAwjD,UAAAA,GACI,OAAOxjD,KAAKiiD,QAChB,CACAwB,WAAAA,GAA6B,IAAjBxB,IAAQhlD,UAAAC,OAAA,QAAAL,IAAAI,UAAA,KAAAA,UAAA,GAEhB,OADA+C,KAAKiiD,SAAWA,EACTjiD,IACX,CACA0jD,aAAAA,GACI,OAAO1jD,KAAKgiD,KAChB,CACAxC,YAAAA,CAAav0C,GACT,OAAOjL,KAAKgiD,MAAM/2C,EACtB,CACA04C,aAAAA,GAA2B,IAAbC,EAAM3mD,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,GACnB,MAAMiJ,EAAKisC,EAAOnyC,KAAKgiD,MAAM97C,GAAK09C,GAC5Bn4C,EAAU4B,SAASkyC,eAAer5C,GACxC,GAAIuF,EACA,OAAOA,CACf,CACAmD,YAAAA,CAAa3D,EAAM3Q,GACf,IAAIw7C,EACJ,MAAM+N,EAAQ7jD,KAAKgiD,MAAM97C,GACnBo5C,EAAWt/C,KAAKgiD,MAAM/2C,GAG5B,OAFAjL,KAAKgiD,MAAM/2C,GAAQ3Q,EACM,QAAxBw7C,EAAK91C,KAAKi/C,gBAA6B,IAAPnJ,GAAyBA,EAAGqK,SAAS,CAAEj6C,GAAI29C,EAAO54C,OAAM3Q,QAAOglD,aACzFt/C,IACX,CACA8jD,cAAAA,GACI,OAAO,IAAIlK,EAAY55C,KAAKZ,EAAIY,KAAK8hD,OAAQ9hD,KAAKX,EAAIW,KAAK+hD,OAAS/hD,KAAK+jD,YAAY5C,wBAAyBnhD,KAAKjH,MAAOiH,KAAK4mB,OACnI,CACAo9B,UAAAA,GACI,OAAOhkD,KAAKC,OAChB,CACAgkD,UAAAA,CAAWhkD,GAEP,OADAD,KAAKC,QAAUA,EACRD,IACX,CACAijD,YAAAA,GACI,OAAOtR,EAAQ3xC,KAAKC,QAAS,YAAa,6CAC9C,CACA,QAAIk1C,CAAK/6C,GACL4F,KAAKkkD,QAAQ9pD,EACjB,CACA,QAAI+6C,GACA,OAAOsG,EAAKW,YAAYp8C,KAAKkiD,UACjC,CACAgC,OAAAA,CAAQ/O,EAAMnQ,EAAMqQ,EAAQ59B,GACxB,MAAM0sC,EAAkBrP,EAAQI,YAAYl1C,KAAKgiD,MAAMxjD,MACjD4lD,EAA+B,kBAATjP,EACtBkP,EAA+B,kBAATlP,EACtBmP,OAAuCznD,IAATmoC,QAAiCnoC,IAAXw4C,QAAkCx4C,IAAV4a,EAWlF,OAVAzX,KAAK+gD,cAAe,EAEhB/gD,KAAKkiD,UADLkC,EACiBlpD,OAAOK,OAAOL,OAAOK,OAAO,CAAC,EAAG4oD,GAAkBhP,GAE9DkP,GAAgBC,EACJ7I,EAAKQ,cAAc9G,GAGnBsG,EAAKO,SAAkB,OAAT7G,QAA0B,IAATA,EAAkBA,EAAOgP,EAAgB/O,OAAiB,OAATpQ,QAA0B,IAATA,EAAkBA,EAAOmf,EAAgBnf,KAAiB,OAAXqQ,QAA8B,IAAXA,EAAoBA,EAAS8O,EAAgB9O,OAAkB,OAAV59B,QAA4B,IAAVA,EAAmBA,EAAQ0sC,EAAgB1sC,OAEnSzX,IACX,CACAukD,OAAAA,GACI,OAAO9I,EAAKW,YAAYp8C,KAAKkiD,UACjC,CACA,YAAI7F,GACA,OAAOr8C,KAAKkiD,SAChB,CACA,YAAI7F,CAASA,GACTr8C,KAAKkkD,QAAQ7H,EACjB,CACAmI,WAAAA,CAAYxf,GACR,MAAMqX,EAAWr8C,KAAKq8C,SAEtB,OADAr8C,KAAKkkD,QAAQ7H,EAASjH,OAAQpQ,EAAMqX,EAAShH,OAAQgH,EAAS5kC,OACvDzX,IACX,CACAykD,WAAAA,GACI,OAAOzkD,KAAK2J,QAChB,CACA+6C,YAAAA,GACI,OAAO1kD,KAAKq2C,SAChB,CACA,YAAI1sC,CAASq7B,GACThlC,KAAKwkD,YAAYxf,EACrB,CACA,YAAIr7B,GACA,IAAIq7B,EAAOhlC,KAAKq8C,SAASrX,KAIzB,MAHoB,kBAATA,IACPA,EAAO,GAAH97B,OAAM87B,EAAI,OAEXA,CACX,CACA,oBAAI2f,GACA,OAAOlJ,EAAKM,wBAAwB/7C,KAAK2J,SAC7C,CACA,oBAAIi7C,GACA,OAAOnJ,EAAKC,wBAAwB17C,KAAK2J,SAC7C,CACA,aAAI2sC,GACA,OAAOt2C,KAAKq8C,SAAS5kC,KACzB,CACA,aAAI6+B,CAAU7+B,GACV,MAAM4kC,EAAWr8C,KAAKq8C,SACtBr8C,KAAKkkD,QAAQ7H,EAASjH,OAAQiH,EAASrX,KAAMqX,EAAShH,OAAQ59B,EAClE,CACA,cAAIpB,GACA,OAAOrW,KAAKq8C,SAAShH,OAAS,EAClC,CACA,cAAIh/B,CAAWg/B,GACX,MAAMgH,EAAWr8C,KAAKq8C,SACtBr8C,KAAKkkD,QAAQ7H,EAASjH,OAAQiH,EAASrX,KAAMqQ,EAAQgH,EAAS5kC,MAClE,CACAotC,QAAAA,GACI,OAAO7kD,KAAKjH,KAChB,CACA,SAAIA,GAGA,OAFKiH,KAAK+gD,cACN/gD,KAAK8kD,cACF9kD,KAAK6hD,MAChB,CACAkD,QAAAA,CAAShsD,GAEL,OADAiH,KAAKjH,MAAQA,EACNiH,IACX,CACA,SAAIjH,CAAMA,GACDiH,KAAK+gD,cACN/gD,KAAK8kD,cACT9kD,KAAK6hD,OAAS9oD,CAClB,CACAmhD,IAAAA,CAAK96C,GAED,OADAY,KAAKZ,EAAIA,EACFY,IACX,CACA85C,IAAAA,GACI,OAAO95C,KAAKZ,CAChB,CACA26C,IAAAA,GACI,OAAO/5C,KAAKX,CAChB,CACA86C,IAAAA,CAAK96C,GAED,OADAW,KAAKX,EAAIA,EACFW,IACX,CACAglD,SAAAA,CAAUjD,GAEN,OADA/hD,KAAK+hD,OAASA,EACP/hD,IACX,CACAilD,SAAAA,GACI,OAAOjlD,KAAK+hD,MAChB,CACAmD,SAAAA,CAAUpD,GAEN,OADA9hD,KAAK8hD,OAASA,EACP9hD,IACX,CACAmlD,SAAAA,GACI,OAAOnlD,KAAK8hD,MAChB,CACAsD,OAAAA,CAAQ77B,GAEJ,OADAvpB,KAAKupB,KAAOA,EACLvpB,IACX,CACA,QAAIupB,CAAKA,GACLvpB,KAAK+gD,cAAe,EACpB/gD,KAAK8gD,MAAQv3B,CACjB,CACA87B,OAAAA,GACI,OAAOrlD,KAAK8gD,KAChB,CACA,QAAIv3B,GACA,OAAOvpB,KAAK8gD,KAChB,CACAwE,UAAAA,CAAWtC,EAAKuC,EAAMC,GAClBxC,EAAIkB,QAAQlkD,KAAKkiD,WACjBc,EAAIyC,SAASzlD,KAAK8gD,MAAOyE,EAAOvlD,KAAKZ,EAAIY,KAAK8hD,OAAQ0D,EAAOxlD,KAAKX,EAAIW,KAAK+hD,QAC3E/hD,KAAKoB,SAASlF,SAASsf,IACnBwnC,EAAIkB,QAAQ1oC,EAAM6gC,UAClB2G,EAAIyC,SAASjqC,EAAM+N,KAAMg8B,EAAO/pC,EAAMpc,EAAIoc,EAAMsmC,OAAQ0D,EAAOhqC,EAAMnc,EAAImc,EAAMumC,UAEvF,CACA+C,WAAAA,GACI,IAAIhP,EACJ,MAAM71C,EAAwD,QAA7C61C,EAAKuK,EAAQM,kCAA+C,IAAP7K,OAAgB,EAASA,EAAGkO,WAAW,MAC7G,OAAK/jD,GAILA,EAAQk1C,KAAOsG,EAAKW,YAAYX,EAAKO,SAASh8C,KAAKq8C,WACnDr8C,KAAKghD,aAAe/gD,EAAQ6kD,YAAY9kD,KAAKupB,MAC7CvpB,KAAK4hD,QAAU5hD,KAAKghD,aAAaG,wBAA0BnhD,KAAKghD,aAAaI,yBAC7EphD,KAAK6hD,OAAS7hD,KAAKghD,aAAajoD,MAChCiH,KAAK+gD,cAAe,EACb/gD,KAAKghD,eARRj5C,QAAQ29C,KAAK,oEACN1lD,KAAKghD,aAQpB,CACA,mBAAO2E,CAAap8B,GAAgB,IAAVvvB,EAAGiD,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,GAC5B,IAAI64C,EACJ,MAAM71C,EAAwD,QAA7C61C,EAAKuK,EAAQM,kCAA+C,IAAP7K,OAAgB,EAASA,EAAGkO,WAAW,MAC7G,OAAK/jD,GAILA,EAAQk1C,KAAOsG,EAAKW,YAAYtH,EAAQI,YAAYl7C,IAC7CiG,EAAQ6kD,YAAYv7B,GAAMxwB,QAJ7BgP,QAAQ29C,KAAK,oEACN,EAIf,CACAE,cAAAA,GACI,OAAO5lD,KAAK+jD,WAChB,CACA,eAAIA,GAGA,OAFK/jD,KAAK+gD,cACN/gD,KAAK8kD,cACF9kD,KAAKghD,YAChB,CACA6E,SAAAA,GACI,OAAO7lD,KAAK4mB,MAChB,CACA,UAAIA,GAGA,OAFK5mB,KAAK+gD,cACN/gD,KAAK8kD,cACF9kD,KAAK4hD,OAChB,CACA,UAAIh7B,CAAOA,GACF5mB,KAAK+gD,cACN/gD,KAAK8kD,cACT9kD,KAAK4hD,QAAUh7B,CACnB,CACAk/B,UAAAA,CAAW1mD,GACP,MAAM2mD,EAAO/lD,KAAK8jD,iBAEZhC,GAAU1iD,EADA6I,KAAKwsC,KAAKsR,EAAKjM,OAAS95C,KAAK8hD,QAAUiE,EAAK/L,SAC7B+L,EAAK/L,OACpCh6C,KAAK8hD,QAAUA,CACnB,CACAkE,UAAAA,CAAW3mD,GACP,MAAM0mD,EAAO/lD,KAAK8jD,iBAEZ/B,GAAU1iD,EADA4I,KAAKwsC,KAAKsR,EAAKhM,OAAS/5C,KAAK+hD,QAAUgE,EAAK9L,SAC7B8L,EAAK9L,OACpCj6C,KAAK+hD,QAAUA,CACnB,CACAkE,SAAAA,CAAU7mD,EAAGC,GACTW,KAAK8lD,WAAW1mD,GAChBY,KAAKgmD,WAAW3mD,EACpB,EC5YG,IAAI6mD,ECFAC,EFgZX9F,EAAQE,GAAK,IC7Yb,SAAW2F,GACPA,EAAiBA,EAAyB,OAAI,GAAK,SACnDA,EAAiBA,EAAuB,KAAI,GAAK,OACjDA,EAAiBA,EAAwB,MAAI,GAAK,QAClDA,EAAiBA,EAAwB,MAAI,GAAK,QAClDA,EAAiBA,EAAwB,MAAI,GAAK,OACrD,CAND,CAMGA,IAAqBA,EAAmB,CAAC,IACrC,MAAME,UAAiB/F,EAC1B,mBAAW3N,GACP,MAAO,UACX,CACA,mBAAW2T,GACP,OAAOH,CACX,CACA,yBAAWI,GACP,MAAO,CACHC,OAAQL,EAAiBM,OACzBC,MAAOP,EAAiBQ,MACxBC,MAAOT,EAAiBU,MACxBp5B,KAAM04B,EAAiBW,KACvBC,MAAOZ,EAAiBa,MAEhC,CACApmD,WAAAA,GACI0wC,QACArxC,KAAKjH,MAAQ,EACbiH,KAAKgnD,SAAW,EAChBhnD,KAAK3F,SAAW+rD,EAASC,SAASQ,KAClC7mD,KAAKinD,wBAA0B,CACnC,CACAC,KAAAA,GACA,CACAC,OAAAA,GACI,OAAOxV,EAAQ3xC,KAAK+J,KAAM,SAAU,wBACxC,CACAq9C,iBAAAA,GACI,MAAMvG,EAAW7gD,KAAKqiD,cAEtB,OADA1Q,EAAQ3xC,KAAKjG,MAAO,UAAW,cAAFmP,OAAgB23C,EAAQ,uBAC9ClP,EAAQ3xC,KAAK+J,KAAM,SAAU,cAAFb,OAAgB23C,EAAQ,oBAC9D,CACAwG,OAAAA,CAAQt9C,GAEJ,OADA/J,KAAK+J,KAAOA,EACL/J,IACX,CACAsnD,QAAAA,GACI,OAAOtnD,KAAKjG,KAChB,CACAwtD,UAAAA,GACI,OAAO5V,EAAQ3xC,KAAKjG,MAAO,UAAW,iCAC1C,CACAytD,QAAAA,CAASztD,GAEL,OADAiG,KAAKjG,MAAQA,EACNiG,IACX,CACAynD,kBAAAA,GACI,OAAOznD,KAAK0nD,eAChB,CACAC,oBAAAA,GACI,OAAOhW,EAAQ3xC,KAAK0nD,gBAAiB,oBAAqB,4BAC9D,CACAE,kBAAAA,CAAmB5pD,GAEf,OADAgC,KAAK0nD,gBAAkB1pD,EAChBgC,IACX,CACA6nD,WAAAA,GACI,OAAO7nD,KAAK3F,QAChB,CACAytD,WAAAA,CAAYztD,GAGR,OAFA2F,KAAK3F,SAA+B,kBAAbA,EAAwB+rD,EAASE,eAAejsD,GAAYA,EACnF2F,KAAKknD,QACElnD,IACX,CACA+nD,WAAAA,CAAY/V,GAER,OADAhyC,KAAKgnD,SAAWhV,EACThyC,IACX,CACAglD,SAAAA,CAAU3lD,GAEN,OADAW,KAAK+hD,OAAS1iD,EACPW,IACX,CACAgoD,0BAAAA,CAA2B5oD,GACvBY,KAAKinD,wBAA0B7nD,CACnC,CACA6oD,0BAAAA,GACI,OAAOjoD,KAAKinD,uBAChB,CACA/B,SAAAA,CAAU9lD,GAQN,OAPAY,KAAK8hD,OAAS,EACV9hD,KAAK3F,WAAa+rD,EAASC,SAASQ,KACpC7mD,KAAK8hD,QAAU1iD,EAGfY,KAAK8hD,QAAU1iD,EAEZY,IACX,CACAmlD,SAAAA,GACI,OAAOnlD,KAAK8hD,MAChB,CACAqB,IAAAA,GAEI,MADAnjD,KAAKijD,eACC,IAAI7R,EAAa,iBAAkB,4CAC7C,CACA8W,qBAAAA,CAAsBC,EAAUp+C,GAAyC,IAAnC1P,EAAQ4C,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAGmpD,EAASC,SAASQ,KAC/D,MAAMuB,EAAcr+C,EAAKs+C,iBACnBC,EAAUF,EAAYG,aACtBC,EAAQz+C,EAAK0+C,WACbC,EAAiBruD,IAAa+rD,EAASC,SAASU,MAChDqB,EAAYtO,OAAS95C,KAAKioD,6BAA+BE,EAASjrD,OAAS,GAC3EkrD,EAAYtO,OAASwO,EAAQK,UAAYL,EAAQM,WAAa5oD,KAAKioD,6BACzEE,EAASjsD,SAAS2sD,IACd,MAAMC,EAAiBD,EAAQR,iBAC3BG,GACAK,EAAQE,SAASP,GACrBM,EAAeE,WAAWN,KAElC,EEtHG,MAAMO,EACT,oBAAWC,GACP,OAAOlpD,KAAKmpD,eAAejsD,MAC/B,CACA,gBAAWksD,GACP,MAAO,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC1C,CACA,qBAAWC,GACP,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC9B,CACA,sBAAWC,GACP,MAAO,CACHtrD,EAAG,EACHI,EAAG,EACHC,EAAG,EACHjE,EAAG,EACH8D,EAAG,EACHD,EAAG,EACHE,EAAG,EAEX,CACA,yBAAWgrD,GACP,MAAO,CAAC,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IACxE,CACA,4BAAWI,GACP,MAAO,CAAC,SAAU,KAAM,KAAM,KAAM,KAAM,KAAM,OAAQ,KAAM,KAAM,KAAM,KAAM,KAAM,SAC1F,CACA,8BAAWC,GACP,MAAO,CACHC,OAAQ,CAAE1/C,KAAM,EAAG2/C,WAAY,GAC/BC,GAAI,CAAE5/C,KAAM,EAAG2/C,YAAa,GAC5BE,GAAI,CAAE7/C,KAAM,EAAG2/C,WAAY,GAC3BG,GAAI,CAAE9/C,KAAM,EAAG2/C,YAAa,GAC5BI,GAAI,CAAE//C,KAAM,EAAG2/C,WAAY,GAC3BK,GAAI,CAAEhgD,KAAM,EAAG2/C,WAAY,GAC3BM,KAAM,CAAEjgD,KAAM,EAAG2/C,YAAa,GAC9BO,GAAI,CAAElgD,KAAM,EAAG2/C,WAAY,GAC3BQ,GAAI,CAAEngD,KAAM,EAAG2/C,YAAa,GAC5BS,GAAI,CAAEpgD,KAAM,EAAG2/C,WAAY,GAC3BU,GAAI,CAAErgD,KAAM,EAAG2/C,YAAa,GAC5BW,GAAI,CAAEtgD,KAAM,EAAG2/C,WAAY,GAC3BY,OAAQ,CAAEvgD,KAAM,EAAG2/C,WAAY,GAEvC,CACA,oBAAWa,GACP,MAAO,CACHtrD,EAAG,EACHwqD,OAAQ,EACRE,GAAI,EACJa,GAAI,EACJC,KAAM,EACNxoD,EAAG,EACHvB,EAAG,EACH,EAAG,EACHkpD,GAAI,EACJc,KAAM,EACNxoD,EAAG,EACHQ,EAAG,EACHmnD,GAAI,EACJc,GAAI,EACJC,KAAM,EACNd,GAAI,EACJ,EAAG,EACHe,KAAM,EACN,EAAG,EACHd,GAAI,EACJ,KAAM,EACNe,GAAI,EACJC,KAAM,EACNf,KAAM,EACN,EAAG,EACHC,GAAI,EACJ,KAAM,EACNe,GAAI,EACJC,KAAM,EACN,EAAG,EACHd,GAAI,EACJe,KAAM,EACNd,GAAI,GACJe,GAAI,GACJC,KAAM,GACNC,KAAM,GACNhB,GAAI,GACJiB,KAAM,GACN,EAAG,GACHhB,OAAQ,GAEhB,CACA,iBAAWiB,GACP,MAAO,CACHC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1BC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1BC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3BC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3BC,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7BC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3BC,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/BC,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5BC,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAEpC,CACA,qBAAWC,GACP,MAAO,CACH9qD,EAAG8nD,EAAMsC,OAAOC,MAChBhuD,EAAGyrD,EAAMsC,OAAOE,MAExB,CACA,sBAAWS,GACP,MAAO,CAAC,KAAM,IAAK,IAAK,IAAK,KACjC,CACA,qBAAWC,GACP,MAAO,CACHnuD,EAAG,CAAEouD,UAAW,EAAGC,OAAQ,GAC3BC,GAAI,CAAEF,UAAW,EAAGC,OAAQ,GAC5B,KAAM,CAAED,UAAW,EAAGC,OAAQ,GAC9B,MAAO,CAAED,UAAW,EAAGC,OAAQ,GAC/Bz5C,GAAI,CAAEw5C,UAAW,EAAGC,OAAQ,IAC5BE,IAAK,CAAEH,UAAW,EAAGC,OAAQ,IAC7BjuD,EAAG,CAAEguD,UAAW,EAAGC,OAAQ,GAC3BG,GAAI,CAAEJ,UAAW,EAAGC,OAAQ,GAC5B,KAAM,CAAED,UAAW,EAAGC,OAAQ,GAC9B,MAAO,CAAED,UAAW,EAAGC,OAAQ,GAC/Bx5C,GAAI,CAAEu5C,UAAW,EAAGC,OAAQ,GAC5BI,IAAK,CAAEL,UAAW,EAAGC,OAAQ,GAC7BhuD,EAAG,CAAE+tD,UAAW,EAAGC,OAAQ,GAC3BK,GAAI,CAAEN,UAAW,EAAGC,OAAQ,GAC5B,KAAM,CAAED,UAAW,EAAGC,OAAQ,GAC9B,MAAO,CAAED,UAAW,EAAGC,OAAQ,GAC/Bt5C,GAAI,CAAEq5C,UAAW,EAAGC,OAAQ,GAC5BM,IAAK,CAAEP,UAAW,EAAGC,OAAQ,GAC7BjyD,EAAG,CAAEgyD,UAAW,EAAGC,OAAQ,GAC3BO,GAAI,CAAER,UAAW,EAAGC,OAAQ,GAC5B,KAAM,CAAED,UAAW,EAAGC,OAAQ,GAC9B,MAAO,CAAED,UAAW,EAAGC,OAAQ,GAC/Br5C,GAAI,CAAEo5C,UAAW,EAAGC,OAAQ,GAC5BQ,IAAK,CAAET,UAAW,EAAGC,OAAQ,GAC7BnuD,EAAG,CAAEkuD,UAAW,EAAGC,OAAQ,GAC3BS,GAAI,CAAEV,UAAW,EAAGC,OAAQ,GAC5B,KAAM,CAAED,UAAW,EAAGC,OAAQ,GAC9B,MAAO,CAAED,UAAW,EAAGC,OAAQ,GAC/Bh5C,GAAI,CAAE+4C,UAAW,EAAGC,OAAQ,GAC5BU,IAAK,CAAEX,UAAW,EAAGC,OAAQ,GAC7BpuD,EAAG,CAAEmuD,UAAW,EAAGC,OAAQ,GAC3BW,GAAI,CAAEZ,UAAW,EAAGC,OAAQ,GAC5B,KAAM,CAAED,UAAW,EAAGC,OAAQ,IAC9B,MAAO,CAAED,UAAW,EAAGC,OAAQ,IAC/B35C,GAAI,CAAE05C,UAAW,EAAGC,OAAQ,GAC5BY,IAAK,CAAEb,UAAW,EAAGC,OAAQ,GAC7BluD,EAAG,CAAEiuD,UAAW,EAAGC,OAAQ,IAC3Ba,GAAI,CAAEd,UAAW,EAAGC,OAAQ,IAC5B,KAAM,CAAED,UAAW,EAAGC,OAAQ,GAC9B,MAAO,CAAED,UAAW,EAAGC,OAAQ,GAC/B15C,GAAI,CAAEy5C,UAAW,EAAGC,OAAQ,IAC5Bc,IAAK,CAAEf,UAAW,EAAGC,OAAQ,GAErC,CACAe,gBAAAA,CAAiBrjD,GACb,OAAOA,GAAQ,GAAKA,EAAOk/C,EAAME,eAAejsD,MACpD,CACAmwD,oBAAAA,CAAqBC,GACjB,OAAOA,GAAY,GAAKA,EAAWrE,EAAMM,kBAAkBrsD,MAC/D,CACAqwD,YAAAA,CAAaC,GACT,IAAKA,GAAcA,EAAWtwD,OAAS,EACnC,MAAM,IAAIk0C,EAAa,eAAgB,sBAAwBoc,GAEnE,GAAIA,EAAWtwD,OAAS,EACpB,MAAM,IAAIk0C,EAAa,eAAgB,sBAAwBoc,GAEnE,MAAMzjD,EAAOyjD,EAAWv/C,cAElBkC,EADQ,8BACMs9C,KAAK1jD,GACzB,GAAc,OAAVoG,EAAgB,CAGhB,MAAO,CACHu9C,KAHSv9C,EAAM,GAIfu5C,WAHev5C,EAAM,GAK7B,CAEI,MAAM,IAAIihC,EAAa,eAAgB,sBAAwBoc,EAEvE,CACAG,WAAAA,CAAYC,GACR,IAAKA,GAAaA,EAAU1wD,OAAS,EACjC,MAAM,IAAIk0C,EAAa,eAAgB,gBAAkBwc,GAE7D,MAAM5zD,EAAM4zD,EAAU3/C,cAEhBkC,EADQ,qCACMs9C,KAAKzzD,GACzB,GAAc,OAAVmW,EAAgB,CAChB,MAAMu9C,EAAOv9C,EAAM,GACbu5C,EAAav5C,EAAM,GACzB,IAAI3R,EAAO2R,EAAM,GAGjB,OAFK3R,IACDA,EAAO,KACJ,CACHkvD,OACAhE,aACAlrD,OAER,CAEI,MAAM,IAAI4yC,EAAa,eAAgB,gBAAFloC,OAAkB0kD,GAE/D,CACAC,YAAAA,CAAaL,GACT,MAAMlzD,EAAQ2uD,EAAMkD,WAAWqB,GAC/B,QAAc3wD,IAAVvC,EACA,MAAM,IAAI82C,EAAa,eAAgB,sBAAFloC,OAAwBskD,IAEjE,OAAOlzD,EAAM+xD,MACjB,CACAyB,gBAAAA,CAAiBC,GACb,MAAMzzD,EAAQ2uD,EAAMsB,UAAUwD,GAC9B,QAAclxD,IAAVvC,EACA,MAAM,IAAI82C,EAAa,eAAgB,0BAAFloC,OAA4B6kD,IAErE,OAAOzzD,CACX,CACA0zD,oBAAAA,CAAqBC,GACjB,IAAKjuD,KAAKotD,iBAAiBa,GACvB,MAAM,IAAI7c,EAAa,eAAgB,uBAAFloC,OAAyB+kD,IAElE,OAAOhF,EAAME,eAAe8E,EAChC,CACAC,wBAAAA,CAAyBC,GACrB,IAAKnuD,KAAKqtD,qBAAqBc,GAC3B,MAAM,IAAI/c,EAAa,eAAgB,2BAAFloC,OAA6BilD,IAEtE,OAAOlF,EAAMM,kBAAkB4E,EACnC,CACAC,oBAAAA,CAAqBH,EAAWE,GAA8B,IAAfE,EAASpxD,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,EACvD,GAAkB,IAAdoxD,IAAkC,IAAfA,EACnB,MAAM,IAAIjd,EAAa,eAAgB,sBAAFloC,OAAwBmlD,IAEjE,IAAIC,GAAOL,EAAYI,EAAYF,GAAiBlF,EAAMC,UAG1D,OAFIoF,EAAM,IACNA,GAAOrF,EAAMC,WACVoF,CACX,CACAC,mBAAAA,CAAoBb,EAAMO,GACtB,MAAMO,EAAQxuD,KAAKutD,aAAaG,GAC1Be,EAAYzuD,KAAK6tD,aAAaW,EAAMd,MAC1C,IAAIJ,EAAWW,EAAYQ,EAC3B,GAAIxmD,KAAKwsC,IAAI6Y,GAAYrE,EAAMC,UAAY,EAAG,CAC1C,IAAIwF,EAAa,EACbpB,EAAW,IACXoB,GAAc,GAClB,MAAMC,GAAoBV,EAAY,GAAKQ,EAAY,IAAMxF,EAAMC,UAAawF,EAChF,GAAIzmD,KAAKwsC,IAAIka,GAAmB,EAC5B,MAAM,IAAIvd,EAAa,eAAgB,sBAAFloC,OAAwBwkD,EAAI,MAAAxkD,OAAK+kD,EAAS,MAG/EX,EAAWqB,CAEnB,CACA,GAAI1mD,KAAKwsC,IAAI6Y,GAAY,EACrB,MAAM,IAAIlc,EAAa,eAAgB,sBAAFloC,OAAwBwkD,EAAI,MAAAxkD,OAAK+kD,EAAS,MAEnF,IAAIW,EAAmBJ,EAAMd,KAC7B,GAAIJ,EAAW,EACX,IAAK,IAAI1xD,EAAI,EAAGA,GAAK0xD,IAAY1xD,EAC7BgzD,GAAoB,SAGvB,GAAItB,EAAW,EAChB,IAAK,IAAI1xD,GAAK,EAAGA,GAAK0xD,IAAY1xD,EAC9BgzD,GAAoB,IAG5B,OAAOA,CACX,CACAC,aAAAA,CAAc70D,EAAKuwD,GACf,MAAMuE,EAAQ,CAAC90D,GACf,IAAI+0D,EAAW/0D,EACf,IAAK,IAAI4B,EAAI,EAAGA,EAAI2uD,EAAUrtD,OAAQtB,IAClCmzD,EAAW/uD,KAAKouD,qBAAqBW,EAAUxE,EAAU3uD,IACrDmzD,IAAa/0D,GACb80D,EAAMjtD,KAAKktD,GAEnB,OAAOD,CACX,CACAE,kBAAAA,CAAmBC,EAAOC,GAAsB,IAAfb,EAASpxD,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,EACzC,GAAkB,IAAdoxD,IAAkC,IAAfA,EACnB,MAAM,IAAIjd,EAAa,eAAgB,sBAAFloC,OAAwBmlD,IAEjE,IAAKruD,KAAKotD,iBAAiB6B,KAAWjvD,KAAKotD,iBAAiB8B,GACxD,MAAM,IAAI9d,EAAa,eAAgB,kBAAFloC,OAAoB+lD,EAAK,MAAA/lD,OAAKgmD,IAEvE,IAAIC,EAA2B,IAAdd,EAAkBa,EAAQD,EAAQA,EAAQC,EAG3D,OAFIC,EAAa,IACbA,GAAclG,EAAMC,WACjBiG,CACX,CACAC,cAAAA,CAAeC,GACX,MAAMC,EAActvD,KAAK2tD,YAAY0B,GACrC,IAAKC,EAAY9wD,KACb,MAAM,IAAI4yC,EAAa,eAAgB,mCAC3C,MAAMme,EAAYtG,EAAMgD,WAAWqD,EAAY9wD,MAC/C,IAAIgxD,EAAeF,EAAY5B,KAG/B,GAFI4B,EAAY5F,aACZ8F,GAAgBF,EAAY5F,aAC3B6F,EACD,MAAM,IAAIne,EAAa,eAAgB,yBAA2Bie,GACtE,MAAMI,EAAQzvD,KAAK6uD,cAAc7uD,KAAK6tD,aAAa2B,GAAeD,GAC5DG,EAAezG,EAAMK,YAAYgG,EAAY5B,MAC7CiC,EAAW,CAAC,EAClB,IAAK,IAAI/zD,EAAI,EAAGA,EAAIqtD,EAAMG,MAAMlsD,SAAUtB,EAAG,CACzC,MAAM7B,GAAS21D,EAAe9zD,GAAKqtD,EAAMG,MAAMlsD,OACzC0yD,EAAW3G,EAAMG,MAAMrvD,GAC7B,IAAI81D,EAAW7vD,KAAKuuD,oBAAoBqB,EAAUH,EAAM7zD,IAChC,IAApBi0D,EAAS3yD,SACT2yD,GAAY,KAEhBF,EAASC,GAAYC,CACzB,CACA,OAAOF,CACX,GD/TJ,SAAWxJ,GACPA,EAAa,KAAI,KACjBA,EAA0B,kBAAI,SAC9BA,EAAyB,iBAAI,SAC7BA,EAAqC,6BAAI,SACzCA,EAAmC,2BAAI,SACvCA,EAAsC,8BAAI,SAC1CA,EAAoC,4BAAI,SACxCA,EAAwC,gCAAI,SAC5CA,EAAsC,8BAAI,SAC1CA,EAAyC,iCAAI,SAC7CA,EAAuC,+BAAI,SAC3CA,EAAkC,0BAAI,SACtCA,EAAgC,wBAAI,SACpCA,EAAgC,wBAAI,SACpCA,EAA8B,sBAAI,SAClCA,EAA+B,uBAAI,SACnCA,EAA6B,qBAAI,SACjCA,EAAiC,yBAAI,SACrCA,EAA+B,uBAAI,SACnCA,EAA+B,uBAAI,SACnCA,EAA6B,qBAAI,SACjCA,EAAiC,yBAAI,SACrCA,EAA+B,uBAAI,SACnCA,EAA6B,qBAAI,SACjCA,EAA2B,mBAAI,SAC/BA,EAA6B,qBAAI,SACjCA,EAA2B,mBAAI,SAC/BA,EAA+B,uBAAI,SACnCA,EAA6B,qBAAI,SACjCA,EAAqC,6BAAI,SACzCA,EAAmC,2BAAI,SACvCA,EAAqC,6BAAI,SACzCA,EAAmC,2BAAI,SACvCA,EAA8B,sBAAI,SAClCA,EAA4B,oBAAI,SAChCA,EAA8B,sBAAI,SAClCA,EAA4B,oBAAI,SAChCA,EAAqC,6BAAI,SACzCA,EAAmC,2BAAI,SACvCA,EAAsC,8BAAI,SAC1CA,EAAoC,4BAAI,SACxCA,EAA8B,sBAAI,SAClCA,EAA4B,oBAAI,SAChCA,EAAqC,6BAAI,SACzCA,EAAmC,2BAAI,SACvCA,EAAsC,8BAAI,SAC1CA,EAAoC,4BAAI,SACxCA,EAAqC,6BAAI,SACzCA,EAAmC,2BAAI,SACvCA,EAA8B,sBAAI,SAClCA,EAA4B,oBAAI,SAChCA,EAA+B,uBAAI,SACnCA,EAA6B,qBAAI,SACjCA,EAA8B,sBAAI,SAClCA,EAA4B,oBAAI,SAChCA,EAA8B,sBAAI,SAClCA,EAA4B,oBAAI,SAChCA,EAAuC,+BAAI,SAC3CA,EAAqC,6BAAI,SACzCA,EAAuC,+BAAI,SAC3CA,EAAqC,6BAAI,SACzCA,EAAwC,gCAAI,SAC5CA,EAAsC,8BAAI,SAC1CA,EAAiC,yBAAI,SACrCA,EAA+B,uBAAI,SACnCA,EAAuC,+BAAI,SAC3CA,EAAqC,6BAAI,SACzCA,EAAwC,gCAAI,SAC5CA,EAAsC,8BAAI,SAC1CA,EAAkC,0BAAI,SACtCA,EAAgC,wBAAI,SACpCA,EAA8B,sBAAI,SAClCA,EAA4B,oBAAI,SAChCA,EAA8B,sBAAI,SAClCA,EAA4B,oBAAI,SAChCA,EAA8B,sBAAI,SAClCA,EAA4B,oBAAI,SAChCA,EAAiC,yBAAI,SACrCA,EAA+B,uBAAI,SACnCA,EAAmC,2BAAI,SACvCA,EAAiC,yBAAI,SACrCA,EAAiC,yBAAI,SACrCA,EAA+B,uBAAI,SACnCA,EAA8B,sBAAI,SAClCA,EAA4B,oBAAI,SAChCA,EAA8B,sBAAI,SAClCA,EAA4B,oBAAI,SAChCA,EAAyB,iBAAI,SAC7BA,EAA8B,sBAAI,SAClCA,EAAsC,8BAAI,SAC1CA,EAAoC,4BAAI,SACxCA,EAAmC,2BAAI,SACvCA,EAAmC,2BAAI,SACvCA,EAAmC,2BAAI,SACvCA,EAAmC,2BAAI,SACvCA,EAAmC,2BAAI,SACvCA,EAAmC,2BAAI,SACvCA,EAAmC,2BAAI,SACvCA,EAAmC,2BAAI,SACvCA,EAAmC,2BAAI,SACvCA,EAAkC,0BAAI,SACtCA,EAAqC,6BAAI,SACzCA,EAAqC,6BAAI,SACzCA,EAAqC,6BAAI,SACzCA,EAAoC,4BAAI,SACxCA,EAAkC,0BAAI,SACtCA,EAAqC,6BAAI,SACzCA,EAAqC,6BAAI,SACzCA,EAAqC,6BAAI,SACzCA,EAA+B,uBAAI,SACnCA,EAAyC,iCAAI,SAC7CA,EAAuC,+BAAI,SAC3CA,EAAsC,8BAAI,SAC1CA,EAAsC,8BAAI,SAC1CA,EAAsC,8BAAI,SAC1CA,EAAsC,8BAAI,SAC1CA,EAAsC,8BAAI,SAC1CA,EAAsC,8BAAI,SAC1CA,EAAsC,8BAAI,SAC1CA,EAAsC,8BAAI,SAC1CA,EAAsC,8BAAI,SAC1CA,EAAqC,6BAAI,SACzCA,EAAwC,gCAAI,SAC5CA,EAAwC,gCAAI,SAC5CA,EAAwC,gCAAI,SAC5CA,EAAuC,+BAAI,SAC3CA,EAAqC,6BAAI,SACzCA,EAAwC,gCAAI,SAC5CA,EAAwC,gCAAI,SAC5CA,EAAwC,gCAAI,SAC5CA,EAAwB,gBAAI,SAC5BA,EAA+B,uBAAI,SACnCA,EAA+B,uBAAI,SACnCA,EAAkC,0BAAI,SACtCA,EAAkC,0BAAI,SACtCA,EAAkC,0BAAI,SACtCA,EAAgC,wBAAI,SACpCA,EAAgC,wBAAI,SACpCA,EAA8B,sBAAI,SAClCA,EAA+B,uBAAI,SACnCA,EAA6B,qBAAI,SACjCA,EAA+B,uBAAI,SACnCA,EAA6B,qBAAI,SACjCA,EAA+B,uBAAI,SACnCA,EAA6B,qBAAI,SACjCA,EAA+B,uBAAI,SACnCA,EAA6B,qBAAI,SACjCA,EAA+B,uBAAI,SACnCA,EAA6B,qBAAI,SACjCA,EAA+B,uBAAI,SACnCA,EAA6B,qBAAI,SACjCA,EAA+B,uBAAI,SACnCA,EAA6B,qBAAI,SACjCA,EAA+B,uBAAI,SACnCA,EAA+B,uBAAI,SACnCA,EAA+B,uBAAI,SACnCA,EAA+B,uBAAI,SACnCA,EAA+B,uBAAI,SACnCA,EAA6B,qBAAI,SACjCA,EAA+B,uBAAI,SACnCA,EAA6B,qBAAI,SACjCA,EAA8B,sBAAI,SAClCA,EAA4B,oBAAI,SAChCA,EAAiC,yBAAI,SACrCA,EAA+B,uBAAI,SACnCA,EAAiC,yBAAI,SACrCA,EAAiC,yBAAI,SACrCA,EAAiC,yBAAI,SACrCA,EAA+B,uBAAI,SACnCA,EAAiC,yBAAI,SACrCA,EAA+B,uBAAI,SACnCA,EAAiC,yBAAI,SACrCA,EAAgC,wBAAI,SACpCA,EAA8B,sBAAI,SAClCA,EAA8B,sBAAI,SAClCA,EAA4B,oBAAI,SAChCA,EAAiC,yBAAI,SACrCA,EAA+B,uBAAI,SACnCA,EAAiC,yBAAI,SACrCA,EAA+B,uBAAI,SACnCA,EAAiC,yBAAI,SACrCA,EAA+B,uBAAI,SACnCA,EAAsC,8BAAI,SAC1CA,EAAoC,4BAAI,SACxCA,EAAyB,iBAAI,SAC7BA,EAA6B,qBAAI,SACjCA,EAA2B,mBAAI,SAC/BA,EAAyB,iBAAI,SAC7BA,EAA8B,sBAAI,SAClCA,EAA8B,sBAAI,SAClCA,EAAiC,yBAAI,SACrCA,EAAiC,yBAAI,SACrCA,EAAmC,2BAAI,SACvCA,EAAiC,yBAAI,SACrCA,EAAiC,yBAAI,SACrCA,EAA+B,uBAAI,SACnCA,EAAgC,wBAAI,SACpCA,EAA8B,sBAAI,SAClCA,EAAgC,wBAAI,SACpCA,EAA8B,sBAAI,SAClCA,EAAgC,wBAAI,SACpCA,EAA8B,sBAAI,SAClCA,EAAgC,wBAAI,SACpCA,EAA8B,sBAAI,SAClCA,EAAgC,wBAAI,SACpCA,EAA8B,sBAAI,SAClCA,EAAgC,wBAAI,SACpCA,EAA8B,sBAAI,SAClCA,EAAgC,wBAAI,SACpCA,EAA8B,sBAAI,SAClCA,EAA8B,sBAAI,SAClCA,EAA8B,sBAAI,SAClCA,EAA8B,sBAAI,SAClCA,EAA8B,sBAAI,SAClCA,EAAgC,wBAAI,SACpCA,EAA8B,sBAAI,SAClCA,EAAgC,wBAAI,SACpCA,EAA8B,sBAAI,SAClCA,EAA+B,uBAAI,SACnCA,EAA6B,qBAAI,SACjCA,EAAkC,0BAAI,SACtCA,EAAgC,wBAAI,SACpCA,EAAgC,wBAAI,SACpCA,EAAgC,wBAAI,SACpCA,EAAkC,0BAAI,SACtCA,EAAgC,wBAAI,SACpCA,EAAkC,0BAAI,SACtCA,EAAgC,wBAAI,SACpCA,EAAgC,wBAAI,SACpCA,EAAiC,yBAAI,SACrCA,EAA+B,uBAAI,SACnCA,EAA+B,uBAAI,SACnCA,EAA6B,qBAAI,SACjCA,EAAkC,0BAAI,SACtCA,EAAgC,wBAAI,SACpCA,EAAkC,0BAAI,SACtCA,EAAgC,wBAAI,SACpCA,EAAkC,0BAAI,SACtCA,EAAgC,wBAAI,SACpCA,EAA2B,mBAAI,SAC/BA,EAA2B,mBAAI,SAC/BA,EAA2B,mBAAI,SAC/BA,EAA2B,mBAAI,SAC/BA,EAAqB,aAAI,SACzBA,EAA+B,uBAAI,SACnCA,EAAqC,6BAAI,SACzCA,EAA+B,uBAAI,SACnCA,EAA+B,uBAAI,SACnCA,EAA0B,kBAAI,SAC9BA,EAA6B,qBAAI,SACjCA,EAAkC,0BAAI,SACtCA,EAA4B,oBAAI,SAChCA,EAAqC,6BAAI,SACzCA,EAAuC,+BAAI,SAC3CA,EAAiC,yBAAI,SACrCA,EAAkC,0BAAI,SACtCA,EAA6B,qBAAI,SACjCA,EAA6B,qBAAI,SACjCA,EAAmC,2BAAI,SACvCA,EAAiC,yBAAI,SACrCA,EAAkB,UAAI,SACtBA,EAAkB,UAAI,SACtBA,EAA+B,uBAAI,SACnCA,EAAsC,8BAAI,SAC1CA,EAA+B,uBAAI,SACnCA,EAA6B,qBAAI,SACjCA,EAA8B,sBAAI,SAClCA,EAA2C,mCAAI,SAC/CA,EAA2C,mCAAI,SAC/CA,EAAiC,yBAAI,SACrCA,EAA+B,uBAAI,SACnCA,EAAsC,8BAAI,SAC1CA,EAAmC,2BAAI,SACvCA,EAA4B,oBAAI,SAChCA,EAA0B,kBAAI,SAC9BA,EAA2B,mBAAI,SAC/BA,EAA6B,qBAAI,SACjCA,EAAqC,6BAAI,SACzCA,EAAqC,6BAAI,SACzCA,EAA+B,uBAAI,SACnCA,EAAmC,2BAAI,SACvCA,EAA4B,oBAAI,SAChCA,EAA0B,kBAAI,SAC9BA,EAA8B,sBAAI,SAClCA,EAA4B,oBAAI,SAChCA,EAA8B,sBAAI,SAClCA,EAA+B,uBAAI,SACnCA,EAA6B,qBAAI,SACjCA,EAA2B,mBAAI,SAC/BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAA2B,mBAAI,SAC/BA,EAA2B,mBAAI,SAC/BA,EAA2B,mBAAI,SAC/BA,EAA2B,mBAAI,SAC/BA,EAA2B,mBAAI,SAC/BA,EAA6B,qBAAI,SACjCA,EAA8B,sBAAI,SAClCA,EAA6B,qBAAI,SACjCA,EAA8B,sBAAI,SAClCA,EAA6B,qBAAI,SACjCA,EAA8B,sBAAI,SAClCA,EAA6B,qBAAI,SACjCA,EAA8B,sBAAI,SAClCA,EAA4B,oBAAI,SAChCA,EAA0B,kBAAI,SAC9BA,EAA6B,qBAAI,SACjCA,EAA8B,sBAAI,SAClCA,EAA8B,sBAAI,SAClCA,EAA+B,uBAAI,SACnCA,EAAoC,4BAAI,SACxCA,EAAqC,6BAAI,SACzCA,EAA2C,mCAAI,SAC/CA,EAA0C,kCAAI,SAC9CA,EAA0C,kCAAI,SAC9CA,EAAoD,4CAAI,SACxDA,EAA6C,qCAAI,SACjDA,EAA0C,kCAAI,SAC9CA,EAA8C,sCAAI,SAClDA,EAAwC,gCAAI,SAC5CA,EAAwC,gCAAI,SAC5CA,EAA8C,sCAAI,SAClDA,EAA6C,qCAAI,SACjDA,EAA0C,kCAAI,SAC9CA,EAA0C,kCAAI,SAC9CA,EAA0C,kCAAI,SAC9CA,EAAoD,4CAAI,SACxDA,EAA6C,qCAAI,SACjDA,EAA0C,kCAAI,SAC9CA,EAA8C,sCAAI,SAClDA,EAAwC,gCAAI,SAC5CA,EAAwC,gCAAI,SAC5CA,EAA8C,sCAAI,SAClDA,EAA6C,qCAAI,SACjDA,EAAiC,yBAAI,SACrCA,EAA+B,uBAAI,SACnCA,EAA6B,qBAAI,SACjCA,EAAmC,2BAAI,SACvCA,EAA0C,kCAAI,SAC9CA,EAAyC,iCAAI,SAC7CA,EAAuC,+BAAI,SAC3CA,EAAqC,6BAAI,SACzCA,EAA4C,oCAAI,SAChDA,EAA0C,kCAAI,SAC9CA,EAAmC,2BAAI,SACvCA,EAA0C,kCAAI,SAC9CA,EAAwC,gCAAI,SAC5CA,EAA8B,sBAAI,SAClCA,EAAoC,4BAAI,SACxCA,EAA2C,mCAAI,SAC/CA,EAA0C,kCAAI,SAC9CA,EAAwC,gCAAI,SAC5CA,EAA6C,qCAAI,SACjDA,EAA2C,mCAAI,SAC/CA,EAA2C,mCAAI,SAC/CA,EAAyC,iCAAI,SAC7CA,EAA0C,kCAAI,SAC9CA,EAAmC,2BAAI,SACvCA,EAAkC,0BAAI,SACtCA,EAA4C,oCAAI,SAChDA,EAAqD,6CAAI,SACzDA,EAAmD,2CAAI,SACvDA,EAA8C,sCAAI,SAClDA,EAA4C,oCAAI,SAChDA,EAAgD,wCAAI,SACpDA,EAA+C,uCAAI,SACnDA,EAAuB,eAAI,SAC3BA,EAA6B,qBAAI,SACjCA,EAAoC,4BAAI,SACxCA,EAAyC,iCAAI,SAC7CA,EAAmC,2BAAI,SACvCA,EAAiC,yBAAI,SACrCA,EAAwC,gCAAI,SAC5CA,EAA8C,sCAAI,SAClDA,EAA+C,uCAAI,SACnDA,EAAsC,8BAAI,SAC1CA,EAAoC,4BAAI,SACxCA,EAA6B,qBAAI,SACjCA,EAAoC,4BAAI,SACxCA,EAAkC,0BAAI,SACtCA,EAA4C,oCAAI,SAChDA,EAAiD,yCAAI,SACrDA,EAAwC,gCAAI,SAC5CA,EAAuC,+BAAI,SAC3CA,EAA4C,oCAAI,SAChDA,EAAmD,2CAAI,SACvDA,EAAqC,6BAAI,SACzCA,EAAmC,2BAAI,SACvCA,EAA6B,qBAAI,SACjCA,EAA6B,qBAAI,SACjCA,EAA+B,uBAAI,SACnCA,EAA6B,qBAAI,SACjCA,EAAgC,wBAAI,SACpCA,EAA+B,uBAAI,SACnCA,EAAgC,wBAAI,SACpCA,EAA6B,qBAAI,SACjCA,EAA2B,mBAAI,SAC/BA,EAA4B,oBAAI,SAChCA,EAAwB,gBAAI,SAC5BA,EAAoC,4BAAI,SACxCA,EAAqC,6BAAI,SACzCA,EAAmC,2BAAI,SACvCA,EAAwC,gCAAI,SAC5CA,EAAgD,wCAAI,SACpDA,EAA+C,uCAAI,SACnDA,EAAyC,iCAAI,SAC7CA,EAAqC,6BAAI,SACzCA,EAAqC,6BAAI,SACzCA,EAA4C,oCAAI,SAChDA,EAA0B,kBAAI,SAC9BA,EAAgC,wBAAI,SACpCA,EAAuC,+BAAI,SAC3CA,EAA8B,sBAAI,SAClCA,EAA4C,oCAAI,SAChDA,EAAsC,8BAAI,SAC1CA,EAAoC,4BAAI,SACxCA,EAA2C,mCAAI,SAC/CA,EAAkC,0BAAI,SACtCA,EAA+B,uBAAI,SACnCA,EAAyC,iCAAI,SAC7CA,EAAuC,+BAAI,SAC3CA,EAAuC,+BAAI,SAC3CA,EAAqC,6BAAI,SACzCA,EAA6C,qCAAI,SACjDA,EAA2C,mCAAI,SAC/CA,EAAgD,wCAAI,SACpDA,EAAgD,wCAAI,SACpDA,EAAiD,yCAAI,SACrDA,EAAiD,yCAAI,SACrDA,EAA8C,sCAAI,SAClDA,EAA+C,uCAAI,SACnDA,EAA6B,qBAAI,SACjCA,EAA8B,sBAAI,SAClCA,EAA2C,mCAAI,SAC/CA,EAA4C,oCAAI,SAChDA,EAAmC,2BAAI,SACvCA,EAAwC,gCAAI,SAC5CA,EAAyC,iCAAI,SAC7CA,EAAgD,wCAAI,SACpDA,EAAkD,0CAAI,SACtDA,EAA4C,oCAAI,SAChDA,EAAuC,+BAAI,SAC3CA,EAAgD,wCAAI,SACpDA,EAAoC,4BAAI,SACxCA,EAAyC,iCAAI,SAC7CA,EAA4C,oCAAI,SAChDA,EAA0C,kCAAI,SAC9CA,EAAiD,yCAAI,SACrDA,EAAwC,gCAAI,SAC5CA,EAAyC,iCAAI,SAC7CA,EAAwC,gCAAI,SAC5CA,EAAgD,wCAAI,SACpDA,EAA+C,uCAAI,SACnDA,EAAyC,iCAAI,SAC7CA,EAAoC,4BAAI,SACxCA,EAA+C,uCAAI,SACnDA,EAA6C,qCAAI,SACjDA,EAAwC,gCAAI,SAC5CA,EAAsC,8BAAI,SAC1CA,EAAwB,gBAAI,SAC5BA,EAA8B,sBAAI,SAClCA,EAAqC,6BAAI,SACzCA,EAA0C,kCAAI,SAC9CA,EAAoC,4BAAI,SACxCA,EAAkC,0BAAI,SACtCA,EAA2C,mCAAI,SAC/CA,EAAyC,iCAAI,SAC7CA,EAA+C,uCAAI,SACnDA,EAAgD,wCAAI,SACpDA,EAAgC,wBAAI,SACpCA,EAA6B,qBAAI,SACjCA,EAAuC,+BAAI,SAC3CA,EAAqC,6BAAI,SACzCA,EAAqC,6BAAI,SACzCA,EAAmC,2BAAI,SACvCA,EAA6B,qBAAI,SACjCA,EAA2B,mBAAI,SAC/BA,EAA4B,oBAAI,SAChCA,EAA0B,kBAAI,SAC9BA,EAA4B,oBAAI,SAChCA,EAA0B,kBAAI,SAC9BA,EAAuB,eAAI,SAC3BA,EAA8B,sBAAI,SAClCA,EAA+B,uBAAI,SACnCA,EAA8C,sCAAI,SAClDA,EAAiD,yCAAI,SACrDA,EAA+C,uCAAI,SACnDA,EAA8C,sCAAI,SAClDA,EAA8C,sCAAI,SAClDA,EAA+C,uCAAI,SACnDA,EAAkD,0CAAI,SACtDA,EAA+C,uCAAI,SACnDA,EAAkD,0CAAI,SACtDA,EAAgD,wCAAI,SACpDA,EAAgD,wCAAI,SACpDA,EAA8C,sCAAI,SAClDA,EAAoD,4CAAI,SACxDA,EAA6B,qBAAI,SACjCA,EAA8B,sBAAI,SAClCA,EAA+C,uCAAI,SACnDA,EAAgD,wCAAI,SACpDA,EAAkC,0BAAI,SACtCA,EAAkC,0BAAI,SACtCA,EAAkC,0BAAI,SACtCA,EAAgC,wBAAI,SACpCA,EAA8B,sBAAI,SAClCA,EAA6B,qBAAI,SACjCA,EAA+C,uCAAI,SACnDA,EAAgD,wCAAI,SACpDA,EAA+C,uCAAI,SACnDA,EAAgD,wCAAI,SACpDA,EAA8C,sCAAI,SAClDA,EAA+C,uCAAI,SACnDA,EAA8C,sCAAI,SAClDA,EAA+C,uCAAI,SACnDA,EAA8C,sCAAI,SAClDA,EAA+C,uCAAI,SACnDA,EAA8C,sCAAI,SAClDA,EAA+C,uCAAI,SACnDA,EAA8C,sCAAI,SAClDA,EAA+C,uCAAI,SACnDA,EAA8C,sCAAI,SAClDA,EAA+C,uCAAI,SACnDA,EAA8C,sCAAI,SAClDA,EAA+C,uCAAI,SACnDA,EAA8C,sCAAI,SAClDA,EAA+C,uCAAI,SACnDA,EAA8C,sCAAI,SAClDA,EAA+C,uCAAI,SACnDA,EAA2C,mCAAI,SAC/CA,EAA4C,oCAAI,SAChDA,EAA+B,uBAAI,SACnCA,EAA2B,mBAAI,SAC/BA,EAA+B,uBAAI,SACnCA,EAA6B,qBAAI,SACjCA,EAA4B,oBAAI,SAChCA,EAA6B,qBAAI,SACjCA,EAA6B,qBAAI,SACjCA,EAAuB,eAAI,SAC3BA,EAAwB,gBAAI,SAC5BA,EAAgC,wBAAI,SACpCA,EAAiC,yBAAI,SACrCA,EAA0C,kCAAI,SAC9CA,EAAmB,WAAI,SACvBA,EAAuB,eAAI,SAC3BA,EAAqB,aAAI,SACzBA,EAAuB,eAAI,SAC3BA,EAA2B,mBAAI,SAC/BA,EAA4B,oBAAI,SAChCA,EAAuB,eAAI,SAC3BA,EAAwB,gBAAI,SAC5BA,EAAqB,aAAI,SACzBA,EAAyB,iBAAI,SAC7BA,EAA0B,kBAAI,SAC9BA,EAAsB,cAAI,SAC1BA,EAA0B,kBAAI,SAC9BA,EAA2B,mBAAI,SAC/BA,EAAsB,cAAI,SAC1BA,EAAuB,eAAI,SAC3BA,EAAoB,YAAI,SACxBA,EAAwB,gBAAI,SAC5BA,EAAyB,iBAAI,SAC7BA,EAAuB,eAAI,SAC3BA,EAA2B,mBAAI,SAC/BA,EAA4B,oBAAI,SAChCA,EAAuB,eAAI,SAC3BA,EAAwB,gBAAI,SAC5BA,EAAqB,aAAI,SACzBA,EAAyB,iBAAI,SAC7BA,EAA0B,kBAAI,SAC9BA,EAA2B,mBAAI,SAC/BA,EAA+B,uBAAI,SACnCA,EAAgC,wBAAI,SACpCA,EAA2B,mBAAI,SAC/BA,EAA4B,oBAAI,SAChCA,EAAyB,iBAAI,SAC7BA,EAA6B,qBAAI,SACjCA,EAA8B,sBAAI,SAClCA,EAA0B,kBAAI,SAC9BA,EAA8B,sBAAI,SAClCA,EAA+B,uBAAI,SACnCA,EAA0B,kBAAI,SAC9BA,EAA2B,mBAAI,SAC/BA,EAAwB,gBAAI,SAC5BA,EAA4B,oBAAI,SAChCA,EAA6B,qBAAI,SACjCA,EAA2B,mBAAI,SAC/BA,EAA+B,uBAAI,SACnCA,EAAgC,wBAAI,SACpCA,EAA2B,mBAAI,SAC/BA,EAA4B,oBAAI,SAChCA,EAAyB,iBAAI,SAC7BA,EAA6B,qBAAI,SACjCA,EAA8B,sBAAI,SAClCA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAiC,yBAAI,SACrCA,EAAiC,yBAAI,SACrCA,EAAgC,wBAAI,SACpCA,EAAgC,wBAAI,SACpCA,EAA0B,kBAAI,SAC9BA,EAA0B,kBAAI,SAC9BA,EAAkC,0BAAI,SACtCA,EAAkC,0BAAI,SACtCA,EAAgC,wBAAI,SACpCA,EAAgC,wBAAI,SACpCA,EAA6B,qBAAI,SACjCA,EAA6B,qBAAI,SACjCA,EAAqC,6BAAI,SACzCA,EAAqC,6BAAI,SACzCA,EAAmC,2BAAI,SACvCA,EAAmC,2BAAI,SACvCA,EAA2C,mCAAI,SAC/CA,EAA2C,mCAAI,SAC/CA,EAAgC,wBAAI,SACpCA,EAAgC,wBAAI,SACpCA,EAAsC,8BAAI,SAC1CA,EAAsC,8BAAI,SAC1CA,EAAqC,6BAAI,SACzCA,EAAqC,6BAAI,SACzCA,EAA2B,mBAAI,SAC/BA,EAA2B,mBAAI,SAC/BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAA+B,uBAAI,SACnCA,EAA+B,uBAAI,SACnCA,EAAyB,iBAAI,SAC7BA,EAAiC,yBAAI,SACrCA,EAAiC,yBAAI,SACrCA,EAA2B,mBAAI,SAC/BA,EAA2B,mBAAI,SAC/BA,EAAwB,gBAAI,SAC5BA,EAAsB,cAAI,SAC1BA,EAAsB,cAAI,SAC1BA,EAAsB,cAAI,SAC1BA,EAAqB,aAAI,SACzBA,EAAqB,aAAI,SACzBA,EAA0B,kBAAI,SAC9BA,EAA4B,oBAAI,SAChCA,EAAqB,aAAI,SACzBA,EAAsB,cAAI,SAC1BA,EAAoB,YAAI,SACxBA,EAAsB,cAAI,SAC1BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAsB,cAAI,SAC1BA,EAAsB,cAAI,SAC1BA,EAAsB,cAAI,SAC1BA,EAAsB,cAAI,SAC1BA,EAAsB,cAAI,SAC1BA,EAAsB,cAAI,SAC1BA,EAAsB,cAAI,SAC1BA,EAAsB,cAAI,SAC1BA,EAA0B,kBAAI,SAC9BA,EAAc,MAAI,SAClBA,EAAgB,QAAI,SACpBA,EAAsB,cAAI,SAC1BA,EAAmB,WAAI,SACvBA,EAAkB,UAAI,SACtBA,EAAsB,cAAI,SAC1BA,EAAwB,gBAAI,SAC5BA,EAAuB,eAAI,SAC3BA,EAAyB,iBAAI,SAC7BA,EAA2B,mBAAI,SAC/BA,EAA0B,kBAAI,SAC9BA,EAA2B,mBAAI,SAC/BA,EAA6B,qBAAI,SACjCA,EAA4B,oBAAI,SAChCA,EAA4B,oBAAI,SAChCA,EAA8B,sBAAI,SAClCA,EAA6B,qBAAI,SACjCA,EAAkB,UAAI,SACtBA,EAA8B,sBAAI,SAClCA,EAAoC,4BAAI,SACxCA,EAAqC,6BAAI,SACzCA,EAAgC,wBAAI,SACpCA,EAAsB,cAAI,SAC1BA,EAAsB,cAAI,SAC1BA,EAAwB,gBAAI,SAC5BA,EAAuB,eAAI,SAC3BA,EAA4B,oBAAI,SAChCA,EAA8B,sBAAI,SAClCA,EAA6B,qBAAI,SACjCA,EAAwB,gBAAI,SAC5BA,EAA4B,oBAAI,SAChCA,EAAsB,cAAI,SAC1BA,EAAkB,UAAI,SACtBA,EAAmB,WAAI,SACvBA,EAAmB,WAAI,SACvBA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAA0B,kBAAI,SAC9BA,EAAuB,eAAI,SAC3BA,EAAwB,gBAAI,SAC5BA,EAAmB,WAAI,SACvBA,EAAiB,SAAI,SACrBA,EAAc,MAAI,SAClBA,EAAiB,SAAI,SACrBA,EAAuB,eAAI,SAC3BA,EAAqB,aAAI,SACzBA,EAAoB,YAAI,SACxBA,EAAuB,eAAI,SAC3BA,EAAsB,cAAI,SAC1BA,EAAoB,YAAI,SACxBA,EAAgB,QAAI,SACpBA,EAAsB,cAAI,SAC1BA,EAAqB,aAAI,SACzBA,EAA4B,oBAAI,SAChCA,EAAqB,aAAI,SACzBA,EAA2B,mBAAI,SAC/BA,EAA2B,mBAAI,SAC/BA,EAAuB,eAAI,SAC3BA,EAAwB,gBAAI,SAC5BA,EAAuB,eAAI,SAC3BA,EAAqB,aAAI,SACzBA,EAAmB,WAAI,SACvBA,EAA2B,mBAAI,SAC/BA,EAA2B,mBAAI,SAC/BA,EAAkC,0BAAI,SACtCA,EAAkC,0BAAI,SACtCA,EAAkC,0BAAI,SACtCA,EAAkC,0BAAI,SACtCA,EAAkC,0BAAI,SACtCA,EAAmC,2BAAI,SACvCA,EAAsC,8BAAI,SAC1CA,EAAqC,6BAAI,SACzCA,EAAgC,wBAAI,SACpCA,EAAmC,2BAAI,SACvCA,EAAmC,2BAAI,SACvCA,EAA4B,oBAAI,SAChCA,EAA4B,oBAAI,SAChCA,EAA4B,oBAAI,SAChCA,EAA0B,kBAAI,SAC9BA,EAA2B,mBAAI,SAC/BA,EAA2B,mBAAI,SAC/BA,EAA6B,qBAAI,SACjCA,EAA6B,qBAAI,SACjCA,EAA6B,qBAAI,SACjCA,EAA6B,qBAAI,SACjCA,EAA6B,qBAAI,SACjCA,EAAqB,aAAI,SACzBA,EAAmB,WAAI,SACvBA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAA6B,qBAAI,SACjCA,EAA6B,qBAAI,SACjCA,EAA6B,qBAAI,SACjCA,EAA6B,qBAAI,SACjCA,EAA8B,sBAAI,SAClCA,EAA+B,uBAAI,SACnCA,EAA+B,uBAAI,SACnCA,EAA0B,kBAAI,SAC9BA,EAA0B,kBAAI,SAC9BA,EAAqB,aAAI,SACzBA,EAA0B,kBAAI,SAC9BA,EAA8B,sBAAI,SAClCA,EAA+B,uBAAI,SACnCA,EAAqC,6BAAI,SACzCA,EAAwC,gCAAI,SAC5CA,EAA0B,kBAAI,SAC9BA,EAA+B,uBAAI,SACnCA,EAA0B,kBAAI,SAC9BA,EAAkC,0BAAI,SACtCA,EAAsB,cAAI,SAC1BA,EAA+B,uBAAI,SACnCA,EAA+B,uBAAI,SACnCA,EAAmB,WAAI,SACvBA,EAAyB,iBAAI,SAC7BA,EAAuB,eAAI,SAC3BA,EAAwB,gBAAI,SAC5BA,EAA8B,sBAAI,SAClCA,EAAqC,6BAAI,SACzCA,EAAqC,6BAAI,SACzCA,EAAqC,6BAAI,SACzCA,EAAqC,6BAAI,SACzCA,EAAqB,aAAI,SACzBA,EAAe,OAAI,SACnBA,EAAc,MAAI,SAClBA,EAA4B,oBAAI,SAChCA,EAAa,KAAI,SACjBA,EAAmB,WAAI,SACvBA,EAA+B,uBAAI,SACnCA,EAA6B,qBAAI,SACjCA,EAA+B,uBAAI,SACnCA,EAA6B,qBAAI,SACjCA,EAA+B,uBAAI,SACnCA,EAA6B,qBAAI,SACjCA,EAA0B,kBAAI,SAC9BA,EAA2B,mBAAI,SAC/BA,EAA4B,oBAAI,SAChCA,EAA6B,qBAAI,SACjCA,EAA0B,kBAAI,SAC9BA,EAAyB,iBAAI,SAC7BA,EAA2B,mBAAI,SAC/BA,EAAyB,iBAAI,SAC7BA,EAAwB,gBAAI,SAC5BA,EAAuB,eAAI,SAC3BA,EAAyB,iBAAI,SAC7BA,EAAuB,eAAI,SAC3BA,EAAsB,cAAI,SAC1BA,EAAiC,yBAAI,SACrCA,EAAkC,0BAAI,SACtCA,EAA2B,mBAAI,SAC/BA,EAA8B,sBAAI,SAClCA,EAA4B,oBAAI,SAChCA,EAAiC,yBAAI,SACrCA,EAAkC,0BAAI,SACtCA,EAA6B,qBAAI,SACjCA,EAAsB,cAAI,SAC1BA,EAA4B,oBAAI,SAChCA,EAA6B,qBAAI,SACjCA,EAAqC,6BAAI,SACzCA,EAAuB,eAAI,SAC3BA,EAA2B,mBAAI,SAC/BA,EAAyB,iBAAI,SAC7BA,EAAkB,UAAI,SACtBA,EAA2B,mBAAI,SAC/BA,EAA+B,uBAAI,SACnCA,EAA4B,oBAAI,SAChCA,EAAgC,wBAAI,SACpCA,EAAmB,WAAI,SACvBA,EAAe,OAAI,SACnBA,EAAiB,SAAI,SACrBA,EAA4B,oBAAI,SAChCA,EAA4B,oBAAI,SAChCA,EAA4B,oBAAI,SAChCA,EAA4B,oBAAI,SAChCA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAA2B,mBAAI,SAC/BA,EAA2B,mBAAI,SAC/BA,EAA2B,mBAAI,SAC/BA,EAA2B,mBAAI,SAC/BA,EAAiC,yBAAI,SACrCA,EAA0B,kBAAI,SAC9BA,EAA0B,kBAAI,SAC9BA,EAAsC,8BAAI,SAC1CA,EAAuC,+BAAI,SAC3CA,EAAsC,8BAAI,SAC1CA,EAAsC,8BAAI,SAC1CA,EAAgC,wBAAI,SACpCA,EAAiC,yBAAI,SACrCA,EAAkB,UAAI,SACtBA,EAAmB,WAAI,SACvBA,EAAoB,YAAI,SACxBA,EAAqB,aAAI,SACzBA,EAAsB,cAAI,SAC1BA,EAAqB,aAAI,SACzBA,EAA0B,kBAAI,SAC9BA,EAAwB,gBAAI,SAC5BA,EAAkC,0BAAI,SACtCA,EAAmC,2BAAI,SACvCA,EAAsC,8BAAI,SAC1CA,EAAuC,+BAAI,SAC3CA,EAAkB,UAAI,SACtBA,EAAkB,UAAI,SACtBA,EAA2B,mBAAI,SAC/BA,EAAqB,aAAI,SACzBA,EAAsB,cAAI,SAC1BA,EAAgC,wBAAI,SACpCA,EAAkB,UAAI,SACtBA,EAAkB,UAAI,SACtBA,EAAmB,WAAI,SACvBA,EAAoB,YAAI,SACxBA,EAAqB,aAAI,SACzBA,EAAsB,cAAI,SAC1BA,EAAqB,aAAI,SACzBA,EAA2B,mBAAI,SAC/BA,EAA4B,oBAAI,SAChCA,EAA4B,oBAAI,SAChCA,EAAyB,iBAAI,SAC7BA,EAA0B,kBAAI,SAC9BA,EAAmC,2BAAI,SACvCA,EAA8B,sBAAI,SAClCA,EAAwB,gBAAI,SAC5BA,EAA0B,kBAAI,SAC9BA,EAA6B,qBAAI,SACjCA,EAAiB,SAAI,SACrBA,EAA+B,uBAAI,SACnCA,EAA8B,sBAAI,SAClCA,EAA8B,sBAAI,SAClCA,EAA6B,qBAAI,SACjCA,EAA+B,uBAAI,SACnCA,EAA6B,qBAAI,SACjCA,EAAsC,8BAAI,SAC1CA,EAAuC,+BAAI,SAC3CA,EAA6B,qBAAI,SACjCA,EAAoB,YAAI,SACxBA,EAAsB,cAAI,SAC1BA,EAAqB,aAAI,SACzBA,EAAwB,gBAAI,SAC5BA,EAAmB,WAAI,SACvBA,EAAmB,WAAI,SACvBA,EAAoB,YAAI,SACxBA,EAAiB,SAAI,SACrBA,EAAqB,aAAI,SACzBA,EAAkB,UAAI,SACtBA,EAAwB,gBAAI,SAC5BA,EAAuB,eAAI,SAC3BA,EAAoB,YAAI,SACxBA,EAAmB,WAAI,SACvBA,EAAoB,YAAI,SACxBA,EAAiB,SAAI,SACrBA,EAAwB,gBAAI,SAC5BA,EAA4B,oBAAI,SAChCA,EAA8B,sBAAI,SAClCA,EAA6B,qBAAI,SACjCA,EAA6B,qBAAI,SACjCA,EAA6B,qBAAI,SACjCA,EAA6B,qBAAI,SACjCA,EAAmB,WAAI,SACvBA,EAAoB,YAAI,SACxBA,EAAuB,eAAI,SAC3BA,EAA2B,mBAAI,SAC/BA,EAA6B,qBAAI,SACjCA,EAA0B,kBAAI,SAC9BA,EAAoB,YAAI,SACxBA,EAAiB,SAAI,SACrBA,EAAkB,UAAI,SACtBA,EAAiB,SAAI,SACrBA,EAAuB,eAAI,SAC3BA,EAAsB,cAAI,SAC1BA,EAAmB,WAAI,SACvBA,EAAmB,WAAI,SACvBA,EAAoB,YAAI,SACxBA,EAA0B,kBAAI,SAC9BA,EAAyB,iBAAI,SAC7BA,EAAiB,SAAI,SACrBA,EAAiB,SAAI,SACrBA,EAAgB,QAAI,SACpBA,EAAmB,WAAI,SACvBA,EAAmB,WAAI,SACvBA,EAAwB,gBAAI,SAC5BA,EAAoB,YAAI,SACxBA,EAAqB,aAAI,SACzBA,EAAwB,gBAAI,SAC5BA,EAA6B,qBAAI,SACjCA,EAAyB,iBAAI,SAC7BA,EAA2B,mBAAI,SAC/BA,EAA0B,kBAAI,SAC9BA,EAA0B,kBAAI,SAC9BA,EAA0B,kBAAI,SAC9BA,EAA0B,kBAAI,SAC9BA,EAAc,MAAI,SAClBA,EAAkB,UAAI,SACtBA,EAAkB,UAAI,SACtBA,EAAiB,SAAI,SACrBA,EAAiB,SAAI,SACrBA,EAAuB,eAAI,SAC3BA,EAAqB,aAAI,SACzBA,EAAoB,YAAI,SACxBA,EAAsB,cAAI,SAC1BA,EAAoB,YAAI,SACxBA,EAAqB,aAAI,SACzBA,EAAqB,aAAI,SACzBA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAA8B,sBAAI,SAClCA,EAA8B,sBAAI,SAClCA,EAA0B,kBAAI,SAC9BA,EAA0B,kBAAI,SAC9BA,EAA+B,uBAAI,SACnCA,EAA+B,uBAAI,SACnCA,EAA6B,qBAAI,SACjCA,EAA6B,qBAAI,SACjCA,EAA8B,sBAAI,SAClCA,EAA8B,sBAAI,SAClCA,EAAiB,SAAI,SACrBA,EAAiB,SAAI,SACrBA,EAAiB,SAAI,SACrBA,EAAuB,eAAI,SAC3BA,EAAiB,SAAI,SACrBA,EAAiB,SAAI,SACrBA,EAAuB,eAAI,SAC3BA,EAAiB,SAAI,SACrBA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAAiB,SAAI,SACrBA,EAAuB,eAAI,SAC3BA,EAAwB,gBAAI,SAC5BA,EAAiB,SAAI,SACrBA,EAA2B,mBAAI,SAC/BA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAAiB,SAAI,SACrBA,EAAiB,SAAI,SACrBA,EAAuB,eAAI,SAC3BA,EAA2B,mBAAI,SAC/BA,EAA4B,oBAAI,SAChCA,EAAiC,yBAAI,SACrCA,EAAgC,wBAAI,SACpCA,EAA0B,kBAAI,SAC9BA,EAA2B,mBAAI,SAC/BA,EAAoB,YAAI,SACxBA,EAAuB,eAAI,SAC3BA,EAA0B,kBAAI,SAC9BA,EAA2B,mBAAI,SAC/BA,EAAoB,YAAI,SACxBA,EAAqB,aAAI,SACzBA,EAA0B,kBAAI,SAC9BA,EAA2B,mBAAI,SAC/BA,EAAmB,WAAI,SACvBA,EAAyB,iBAAI,SAC7BA,EAAmB,WAAI,SACvBA,EAAyB,iBAAI,SAC7BA,EAAmB,WAAI,SACvBA,EAAyB,iBAAI,SAC7BA,EAAmB,WAAI,SACvBA,EAAyB,iBAAI,SAC7BA,EAAmB,WAAI,SACvBA,EAAyB,iBAAI,SAC7BA,EAAmB,WAAI,SACvBA,EAAyB,iBAAI,SAC7BA,EAAmB,WAAI,SACvBA,EAAyB,iBAAI,SAC7BA,EAAmB,WAAI,SACvBA,EAAyB,iBAAI,SAC7BA,EAAmB,WAAI,SACvBA,EAAyB,iBAAI,SAC7BA,EAAmB,WAAI,SACvBA,EAAyB,iBAAI,SAC7BA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAA6B,qBAAI,SACjCA,EAAmC,2BAAI,SACvCA,EAAiC,yBAAI,SACrCA,EAAuC,+BAAI,SAC3CA,EAAwB,gBAAI,SAC5BA,EAA+B,uBAAI,SACnCA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAA8B,sBAAI,SAClCA,EAAoC,4BAAI,SACxCA,EAAkC,0BAAI,SACtCA,EAAwC,gCAAI,SAC5CA,EAAwB,gBAAI,SAC5BA,EAAoC,4BAAI,SACxCA,EAAyC,iCAAI,SAC7CA,EAAgC,wBAAI,SACpCA,EAAmC,2BAAI,SACvCA,EAAmC,2BAAI,SACvCA,EAAkC,0BAAI,SACtCA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAAuB,eAAI,SAC3BA,EAAqB,aAAI,SACzBA,EAAsB,cAAI,SAC1BA,EAAoB,YAAI,SACxBA,EAAqB,aAAI,SACzBA,EAAmB,WAAI,SACvBA,EAAsB,cAAI,SAC1BA,EAAoB,YAAI,SACxBA,EAAqB,aAAI,SACzBA,EAAmB,WAAI,SACvBA,EAAsB,cAAI,SAC1BA,EAAoB,YAAI,SACxBA,EAAqB,aAAI,SACzBA,EAAmB,WAAI,SACvBA,EAAoB,YAAI,SACxBA,EAAkB,UAAI,SACtBA,EAAyB,iBAAI,SAC7BA,EAAuB,eAAI,SAC3BA,EAAyB,iBAAI,SAC7BA,EAA4B,oBAAI,SAChCA,EAAyB,iBAAI,SAC7BA,EAA4B,oBAAI,SAChCA,EAAyB,iBAAI,SAC7BA,EAA4B,oBAAI,SAChCA,EAAyB,iBAAI,SAC7BA,EAA4B,oBAAI,SAChCA,EAA8B,sBAAI,SAClCA,EAAmB,WAAI,SACvBA,EAAmB,WAAI,SACvBA,EAA0B,kBAAI,SAC9BA,EAA2B,mBAAI,SAC/BA,EAA4B,oBAAI,SAChCA,EAA6B,qBAAI,SACjCA,EAAmB,WAAI,SACvBA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAsB,cAAI,SAC1BA,EAAuB,eAAI,SAC3BA,EAAqB,aAAI,SACzBA,EAAqB,aAAI,SACzBA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAA4B,oBAAI,SAChCA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAyB,iBAAI,SAC7BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAsB,cAAI,SAC1BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAkC,0BAAI,SACtCA,EAAqB,aAAI,SACzBA,EAAoB,YAAI,SACxBA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAA2B,mBAAI,SAC/BA,EAA4B,oBAAI,SAChCA,EAAqB,aAAI,SACzBA,EAAuB,eAAI,SAC3BA,EAA4B,oBAAI,SAChCA,EAA4B,oBAAI,SAChCA,EAAqB,aAAI,SACzBA,EAAuB,eAAI,SAC3BA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAAuB,eAAI,SAC3BA,EAAsB,cAAI,SAC1BA,EAAoB,YAAI,SACxBA,EAA0B,kBAAI,SAC9BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAsB,cAAI,SAC1BA,EAAoB,YAAI,SACxBA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAqB,aAAI,SACzBA,EAAc,MAAI,SAClBA,EAAkB,UAAI,SACtBA,EAAkB,UAAI,SACtBA,EAAiB,SAAI,SACrBA,EAAiB,SAAI,SACrBA,EAAsB,cAAI,SAC1BA,EAAoB,YAAI,SACxBA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAqB,aAAI,SACzBA,EAAoB,YAAI,SACxBA,EAAgC,wBAAI,SACpCA,EAAgC,wBAAI,SACpCA,EAAsB,cAAI,SAC1BA,EAAoB,YAAI,SACxBA,EAAsB,cAAI,SAC1BA,EAAoB,YAAI,SACxBA,EAAsC,8BAAI,SAC1CA,EAAoC,4BAAI,SACxCA,EAAsC,8BAAI,SAC1CA,EAAoC,4BAAI,SACxCA,EAA+B,uBAAI,SACnCA,EAA6B,qBAAI,SACjCA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAAyB,iBAAI,SAC7BA,EAAqB,aAAI,SACzBA,EAAsB,cAAI,SAC1BA,EAAoB,YAAI,SACxBA,EAA4B,oBAAI,SAChCA,EAA8B,sBAAI,SAClCA,EAAwB,gBAAI,SAC5BA,EAA+B,uBAAI,SACnCA,EAAoB,YAAI,SACxBA,EAAsB,cAAI,SAC1BA,EAAsB,cAAI,SAC1BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAsB,cAAI,SAC1BA,EAAsB,cAAI,SAC1BA,EAAsB,cAAI,SAC1BA,EAAsB,cAAI,SAC1BA,EAAsB,cAAI,SAC1BA,EAAsB,cAAI,SAC1BA,EAAsB,cAAI,SAC1BA,EAAsB,cAAI,SAC1BA,EAAwB,gBAAI,SAC5BA,EAAsB,cAAI,SAC1BA,EAA4B,oBAAI,SAChCA,EAA8B,sBAAI,SAClCA,EAA4B,oBAAI,SAChCA,EAA0B,kBAAI,SAC9BA,EAAgC,wBAAI,SACpCA,EAA0B,kBAAI,SAC9BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAsB,cAAI,SAC1BA,EAAgC,wBAAI,SACpCA,EAAmC,2BAAI,SACvCA,EAAqC,6BAAI,SACzCA,EAA2B,mBAAI,SAC/BA,EAA4B,oBAAI,SAChCA,EAAgC,wBAAI,SACpCA,EAAiC,yBAAI,SACrCA,EAA2B,mBAAI,SAC/BA,EAAuB,eAAI,SAC3BA,EAA2B,mBAAI,SAC/BA,EAAyB,iBAAI,SAC7BA,EAAgC,wBAAI,SACpCA,EAAiC,yBAAI,SACrCA,EAAqB,aAAI,SACzBA,EAA0B,kBAAI,SAC9BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAwB,gBAAI,SAC5BA,EAAoC,4BAAI,SACxCA,EAAqC,6BAAI,SACzCA,EAA6B,qBAAI,SACjCA,EAA6B,qBAAI,SACjCA,EAAiC,yBAAI,SACrCA,EAAkC,0BAAI,SACtCA,EAAqC,6BAAI,SACzCA,EAAsC,8BAAI,SAC1CA,EAAkC,0BAAI,SACtCA,EAAkC,0BAAI,SACtCA,EAA2C,mCAAI,SAC/CA,EAAiC,yBAAI,SACrCA,EAA6B,qBAAI,SACjCA,EAAgC,wBAAI,SACpCA,EAAuC,+BAAI,SAC3CA,EAA6B,qBAAI,SACjCA,EAAgC,wBAAI,SACpCA,EAAiC,yBAAI,SACrCA,EAAkC,0BAAI,SACtCA,EAAmC,2BAAI,SACvCA,EAA4B,oBAAI,SAChCA,EAAsB,cAAI,SAC1BA,EAA+B,uBAAI,SACnCA,EAA4B,oBAAI,SAChCA,EAA2B,mBAAI,SAC/BA,EAAuB,eAAI,SAC3BA,EAAqB,aAAI,SACzBA,EAAqB,aAAI,SACzBA,EAAqB,aAAI,SACzBA,EAAoB,YAAI,SACxBA,EAAuB,eAAI,SAC3BA,EAAoB,YAAI,SACxBA,EAA0B,kBAAI,SAC9BA,EAAyB,iBAAI,SAC7BA,EAAiB,SAAI,SACrBA,EAAiB,SAAI,SACrBA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAqB,aAAI,SACzBA,EAAoB,YAAI,SACxBA,EAAiB,SAAI,SACrBA,EAAiB,SAAI,SACrBA,EAAqB,aAAI,SACzBA,EAAiB,SAAI,SACrBA,EAAoB,YAAI,SACxBA,EAAoB,YAAI,SACxBA,EAAqB,aAAI,SACzBA,EAA2B,mBAAI,SAC/BA,EAAwB,gBAAI,SAC5BA,EAA0B,kBAAI,SAC9BA,EAAiB,SAAI,SACrBA,EAAuB,eAAI,SAC3BA,EAAsB,cAAI,SAC1BA,EAAqB,aAAI,SACzBA,EAAqB,aAAI,SACzBA,EAAoB,YAAI,SACxBA,EAAgB,QAAI,SACpBA,EAAsB,cAAI,SAC1BA,EAAyB,iBAAI,SAC7BA,EAAuB,eAAI,SAC3BA,EAAwB,gBAAI,SAC5BA,EAAiB,SAAI,SACrBA,EAAyB,iBAAI,SAC7BA,EAA0B,kBAAI,SAC9BA,EAAsB,cAAI,SAC1BA,EAAsB,cAAI,SAC1BA,EAAqB,aAAI,SACzBA,EAA0B,kBAAI,SAC9BA,EAAqB,aAAI,SACzBA,EAAuB,eAAI,SAC3BA,EAA0B,kBAAI,SAC9BA,EAAiB,SAAI,SACrBA,EAAiB,SAAI,SACrBA,EAAiB,SAAI,SACrBA,EAAmB,WAAI,SACvBA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAsB,cAAI,SAC1BA,EAA2B,mBAAI,SAC/BA,EAAsB,cAAI,SAC1BA,EAAgB,QAAI,SACpBA,EAAmB,WAAI,SACvBA,EAAmB,WAAI,SACvBA,EAAkB,UAAI,SACtBA,EAAoB,YAAI,SACxBA,EAAoB,YAAI,SACxBA,EAAiB,SAAI,SACrBA,EAAiB,SAAI,SACrBA,EAAsB,cAAI,SAC1BA,EAAqB,aAAI,SACzBA,EAAiB,SAAI,SACrBA,EAAkB,UAAI,SACtBA,EAAuB,eAAI,SAC3BA,EAAiB,SAAI,SACrBA,EAAsB,cAAI,SAC1BA,EAAkB,UAAI,SACtBA,EAAuB,eAAI,SAC3BA,EAAgB,QAAI,SACpBA,EAAgB,QAAI,SACpBA,EAAqB,aAAI,SACzBA,EAAoB,YAAI,SACxBA,EAAoB,YAAI,SACxBA,EAAmB,WAAI,SACvBA,EAAmB,WAAI,SACvBA,EAAiB,SAAI,SACrBA,EAAuB,eAAI,SAC3BA,EAAiB,SAAI,SACrBA,EAAiB,SAAI,SACrBA,EAAiC,yBAAI,SACrCA,EAAiC,yBAAI,SACrCA,EAAiC,yBAAI,SACrCA,EAAiC,yBAAI,SACrCA,EAAiC,yBAAI,SACrCA,EAAiC,yBAAI,SACrCA,EAAmC,2BAAI,SACvCA,EAAqC,6BAAI,SACzCA,EAAuB,eAAI,SAC3BA,EAAyB,iBAAI,SAC7BA,EAAuB,eAAI,SAC3BA,EAA0B,kBAAI,SAC9BA,EAA2B,mBAAI,SAC/BA,EAA2B,mBAAI,SAC/BA,EAA2B,mBAAI,SAC/BA,EAA2B,mBAAI,SAC/BA,EAA2B,mBAAI,SAC/BA,EAA+B,uBAAI,SACnCA,EAA6B,qBAAI,SACjCA,EAA6B,qBAAI,SACjCA,EAA+B,uBAAI,SACnCA,EAA4B,oBAAI,SAChCA,EAAuB,eAAI,SAC3BA,EAAgC,wBAAI,SACpCA,EAAiC,yBAAI,SACrCA,EAAyB,iBAAI,SAC7BA,EAAuB,eAAI,SAC3BA,EAA0B,kBAAI,SAC9BA,EAA0B,kBAAI,SAC9BA,EAA0B,kBAAI,SAC9BA,EAA+B,uBAAI,SACnCA,EAAwB,gBAAI,SAC5BA,EAA6B,qBAAI,SACjCA,EAA+B,uBAAI,SACnCA,EAA2B,mBAAI,SAC/BA,EAA8B,sBAAI,SAClCA,EAA2B,mBAAI,SAC/BA,EAA8B,sBAAI,SAClCA,EAA4B,oBAAI,SAChCA,EAAoC,4BAAI,SACxCA,EAA6B,qBAAI,SACjCA,EAA8B,sBAAI,SAClCA,EAA8B,sBAAI,SAClCA,EAAoB,YAAI,SACxBA,EAA2B,mBAAI,SAC/BA,EAA8B,sBAAI,SAClCA,EAA4B,oBAAI,SAChCA,EAAuB,eAAI,SAC3BA,EAAgC,wBAAI,SACpCA,EAAiC,yBAAI,SACrCA,EAAkC,0BAAI,SACtCA,EAAgC,wBAAI,SACpCA,EAA2B,mBAAI,SAC/BA,EAAwB,gBAAI,SAC5BA,EAA6B,qBAAI,SACjCA,EAAqB,aAAI,SACzBA,EAAqB,aAAI,SACzBA,EAAqB,aAAI,SACzBA,EAAqB,aAAI,SACzBA,EAAqB,aAAI,SACzBA,EAAqB,aAAI,SACzBA,EAAqB,aAAI,SACzBA,EAAwB,gBAAI,SAC5BA,EAAkB,UAAI,SACtBA,EAAwB,gBAAI,SAC5BA,EAAsB,cAAI,SAC1BA,EAA6B,qBAAI,SACjCA,EAAyB,iBAAI,SAC7BA,EAA+B,uBAAI,SACnCA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAwB,gBAAI,SAC5BA,EAAgC,wBAAI,SACpCA,EAAyB,iBAAI,SAC7BA,EAA4B,oBAAI,SAChCA,EAA0B,kBAAI,SAC9BA,EAA6B,qBAAI,SACjCA,EAA8B,sBAAI,SAClCA,EAA6B,qBAAI,SACjCA,EAA6B,qBAAI,SACjCA,EAA6B,qBAAI,SACjCA,EAA4B,oBAAI,SAChCA,EAA4B,oBAAI,SAChCA,EAA4B,oBAAI,SAChCA,EAAoC,4BAAI,SACxCA,EAAoC,4BAAI,SACxCA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAAkC,0BAAI,SACtCA,EAA+B,uBAAI,SACnCA,EAA+B,uBAAI,SACnCA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAgC,wBAAI,SACpCA,EAA6B,qBAAI,SACjCA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAA8B,sBAAI,SAClCA,EAA4B,oBAAI,SAChCA,EAAiC,yBAAI,SACrCA,EAA6B,qBAAI,SACjCA,EAA2C,mCAAI,SAC/CA,EAA6B,qBAAI,SACjCA,EAAqC,6BAAI,SACzCA,EAAiC,yBAAI,SACrCA,EAA8B,sBAAI,SAClCA,EAA2B,mBAAI,SAC/BA,EAA2B,mBAAI,SAC/BA,EAAwB,gBAAI,SAC5BA,EAA8B,sBAAI,SAClCA,EAA4B,oBAAI,SAChCA,EAAsB,cAAI,SAC1BA,EAA4B,oBAAI,SAChCA,EAA0B,kBAAI,SAC9BA,EAA6B,qBAAI,SACjCA,EAAwC,gCAAI,SAC5CA,EAAyB,iBAAI,SAC7BA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAA0B,kBAAI,SAC9BA,EAAuB,eAAI,SAC3BA,EAA6B,qBAAI,SACjCA,EAA+B,uBAAI,SACnCA,EAAgC,wBAAI,SACpCA,EAAsB,cAAI,SAC1BA,EAA+B,uBAAI,SACnCA,EAAyB,iBAAI,SAC7BA,EAAuB,eAAI,SAC3BA,EAAyB,iBAAI,SAC7BA,EAA0B,kBAAI,SAC9BA,EAAyB,iBAAI,SAC7BA,EAA4B,oBAAI,SAChCA,EAA+B,uBAAI,SACnCA,EAA4B,oBAAI,SAChCA,EAAgC,wBAAI,SACpCA,EAA4B,oBAAI,SAChCA,EAA2B,mBAAI,SAC/BA,EAA4B,oBAAI,SAChCA,EAA4B,oBAAI,SAChCA,EAAgC,wBAAI,SACpCA,EAAgC,wBAAI,SACpCA,EAAuC,+BAAI,SAC3CA,EAAuC,+BAAI,SAC3CA,EAAoC,4BAAI,SACxCA,EAAgC,wBAAI,SACpCA,EAAsB,cAAI,SAC1BA,EAAqC,6BAAI,SACzCA,EAAwC,gCAAI,SAC5CA,EAAoC,4BAAI,SACxCA,EAAuC,+BAAI,SAC3CA,EAAuC,+BAAI,SAC3CA,EAAmC,2BAAI,SACvCA,EAAoC,4BAAI,SACxCA,EAAqC,6BAAI,SACzCA,EAAsC,8BAAI,SAC1CA,EAAiC,yBAAI,SACrCA,EAA6B,qBAAI,SACjCA,EAAyC,iCAAI,SAC7CA,EAAuC,+BAAI,SAC3CA,EAAqC,6BAAI,SACzCA,EAAqC,6BAAI,SACzCA,EAAsC,8BAAI,SAC1CA,EAA2C,mCAAI,SAC/CA,EAA2B,mBAAI,SAC/BA,EAAuC,+BAAI,SAC3CA,EAAqC,6BAAI,SACzCA,EAAmC,2BAAI,SACvCA,EAAmC,2BAAI,SACvCA,EAAoC,4BAAI,SACxCA,EAAyC,iCAAI,SAC7CA,EAAgC,wBAAI,SACpCA,EAA2B,mBAAI,SAC/BA,EAA2B,mBAAI,SAC/BA,EAAyB,iBAAI,SAC7BA,EAAsB,cAAI,SAC1BA,EAA8B,sBAAI,SAClCA,EAAsB,cAAI,SAC1BA,EAA8B,sBAAI,SAClCA,EAAqC,6BAAI,SACzCA,EAAmC,2BAAI,SACvCA,EAAmC,2BAAI,SACvCA,EAAuC,+BAAI,SAC3CA,EAAkC,0BAAI,SACtCA,EAAmC,2BAAI,SACvCA,EAAoC,4BAAI,SACxCA,EAAwC,gCAAI,SAC5CA,EAAmC,2BAAI,SACvCA,EAAoC,4BAAI,SACxCA,EAAoC,4BAAI,SACxCA,EAAwC,gCAAI,SAC5CA,EAA4C,oCAAI,SAChDA,EAAkD,0CAAI,SACtDA,EAAuC,+BAAI,SAC3CA,EAAwC,gCAAI,SAC5CA,EAAmC,2BAAI,SACvCA,EAAuC,+BAAI,SAC3CA,EAAkC,0BAAI,SACtCA,EAAmC,2BAAI,SACvCA,EAAmC,2BAAI,SACvCA,EAAuC,+BAAI,SAC3CA,EAAkC,0BAAI,SACtCA,EAAmC,2BAAI,SACvCA,EAAmC,2BAAI,SACvCA,EAAuC,+BAAI,SAC3CA,EAAkC,0BAAI,SACtCA,EAAmC,2BAAI,SACvCA,EAAmC,2BAAI,SACvCA,EAAuC,+BAAI,SAC3CA,EAAkC,0BAAI,SACtCA,EAAmC,2BAAI,SACvCA,EAAoC,4BAAI,SACxCA,EAAwC,gCAAI,SAC5CA,EAAmC,2BAAI,SACvCA,EAAoC,4BAAI,SACxCA,EAAoC,4BAAI,SACxCA,EAAwC,gCAAI,SAC5CA,EAAmC,2BAAI,SACvCA,EAAoC,4BAAI,SACxCA,EAAoC,4BAAI,SACxCA,EAAwC,gCAAI,SAC5CA,EAAmC,2BAAI,SACvCA,EAAoC,4BAAI,SACxCA,EAAoC,4BAAI,SACxCA,EAAwC,gCAAI,SAC5CA,EAAmC,2BAAI,SACvCA,EAAoC,4BAAI,SACxCA,EAA2B,mBAAI,SAC/BA,EAA4B,oBAAI,SAChCA,EAA4B,oBAAI,SAChCA,EAA2B,mBAAI,SAC/BA,EAA2B,mBAAI,SAC/BA,EAA2B,mBAAI,SAC/BA,EAA2B,mBAAI,SAC/BA,EAA2B,mBAAI,SAC/BA,EAA2B,mBAAI,SAC/BA,EAA2B,mBAAI,SAC/BA,EAA2B,mBAAI,SAC/BA,EAAsC,8BAAI,SAC1CA,EAA0C,kCAAI,SAC9CA,EAAyC,iCAAI,SAC7CA,EAA4C,oCAAI,SAChDA,EAA+C,uCAAI,SACnDA,EAA0C,kCAAI,SAC9CA,EAA4B,oBAAI,SAChCA,EAA4B,oBAAI,SAChCA,EAA4B,oBAAI,SAChCA,EAA4B,oBAAI,SAChCA,EAA4B,oBAAI,SAChCA,EAA4B,oBAAI,SAChCA,EAA4B,oBAAI,SAChCA,EAA4B,oBAAI,SAChCA,EAA4B,oBAAI,SAChCA,EAAgC,wBAAI,SACpCA,EAAgC,wBAAI,SACpCA,EAA0C,kCAAI,SAC9CA,EAA0C,kCAAI,SAC9CA,EAA6C,qCAAI,SACjDA,EAA0C,kCAAI,SAC9CA,EAA0C,kCAAI,SAC9CA,EAA2B,mBAAI,SAC/BA,EAAyB,iBAAI,SAC7BA,EAAoC,4BAAI,SACxCA,EAAkC,0BAAI,SACtCA,EAA2B,mBAAI,SAC/BA,EAA2B,mBAAI,SAC/BA,EAA+B,uBAAI,SACnCA,EAA6B,qBAAI,SACjCA,EAA+B,uBAAI,SACnCA,EAA2B,mBAAI,SAC/BA,EAAyB,iBAAI,SAC7BA,EAAuC,+BAAI,SAC3CA,EAAqC,6BAAI,SACzCA,EAA4B,oBAAI,SAChCA,EAA0B,kBAAI,SAC9BA,EAA2B,mBAAI,SAC/BA,EAA4B,oBAAI,SAChCA,EAA4B,oBAAI,SAChCA,EAAgC,wBAAI,SACpCA,EAAgC,wBAAI,SACpCA,EAA2B,mBAAI,SAC/BA,EAA0B,kBAAI,SAC9BA,EAAwB,gBAAI,SAC5BA,EAAyB,iBAAI,SAC7BA,EAAuB,eAAI,SAC3BA,EAAwB,gBAAI,SAC5BA,EAAsB,cAAI,SAC1BA,EAAyB,iBAAI,SAC7BA,EAAuB,eAAI,SAC3BA,EAAwB,gBAAI,SAC5BA,EAAsB,cAAI,SAC1BA,EAAyB,iBAAI,SAC7BA,EAAuB,eAAI,SAC3BA,EAAwB,gBAAI,SAC5BA,EAAsB,cAAI,SAC1BA,EAAuB,eAAI,SAC3BA,EAAqB,aAAI,SACzBA,EAA2B,mBAAI,SAC/BA,EAAiC,yBAAI,SACrCA,EAAwB,gBAAI,SAC5BA,EAAsB,cAAI,SAC1BA,EAA2B,mBAAI,SAC/BA,EAAyB,iBAAI,SAC7BA,EAAqB,aAAI,SACzBA,EAAkC,0BAAI,SACtCA,EAAmC,2BAAI,SACvCA,EAAsB,cAAI,SAC1BA,EAA2B,mBAAI,SAC/BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAqB,aAAI,SACzBA,EAAsB,cAAI,SAC1BA,EAAoB,YAAI,SACxBA,EAAqB,aAAI,SACzBA,EAAmB,WAAI,SACvBA,EAAsB,cAAI,SAC1BA,EAAoB,YAAI,SACxBA,EAAqB,aAAI,SACzBA,EAAmB,WAAI,SACvBA,EAAsB,cAAI,SAC1BA,EAAoB,YAAI,SACxBA,EAAqB,aAAI,SACzBA,EAAmB,WAAI,SACvBA,EAAoB,YAAI,SACxBA,EAAkB,UAAI,SACtBA,EAAmB,WAAI,SACvBA,EAAuB,eAAI,SAC3BA,EAAsB,cAAI,SAC1BA,EAAuB,eAAI,SAC3BA,EAAkB,UAAI,SACtBA,EAAwB,gBAAI,SAC5BA,EAAuB,eAAI,SAC3BA,EAAwB,gBAAI,SAC5BA,EAAmB,WAAI,SACvBA,EAAmB,WAAI,SACvBA,EAAuB,eAAI,SAC3BA,EAAsB,cAAI,SAC1BA,EAAuB,eAAI,SAC3BA,EAAkB,UAAI,SACtBA,EAAwB,gBAAI,SAC5BA,EAAuB,eAAI,SAC3BA,EAAwB,gBAAI,SAC5BA,EAAmB,WAAI,SACvBA,EAAmB,WAAI,SACvBA,EAAuB,eAAI,SAC3BA,EAAsB,cAAI,SAC1BA,EAAuB,eAAI,SAC3BA,EAAkB,UAAI,SACtBA,EAAwB,gBAAI,SAC5BA,EAAuB,eAAI,SAC3BA,EAAwB,gBAAI,SAC5BA,EAAmB,WAAI,SACvBA,EAAmB,WAAI,SACvBA,EAAuB,eAAI,SAC3BA,EAAsB,cAAI,SAC1BA,EAAuB,eAAI,SAC3BA,EAAkB,UAAI,SACtBA,EAAwB,gBAAI,SAC5BA,EAAuB,eAAI,SAC3BA,EAAwB,gBAAI,SAC5BA,EAAmB,WAAI,SACvBA,EAAoB,YAAI,SACxBA,EAAmB,WAAI,SACvBA,EAAoB,YAAI,SACxBA,EAAoB,YAAI,SACxBA,EAAmB,WAAI,SACvBA,EAAoB,YAAI,SACxBA,EAAwB,gBAAI,SAC5BA,EAA8B,sBAAI,SAClCA,EAAmB,WAAI,SACvBA,EAAuB,eAAI,SAC3BA,EAAsB,cAAI,SAC1BA,EAAuB,eAAI,SAC3BA,EAAkB,UAAI,SACtBA,EAAwB,gBAAI,SAC5BA,EAAuB,eAAI,SAC3BA,EAAwB,gBAAI,SAC5BA,EAAmB,WAAI,SACvBA,EAAuB,eAAI,SAC3BA,EAAsB,cAAI,SAC1BA,EAAuB,eAAI,SAC3BA,EAAmB,WAAI,SACvBA,EAAuB,eAAI,SAC3BA,EAAsB,cAAI,SAC1BA,EAAuB,eAAI,SAC3BA,EAAkB,UAAI,SACtBA,EAAwB,gBAAI,SAC5BA,EAAuB,eAAI,SAC3BA,EAAwB,gBAAI,SAC5BA,EAAmB,WAAI,SACvBA,EAAoB,YAAI,SACxBA,EAAmB,WAAI,SACvBA,EAAoB,YAAI,SACxBA,EAAoB,YAAI,SACxBA,EAAmB,WAAI,SACvBA,EAAoB,YAAI,SACxBA,EAAmB,WAAI,SACvBA,EAAuB,eAAI,SAC3BA,EAAsB,cAAI,SAC1BA,EAAuB,eAAI,SAC3BA,EAAkB,UAAI,SACtBA,EAAwB,gBAAI,SAC5BA,EAAuB,eAAI,SAC3BA,EAAwB,gBAAI,SAC5BA,EAAmB,WAAI,SACvBA,EAAmB,WAAI,SACvBA,EAAkB,UAAI,SACtBA,EAAwB,gBAAI,SAC5BA,EAAuB,eAAI,SAC3BA,EAAwB,gBAAI,SAC5BA,EAAmB,WAAI,SACvBA,EAAqB,aAAI,SACzBA,EAAmB,WAAI,SACvBA,EAAoB,YAAI,SACxBA,EAAmB,WAAI,SACvBA,EAAoB,YAAI,SACxBA,EAAoB,YAAI,SACxBA,EAAmB,WAAI,SACvBA,EAAoB,YAAI,SACxBA,EAAoB,YAAI,SACxBA,EAAmB,WAAI,SACvBA,EAAoB,YAAI,SACxBA,EAAoB,YAAI,SACxBA,EAAmB,WAAI,SACvBA,EAAoB,YAAI,SACxBA,EAAoB,YAAI,SACxBA,EAAmB,WAAI,SACvBA,EAAoB,YAAI,SACxBA,EAAwB,gBAAI,SAC5BA,EAAsB,cAAI,SAC1BA,EAAoB,YAAI,SACxBA,EAAmB,WAAI,SACvBA,EAAoB,YAAI,SACxBA,EAAoB,YAAI,SACxBA,EAAmB,WAAI,SACvBA,EAAoB,YAAI,SACxBA,EAAoB,YAAI,SACxBA,EAAmB,WAAI,SACvBA,EAAoB,YAAI,SACxBA,EAAoB,YAAI,SACxBA,EAAmB,WAAI,SACvBA,EAAoB,YAAI,SACxBA,EAAoC,4BAAI,SACxCA,EAA0C,kCAAI,SAC9CA,EAAoC,4BAAI,SACxCA,EAA8B,sBAAI,SAClCA,EAAoC,4BAAI,SACxCA,EAA8B,sBAAI,SAClCA,EAAwC,gCAAI,SAC5CA,EAA8C,sCAAI,SAClDA,EAAwC,gCAAI,SAC5CA,EAA+B,uBAAI,SACnCA,EAAqC,6BAAI,SACzCA,EAA+B,uBAAI,SACnCA,EAA2B,mBAAI,SAC/BA,EAAiC,yBAAI,SACrCA,EAA+B,uBAAI,SACnCA,EAAqC,6BAAI,SACzCA,EAA+B,uBAAI,SACnCA,EAA2B,mBAAI,SAC/BA,EAAkC,0BAAI,SACtCA,EAAwC,gCAAI,SAC5CA,EAAkC,0BAAI,SACtCA,EAA4B,oBAAI,SAChCA,EAAkC,0BAAI,SACtCA,EAA4B,oBAAI,SAChCA,EAA6B,qBAAI,SACjCA,EAAmC,2BAAI,SACvCA,EAA6B,qBAAI,SACjCA,EAAmC,2BAAI,SACvCA,EAAyC,iCAAI,SAC7CA,EAAmC,2BAAI,SACvCA,EAAoC,4BAAI,SACxCA,EAA0C,kCAAI,SAC9CA,EAAoC,4BAAI,SACxCA,EAAoC,4BAAI,SACxCA,EAA0C,kCAAI,SAC9CA,EAAwC,gCAAI,SAC5CA,EAA8C,sCAAI,SAClDA,EAAwC,gCAAI,SAC5CA,EAAoC,4BAAI,SACxCA,EAAiC,yBAAI,SACrCA,EAAuC,+BAAI,SAC3CA,EAAiC,yBAAI,SACrCA,EAAoB,YAAI,SACxBA,EAAmB,WAAI,SACvBA,EAAoB,YAAI,SACxBA,EAAoB,YAAI,SACxBA,EAAmB,WAAI,SACvBA,EAAoB,YAAI,SACxBA,EAAoB,YAAI,SACxBA,EAAmB,WAAI,SACvBA,EAAoB,YAAI,SACxBA,EAAoB,YAAI,SACxBA,EAAmB,WAAI,SACvBA,EAAoB,YAAI,SACxBA,EAAkB,UAAI,SACtBA,EAAsB,cAAI,SAC1BA,EAA4B,oBAAI,SAChCA,EAAwB,gBAAI,SAC5BA,EAAmC,2BAAI,SACvCA,EAA4B,oBAAI,SAChCA,EAA6B,qBAAI,SACjCA,EAA6B,qBAAI,SACjCA,EAAkC,0BAAI,SACtCA,EAAmC,2BAAI,SACvCA,EAAwC,gCAAI,SAC5CA,EAA4B,oBAAI,SAChCA,EAAiC,yBAAI,SACrCA,EAA6B,qBAAI,SACjCA,EAAkC,0BAAI,SACtCA,EAA8B,sBAAI,SAClCA,EAAsC,8BAAI,SAC1CA,EAAsC,8BAAI,SAC1CA,EAAyC,iCAAI,SAC7CA,EAAyC,iCAAI,SAC7CA,EAAsC,8BAAI,SAC1CA,EAA+B,uBAAI,SACnCA,EAA+B,uBAAI,SACnCA,EAAkC,0BAAI,SACtCA,EAAkC,0BAAI,SACtCA,EAA+B,uBAAI,SACnCA,EAAkC,0BAAI,SACtCA,EAAkC,0BAAI,SACtCA,EAAqC,6BAAI,SACzCA,EAAqC,6BAAI,SACzCA,EAAkC,0BAAI,SACtCA,EAAkC,0BAAI,SACtCA,EAAkC,0BAAI,SACtCA,EAAmC,2BAAI,SACvCA,EAAmC,2BAAI,SACvCA,EAAgC,wBAAI,SACpCA,EAAgC,wBAAI,SACpCA,EAAmC,2BAAI,SACvCA,EAAmC,2BAAI,SACvCA,EAAgC,wBAAI,SACpCA,EAA6C,qCAAI,SACjDA,EAA8C,sCAAI,SAClDA,EAA0C,kCAAI,SAC9CA,EAA+C,uCAAI,SACnDA,EAA8C,sCAAI,SAClDA,EAA+C,uCAAI,SACnDA,EAA2C,mCAAI,SAC/CA,EAA0C,kCAAI,SAC9CA,EAA2C,mCAAI,SAC/CA,EAA2C,mCAAI,SAC/CA,EAA0C,kCAAI,SAC9CA,EAA2C,mCAAI,SAC/CA,EAA6C,qCAAI,SACjDA,EAA4C,oCAAI,SAChDA,EAA6C,qCAAI,SACjDA,EAA2C,mCAAI,SAC/CA,EAA0C,kCAAI,SAC9CA,EAA2C,mCAAI,SAC/CA,EAAgD,wCAAI,SACpDA,EAA+C,uCAAI,SACnDA,EAAgD,wCAAI,SACpDA,EAA6B,qBAAI,SACjCA,EAAgC,wBAAI,SACpCA,EAAiC,yBAAI,SACrCA,EAAuC,+BAAI,SAC3CA,EAAuC,+BAAI,SAC3CA,EAA0C,kCAAI,SAC9CA,EAA0C,kCAAI,SAC9CA,EAAuC,+BAAI,SAC3CA,EAAuC,+BAAI,SAC3CA,EAAuC,+BAAI,SAC3CA,EAA0C,kCAAI,SAC9CA,EAA0C,kCAAI,SAC9CA,EAAuC,+BAAI,SAC3CA,EAAmC,2BAAI,SACvCA,EAAsC,8BAAI,SAC1CA,EAA4B,oBAAI,SAChCA,EAAkC,0BAAI,SACtCA,EAA+B,uBAAI,SACnCA,EAAgC,wBAAI,SACpCA,EAA4B,oBAAI,SAChCA,EAA6B,qBAAI,SACjCA,EAAiC,yBAAI,SACrCA,EAA6B,qBAAI,SACjCA,EAAgC,wBAAI,SACpCA,EAA4B,oBAAI,SAChCA,EAAkC,0BAAI,SACtCA,EAAiC,yBAAI,SACrCA,EAAqB,aAAI,SACzBA,EAA2B,mBAAI,SAC/BA,EAA0B,kBAAI,SAC9BA,EAAuB,eAAI,SAC3BA,EAA0B,kBAAI,SAC9BA,EAAoC,4BAAI,SACxCA,EAA0C,kCAAI,SAC9CA,EAAmC,2BAAI,SACvCA,EAAoC,4BAAI,SACxCA,EAAkC,0BAAI,SACtCA,EAAwC,gCAAI,SAC5CA,EAAiC,yBAAI,SACrCA,EAAkC,0BAAI,SACtCA,EAA0B,kBAAI,SAC9BA,EAA0B,kBAAI,SAC9BA,EAA8B,sBAAI,SAClCA,EAAqB,aAAI,SACzBA,EAA4B,oBAAI,SAChCA,EAAgC,wBAAI,SACpCA,EAAiC,yBAAI,SACrCA,EAA0B,kBAAI,SAC9BA,EAAgC,wBAAI,SACpCA,EAAyB,iBAAI,SAC7BA,EAA0B,kBAAI,SAC9BA,EAA8C,sCAAI,SAClDA,EAA8C,sCAAI,SAClDA,EAA2C,mCAAI,SAC/CA,EAA8C,sCAAI,SAClDA,EAA8C,sCAAI,SAClDA,EAA2C,mCAAI,SAC/CA,EAA2B,mBAAI,SAC/BA,EAAwC,gCAAI,SAC5CA,EAAgC,wBAAI,SACpCA,EAAkC,0BAAI,SACtCA,EAAuC,+BAAI,SAC3CA,EAA2B,mBAAI,SAC/BA,EAAwC,gCAAI,SAC5CA,EAAgC,wBAAI,SACpCA,EAAkC,0BAAI,SACtCA,EAAuC,+BAAI,SAC3CA,EAAkC,0BAAI,SACtCA,EAAuC,+BAAI,SAC3CA,EAAkC,0BAAI,SACtCA,EAAoC,4BAAI,SACxCA,EAAyC,iCAAI,SAC7CA,EAAkC,0BAAI,SACtCA,EAAuC,+BAAI,SAC3CA,EAAuC,+BAAI,SAC3CA,EAAsC,8BAAI,SAC1CA,EAA+B,uBAAI,SACnCA,EAAgC,wBAAI,SACpCA,EAAgC,wBAAI,SACpCA,EAAuB,eAAI,SAC3BA,EAA8B,sBAAI,SAClCA,EAA8B,sBAAI,SAClCA,EAAoC,4BAAI,SACxCA,EAAoC,4BAAI,SACxCA,EAA6B,qBAAI,SACjCA,EAA6B,qBAAI,SACjCA,EAA8B,sBAAI,SAClCA,EAA8B,sBAAI,SAClCA,EAA4B,oBAAI,SAChCA,EAAiC,yBAAI,SACrCA,EAAiC,yBAAI,SACrCA,EAA4B,oBAAI,SAChCA,EAAkC,0BAAI,SACtCA,EAAwC,gCAAI,SAC5CA,EAAiC,yBAAI,SACrCA,EAAkC,0BAAI,SACtCA,EAAkC,0BAAI,SACtCA,EAAkC,0BAAI,SACtCA,EAAkC,0BAAI,SACtCA,EAAmC,2BAAI,SACvCA,EAAmC,2BAAI,SACvCA,EAAuC,+BAAI,SAC3CA,EAAuC,+BAAI,SAC3CA,EAAgC,wBAAI,SACpCA,EAAsC,8BAAI,SAC1CA,EAA+B,uBAAI,SACnCA,EAAqC,6BAAI,SACzCA,EAAqC,6BAAI,SACzCA,EAAgC,wBAAI,SACpCA,EAAgC,wBAAI,SACpCA,EAA0B,kBAAI,SAC9BA,EAAsB,cAAI,SAC1BA,EAA4B,oBAAI,SAChCA,EAA2B,mBAAI,SAC/BA,EAAuB,eAAI,SAC3BA,EAA6B,qBAAI,SACjCA,EAAsB,cAAI,SAC1BA,EAAwB,gBAAI,SAC5BA,EAA+B,uBAAI,SACnCA,EAAuB,eAAI,SAC3BA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAAoB,YAAI,SACxBA,EAAmB,WAAI,SACvBA,EAAyB,iBAAI,SAC7BA,EAA0B,kBAAI,SAC9BA,EAA2B,mBAAI,SAC/BA,EAA2B,mBAAI,SAC/BA,EAA2B,mBAAI,SAC/BA,EAA2B,mBAAI,SAC/BA,EAA6B,qBAAI,SACjCA,EAA0B,kBAAI,SAC9BA,EAA4B,oBAAI,SAChCA,EAA6B,qBAAI,SACjCA,EAA8B,sBAAI,SAClCA,EAAgC,wBAAI,SACpCA,EAA0B,kBAAI,SAC9BA,EAA4B,oBAAI,SAChCA,EAA8B,sBAAI,SAClCA,EAAgC,wBAAI,SACpCA,EAA0B,kBAAI,SAC9BA,EAA4B,oBAAI,SAChCA,EAA8B,sBAAI,SAClCA,EAAgC,wBAAI,SACpCA,EAA0B,kBAAI,SAC9BA,EAA4B,oBAAI,SAChCA,EAA8B,sBAAI,SAClCA,EAAgC,wBAAI,SACpCA,EAA0B,kBAAI,SAC9BA,EAA4B,oBAAI,SAChCA,EAA8B,sBAAI,SAClCA,EAAgC,wBAAI,SACpCA,EAA0B,kBAAI,SAC9BA,EAA0B,kBAAI,SAC9BA,EAAmC,2BAAI,SACvCA,EAA0B,kBAAI,SAC9BA,EAA0B,kBAAI,SAC9BA,EAAoC,4BAAI,SACxCA,EAAoC,4BAAI,SACxCA,EAAuC,+BAAI,SAC3CA,EAAuC,+BAAI,SAC3CA,EAA2C,mCAAI,SAC/CA,EAA0B,kBAAI,SAC9BA,EAA0B,kBAAI,SAC9BA,EAA4B,oBAAI,SAChCA,EAA4B,oBAAI,SAChCA,EAA0B,kBAAI,SAC9BA,EAA0B,kBAAI,SAC9BA,EAA4B,oBAAI,SAChCA,EAA4B,oBAAI,SAChCA,EAA0B,kBAAI,SAC9BA,EAA0B,kBAAI,SAC9BA,EAA0B,kBAAI,SAC9BA,EAA0B,kBAAI,SAC9BA,EAA4B,oBAAI,SAChCA,EAA4B,oBAAI,SAChCA,EAAwB,gBAAI,SAC5BA,EAA4B,oBAAI,SAChCA,EAA0B,kBAAI,SAC9BA,EAA0B,kBAAI,SAC9BA,EAA4B,oBAAI,SAChCA,EAA4B,oBAAI,SAChCA,EAA0B,kBAAI,SAC9BA,EAA0B,kBAAI,SAC9BA,EAA0B,kBAAI,SAC9BA,EAA8B,sBAAI,SAClCA,EAA8B,sBAAI,SAClCA,EAA4B,oBAAI,SAChCA,EAA8B,sBAAI,SAClCA,EAAkC,0BAAI,SACtCA,EAA4B,oBAAI,SAChCA,EAAgC,wBAAI,SACpCA,EAA8B,sBAAI,SAClCA,EAAkC,0BAAI,SACtCA,EAAuB,eAAI,SAC3BA,EAAwC,gCAAI,SAC5CA,EAA6C,qCAAI,SACjDA,EAAuC,+BAAI,SAC3CA,EAAyC,iCAAI,SAC7CA,EAAwC,gCAAI,SAC5CA,EAAsB,cAAI,SAC1BA,EAA4C,oCAAI,SAChDA,EAA6C,qCAAI,SACjDA,EAA0B,kBAAI,SAC9BA,EAAsB,cAAI,SAC1BA,EAAsC,8BAAI,SAC1CA,EAAqC,6BAAI,SACzCA,EAAuC,+BAAI,SAC3CA,EAAsC,8BAAI,SAC1CA,EAA8B,sBAAI,SAClCA,EAA+B,uBAAI,SACnCA,EAAqC,6BAAI,SACzCA,EAA+B,uBAAI,SACnCA,EAAyB,iBAAI,SAC7BA,EAA2B,mBAAI,SAC/BA,EAAmC,2BAAI,SACvCA,EAA4C,oCAAI,SAChDA,EAAqC,6BAAI,SACzCA,EAAoC,4BAAI,SACxCA,EAAsC,8BAAI,SAC1CA,EAAqC,6BAAI,SACzCA,EAAqC,6BAAI,SACzCA,EAAwB,gBAAI,SAC5BA,EAAqC,6BAAI,SACzCA,EAAsC,8BAAI,SAC1CA,EAA0C,kCAAI,SAC9CA,EAA2C,mCAAI,SAC/CA,EAAwB,gBAAI,SAC5BA,EAA8B,sBAAI,SAClCA,EAA4B,oBAAI,SAChCA,EAAmC,2BAAI,SACvCA,EAAyC,iCAAI,SAC7CA,EAA+B,uBAAI,SACnCA,EAA0C,kCAAI,SAC9CA,EAA8C,sCAAI,SAClDA,EAAuC,+BAAI,SAC3CA,EAAuC,+BAAI,SAC3CA,EAAgD,wCAAI,SACpDA,EAAgD,wCAAI,SACpDA,EAAoD,4CAAI,SACxDA,EAAkD,0CAAI,SACtDA,EAAsC,8BAAI,SAC1CA,EAA0C,kCAAI,SAC9CA,EAAyC,iCAAI,SAC7CA,EAA6B,qBAAI,SACjCA,EAAsC,8BAAI,SAC1CA,EAA4C,oCAAI,SAChDA,EAAyC,iCAAI,SAC7CA,EAAwC,gCAAI,SAC5CA,EAA8C,sCAAI,SAClDA,EAAwC,gCAAI,SAC5CA,EAA2C,mCAAI,SAC/CA,EAAwC,gCAAI,SAC5CA,EAAqC,6BAAI,SACzCA,EAA2C,mCAAI,SAC/CA,EAAyB,iBAAI,SAC7BA,EAAsC,8BAAI,SAC1CA,EAAgC,wBAAI,SACpCA,EAAoC,4BAAI,SACxCA,EAA0B,kBAAI,SAC9BA,EAAuB,eAAI,SAC3BA,EAA6B,qBAAI,SACjCA,EAA0C,kCAAI,SAC9CA,EAA2C,mCAAI,SAC/CA,EAA2B,mBAAI,SAC/BA,EAAqC,6BAAI,SACzCA,EAAoC,4BAAI,SACxCA,EAAsC,8BAAI,SAC1CA,EAAqC,6BAAI,SACzCA,EAA4B,oBAAI,SAChCA,EAAoC,4BAAI,SACxCA,EAAsB,cAAI,SAC1BA,EAAqB,aAAI,SACzBA,EAA6B,qBAAI,SACjCA,EAA0B,kBAAI,SAC9BA,EAAuB,eAAI,SAC3BA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAA6B,qBAAI,SACjCA,EAAqC,6BAAI,SACzCA,EAAuC,+BAAI,SAC3CA,EAAe,OAAI,SACnBA,EAAmB,WAAI,SACvBA,EAAoB,YAAI,SACxBA,EAAsB,cAAI,SAC1BA,EAAsB,cAAI,SAC1BA,EAA0B,kBAAI,SAC9BA,EAAkB,UAAI,SACtBA,EAAuB,eAAI,SAC3BA,EAAkB,UAAI,SACtBA,EAAyB,iBAAI,SAC7BA,EAA0B,kBAAI,SAC9BA,EAAqB,aAAI,SACzBA,EAA2B,mBAAI,SAC/BA,EAAsB,cAAI,SAC1BA,EAAsB,cAAI,SAC1BA,EAAmC,2BAAI,SACvCA,EAAmC,2BAAI,SACvCA,EAAoC,4BAAI,SACxCA,EAAiC,yBAAI,SACrCA,EAAwC,gCAAI,SAC5CA,EAAuC,+BAAI,SAC3CA,EAAqC,6BAAI,SACzCA,EAAmC,2BAAI,SACvCA,EAAyB,iBAAI,SAC7BA,EAA8B,sBAAI,SAClCA,EAAuB,eAAI,SAC3BA,EAA+B,uBAAI,SACnCA,EAAyB,iBAAI,SAC7BA,EAAkC,0BAAI,SACtCA,EAAgC,wBAAI,SACpCA,EAAoC,4BAAI,SACxCA,EAAkC,0BAAI,SACtCA,EAAiC,yBAAI,SACrCA,EAA+B,uBAAI,SACnCA,EAAuB,eAAI,SAC3BA,EAAmC,2BAAI,SACvCA,EAAiC,yBAAI,SACrCA,EAAuC,+BAAI,SAC3CA,EAAuC,+BAAI,SAC3CA,EAAwC,gCAAI,SAC5CA,EAAqC,6BAAI,SACzCA,EAAkC,0BAAI,SACtCA,EAAkC,0BAAI,SACtCA,EAAmC,2BAAI,SACvCA,EAAgC,wBAAI,SACpCA,EAAoC,4BAAI,SACxCA,EAAoC,4BAAI,SACxCA,EAAqC,6BAAI,SACzCA,EAAkC,0BAAI,SACtCA,EAA+B,uBAAI,SACnCA,EAA+B,uBAAI,SACnCA,EAAgC,wBAAI,SACpCA,EAA6B,qBAAI,SACjCA,EAAiC,yBAAI,SACrCA,EAA+B,uBAAI,SACnCA,EAAiC,yBAAI,SACrCA,EAAyB,iBAAI,SAC7BA,EAA6B,qBAAI,SACjCA,EAAqC,6BAAI,SACzCA,EAAmC,2BAAI,SACvCA,EAAoC,4BAAI,SACxCA,EAAoC,4BAAI,SACxCA,EAAqC,6BAAI,SACzCA,EAAkC,0BAAI,SACtCA,EAAsC,8BAAI,SAC1CA,EAAsC,8BAAI,SAC1CA,EAAuC,+BAAI,SAC3CA,EAAoC,4BAAI,SACxCA,EAAiC,yBAAI,SACrCA,EAAiC,yBAAI,SACrCA,EAAkC,0BAAI,SACtCA,EAA+B,uBAAI,SACnCA,EAAoC,4BAAI,SACxCA,EAAkC,0BAAI,SACtCA,EAA4B,oBAAI,SAChCA,EAA8B,sBAAI,SAClCA,EAA4B,oBAAI,SAChCA,EAA6B,qBAAI,SACjCA,EAA0B,kBAAI,SAC9BA,EAAkC,0BAAI,SACtCA,EAAgC,wBAAI,SACpCA,EAAmC,2BAAI,SACvCA,EAAiC,yBAAI,SACrCA,EAAuC,+BAAI,SAC3CA,EAAuC,+BAAI,SAC3CA,EAAwC,gCAAI,SAC5CA,EAAqC,6BAAI,SACzCA,EAAkC,0BAAI,SACtCA,EAAkC,0BAAI,SACtCA,EAAmC,2BAAI,SACvCA,EAAgC,wBAAI,SACpCA,EAAgC,wBAAI,SACpCA,EAAoC,4BAAI,SACxCA,EAAoC,4BAAI,SACxCA,EAAqC,6BAAI,SACzCA,EAAkC,0BAAI,SACtCA,EAA+B,uBAAI,SACnCA,EAA+B,uBAAI,SACnCA,EAAgC,wBAAI,SACpCA,EAA6B,qBAAI,SACjCA,EAAoC,4BAAI,SACxCA,EAAgC,wBAAI,SACpCA,EAAgC,wBAAI,SACpCA,EAAiC,yBAAI,SACrCA,EAA8B,sBAAI,SAClCA,EAA+B,uBAAI,SACnCA,EAAgC,wBAAI,SACpCA,EAA6B,qBAAI,SACjCA,EAAkC,0BAAI,SACtCA,EAAgC,wBAAI,SACpCA,EAAkC,0BAAI,SACtCA,EAAkC,0BAAI,SACtCA,EAAmC,2BAAI,SACvCA,EAAgC,wBAAI,SACpCA,EAAoC,4BAAI,SACxCA,EAAoC,4BAAI,SACxCA,EAAqC,6BAAI,SACzCA,EAAkC,0BAAI,SACtCA,EAAiB,SAAI,SACrBA,EAAyB,iBAAI,SAC7BA,EAAsB,cAAI,SAC1BA,EAAqB,aAAI,SACzBA,EAAwB,gBAAI,SAC5BA,EAAyB,iBAAI,SAC7BA,EAAmB,WAAI,SACvBA,EAAsB,cAAI,SAC1BA,EAAmB,WAAI,SACvBA,EAAmB,WAAI,SACvBA,EAAoB,YAAI,SACxBA,EAAsB,cAAI,SAC1BA,EAAgC,wBAAI,SACpCA,EAAoB,YAAI,SACxBA,EAAqB,aAAI,SACzBA,EAAoB,YAAI,SACxBA,EAAoB,YAAI,SACxBA,EAAoB,YAAI,SACxBA,EAAwB,gBAAI,SAC5BA,EAAmB,WAAI,SACvBA,EAA0B,kBAAI,SAC9BA,EAAwB,gBAAI,SAC5BA,EAAmB,WAAI,SACvBA,EAAkB,UAAI,SACtBA,EAAkB,UAAI,SACtBA,EAAoB,YAAI,SACxBA,EAAyB,iBAAI,SAC7BA,EAAqB,aAAI,SACzBA,EAAsB,cAAI,SAC1BA,EAAkB,UAAI,SACtBA,EAAwB,gBAAI,SAC5BA,EAAkB,UAAI,SACtBA,EAAkB,UAAI,SACtBA,EAAkB,UAAI,SACtBA,EAAkB,UAAI,SACtBA,EAAyB,iBAAI,SAC7BA,EAAsB,cAAI,SAC1BA,EAAqB,aAAI,SACzBA,EAAyB,iBAAI,SAC7BA,EAAsB,cAAI,SAC1BA,EAA0B,kBAAI,SAC9BA,EAAsB,cAAI,SAC1BA,EAA4B,oBAAI,SAChCA,EAA2B,mBAAI,SAC/BA,EAAsB,cAAI,SAC1BA,EAA6B,qBAAI,SACjCA,EAA4B,oBAAI,SAChCA,EAAiB,SAAI,SACrBA,EAA6B,qBAAI,SACjCA,EAAuB,eAAI,SAC3BA,EAAiB,SAAI,SACrBA,EAA2B,mBAAI,SAC/BA,EAAkB,UAAI,SACtBA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAAyB,iBAAI,SAC7BA,EAAsB,cAAI,SAC1BA,EAA0B,kBAAI,SAC9BA,EAA0B,kBAAI,SAC9BA,EAA2B,mBAAI,SAC/BA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAAyB,iBAAI,SAC7BA,EAAsB,cAAI,SAC1BA,EAAsB,cAAI,SAC1BA,EAAsB,cAAI,SAC1BA,EAAqB,aAAI,SACzBA,EAAkB,UAAI,SACtBA,EAAyB,iBAAI,SAC7BA,EAAoB,YAAI,SACxBA,EAAwB,gBAAI,SAC5BA,EAAuB,eAAI,SAC3BA,EAA2B,mBAAI,SAC/BA,EAAsB,cAAI,SAC1BA,EAAuB,eAAI,SAC3BA,EAAoB,YAAI,SACxBA,EAAuB,eAAI,SAC3BA,EAAgB,QAAI,SACpBA,EAA4B,oBAAI,SAChCA,EAAmB,WAAI,SACvBA,EAAoB,YAAI,SACxBA,EAAsB,cAAI,SAC1BA,EAA6B,qBAAI,SACjCA,EAA4B,oBAAI,SAChCA,EAAuB,eAAI,SAC3BA,EAA2B,mBAAI,SAC/BA,EAAkB,UAAI,SACtBA,EAAiB,SAAI,SACrBA,EAAwB,gBAAI,SAC5BA,EAAuB,eAAI,SAC3BA,EAA0B,kBAAI,SAC9BA,EAAoB,YAAI,SACxBA,EAAsB,cAAI,SAC1BA,EAAoB,YAAI,SACxBA,EAAqB,aAAI,SACzBA,EAA4B,oBAAI,SAChCA,EAAiB,SAAI,SACrBA,EAAiB,SAAI,SACrBA,EAAiB,SAAI,SACrBA,EAA0B,kBAAI,SAC9BA,EAA4B,oBAAI,SAChCA,EAA4B,oBAAI,SAChCA,EAAqC,6BAAI,SACzCA,EAA+B,uBAAI,SACnCA,EAA+B,uBAAI,SACnCA,EAAuB,eAAI,SAC3BA,EAAwB,gBAAI,SAC5BA,EAAkB,UAAI,SACtBA,EAAoB,YAAI,SACxBA,EAAyB,iBAAI,SAC7BA,EAAuB,eAAI,SAC3BA,EAA6B,qBAAI,SACjCA,EAAyB,iBAAI,SAC7BA,EAAqB,aAAI,SACzBA,EAAsB,cAAI,SAC1BA,EAA8B,sBAAI,SAClCA,EAA+B,uBAAI,SACnCA,EAAuB,eAAI,SAC3BA,EAAsB,cAAI,SAC1BA,EAAsB,cAAI,SAC1BA,EAA4B,oBAAI,SAChCA,EAAsB,cAAI,SAC1BA,EAAkB,UAAI,SACtBA,EAAmB,WAAI,SACvBA,EAA6B,qBAAI,SACjCA,EAAuB,eAAI,SAC3BA,EAAyB,iBAAI,SAC7BA,EAAsB,cAAI,SAC1BA,EAAyB,iBAAI,SAC7BA,EAAqB,aAAI,SACzBA,EAAoB,YAAI,SACxBA,EAAmB,WAAI,SACvBA,EAA0B,kBAAI,SAC9BA,EAA+B,uBAAI,SACnCA,EAA2B,mBAAI,SAC/BA,EAAqB,aAAI,SACzBA,EAAsB,cAAI,SAC1BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAA8B,sBAAI,SAClCA,EAA0B,kBAAI,SAC9BA,EAAgB,QAAI,SACpBA,EAAwB,gBAAI,SAC5BA,EAA4B,oBAAI,SAChCA,EAAsB,cAAI,SAC1BA,EAA0B,kBAAI,SAC9BA,EAAiB,SAAI,SACrBA,EAA4B,oBAAI,SAChCA,EAAwB,gBAAI,SAC5BA,EAAwB,gBAAI,SAC5BA,EAAsB,cAAI,SAC1BA,EAA0B,kBAAI,SAC9BA,EAA0B,kBAAI,SAC9BA,EAA2B,mBAAI,SAC/BA,EAAwB,gBAAI,SAC5BA,EAA0B,kBAAI,SAC9BA,EAA0B,kBAAI,SAC9BA,EAA2B,mBAAI,SAC/BA,EAAwB,gBAAI,SAC5BA,EAAgB,QAAI,SACpBA,EAAoB,YAAI,SACxBA,EAA4B,oBAAI,SAChCA,EAAqB,aAAI,SACzBA,EAA2B,mBAAI,SAC/BA,EAAsB,cAAI,SAC1BA,EAA6B,qBAAI,SACjCA,EAAoB,YAAI,SACxBA,EAAuB,eAAI,SAC3BA,EAA0B,kBAAI,SAC9BA,EAA+B,uBAAI,SACnCA,EAAiC,yBAAI,SACrCA,EAAwB,gBAAI,SAC5BA,EAAkC,0BAAI,SACtCA,EAAkC,0BAAI,SACtCA,EAA+B,uBAAI,SACnCA,EAAqB,aAAI,SACzBA,EAAyB,iBAAI,SAC7BA,EAA0B,kBAAI,SAC9BA,EAA4B,oBAAI,SAChCA,EAAmB,WAAI,SACvBA,EAAoB,YAAI,SACxBA,EAAoB,YAAI,SACxBA,EAA0B,kBAAI,SAC9BA,EAAuB,eAAI,SAC3BA,EAA0B,kBAAI,SAC9BA,EAAkB,UAAI,SACtBA,EAAmB,WAAI,SACvBA,EAAmB,WAAI,SACvBA,EAAoB,YAAI,SACxBA,EAAwB,gBAAI,SAC5BA,EAAmB,WAAI,SACvBA,EAAkB,UAAI,SACtBA,EAAiB,SAAI,SACrBA,EAAkB,UAAI,SACtBA,EAAiB,SAAI,SACrBA,EAAkB,UAAI,SACtBA,EAAiB,SAAI,SACrBA,EAAgB,QAAI,SACpBA,EAAwB,gBAAI,SAC5BA,EAAiC,yBAAI,SACrCA,EAAiB,SAAI,SACrBA,EAAqB,aAAI,SACzBA,EAAuB,eAAI,SAC3BA,EAAsB,cAAI,SAC1BA,EAAiB,SAAI,SACrBA,EAA0B,kBAAI,SAC9BA,EAAkB,UAAI,SACtBA,EAAmB,WAAI,SACvBA,EAAoB,YAAI,SACxBA,EAAuB,eAAI,SAC3BA,EAAqB,aAAI,SACzBA,EAAkB,UAAI,SACtBA,EAA2B,mBAAI,SAC/BA,EAAsB,cAAI,SAC1BA,EAA8B,sBAAI,SAClCA,EAA2B,mBAAI,SAC/BA,EAAyB,iBAAI,SAC7BA,EAAqB,aAAI,SACzBA,EAAqB,aAAI,SACzBA,EAAqB,aAAI,SACzBA,EAAqB,aAAI,SACzBA,EAAqB,aAAI,SACzBA,EAAqB,aAAI,SACzBA,EAAqB,aAAI,SACzBA,EAAqB,aAAI,SACzBA,EAAqB,aAAI,SACzBA,EAAsB,cAAI,SAC1BA,EAA8B,sBAAI,SAClCA,EAA8B,sBAAI,SAClCA,EAA8B,sBAAI,SAClCA,EAAc,MAAI,SAClBA,EAAsB,cAAI,SAC1BA,EAAsB,cAAI,SAC1BA,EAAmC,2BAAI,SACvCA,EAAmC,2BAAI,SACvCA,EAAgB,QAAI,SACpBA,EAAqB,aAAI,SACzBA,EAA6B,qBAAI,SACjCA,EAA8B,sBAAI,SAClCA,EAAuB,eAAI,SAC3BA,EAAwB,gBAAI,SAC5BA,EAAmB,WAAI,SACvBA,EAAiB,SAAI,SACrBA,EAAqB,aAAI,SACzBA,EAAsB,cAAI,SAC1BA,EAA0B,kBAAI,SAC9BA,EAAwB,gBAAI,SAC5BA,EAAmB,WAAI,SACvBA,EAAyB,iBAAI,SAC7BA,EAAuB,eAAI,SAC3BA,EAAoB,YAAI,SACxBA,EAA0B,kBAAI,SAC9BA,EAAwB,gBAAI,SAC5BA,EAAoB,YAAI,SACxBA,EAA0B,kBAAI,SAC9BA,EAAwB,gBAAI,SAC5BA,EAAoB,YAAI,SACxBA,EAA0B,kBAAI,SAC9BA,EAAwB,gBAAI,SAC5BA,EAAoB,YAAI,SACxBA,EAA0B,kBAAI,SAC9BA,EAAwB,gBAAI,SAC5BA,EAAoB,YAAI,SACxBA,EAA0B,kBAAI,SAC9BA,EAAwB,gBAAI,SAC5BA,EAA6B,qBAAI,SACjCA,EAA2B,mBAAI,SAC/BA,EAA+B,uBAAI,SACnCA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAAa,KAAI,SACjBA,EAAwB,gBAAI,SAC5BA,EAA2B,mBAAI,SAC/BA,EAAqB,aAAI,SACzBA,EAAiB,SAAI,SACrBA,EAA4B,oBAAI,SAChCA,EAA8B,sBAAI,SAClCA,EAAmC,2BAAI,SACvCA,EAA8B,sBAAI,SAClCA,EAA8B,sBAAI,SAClCA,EAAoB,YAAI,SACxBA,EAAyB,iBAAI,SAC7BA,EAA0B,kBAAI,SAC9BA,EAAuB,eAAI,SAC3BA,EAAoB,YAAI,SACxBA,EAAyB,iBAAI,SAC7BA,EAA2B,mBAAI,SAC/BA,EAA+B,uBAAI,SACnCA,EAA0C,kCAAI,SAC9CA,EAAwC,gCAAI,SAC5CA,EAA2C,mCAAI,SAC/CA,EAAyC,iCAAI,SAC7CA,EAA2B,mBAAI,SAC/BA,EAA8B,sBAAI,SAClCA,EAAkC,0BAAI,SACtCA,EAAuB,eAAI,SAC3BA,EAAmC,2BAAI,SACvCA,EAAmC,2BAAI,SACvCA,EAAkC,0BAAI,SACtCA,EAA6B,qBAAI,SACjCA,EAAuB,eAAI,SAC3BA,EAA4B,oBAAI,SAChCA,EAAwB,gBAAI,SAC5BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAuB,eAAI,SAC3BA,EAAsB,cAAI,SAC1BA,EAAmC,2BAAI,SACvCA,EAAuC,+BAAI,SAC3CA,EAA4C,oCAAI,SAChDA,EAA0C,kCAAI,SAC9CA,EAAiC,yBAAI,SACrCA,EAAuC,+BAAI,SAC3CA,EAA8C,sCAAI,SAClDA,EAAoC,4BAAI,SACxCA,EAAqC,6BAAI,SACzCA,EAA6B,qBAAI,SACjCA,EAAmC,2BAAI,SACvCA,EAAgC,wBAAI,SACpCA,EAAiC,yBAAI,SACrCA,EAAqB,aAAI,SACzBA,EAAiC,yBAAI,SACrCA,EAAiC,yBAAI,SACrCA,EAAgC,wBAAI,SACpCA,EAA2B,mBAAI,SAC/BA,EAA4B,oBAAI,SAChCA,EAA0C,kCAAI,SAC9CA,EAAwC,gCAAI,SAC5CA,EAAyC,iCAAI,SAC7CA,EAAuC,+BAAI,SAC3CA,EAAsB,cAAI,SAC1BA,EAA+B,uBAAI,SACnCA,EAA0B,kBAAI,SAC9BA,EAA4B,oBAAI,SAChCA,EAAsC,8BAAI,SAC1CA,EAAuC,+BAAI,SAC3CA,EAAsC,8BAAI,SAC1CA,EAAqC,6BAAI,SACzCA,EAAsC,8BAAI,SAC1CA,EAA8B,sBAAI,SAClCA,EAA+B,uBAAI,SACnCA,EAAiC,yBAAI,SACrCA,EAAkC,0BAAI,SACtCA,EAAiC,yBAAI,SACrCA,EAAgC,wBAAI,SACpCA,EAAiC,yBAAI,SACrCA,EAA8C,sCAAI,SAClDA,EAA+C,uCAAI,SACnDA,EAA8C,sCAAI,SAClDA,EAA6C,qCAAI,SACjDA,EAA8C,sCAAI,SAClDA,EAAsC,8BAAI,SAC1CA,EAAuC,+BAAI,SAC3CA,EAAgB,QAAI,SACpBA,EAA4B,oBAAI,SAChCA,EAA6B,qBAAI,SACjCA,EAAqC,6BAAI,SACzCA,EAAsC,8BAAI,SAC1CA,EAAuC,+BAAI,SAC3CA,EAAwC,gCAAI,SAC5CA,EAAiB,SAAI,SACrBA,EAAyB,iBAAI,SAC7BA,EAAuB,eAAI,SAC3BA,EAAiB,SAAI,SACrBA,EAAyB,iBAAI,SAC7BA,EAAuB,eAAI,SAC3BA,EAAiB,SAAI,SACrBA,EAAyB,iBAAI,SAC7BA,EAAuB,eAAI,SAC3BA,EAAiB,SAAI,SACrBA,EAAyB,iBAAI,SAC7BA,EAAuB,eAAI,SAC3BA,EAAiB,SAAI,SACrBA,EAAyB,iBAAI,SAC7BA,EAAuB,eAAI,SAC3BA,EAAiB,SAAI,SACrBA,EAAyB,iBAAI,SAC7BA,EAAuB,eAAI,SAC3BA,EAAiB,SAAI,SACrBA,EAAyB,iBAAI,SAC7BA,EAAuB,eAAI,SAC3BA,EAAiB,SAAI,SACrBA,EAAyB,iBAAI,SAC7BA,EAAuB,eAAI,SAC3BA,EAAiB,SAAI,SACrBA,EAAyB,iBAAI,SAC7BA,EAAuB,eAAI,SAC3BA,EAAiB,SAAI,SACrBA,EAAyB,iBAAI,SAC7BA,EAAuB,eAAI,SAC3BA,EAA2B,mBAAI,SAC/BA,EAAgC,wBAAI,SACpCA,EAA4B,oBAAI,SAChCA,EAAiC,yBAAI,SACrCA,EAA+B,uBAAI,SACnCA,EAA6B,qBAAI,SACjCA,EAAqB,aAAI,SACzBA,EAAsB,cAAI,SAC1BA,EAA8B,sBAAI,SAClCA,EAA4B,oBAAI,SAChCA,EAAoB,YAAI,SACxBA,EAAoB,YAAI,SACxBA,EAAyB,iBAAI,SAC7BA,EAAiC,yBAAI,SACrCA,EAA+B,uBAAI,SACnCA,EAAsB,cAAI,SAC1BA,EAA4B,oBAAI,SAChCA,EAAgC,wBAAI,SACpCA,EAA+B,uBAAI,SACnCA,EAAqC,6BAAI,SACzCA,EAAiC,yBAAI,SACrCA,EAA+B,uBAAI,SACnCA,EAAqB,aAAI,SACzBA,EAAwB,gBAAI,SAC5BA,EAA8B,sBAAI,SAClCA,EAA0B,kBAAI,SAC9BA,EAA+B,uBAAI,SACnCA,EAA2B,mBAAI,SAC/BA,EAAgC,wBAAI,SACpCA,EAAoB,YAAI,SACxBA,EAAyB,iBAAI,SAC7BA,EAAqB,aAAI,SACzBA,EAAiB,SAAI,SACrBA,EAAiB,SAAI,SACrBA,EAAiB,SAAI,SACrBA,EAAiB,SAAI,SACrBA,EAAiB,SAAI,SACrBA,EAAiB,SAAI,SACrBA,EAA2B,mBAAI,SAC/BA,EAA2B,mBAAI,SAC/BA,EAA2B,mBAAI,SAC/BA,EAA2B,mBAAI,SAC/BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAAyB,iBAAI,SAC7BA,EAA0B,kBAAI,SAC9BA,EAA0B,kBAAI,SAC9BA,EAAgB,QAAI,SACpBA,EAAgB,QAAI,SACpBA,EAAgB,QAAI,SACpBA,EAAgB,QAAI,SACpBA,EAAgB,QAAI,SACpBA,EAAgB,QAAI,SACpBA,EAAgB,QAAI,SACpBA,EAAgB,QAAI,SACpBA,EAAgB,QAAI,SACpBA,EAAgB,QAAI,SACpBA,EAAoB,YAAI,SACxBA,EAA0B,kBAAI,SAC9BA,EAAgC,wBAAI,SACpCA,EAAiC,yBAAI,SACrCA,EAAiC,yBAAI,SACrCA,EAAqB,aAAI,SACzBA,EAAyB,iBAAI,SAC7BA,EAA0B,kBAAI,SAC9BA,EAA4B,oBAAI,SAChCA,EAAoC,4BAAI,SACxCA,EAA0B,kBAAI,SAC9BA,EAAyB,iBAAI,SAC7BA,EAAuB,eAAI,SAC3BA,EAAyB,iBAAI,SAC7BA,EAA+B,uBAAI,SACnCA,EAA2B,mBAAI,SAC/BA,EAAwB,gBAAI,SAC5BA,EAA0B,kBAAI,SAC9BA,EAAoC,4BAAI,SACxCA,EAA0C,kCAAI,SAC9CA,EAAyB,iBAAI,SAC7BA,EAA6B,qBAAI,SACjCA,EAAkC,0BAAI,SACtCA,EAAkC,0BAAI,SACtCA,EAA2B,mBAAI,SAC/BA,EAAgC,wBAAI,SACpCA,EAAgC,wBAAI,SACpCA,EAAuB,eAAI,SAC3BA,EAA+B,uBAAI,SACnCA,EAAsC,8BAAI,SAC1CA,EAA2C,mCAAI,SAC/CA,EAAoC,4BAAI,SACxCA,EAA0B,kBAAI,SAC9BA,EAA4B,oBAAI,SAChCA,EAA6B,qBAAI,SACjCA,EAAkC,0BAAI,SACtCA,EAA8B,sBAAI,SAClCA,EAA4B,oBAAI,SAChCA,EAA4B,oBAAI,SAChCA,EAAwB,gBAAI,SAC5BA,EAA8B,sBAAI,SAClCA,EAA8B,sBAAI,SAClCA,EAA8B,sBAAI,SAClCA,EAAsB,cAAI,SAC1BA,EAAsB,cAAI,SAC1BA,EAAsB,cAAI,SAC1BA,EAAsB,cAAI,SAC1BA,EAAuB,eAAI,SAC3BA,EAA6B,qBAAI,SACjCA,EAA2B,mBAAI,SAC/BA,EAAyB,iBAAI,SAC7BA,EAA+B,uBAAI,SACnCA,EAA6B,qBAAI,SACjCA,EAAoB,YAAI,SACxBA,EAAwB,gBAAI,SAC5BA,EAA0B,kBAAI,SAC9BA,EAA+B,uBAAI,SACnCA,EAA2B,mBAAI,SAC/BA,EAAwB,gBAAI,SAC5BA,EAA0B,kBAAI,SAC9BA,EAA+B,uBAAI,SACnCA,EAA2B,mBAAI,SAC/BA,EAAmC,2BAAI,SACvCA,EAAkC,0BAAI,SACtCA,EAAsB,cAAI,SAC1BA,EAA+B,uBAAI,SACnCA,EAAiC,yBAAI,SACrCA,EAAsC,8BAAI,SAC1CA,EAAkC,0BAAI,SACtCA,EAA+B,uBAAI,SACnCA,EAAiC,yBAAI,SACrCA,EAAkC,0BAAI,SACtCA,EAAiC,yBAAI,SACrCA,EAAmC,2BAAI,SACvCA,EAAwC,gCAAI,SAC5CA,EAAoC,4BAAI,SACxCA,EAAiC,yBAAI,SACrCA,EAAoC,4BAAI,SACxCA,EAAgC,wBAAI,SACpCA,EAAkC,0BAAI,SACtCA,EAAuC,+BAAI,SAC3CA,EAAmC,2BAAI,SACvCA,EAAgC,wBAAI,SACpCA,EAAmC,2BAAI,SACvCA,EAA+B,uBAAI,SACnCA,EAAiC,yBAAI,SACrCA,EAAsC,8BAAI,SAC1CA,EAAkC,0BAAI,SACtCA,EAA+B,uBAAI,SACnCA,EAAiC,yBAAI,SACrCA,EAAkC,0BAAI,SACtCA,EAAkC,0BAAI,SACtCA,EAAoC,4BAAI,SACxCA,EAAyC,iCAAI,SAC7CA,EAAqC,6BAAI,SACzCA,EAAkC,0BAAI,SACtCA,EAAoC,4BAAI,SACxCA,EAAqC,6BAAI,SACzCA,EAA2B,mBAAI,SAC/BA,EAA0B,kBAAI,SAC9BA,EAAmB,WAAI,SACvBA,EAAyB,iBAAI,SAC7BA,EAAuB,eAAI,SAC3BA,EAAuB,eAAI,SAC3BA,EAA2B,mBAAI,SAC/BA,EAA4B,oBAAI,SAChCA,EAA4B,oBAAI,SAChCA,EAA4B,oBAAI,SAChCA,EAAkC,0BAAI,SACtCA,EAAgC,wBAAI,SACpCA,EAA0B,kBAAI,SAC9BA,EAAkC,0BAAI,SACtCA,EAAuC,+BAAI,SAC3CA,EAAkC,0BAAI,SACtCA,EAAqB,aAAI,SACzBA,EAA2B,mBAAI,SAC/BA,EAA+B,uBAAI,SACnCA,EAA4B,oBAAI,SAChCA,EAA8B,sBAAI,SAClCA,EAAoB,YAAI,SACxBA,EAA4B,oBAAI,SAChCA,EAA8B,sBAAI,SAClCA,EAAoC,4BAAI,SACxCA,EAA4B,oBAAI,SAChCA,EAAqB,aAAI,SACzBA,EAAgC,wBAAI,SACpCA,EAA4B,oBAAI,QACnC,CAt3FD,CAs3FGA,IAAWA,EAAS,CAAC,IEp3FxB,MAAM2J,EAAa,MACbC,EAAY,CACd,MAAOD,MACP,EAAGA,MACH,EAAGA,KACH,EAAGA,KACH,EAAGA,KACH,GAAIA,KACJ,GAAIA,IACJ,GAAIA,IACJ,IAAKA,IACL,IAAKA,IAEHE,EAAkB,CACpB7wD,EAAG,IACHb,EAAG,IACHP,EAAG,IACHI,EAAG,OAED8xD,EAAgB,CAClBpwD,EAAG,CAAEqwD,IAAK,GACVC,GAAI,CAAED,IAAK,GACX9vD,EAAG,CAAEspD,WAAY,IAAKwG,IAAK,GAC3BE,GAAI,CAAE1G,WAAY,IAAKwG,IAAK,GAC5B12C,GAAI,CAAEkwC,WAAY,IAAKwG,IAAK,GAC5BG,GAAI,CAAE3G,WAAY,IAAKwG,IAAK,GAC5Bt2C,GAAI,CAAE8vC,WAAY,IAAKwG,IAAK,GAC5BI,GAAI,CAAE5G,WAAY,IAAKwG,IAAK,GAC5B32C,GAAI,CAAEmwC,WAAY,IAAKwG,IAAK,GAC5BK,GAAI,CAAE7G,WAAY,IAAKwG,IAAK,GAC5Bv2C,GAAI,CAAE+vC,WAAY,IAAKwG,IAAK,GAC5BM,IAAK,CAAE9G,WAAY,IAAKwG,IAAK,GAC7Bp2C,GAAI,CAAE4vC,WAAY,IAAKwG,IAAK,GAC5BO,IAAK,CAAE/G,WAAY,IAAKwG,IAAK,GAC7Bz2C,GAAI,CAAEiwC,WAAY,IAAKwG,IAAK,GAC5BQ,IAAK,CAAEhH,WAAY,IAAKwG,IAAK,GAC7B7vD,EAAG,CAAEqpD,WAAY,IAAKwG,IAAK,GAC3BS,GAAI,CAAEjH,WAAY,IAAKwG,IAAK,GAC5BpwD,EAAG,CAAE4pD,WAAY,IAAKwG,IAAK,GAC3BU,GAAI,CAAElH,WAAY,IAAKwG,IAAK,GAC5BpuD,EAAG,CAAE4nD,WAAY,IAAKwG,IAAK,GAC3B,MAAO,CAAExG,WAAY,IAAKwG,IAAK,GAC/BnwD,EAAG,CAAE2pD,WAAY,IAAKwG,IAAK,GAC3B,MAAO,CAAExG,WAAY,IAAKwG,IAAK,GAC/B1wD,EAAG,CAAEkqD,WAAY,IAAKwG,IAAK,GAC3B,MAAO,CAAExG,WAAY,IAAKwG,IAAK,GAC/B,KAAM,CAAExG,WAAY,IAAKwG,IAAK,GAC9B,MAAO,CAAExG,WAAY,IAAKwG,IAAK,GAC/B,KAAM,CAAExG,WAAY,IAAKwG,IAAK,GAC9B,MAAO,CAAExG,WAAY,IAAKwG,IAAK,IAE7BW,EAAQ,CACVC,OAAQ,CAAEC,UAAW,GACrBC,KAAM,CAAED,UAAW,GACnBE,MAAO,CAAEF,UAAW,GACpBG,KAAM,CAAEH,UAAW,GACnBI,QAAS,CAAEJ,UAAW,GACtBK,WAAY,CAAEL,UAAW,GACzB,gBAAiB,CAAEA,UAAW,GAC9B,aAAc,CAAEA,UAAW,GAC3B,aAAc,CAAEA,UAAW,GAC3BM,QAAS,CAAEN,UAAW,GACtBO,OAAQ,CAAEP,WAAY,IAEpBQ,EAAY,CACd1xD,EAAG,CAAE9F,MAAO,EAAGsyD,OAAQ,GACvBmF,GAAI,CAAEz3D,MAAO,EAAGsyD,OAAQ,GACxB,KAAM,CAAEtyD,MAAO,EAAGsyD,OAAQ,GAC1B,MAAO,CAAEtyD,MAAO,EAAGsyD,OAAQ,GAC3BoF,GAAI,CAAE13D,MAAO,EAAGsyD,OAAQ,IACxBqF,IAAK,CAAE33D,MAAO,EAAGsyD,OAAQ,IACzBvsD,EAAG,CAAE/F,MAAO,EAAGsyD,OAAQ,GACvBsF,GAAI,CAAE53D,MAAO,EAAGsyD,OAAQ,GACxB,KAAM,CAAEtyD,MAAO,EAAGsyD,OAAQ,GAC1B,MAAO,CAAEtyD,MAAO,EAAGsyD,OAAQ,GAC3BuF,GAAI,CAAE73D,MAAO,EAAGsyD,OAAQ,GACxBwF,IAAK,CAAE93D,MAAO,EAAGsyD,OAAQ,GACzBtsD,EAAG,CAAEhG,MAAO,EAAGsyD,OAAQ,GACvByF,GAAI,CAAE/3D,MAAO,EAAGsyD,OAAQ,GACxB,KAAM,CAAEtyD,MAAO,EAAGsyD,OAAQ,GAC1B,MAAO,CAAEtyD,MAAO,EAAGsyD,OAAQ,GAC3B0F,GAAI,CAAEh4D,MAAO,EAAGsyD,OAAQ,GACxB2F,IAAK,CAAEj4D,MAAO,EAAGsyD,OAAQ,GACzBjsD,EAAG,CAAErG,MAAO,EAAGsyD,OAAQ,GACvB4F,GAAI,CAAEl4D,MAAO,EAAGsyD,OAAQ,GACxB,KAAM,CAAEtyD,MAAO,EAAGsyD,OAAQ,GAC1B,MAAO,CAAEtyD,MAAO,EAAGsyD,OAAQ,GAC3B6F,GAAI,CAAEn4D,MAAO,EAAGsyD,OAAQ,GACxB8F,IAAK,CAAEp4D,MAAO,EAAGsyD,OAAQ,GACzBhsD,EAAG,CAAEtG,MAAO,EAAGsyD,OAAQ,GACvB+F,GAAI,CAAEr4D,MAAO,EAAGsyD,OAAQ,GACxB,KAAM,CAAEtyD,MAAO,EAAGsyD,OAAQ,GAC1B,MAAO,CAAEtyD,MAAO,EAAGsyD,OAAQ,GAC3BgG,GAAI,CAAEt4D,MAAO,EAAGsyD,OAAQ,GACxBiG,IAAK,CAAEv4D,MAAO,EAAGsyD,OAAQ,GACzBvqD,EAAG,CAAE/H,MAAO,EAAGsyD,OAAQ,GACvBkG,GAAI,CAAEx4D,MAAO,EAAGsyD,OAAQ,GACxB,KAAM,CAAEtyD,MAAO,EAAGsyD,OAAQ,IAC1B,MAAO,CAAEtyD,MAAO,EAAGsyD,OAAQ,IAC3BmG,GAAI,CAAEz4D,MAAO,EAAGsyD,OAAQ,GACxBoG,IAAK,CAAE14D,MAAO,EAAGsyD,OAAQ,GACzB7sD,EAAG,CAAEzF,MAAO,EAAGsyD,OAAQ,IACvBqG,GAAI,CAAE34D,MAAO,EAAGsyD,OAAQ,IACxB,KAAM,CAAEtyD,MAAO,EAAGsyD,OAAQ,IAC1B,MAAO,CAAEtyD,MAAO,EAAGsyD,OAAQ,IAC3BsG,GAAI,CAAE54D,MAAO,EAAGsyD,OAAQ,IACxBuG,IAAK,CAAE74D,MAAO,EAAGsyD,OAAQ,GACzB1qD,EAAG,CAAE5H,MAAO,GACZ8I,EAAG,CAAE9I,MAAO,IAmBVmyD,EAAc,CAChB,IAAK/F,EAAO0M,gBACZ,KAAM1M,EAAO2M,sBACb30D,EAAGgoD,EAAO4M,eACVpgD,GAAIwzC,EAAO6M,qBACXl3D,EAAGqqD,EAAO8M,kBACV,IAAK9M,EAAO+M,qBACZ,IAAK/M,EAAOgN,sBACZtgD,GAAIszC,EAAOiN,0CACXh1D,EAAG+nD,EAAOkN,+BACV,KAAMlN,EAAOmN,sCACb,IAAKnN,EAAOoN,gCACZ,KAAMpN,EAAOqN,6BACbC,GAAItN,EAAOuN,qBACXC,IAAKxN,EAAOyN,4BACZC,EAAG1N,EAAO2N,eACV12D,EAAG+oD,EAAO4N,gBACVC,IAAK7N,EAAO8N,6BACZ,MAAO9N,EAAO8N,6BACdC,KAAM/N,EAAO8N,6BACbE,KAAMhO,EAAO8N,8BAiCXG,EAAgB,CAClB,KAAM,CAAE9tC,KAAM6/B,EAAOkO,gBAAiBC,cAAc,GACpDC,GAAI,CACAC,UAAWrO,EAAOsO,wBAClBC,UAAWvO,EAAOwO,wBAClBL,cAAc,GAElB,KAAM,CACFE,UAAWrO,EAAOyO,iBAClBF,UAAWvO,EAAO0O,iBAClBP,cAAc,GAElB,KAAM,CACFE,UAAWrO,EAAO2O,iBAClBJ,UAAWvO,EAAO4O,iBAClBT,cAAc,GAElB,KAAM,CACFE,UAAWrO,EAAO6O,kBAClBN,UAAWvO,EAAO8O,kBAClBX,cAAc,GAElB,KAAM,CAAEhuC,KAAM6/B,EAAO+O,yBAA0BZ,cAAc,GAC7Da,GAAI,CACAX,UAAWrO,EAAOiP,0BAClBV,UAAWvO,EAAOkP,0BAClBf,cAAc,GAElB78B,GAAI,CAAEnR,KAAM6/B,EAAOmP,gBAAiBhB,cAAc,GAClD,KAAM,CAAEE,UAAWrO,EAAOoP,aAAcb,UAAWvO,EAAOqP,aAAclB,cAAc,GACtF,MAAO,CAAEhuC,KAAM6/B,EAAOoP,aAAcjB,cAAc,GAClD,MAAO,CAAEhuC,KAAM6/B,EAAOqP,aAAclB,cAAc,GAClD,MAAO,CAAEE,UAAWrO,EAAOsP,kBAAmBf,UAAWvO,EAAOuP,kBAAmBpB,cAAc,GACjG,OAAQ,CAAEhuC,KAAM6/B,EAAOsP,kBAAmBnB,cAAc,GACxD,OAAQ,CAAEhuC,KAAM6/B,EAAOuP,kBAAmBpB,cAAc,GACxD,MAAO,CAAEE,UAAWrO,EAAOwP,iBAAkBjB,UAAWvO,EAAOyP,iBAAkBtB,cAAc,GAC/F,OAAQ,CAAEhuC,KAAM6/B,EAAOwP,iBAAkBrB,cAAc,GACvD,OAAQ,CAAEhuC,KAAM6/B,EAAOyP,iBAAkBtB,cAAc,GACvD,OAAQ,CACJE,UAAWrO,EAAO0P,qBAClBnB,UAAWvO,EAAO2P,qBAClBxB,cAAc,GAElB,QAAS,CAAEhuC,KAAM6/B,EAAO0P,qBAAsBvB,cAAc,GAC5D,QAAS,CAAEhuC,KAAM6/B,EAAO2P,qBAAsBxB,cAAc,GAC5D,KAAM,CAAEhuC,KAAM6/B,EAAO4P,aAAczB,cAAc,GACjD0B,GAAI,CAAE1vC,KAAM6/B,EAAO8P,eAAgB3B,cAAc,GACjD,KAAM,CAAEhuC,KAAM6/B,EAAO+P,gBAAiB5B,cAAc,IAElD6B,EAAY,CACdC,QAASjQ,EAAOkQ,mBAChBC,gBAAiBnQ,EAAOoQ,gBACxBC,KAAMrQ,EAAOsQ,aACbC,aAAcvQ,EAAOwQ,kBACrBC,GAAIzQ,EAAO0Q,cACXC,QAAS3Q,EAAO4Q,oCAChBC,UAAW7Q,EAAO8Q,wCAClBC,QAAS/Q,EAAOgR,mCAChBC,UAAWjR,EAAOkR,gCAClBC,UAAWnR,EAAOoR,8BAClBC,YAAarR,EAAOsR,4CACpBC,UAAWvR,EAAOwR,2BAClBC,WAAYzR,EAAO0R,oBACnBC,MAAO3R,EAAO4R,WACdC,KAAM7R,EAAO8R,gBACbC,KAAM/R,EAAOgS,kBACbC,SAAUjS,EAAOkS,gBACjBC,SAAUnS,EAAOoS,qBACjBC,KAAMrS,EAAOsS,UACbC,cAAevS,EAAOwS,gBACtBC,YAAazS,EAAO0S,cACpBC,KAAM3S,EAAO4S,UACbC,SAAU7S,EAAO8S,cACjBC,MAAO/S,EAAOgT,YAEX,MAAMC,EACT,qBAAOC,CAAeC,GAClB,IAAKA,KAAUA,KAAQzI,GACnB,MAAM,IAAIzf,EAAa,cAAe,iBAAmBkoB,GAC7D,OAAOzI,EAAMyI,EACjB,CACA,oBAAOC,CAAcC,GAAqD,IAArCF,EAAIr8D,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,SAAUuB,EAAIvB,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,IAAKw8D,EAAMx8D,UAAAC,OAAA,EAAAD,UAAA,QAAAJ,EAChEoW,EAAU,CAAEymD,YAAa,EAAGC,SAAU,KACpB,kBAAXF,IACPxmD,EAAU/X,OAAOK,OAAOL,OAAOK,OAAO,CAAC,EAAG0X,GAAUwmD,IAExD,MAAME,EAAWP,EAAOQ,iBAAiB3mD,EAAQ0mD,UAC3CE,EAASL,EAAev9D,MAAM,KACpC,GAAI49D,EAAO38D,OAAS,EAChB,MAAM,IAAIk0C,EAAa,eAAgB,iEAAFloC,OAAmEswD,IAE5G,MAAMx/D,EAAM6/D,EAAO,GAAGzrD,cACtB5P,EAAOA,EAAK4P,cACZ,MAAM9T,EAAQi3D,EAAUv3D,GACxB,IAAKM,EACD,MAAM,IAAI82C,EAAa,eAAgB,qBAAuBp3C,GAClE,IAAIswD,EAASpY,SAAS2nB,EAAO,GAAI,IACjCvP,GAAUr3C,EAAQymD,YAElB,IAAI1nB,GADuB,EAATsY,EAAa,GACPhwD,EAAMP,OAAS,EACvCi4C,GAAQonB,EAAOC,eAAeC,GAAMvI,UACpC,MAAM+I,EAAmC,qBAAjBx/D,EAAM+xD,OAAkC,GAAT/B,EAAchwD,EAAM+xD,YAASxvD,EACpF,IAAIypB,EAAO,GACPyzC,EAAY,IAUhB,OARIA,EADAF,EAAO38D,OAAS,GAAK28D,EAAO,GAChBA,EAAO,GAAGzrD,cAER,MAAT5P,EACOA,EAGAxE,EAChBssB,EAAOtmB,KAAKg6D,aAAaD,EAAWJ,GAC7B,CACH3/D,MACAswD,SACAtY,OACA8nB,WACAxzC,OACA2zC,WAAW,EAEnB,CACA,oBAAOC,CAAcC,GACjB,GAAuB,qBAAZA,GAA2BA,EAAU,GAAKA,EAAU,GAC3D,MAAM,IAAI/oB,EAAa,eAAgB,6DAAFloC,OAA+DixD,IAExG,MAcMlM,EAdQ,CACV,EAAG,IACH,EAAG,KACH,EAAG,IACH,EAAG,KACH,EAAG,IACH,EAAG,IACH,EAAG,KACH,EAAG,IACH,EAAG,KACH,EAAG,IACH,GAAI,KACJ,GAAI,KAEgBkM,GACxB,IAAKlM,EACD,MAAM,IAAI7c,EAAa,eAAgB,mCAAFloC,OAAqCixD,IAE9E,OAAOlM,CACX,CACA,gBAAOmM,CAAU7wC,GACb,OAAO,EAAIA,EAAK7nB,WAAWxE,MAC/B,CACA,wBAAOm9D,CAAkBC,GACrB,OAAOlG,EAAckG,EACzB,CACA,sBAAOC,CAAgB7Q,GACnB,IAAI5T,EACJ,OAA0C,QAAlCA,EAAKoW,EAAYxC,UAAgC,IAAP5T,EAAgBA,EAAK4T,CAC3E,CACA,oBAAO8Q,CAAcC,GACjB,IAAI3kB,EACJ,OAAsC,QAA9BA,EAAKqgB,EAAUsE,UAA8B,IAAP3kB,EAAgBA,EAAK2kB,CACvE,CACA,mBAAOpL,CAAaqL,GAChB,MAAMC,EAAU1K,EAAcyK,GAC9B,IAAKC,EACD,MAAM,IAAIvpB,EAAa,kBAAmB,4BAAFloC,OAA8BwxD,EAAI,MAE9E,IAAKC,EAAQjR,WACT,MAAO,GAEX,MAIMkR,EAJiB,CACnBz8D,EAAG,CAAC,EAAG,GAAK,IAAK,EAAG,EAAG,IAAK,KAC5B,IAAK,CAAC,EAAG,KAAM,GAAK,EAAG,IAAK,GAAK,IAERw8D,EAAQjR,YAC/BmR,EAAU,GAChB,IAAK,IAAIj/D,EAAI,EAAGA,EAAI++D,EAAQzK,MAAOt0D,EAAG,CAClC,MAAMo2C,EAAO4oB,EAAMh/D,GACnBi/D,EAAQh5D,KAAK,CAAErD,KAAMm8D,EAAQjR,WAAY1X,QAC7C,CACA,OAAO6oB,CACX,CACA,uBAAOC,GACH,OAAO7K,CACX,CACA,sBAAO8K,CAAgBL,GACnB,OAAOA,KAAQzK,CACnB,CACA,uBAAO2J,CAAiBD,GACpB,MAAMqB,EAAiBhL,EAAgB2J,GAIvC,QAHuB98D,IAAnBm+D,IACArB,EAAWqB,QAEan+D,IAAxBkzD,EAAU4J,GACV,MAAM,IAAIvoB,EAAa,eAAgB,uCAAFloC,OAAyCywD,IAElF,OAAOA,CACX,CACA,yBAAOsB,CAAmBtB,GACtB,OAAO,IAAIlnB,GAAWmC,MAAMwkB,EAAOQ,iBAAiBD,GACxD,CACA,uBAAOuB,CAAiBvB,GACpB,OAAOP,EAAO6B,mBAAmBtB,GAAUr/D,OAC/C,CACA,sBAAO6gE,CAAgBxB,GACnBA,EAAWP,EAAOQ,iBAAiBD,GACnC,MAAMyB,EAAQrL,EAAU4J,GACxB,QAAc98D,IAAVu+D,EACA,MAAM,IAAIhqB,EAAa,mBAE3B,OAAOgqB,CACX,CACA,mBAAOpB,CAAax7D,EAAMm7D,GACtB,OAAQn7D,GACJ,IAAK,KACD,OAAO2nD,EAAOkV,qBAClB,IAAK,KACD,OAAOlV,EAAOmV,oBAClB,IAAK,KAEL,IAAK,KACD,OAAOnV,EAAOoV,qBAClB,IAAK,KACD,OAAOpV,EAAOqV,wBAClB,IAAK,KACD,OAAOrV,EAAOsV,uBAClB,IAAK,KAEL,IAAK,KACD,OAAOtV,EAAOuV,wBAClB,IAAK,KACD,OAAOvV,EAAOwV,eAClB,IAAK,KACD,OAAOxV,EAAOyV,cAClB,IAAK,KACD,OAAOzV,EAAO0V,eAClB,IAAK,KACD,OAAO1V,EAAO2V,gBAClB,IAAK,KACD,OAAO3V,EAAO4V,oBAClB,IAAK,KACD,OAAO5V,EAAO6V,oBAClB,IAAK,KAEL,IAAK,KACD,OAAO7V,EAAO4V,oBAClB,IAAK,KACD,OAAO5V,EAAOuV,wBAClB,IAAK,KACD,OAAOvV,EAAO8V,kBAClB,IAAK,KACD,OAAO9V,EAAOoV,qBAClB,IAAK,KACD,OAAOpV,EAAO+V,0BAClB,IAAK,OACD,OAAO/V,EAAOgW,2BAClB,IAAK,KACD,OAAOhW,EAAOiW,cAClB,IAAK,KACD,OAAOjW,EAAO6V,oBAClB,IAAK,KACD,OAAO7V,EAAOkW,+BAClB,IAAK,KACL,IAAK,IACD,OAAQ1C,GACJ,IAAK,MACD,OAAOxT,EAAOmW,2BAClB,IAAK,IACD,OAAOnW,EAAOkV,qBAClB,IAAK,IACD,OAAOlV,EAAOmV,oBAClB,QACI,OAAOnV,EAAOoV,qBAE1B,IAAK,IACL,IAAK,IACD,OAAQ5B,GACJ,IAAK,MACD,OAAOxT,EAAOoW,qBAClB,IAAK,IACD,OAAOpW,EAAOwV,eAClB,IAAK,IACD,OAAOxV,EAAOyV,cAClB,QACI,OAAOzV,EAAO0V,eAE1B,IAAK,KACD,OAAQlC,GACJ,IAAK,MACD,OAAOxT,EAAOqW,2BAClB,IAAK,IACD,OAAOrW,EAAOsW,qBAClB,IAAK,IACD,OAAOtW,EAAOuW,oBAClB,QACI,OAAOvW,EAAO2V,gBAE1B,IAAK,KACD,OAAQnC,GACJ,IAAK,MACD,OAAOxT,EAAOwW,2BAClB,IAAK,IACD,OAAOxW,EAAOyW,qBAClB,IAAK,IACD,OAAOzW,EAAO0W,oBAClB,QACI,OAAO1W,EAAO2W,qBAE1B,IAAK,KACD,OAAQnD,GACJ,IAAK,MACD,OAAOxT,EAAO4W,0BAClB,IAAK,IAEL,IAAK,IACD,OAAO5W,EAAO4V,oBAClB,QACI,OAAO5V,EAAO6V,oBAE1B,IAAK,KACD,OAAQrC,GACJ,IAAK,MACD,OAAOxT,EAAO6W,8BAClB,IAAK,IACD,OAAO7W,EAAOqV,wBAClB,IAAK,IACD,OAAOrV,EAAOsV,uBAClB,QACI,OAAOtV,EAAOuV,wBAE1B,IAAK,KACD,OAAQ/B,GACJ,IAAK,MACD,OAAOxT,EAAO8W,gCAClB,IAAK,IACD,OAAO9W,EAAO+W,0BAClB,IAAK,IACD,OAAO/W,EAAOgX,yBAClB,QACI,OAAOhX,EAAOiX,0BAE1B,IAAK,KACD,OAAQzD,GACJ,IAAK,MACD,OAAOxT,EAAOkX,4BAClB,IAAK,IACD,OAAOlX,EAAOmX,sBAClB,IAAK,IACD,OAAOnX,EAAOoX,qBAClB,QACI,OAAOpX,EAAOqX,sBAE1B,IAAK,KACD,OAAQ7D,GACJ,IAAK,MACD,OAAOxT,EAAOsX,4BAClB,IAAK,IACD,OAAOtX,EAAOuX,sBAClB,IAAK,IACD,OAAOvX,EAAOwX,qBAClB,QACI,OAAOxX,EAAOyX,sBAE1B,IAAK,IACD,OAAQjE,GACJ,IAAK,MACD,OAAOxT,EAAO0X,gBAClB,IAAK,IACD,OAAO1X,EAAO2X,UAClB,IAAK,IACD,OAAO3X,EAAO4X,SAClB,IAAK,IACD,OAAO5X,EAAO6X,YAClB,IAAK,IACD,OAAO7X,EAAO8X,QAClB,IAAK,KACD,OAAO9X,EAAO+X,SAClB,IAAK,KACD,OAAO/X,EAAOgY,SAClB,IAAK,KACD,OAAOhY,EAAOiY,SAClB,IAAK,MACD,OAAOjY,EAAOkY,UAEtB,MACJ,IAAK,IACD,OAAQ1E,GACJ,IAAK,MACD,OAAOxT,EAAOmY,8BAClB,IAAK,IACD,OAAOnY,EAAOoY,wBAClB,IAAK,IACD,OAAOpY,EAAOqY,uBAClB,QACI,OAAOrY,EAAOsY,0BAE1B,QACI,OAAQ9E,GACJ,IAAK,MACD,OAAOxT,EAAOuY,oBAClB,IAAK,IACD,OAAOvY,EAAOwY,cAClB,IAAK,IACD,OAAOxY,EAAOyY,aAClB,QACI,OAAOzY,EAAOiW,eAG9B,OAAOjW,EAAO0Y,IAClB,EC9kBG,SAASC,EAAWvmE,EAAKsoD,GAAiC,IAAvBke,IAAc9hE,UAAAC,OAAA,QAAAL,IAAAI,UAAA,KAAAA,UAAA,GACpD,GAAmB,kBAAR1E,GAA4B,OAARA,EAC3B,OAAO,EAEX,IAAIymE,EAAiBzmE,EAAIoI,YACzB,GAAIo+D,EAAgB,CAChB,KAAe,OAARxmE,GAAc,CAEjB,GADAymE,EAAiBzmE,EAAIoI,YACjB,aAAcq+D,GAAkBA,EAAetsB,WAAamO,EAC5D,OAAO,EAEXtoD,EAAM2C,OAAO+jE,eAAe1mE,EAChC,CACA,OAAO,CACX,CAEI,MAAO,aAAcymE,GAAkBA,EAAetsB,WAAamO,CAE3E,CD8jBAuY,EAAO8F,QAAS,EAChB9F,EAAO+F,eAAiB,GACxB/F,EAAOgG,WAAa,IACpBhG,EAAOiG,YAAc,GACrBjG,EAAOkG,qBAAuB,EAC9BlG,EAAOmG,wBAA0B,EACjCnG,EAAOtJ,WAAaA,EACpBsJ,EAAOoG,cAAgB,CACnB,MAAO,CACHC,MAAM,GAEV,EAAG,CACCA,MAAM,GAEV,EAAG,CACCA,MAAM,GAEV,EAAG,CACCA,MAAM,GAEV,EAAG,CACCA,MAAM,EACNC,UAAW,EACXC,kBAAmB,EACnBC,WAAYzZ,EAAO0Z,WAEvB,GAAI,CACAH,UAAW,EACXC,kBAAmB,EACnBF,MAAM,EACNG,WAAYzZ,EAAO2Z,YAEvB,GAAI,CACAJ,UAAW,EACXC,kBAAmB,IACnBF,MAAM,EACNG,WAAYzZ,EAAO4Z,YAEvB,GAAI,CACAL,UAAW,EACXC,kBAAmB,GACnBF,MAAM,EACNG,WAAYzZ,EAAO6Z,YAEvB,IAAK,CACDN,UAAW,EACXC,kBAAmB,KACnBF,MAAM,EACNG,WAAYzZ,EAAO8Z,cAG3B7G,EAAO8G,oBAAsB,GAC7B9G,EAAO+G,qBAAuB,GAC9B/G,EAAOgH,qBAAuB,GAC9BhH,EAAOiH,oBAAsB,GAC7BjH,EAAOkH,wBAA0B,EACjClH,EAAOmH,uBAhfmB,CACtB,EAAG,CACCtiE,EAAG,CAAC,GACJE,EAAG,CAAC,IAER,EAAG,CACCF,EAAG,CAAC,EAAG,IAEX,EAAG,CACCA,EAAG,CAAC,EAAG,EAAG,GACVE,EAAG,CAAC,EAAG,EAAG,GACVqiE,eAAgB,CAAC,EAAG,EAAG,IAE3B,EAAG,CACCviE,EAAG,CAAC,EAAG,EAAG,EAAG,GACbE,EAAG,CAAC,EAAG,EAAG,EAAG,GACbsiE,oBAAqB,CAAC,EAAG,EAAG,EAAG,IAEnC,EAAG,CACCxiE,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,GAChBE,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,GAChBuiE,oBAAqB,CAAC,EAAG,EAAG,EAAG,EAAG,GAClCC,wBAAyB,CAAC,EAAG,EAAG,EAAG,EAAG,IAE1C,EAAG,CACC1iE,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACnBE,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACnByiE,mBAAoB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACpCC,uBAAwB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,KAqdhDzH,EAAO0H,QAAU,CACbC,MAAO,SACPC,KAAM,SACNC,QAAS,SACTC,SAAU,SACV,eAAgB,OAChBC,QAAS,OACTC,OAAQ,UAEZhI,EAAOiI,WAjiBgB,CACnBvlE,EAAG,CAAEmP,KAAM,QACXlM,EAAG,CAAEkM,KAAM,QACX3M,EAAG,CAAE2M,KAAM,YACXzN,EAAG,CAAEyN,KAAM,SACXjO,EAAG,CAAEiO,KAAM,SACX/M,EAAG,CAAE+M,KAAM,SACX7M,EAAG,CAAE6M,KAAM,WACX7L,EAAG,CAAE6L,KAAM,KACX2xB,GAAI,CAAE3xB,KAAM,WACZuB,GAAI,CAAEvB,KAAM,YACZilB,GAAI,CAAEjlB,KAAM,WACZuM,GAAI,CAAEvM,KAAM,oBACZq2D,GAAI,CAAEr2D,KAAM,UACZs2D,GAAI,CAAEt2D,KAAM,eACZ0X,GAAI,CAAE1X,KAAM,kBAmhBhBmuD,EAAOoI,QAAU,CACbC,SAAU,EACVC,UAAW,EACXC,WAAY7R,GCnoBT,MAEM8R,EAAarpE,GAAQumE,EAAWvmE,EAAK,WAErCspE,EAAetpE,GAAQumE,EAAWvmE,EAAK,aAEvCupE,EAAUvpE,GAAQumE,EAAWvmE,EAAK,QAElCwpE,EAAexpE,GAAQumE,EAAWvmE,EAAK,aACvCypE,EAAmBzpE,GAAQumE,EAAWvmE,EAAK,iBAC3C0pE,EAAa1pE,GAAQumE,EAAWvmE,EAAK,WCtBlD,SAAS2I,IAAW,QAAA2wC,EAAA50C,UAAAC,OAAN40C,EAAI,IAAAhxC,MAAA+wC,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA90C,UAAA80C,GACVwE,EAAW2rB,OACXtlD,EAAI,qBAAsBk1B,EAClC,CACO,MAAMyE,UAAmB6P,EAC5B,mBAAW1T,GACP,MAAO,YACX,CACA,aAAOyvB,CAAOjW,EAAa3sB,GAAO,IAAA6iC,EAAA,KAC9B,IAAKlW,GAAsC,IAAvBA,EAAYhvD,OAC5B,OACJ,MAAMw5C,EAA4B5B,EAAQxjC,IAAI,wCACxC+wD,EAAY9iC,EAAM8iC,UAAY3rB,EAC9BE,EAAoB9B,EAAQxjC,IAAI,gCAChCgxD,EAAoBxtB,EAAQxjC,IAAI,0BAChCixD,EAAuC,GAC7C,IAAIC,EACAC,EAA4C,EAChD,IAAK,IAAI7mE,EAAI,EAAGA,EAAIswD,EAAYhvD,SAAUtB,EAAG,CACzC,MAAM8tD,EAAawC,EAAYtwD,GACzBmO,EAAO2/C,EAAWvC,UAClBqB,EAAQz+C,EAAK0+C,WACb1uD,EAAQ2vD,EAAWnC,aACnB9oD,EAAQsL,EAAK24D,cAAc3oE,GACjC,GAAIgQ,IAASy4D,EAAU,CACnB,IAAK,IAAI1mE,EAAI,EAAGA,EAAIiO,EAAK3N,KAAKc,SAAUpB,EACpC2mE,EAA4Cx6D,KAAK2yC,IAAI7wC,EAAK44D,yBAA2B54D,EAAKo7C,YAAasd,GAE3GD,EAAWz4D,CACf,CACA,GAAIy+C,EAAO,CACP,MAAMoa,EAAYpa,EAAMqa,yBAClBxjE,EAAImpD,EAAMsa,YAAYrkE,EAAMuzC,MAC5B+wB,EAAU96D,KAAK+6D,MAAO3jE,EAAIujE,EAAa,GAAK,EAClDL,EAAqC1gE,KAAK,CACtCxC,IACA2yC,KAAM+wB,EACNE,kBAAmBR,EACnB/Y,WAAYA,EACZwZ,yBAA0BN,GAElC,MAEIL,EAAqC1gE,KAAK,CACtCmwC,KAAMvzC,EAAMuzC,KACZixB,kBAAmBR,EACnB/Y,WAAYA,GAGxB,CACA6Y,EAAqCY,MAAK,CAACllE,EAAGE,IAAMA,EAAE6zC,KAAO/zC,EAAE+zC,OAC/D,MAAMoxB,EAAmC,GACzC,IAAIC,EAAuB,EAC3B,IAAK,IAAIznE,EAAI,EAAGA,EAAI2mE,EAAqCrlE,OAAQtB,IAAK,CAClE,MAAM0nE,EAAsCf,EAAqC3mE,GAC3E2nE,EAAiBD,EAAoC5Z,WAAWlrD,KAChEglE,EAAkBJ,EAAiCA,EAAiClmE,OAAS,GACnG,IAAIumE,EACCD,IAAwC,OAApBA,QAAgD,IAApBA,OAA6B,EAASA,EAAgBxxB,QAAUsxB,EAAoCtxB,KAYrJyxB,EAAoBD,GAXpBC,EAAoB,CAChBzxB,KAAMsxB,EAAoCtxB,KAC1C0xB,UAAU,EACVC,cAAc,EACdC,OAAQ,EACR7qE,MAAO,EACP8qE,OAAQ,GAEZT,EAAiCvhE,KAAK4hE,IAKnB,MAAnBF,GAA6C,OAAnBA,IAC1BE,EAAkBC,UAAW,GAEV,OAAnBH,IACAE,EAAkBE,cAAe,GAErCF,EAAkBG,SAClBH,EAAkB1qE,OAASuqE,EAAoC5Z,WAAW7E,WAAajO,EACvFysB,EAAuBp7D,KAAK2yC,IAAI0oB,EAAoCL,kBAAmBI,EAC3F,CACA,IAAIS,EAAe,EACnB,IAAK,IAAIloE,EAAI,EAAGA,EAAIwnE,EAAiClmE,OAAQtB,IAAK,CAC9D,IAAImoE,GAAqB,EACzB,MAAMC,EAAapoE,EACnB,IAAIqoE,EAAWroE,EACf,KAAOqoE,EAAW,EAAIb,EAAiClmE,SAAW6mE,GAC1D/jE,KAAKkkE,eAAed,EAAiCa,GAAWb,EAAiCa,EAAW,IAC5GA,IAGAF,GAAqB,EAG7B,MAAMI,EAAgBpqE,GAAUqpE,EAAiCY,EAAajqE,GACxEqqE,EAAiBC,GAAYA,EAAQxqE,IAAIsqE,GACzCG,EAAiBA,CAACC,EAAQC,KAC5B,MAAOvmE,EAAGE,GAAKimE,EAAc,CAACG,EAAQC,IAAS3qE,KAAK4qE,GAASA,EAAKzyB,OAClE,OAAO/zC,EAAIE,GAETumE,EAAe,mBAAAC,EAAA1nE,UAAAC,OAAI0nE,EAAU,IAAA9jE,MAAA6jE,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAVD,EAAUC,GAAA5nE,UAAA4nE,GAAA,OAAKD,EAAW/qE,IAAIuqE,GAAeU,OAAMpsE,IAAA,IAAEqsE,EAAOC,GAAMtsE,EAAA,OAAM0pE,EAAK8B,eAAea,EAAOC,KAAO,EAC7HC,EAAchB,EAAWD,EAAa,EAC5C,IAiCIkB,EACArB,EAlCAsB,EAAUnlE,KAAKkkE,eAAed,EAAiCY,GAAaZ,EAAiCa,IAC3G,IACA,IACN,OAAQgB,GACJ,KAAK,EACe,MAAZE,GAA4C,KAAzBb,EAAe,EAAG,IAAuC,KAAzBA,EAAe,EAAG,KACrEa,EAAU,kBAEd,MACJ,KAAK,EACGT,EAAa,CAAC,EAAG,GAAI,CAAC,EAAG,MACzBS,EAAU,uBAEd,MACJ,KAAK,EACe,MAAZA,GAAmBT,EAAa,CAAC,EAAG,MACpCS,EAAU,sBACNT,EAAa,CAAC,EAAG,GAAI,CAAC,EAAG,MACzBS,EAAU,4BAGlB,MACJ,KAAK,EACGT,EAAa,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,MACjCS,EAAU,sBAEVT,EAAa,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,MACzCS,EAAU,0BAQtB,GAAIF,GAAe,EAAG,CAClB,IAAIG,EAAgB,EAChBC,GAAoB,EACxB,MAA6B,IAAtBA,GAA4B,CAC/BA,GAAoB,EACpB,IAAK,IAAIrzB,EAAO,EAAGA,EAAOozB,EAAgBhC,EAAiClmE,OAAQ80C,IAC/E,GAAIhyC,KAAKkkE,eAAed,EAAiCpxB,GAAOoxB,EAAiCpxB,EAAOozB,IAAiB,CACrHC,GAAoB,EACpBD,IACA,KACJ,CAER,CACA,IAAKF,EAActpE,EAAGspE,GAAejB,EAAUiB,IAC3CrB,GAAWqB,EAActpE,GAAKwpE,EAAiB,EAC/ChC,EAAiC8B,GAAarB,OAASA,EACvDC,EAAeA,EAAeD,EAASC,EAAeD,CAE9D,MAEI,IAAKqB,EAActpE,EAAGspE,GAAejB,EAAUiB,IAC3CrB,EAASzK,EAAOmH,uBAAuB0E,GAAaE,GAASD,EAActpE,GAC3EwnE,EAAiC8B,GAAarB,OAASA,EACvDC,EAAeA,EAAeD,EAASC,EAAeD,EAG9DjoE,EAAIqoE,CACR,CACA,MAAMqB,EAAe,GACfC,EAAiB,GACvB,IAAK,IAAI3pE,EAAI,EAAGA,GAAKkoE,EAAcloE,IAC/B0pE,EAAa1pE,GAAK,EAClB2pE,EAAe3pE,GAAK,EAExB0pE,EAAa,GAAKjD,EAAYgB,EAC9BkC,EAAe,GAAKlD,EACpBe,EAAiClnE,SAAS81C,IAClCA,EAAKj5C,MAAQusE,EAAatzB,EAAK6xB,UAC/ByB,EAAatzB,EAAK6xB,QAAU7xB,EAAKj5C,UAEzC,IAAK,IAAI6C,EAAI,EAAGA,EAAI0pE,EAAapoE,OAAQtB,IACrC2pE,EAAe3pE,GAAK0pE,EAAa1pE,GAAK2pE,EAAe3pE,EAAI,GAE7D,MAAM4pE,EAAaD,EAAeA,EAAeroE,OAAS,GAC1D,IAAIuoE,EAAW,EACfrC,EAAiClnE,SAAS81C,IACtC,IAAI0D,EAAY,EAChB,MAAMgwB,EAAgBD,EAAWzzB,EAAK4xB,OACtC,KAAe6B,EAAWC,EAAeD,IAAY,CACjD,MAAM3jB,EAASyjB,EAAevzB,EAAK6xB,OAAS,GAAKnuB,EAAY2tB,EAC7Dd,EAAqCkD,GAAU/b,WAAWxE,UAAUpD,GACpEpM,GAAa6sB,EAAqCkD,GAAU/b,WAAW7E,WAAajO,EACpF11C,EAAE,0BAA2B8wC,EAAKA,KAAMyzB,EAAU3jB,EACtD,KAEJviB,EAAM8iC,UAAYmD,EAAalD,CACnC,CACA,qBAAO4B,CAAea,EAAOC,GACzB,IAAIW,EAAYX,EAAMhzB,KAAO+yB,EAAM/yB,KAC/B4zB,EAAoB,EACpBD,EAAY,GACZC,EAAoBZ,EAAMtB,UAAYsB,EAAMrB,aAAe,IAAM,EAC7DoB,EAAMpB,eACNgC,GAAa,MAGjBC,EAAoBb,EAAMrB,UAAYqB,EAAMpB,aAAe,IAAM,EAC7DqB,EAAMrB,eACNgC,GAAa,KAErB,MAAME,EAAY59D,KAAKwsC,IAAIkxB,GAAaC,EAExC,OADA1kE,EAAE,4BAA6B6jE,EAAM/yB,KAAMgzB,EAAMhzB,KAAM6zB,GAChDA,CACX,CACA,uBAAOC,CAAiBC,EAAQ1W,GAC5B,MAAM2W,EAAgB,GAChBC,EAAc,CAAC,EACrBF,EAAO7pE,SAASgqE,IACZ,MAAMC,EAAe,IAAI1zB,EAAS,EAAG,GACpByzB,EAAME,eACdlqE,SAAS8C,IACd,GAAIA,EAAEqnE,oBACF,OACJ,MAAMC,EAAkBL,EAAYE,EAAa7rE,SAC5CgsE,EAKDA,EAAgBzkE,KAAK7C,IAJrBgnE,EAAcnkE,KAAKskE,EAAa7rE,SAChC2rE,EAAYE,EAAa7rE,SAAW,CAAC0E,IAKzCmnE,EAAaj5D,IAAIlO,EAAEunE,kBAG3B,MAAMC,EAAQ,IAAIvd,EACboG,IACDA,EAAe,KACnB,MAAMoX,EAAcD,EAAMpX,eAAeC,GACnCM,EAAW,CAAC,EAClBqW,EAAc9pE,SAASwqE,IACnB,MAAMC,EAAYV,EAAYS,GACxBE,EAAkB,GAClBC,EAAe7nE,IACjB,IAAK+iE,EAAY/iE,IAAMA,EAAE8nE,UAAY9nE,EAAEqnE,oBACnC,OAEJ,MAAMU,EAAY/nE,EAClB+nE,EAAU3qE,KAAKF,SAAQ,CAAC0xD,EAAWoZ,KAC/B,MAAMhtE,EAAMwsE,EAAMjZ,aAAaK,EAAU3xD,MAAM,KAAK,IAC9CquD,EAASsD,EAAU3xD,MAAM,KAAK,GAC9BgrE,EAAmBjtE,EAAI0vD,YAAc,IACrCwd,EAAQltE,EAAI0zD,KAAOuZ,EACpBtX,EAAS31D,EAAI0zD,KAAOpD,KACrBqF,EAAS31D,EAAI0zD,KAAOpD,GAAUmc,EAAYzsE,EAAI0zD,OAClD,MAAMyZ,EAAiBxX,EAAS31D,EAAI0zD,KAAOpD,KAAY4c,EACjDE,EAAqBR,EAAgBzsE,QAAQyzD,IAAc,EAMjE,GALAmZ,EAAUM,eAAenrE,SAAQ,CAACorE,EAAUvtE,KDlP3B+kE,ECmPIwI,EDnPY,eCmPCA,EAAS9oE,MAAQyoE,GAAoBK,EAAShgB,YAAc0f,GACtFD,EAAUM,eAAen6B,OAAOnzC,EAAO,OAG1CotE,GAAmBA,GAAkBC,EAAqB,CAC3DzX,EAAS31D,EAAI0zD,KAAOpD,GAAU4c,EAC9B,MAAMxd,EAAa,IAAInT,EAAW0wB,GAClCF,EAAUQ,YAAY7d,EAAYsd,GAClCJ,EAAgB/kE,KAAK+rD,EACzB,KAEJmZ,EAAUM,eAAenrE,SAASorE,IDzPTxI,EC0PAwI,ED1PgB,mBC2PjCA,EAASE,gBAAgBtrE,QAAQ2qE,OAI7CF,EAAUzqE,QAAQ2qE,KAE1B,CACAlmE,WAAAA,CAAYnC,GACR6yC,QACAnwC,EAAE,mBAAoB1C,GACtBwB,KAAKxB,KAAOA,EACZwB,KAAK3F,SAAW+rD,EAASC,SAASQ,KAClC7mD,KAAKw2C,YAAa,EAClBx2C,KAAKknD,OACT,CACAA,KAAAA,GACIlnD,KAAKupB,KAAO,GACPvpB,KAAKw2C,YAKNx2C,KAAKupB,MAAQ6vC,EAAOmB,gBAAgB,KACpCv6D,KAAKupB,MAAQ6vC,EAAOmB,gBAAgBv6D,KAAKxB,MACzCwB,KAAKupB,MAAQ6vC,EAAOmB,gBAAgB,KACpCv6D,KAAKq8C,SAASrX,KAAO8P,EAAQxjC,IAAI,oCAPjCtR,KAAKupB,MAAQ6vC,EAAOmB,gBAAgBv6D,KAAKxB,MACzCwB,KAAKq8C,SAASrX,KAAO8P,EAAQxjC,IAAI,wBAQjCuwD,EAAY7hE,KAAK+J,QACjB/J,KAAKq8C,SAASrX,KAAO8P,EAAQxjC,IAAI,6BAEzC,CACA+1C,OAAAA,CAAQt9C,GAIJ,OAHA4nC,EAAQ5nC,EAAM,gBAAiB,mBAAFb,OAAqBa,IAClD/J,KAAK+J,KAAOA,EACZ/J,KAAKknD,QACElnD,IACX,CACAynE,eAAAA,GAGI,OAFAznE,KAAKw2C,YAAa,EAClBx2C,KAAKknD,QACElnD,IACX,CACAmjD,IAAAA,GACI,MAAM,KAAE3kD,EAAI,SAAEnE,EAAQ,MAAEN,GAAUiG,KAC5BgjD,EAAMhjD,KAAKijD,eACXl5C,EAAO/J,KAAKonD,oBAClBpnD,KAAKyjD,cACL,MAAMn3B,EAAQviB,EAAK29D,mBAAmBrtE,EAAUN,GAChDiG,KAAKZ,EAAIktB,EAAMltB,EAAIY,KAAKjH,MACxBiH,KAAKX,EAAIitB,EAAMjtB,EACf6B,EAAE,cAAe1C,EAAM8tB,EAAMltB,EAAGktB,EAAMjtB,GACtCW,KAAKslD,WAAWtC,EAAK,EAAG,EAC5B,EAEJzM,EAAW2rB,OAAQ,ECjUZ,MAAMvpB,UAAa0H,EACtB,mBAAW3N,GACP,MAAO,MACX,CACA,aAAWi1B,GACP,OAAO,CACX,CACA,eAAWC,GACP,OAAQ,CACZ,CACA,gBAAWC,GACP,OAAOzO,EAAOgG,UAClB,CACA,iBAAW0I,GACP,OAAO1O,EAAOiG,WAClB,CACA1+D,WAAAA,CAAYsS,GACR,IAAI6iC,EAAI6J,EAAIooB,EAAIC,EAAIC,EAAIC,EAAIC,EAC5B92B,QACArxC,KAAKooE,cAAgB,EACrBpoE,KAAKqoE,gBAAkB,EACvBroE,KAAKsoE,kBAAoB,EACzBtoE,KAAKuoE,oBAAsB,EAC3BvoE,KAAKwoE,OAAqF,QAA3E1yB,EAAiB,OAAZ7iC,QAAgC,IAAZA,OAAqB,EAASA,EAAQu1D,cAA2B,IAAP1yB,EAAgBA,EAAK,EACvH91C,KAAKyoE,KAAiF,QAAzE9oB,EAAiB,OAAZ1sC,QAAgC,IAAZA,OAAqB,EAASA,EAAQw1D,YAAyB,IAAP9oB,EAAgBA,EAAK,EACnH3/C,KAAK0oE,KAAiF,QAAzEX,EAAiB,OAAZ90D,QAAgC,IAAZA,OAAqB,EAASA,EAAQy1D,YAAyB,IAAPX,EAAgBA,EAAK,EACnH/nE,KAAK2oE,QAAuF,QAA5EX,EAAiB,OAAZ/0D,QAAgC,IAAZA,OAAqB,EAASA,EAAQ01D,eAA4B,IAAPX,EAAgBA,EAAK,EACzHhoE,KAAK4oE,cAAmG,QAAlFX,EAAiB,OAAZh1D,QAAgC,IAAZA,OAAqB,EAASA,EAAQ21D,qBAAkC,IAAPX,EAAgBA,EAAK,EACrIjoE,KAAK6oE,cAAmG,QAAlFX,EAAiB,OAAZj1D,QAAgC,IAAZA,OAAqB,EAASA,EAAQ41D,qBAAkC,IAAPX,EAAgBA,EAAK,EACrIloE,KAAK8oE,MAAoB,OAAZ71D,QAAgC,IAAZA,OAAqB,EAASA,EAAQ61D,QAAS,EAChF9oE,KAAK+oE,WAAyB,OAAZ91D,QAAgC,IAAZA,OAAqB,EAASA,EAAQ81D,aAAc,EAC1F/oE,KAAKgpE,cAAmG,QAAlFb,EAAiB,OAAZl1D,QAAgC,IAAZA,OAAqB,EAASA,EAAQ+1D,qBAAkC,IAAPb,EAAgBA,EAAK,EACrInoE,KAAKipE,uBAAyB,EAC9BjpE,KAAKkpE,WAAWj2D,EACpB,CACAi2D,UAAAA,CAAWj2D,GACP,IAAI6iC,EAAI6J,EAAIooB,EAAIC,EAChBhoE,KAAKooE,cAAmG,QAAlFtyB,EAAiB,OAAZ7iC,QAAgC,IAAZA,OAAqB,EAASA,EAAQm1D,qBAAkC,IAAPtyB,EAAgBA,EAAK,EACrI91C,KAAKqoE,gBAAuG,QAApF1oB,EAAiB,OAAZ1sC,QAAgC,IAAZA,OAAqB,EAASA,EAAQo1D,uBAAoC,IAAP1oB,EAAgBA,EAAK,EACzI3/C,KAAKsoE,kBAA2G,QAAtFP,EAAiB,OAAZ90D,QAAgC,IAAZA,OAAqB,EAASA,EAAQq1D,yBAAsC,IAAPP,EAAgBA,EAAK,EAC7I/nE,KAAKuoE,oBAA+G,QAAxFP,EAAiB,OAAZ/0D,QAAgC,IAAZA,OAAqB,EAASA,EAAQs1D,2BAAwC,IAAPP,EAAgBA,EAAK,CACrJ,CACAmB,kBAAAA,CAAmBX,EAAQC,GAGvB,OAFAzoE,KAAKwoE,OAASA,EACdxoE,KAAKyoE,KAAOA,EACLzoE,IACX,CACAopE,YAAAA,CAAa/a,GACTruD,KAAK6oE,cAAgBxa,CACzB,CACAgb,YAAAA,CAAaC,GACTtpE,KAAK4oE,cAAgBU,CACzB,CACAC,YAAAA,GACI,OAAOvpE,KAAK4oE,aAChB,CACAY,UAAAA,CAAWd,EAAMC,GACb3oE,KAAK0oE,KAAOA,EACZ1oE,KAAK2oE,QAAUA,CACnB,CACA9iB,SAAAA,GACI,MAAMpM,EAAUz5C,KAAK6oE,gBAAkBlwB,EAAKgvB,GAAK3nE,KAAKooE,cAAgBpoE,KAAKqoE,gBAE3E,OADuBroE,KAAK2oE,QAAU3oE,KAAK0oE,MAAQ/vB,EAAKmvB,OAASruB,EAAUz5C,KAAK4oE,gBACxD5oE,KAAK6oE,aACjC,CACA/kB,cAAAA,GACI,MAAM,IAAI1S,EAAa,iBAAkB,oCAC7C,CACAq4B,UAAAA,GACI,MAAMC,EAAW1pE,KAAK6oE,gBAAkBlwB,EAAKgvB,GACvCgC,EAAK,CAAC3pE,KAAK0oE,KAAM1oE,KAAK2oE,SACtBiB,EAAajxB,EAAKmvB,OAAS9nE,KAAK4oE,cAChCiB,GAAsBH,EAAWzhE,KAAKykB,IAAMzkB,KAAK2yC,QAAQ+uB,GACzDG,GAAsBJ,EAAWzhE,KAAK2yC,IAAM3yC,KAAKykB,QAAQi9C,GAE/D,MAAO,CAAEI,KADQF,EAAqBD,GAAc5pE,KAAK6oE,cAChCmB,MAAOF,EACpC,CACAG,aAAAA,CAAcC,GAEV,OADAlqE,KAAK8oE,MAAQoB,EACNlqE,IACX,CACAmqE,UAAAA,CAAWpB,EAAWC,GAGlB,OAFAhpE,KAAK+oE,UAAYA,EACjB/oE,KAAKgpE,cAAgBA,EACdhpE,IACX,CACAoqE,mBAAAA,GACIpqE,KAAKipE,uBAAyBn0B,EAAQxjC,IAAI,gCAAiC,EAC/E,CACA+4D,mBAAAA,GACIrqE,KAAKipE,wBAA0BtwB,EAAKkvB,MAAQ,CAChD,CACA1kB,IAAAA,GAEI,GADAnjD,KAAKyjD,cACDzjD,KAAK8oE,KACL,OACJ,MAAM9lB,EAAMhjD,KAAKijD,eACjB,IAAIqnB,EACAC,EACJ,MAAM1B,EAAgB7oE,KAAK6oE,cAC3B,IAAI2B,EAAc,EACd3B,IAAkBlwB,EAAKivB,MACvB0C,EAAQtqE,KAAKwoE,OACb+B,EAAQvqE,KAAK0oE,KAAO1oE,KAAKqoE,gBACzBmC,EAAcxqE,KAAKuoE,sBAGnB+B,EAAQtqE,KAAKyoE,KACb8B,EAAQvqE,KAAK2oE,QAAU3oE,KAAKooE,cAC5BoC,EAAcxqE,KAAKsoE,mBAEvB,MAAMsB,EAAa5pE,KAAK6lD,aAnHhC,WAAoB,QAAAhU,EAAA50C,UAAAC,OAAN40C,EAAI,IAAAhxC,MAAA+wC,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA90C,UAAA80C,GACV4G,EAAKupB,OACLtlD,EAAI,eAAgBk1B,EAC5B,CAiHQ5wC,CAAE,oBAAqB,UAAWlB,KAAK0oE,KAAM,aAAc1oE,KAAK2oE,SAChE,MAAM8B,EAAiBzqE,KAAK+oE,UAAYa,EAAa5pE,KAAKgpE,cAAgBhpE,KAAK6oE,cAAgB,EAC/F7lB,EAAI0nB,UAAU,OAAQ1qE,KAAKw/C,aAAa,OACxCwD,EAAI2nB,YACJ3nB,EAAIH,aAAalK,EAAKkvB,OACtB7kB,EAAI4nB,OAAON,EAAOC,EAAQE,EAAiBD,GAC3CxnB,EAAI6nB,OAAOP,EAAOC,EAAQX,EAAa5pE,KAAKipE,uBAAyBJ,GACrE7lB,EAAIz5C,SACJy5C,EAAI8nB,YACR,ECtHG,IAAIC,EAOAC,EDiHXryB,EAAKupB,OAAQ,ECvHb,SAAW6I,GACPA,EAA4BA,EAAkC,KAAI,GAAK,OACvEA,EAA4BA,EAAoC,OAAI,GAAK,SACzEA,EAA4BA,EAAmC,MAAI,GAAK,QACxEA,EAA4BA,EAAyC,YAAI,GAAK,aACjF,CALD,CAKGA,IAAgCA,EAA8B,CAAC,IAElE,SAAWC,GACPA,EAA0BA,EAA+B,IAAI,GAAK,MAClEA,EAA0BA,EAAkC,OAAI,GAAK,SACrEA,EAA0BA,EAAkC,OAAI,GAAK,SACrEA,EAA0BA,EAAuC,YAAI,GAAK,aAC7E,CALD,CAKGA,IAA8BA,EAA4B,CAAC,IACvD,MAAMn0B,UAAmBuP,EAC5B,mBAAW1T,GACP,MAAO,YACX,CACA,+BAAWu4B,GACP,OAAOn2B,EAAQxjC,IAAI,sBACvB,CACA,aAAO6wD,CAAO+I,EAAa3rC,GACvB,IAAK2rC,GAAsC,IAAvBA,EAAYhuE,OAC5B,OAAO,EACX,IAAIiuE,EAAY,EACZC,EAAa,EACbC,EAAoB,EACpBC,EAAqB,EACzB,IAAK,IAAI1vE,EAAI,EAAGA,EAAIsvE,EAAYhuE,SAAUtB,EAAG,CACzC,MAAM2vE,EAAaL,EAAYtvE,GAE/B,IAAI4vE,GADe,EAAI/vB,EAAKC,wBAAwB6vB,EAAWlvB,SAASrX,OAASo0B,EAAOiH,oBAExF,MAAMt2D,EAAOwhE,EAAWnkB,oBAClBqkB,EAAa1hE,EAAK2hE,gBAClBtR,EAAYmR,EAAW1mB,WACzB0mB,EAAWI,0BAA4BZ,EAA4BhkB,OACnEskB,EAAoBpjE,KAAK2yC,IAAI6wB,EAAYJ,GACzCF,EAAYljE,KAAK2yC,IAAIuwB,EAAW/Q,GAAavjB,EAAWo0B,sBAEnDM,EAAWI,0BAA4BZ,EAA4BlkB,MACxEykB,EAAqBrjE,KAAK2yC,IAAI6wB,EAAYH,GAC1CF,EAAanjE,KAAK2yC,IAAIwwB,EAAYhR,KAGlC+Q,EAAYljE,KAAK2yC,IAAIuwB,EAAW/Q,EAAY,GAAKvjB,EAAWo0B,qBAC5DG,EAAanjE,KAAK2yC,IAAIwwB,EAAYhR,EAAY,GAC9CiR,EAAoBpjE,KAAK2yC,IAAI6wB,EAAa,EAAGJ,GAC7CC,EAAqBrjE,KAAK2yC,IAAI6wB,EAAa,EAAGH,IAElD,MAAM9iB,EAAQz+C,EAAK0+C,WACbogB,EAAgB9+D,EAAK6hE,UAAY7hE,EAAK8hE,mBAAqBlzB,EAAKgvB,GACtE,IAAIiC,EAAa,EACbkC,EAAQ,EACZ,GAAI7J,EAAUl4D,GACV,GAAIA,EAAKgiE,cAAcC,SAAU,CAC7B,MAAMvM,EAAO11D,EAAKkiE,UACdxM,IACAmK,EAAa3hE,KAAKwsC,IAAIgrB,EAAK5Z,aAAeuT,EAAOiH,oBAEzD,MAEIuJ,EAAa,OAGhB,GAAI5H,EAAgBj4D,GAAO,CAC5B,MAAM01D,EAAO11D,EAAKkiE,UACdxM,GAA+B,MAAvB11D,EAAKmiE,gBACbtC,EAAa3hE,KAAKwsC,IAAIgrB,EAAK5Z,aAAeuT,EAAOiH,oBAEzD,CAIA,GAHI7X,IACAsjB,EAAQtjB,EAAM2jB,eAEdZ,EAAWa,wBAA0BpsE,KAAKqsE,gBAAgBC,IAAK,CAC/D,IAAIC,EAAWxiE,EAAKyiE,eAAc,GAC9BvK,EAAUl4D,KACVwiE,EAAWT,GAAS/hE,EAAK0iE,cAAgB,KAEzC5D,IAAkBlwB,EAAKgvB,KACvB4E,GAAY3C,GAED2C,EAAWhtC,EAAMmtC,YAAc,GACjCZ,GACTP,EAAWxjB,YAAY+jB,EAAQS,GAC/Bf,GAAuBM,EAAQS,EAC/BhtC,EAAMmtC,YAAclB,IAGpBD,EAAWxjB,YAAYxoB,EAAMmtC,aAC7BntC,EAAMmtC,aAAelB,EAE7B,MACK,GAAID,EAAWa,wBAA0BpsE,KAAKqsE,gBAAgBM,OAAQ,CACvE,IAAIJ,EAAWT,EAAQ/hE,EAAKyiE,gBACxBvK,EAAUl4D,KACVwiE,EAAWxiE,EAAK6iE,iBAAmB,GAEnC/D,IAAkBlwB,EAAKivB,OACvB2E,GAAY3C,GAEhB,MAAMiD,EAAYN,EAAWhtC,EAAMynB,SAAW,EAC1C6lB,EAAYf,GACZP,EAAWxjB,YAAY+jB,EAAQe,GAC/BrB,GAAuBM,EAAQe,EAC/BttC,EAAMynB,SAAWwkB,IAGjBD,EAAWxjB,YAAYxoB,EAAMynB,UAC7BznB,EAAMynB,UAAYwkB,EAE1B,MAEID,EAAWxjB,YAAYxoB,EAAMynB,SAErC,CACA,MAAM8lB,EAAe7kE,KAAKykB,IAAIzkB,KAAK2yC,IAAIwwB,EAAaE,EAAoB,GAAIrjE,KAAK2yC,IAAIwwB,EAAa7rC,EAAMwtC,WAAY,IAC9GC,EAAc/kE,KAAKykB,IAAIzkB,KAAK2yC,IAAIuwB,EAAYE,EAAmB,GAAIpjE,KAAK2yC,IAAIuwB,EAAY5rC,EAAM8iC,UAAW,IAG/G,OAFA9iC,EAAM8iC,WAAa2K,EACnBztC,EAAMwtC,YAAcD,GACb,CACX,CACAnsE,WAAAA,CAAY4oB,GACR8nB,QACArxC,KAAKupB,KAAOA,EACZvpB,KAAK2rE,wBAA0BZ,EAA4BvkB,OAC3DxmD,KAAKosE,sBAAwBpB,EAA0BsB,GAC3D,CACAW,wBAAAA,CAAyBC,GAErB,OADAltE,KAAKosE,sBAAwC,kBAATc,EAAoBr2B,EAAWs2B,sBAAsBD,GAAQA,EAC1FltE,IACX,CACAotE,gBAAAA,GACI,OAAOptE,KAAK2rE,uBAChB,CACA0B,gBAAAA,CAAiBH,GAEb,OADAltE,KAAK2rE,wBAA0C,kBAATuB,EAAoBr2B,EAAWy2B,wBAAwBJ,GAAQA,EAC9FltE,IACX,CACAmjD,IAAAA,GACI,MAAMH,EAAMhjD,KAAKijD,eACXl5C,EAAO/J,KAAKonD,oBACZyhB,EAAgB9+D,EAAK6hE,UAAY7hE,EAAK8hE,mBAAqBlzB,EAAKgvB,GAChEr7C,EAAQviB,EAAK29D,mBAAmBxhB,EAAiBQ,MAAO1mD,KAAKjG,OACnEiG,KAAKyjD,cACLT,EAAI0nB,UAAU,aAAc1qE,KAAKw/C,aAAa,OAC9C,MAAM4a,EAAYp6D,KAAK6kD,WACjB0oB,EAAa9xB,EAAKC,wBAAwB17C,KAAKq8C,SAASrX,MAC9D,IAAI5lC,EACAC,EAEAD,EADAY,KAAK2rE,0BAA4BZ,EAA4BlkB,KACzDv6B,EAAMltB,EAELY,KAAK2rE,0BAA4BZ,EAA4BhkB,MAC9Dz6B,EAAMltB,EAAIg7D,EAETp6D,KAAK2rE,0BAA4BZ,EAA4BvkB,OAC9Dl6B,EAAMltB,EAAIg7D,EAAY,EAGtBrwD,EAAKyjE,WAAapT,EAAY,EAEtC,IAAIqT,EAAU,CAAC,EACXz2B,EAAU,EACd,MAAM40B,EAAU7hE,EAAK6hE,UACfpjB,EAAQz+C,EAAK2jE,aAKnB,GAJI9B,IACA6B,EAAU1jE,EAAK4jE,YAAYlE,aAC3BzyB,EAAUwR,EAAMqa,0BAEhB7iE,KAAKosE,wBAA0BpB,EAA0B2B,OAAQ,CAEjEttE,EADW0K,EAAK6jE,QACTp7B,QAAO,CAACv0C,EAAGE,IAAOF,EAAIE,EAAIF,EAAIE,IACrCkB,IAAMW,KAAKgnD,SAAW,GAAKoS,EAAOiH,oBAAsBkN,EACpD3B,GAAW/C,IAAkBlwB,EAAKivB,OAClCvoE,EAAI4I,KAAK2yC,IAAIv7C,EAAGouE,EAAQ1D,KAAOwD,EAAav2B,EAAUh3C,KAAKgnD,UAEnE,MACK,GAAIhnD,KAAKosE,wBAA0BpB,EAA0BxkB,OAAQ,CACtE,MAAMqnB,EAAK9jE,EAAK+jE,eAAe9tE,KAAKgnD,UAAY,EAEhD3nD,EAAIwuE,GADOrlB,EAAMulB,kBAAkB/tE,KAAKgnD,UACzB6mB,GAAM,EAAIN,EAAa,CAC1C,MACK,GAAIvtE,KAAKosE,wBAA0BpB,EAA0BsB,IAAK,CAEnEjtE,EADa4I,KAAKykB,OAAO3iB,EAAK6jE,UAClB5tE,KAAKgnD,SAAW,GAAKoS,EAAOiH,oBACpCuL,GAAW/C,IAAkBlwB,EAAKgvB,KAClC3wB,EAAUy2B,EAAQ1D,KAAOvhB,EAAMwlB,iBAAmB5U,EAAOiH,oBAAsBrpB,EAC/E33C,EAAI4I,KAAKykB,IAAIrtB,EAAGouE,EAAQ1D,KAAO/yB,GAAWh3C,KAAKgnD,SAAW,IAElE,KACK,CACD,MAAMinB,EAAUlkE,EAAKmkE,iBACrB7uE,EAAI4uE,EAAQlE,MAAQkE,EAAQjE,MAAQiE,EAAQlE,MAAQ,EAAIwD,EAAa,CACzE,EArMR,WAAoB,QAAA17B,EAAA50C,UAAAC,OAAN40C,EAAI,IAAAhxC,MAAA+wC,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA90C,UAAA80C,GACV8E,EAAWqrB,OACXtlD,EAAI,qBAAsBk1B,EAClC,CAmMQ5wC,CAAE,yBAA0BlB,KAAKupB,KAAMnqB,EAAGC,GAC1CW,KAAKZ,EAAIA,EACTY,KAAKX,EAAIA,EACTW,KAAKslD,WAAWtC,EAAK,EAAG,GACxBA,EAAI8nB,YACR,EAEJj0B,EAAWqrB,OAAQ,EACnBrrB,EAAWs3B,kBAAoBpD,EAC/Bl0B,EAAWy2B,wBAA0B,CACjC9/C,KAAMu9C,EAA4BlkB,KAClCC,MAAOikB,EAA4BhkB,MACnCR,OAAQwkB,EAA4BvkB,OACpC4nB,WAAYrD,EAA4BsD,aAE5Cx3B,EAAWw1B,gBAAkBrB,EAC7Bn0B,EAAWs2B,sBAAwB,CAC/B1mB,MAAOukB,EAA0BsB,IACjC5+C,IAAKs9C,EAA0BsB,IAC/B3lB,MAAOqkB,EAA0B2B,OACjC2B,OAAQtD,EAA0B2B,OAClCpmB,OAAQykB,EAA0BxkB,OAClC4nB,WAAYpD,EAA0BqD,aCzN1C,MAAM,MAAE3nB,EAAK,MAAEE,GAAUR,EAASC,SAClC,SAASkoB,EAAmBC,EAAQl0E,GAChC,MAA6B,GAAtBk0E,EAAOl0E,EAAQ,GAC1B,CACA,SAASm0E,GAAcz8B,EAAM33C,GACzB,OAAOA,IAAaqsD,EAAQ1U,GAAQ,EAAIA,GAAQ,CACpD,CACA,SAAS08B,GAAoB18B,EAAM33C,GAC/B,OAAIo0E,GAAcz8B,EAAM33C,GAChBA,IAAaqsD,EACNz+C,KAAK4/B,KAGL5/B,KAAKC,MAITD,KAAK+6D,KAEpB,CAaA,MAAM2L,GAAsB5kE,GAASg4D,EAAYh4D,IAAS83D,EAAY93D,GAC/D,SAAS6kE,GAAQ7kE,EAAMi9C,GAC1B,MAAM6hB,EAAgB9+D,EAAK8hE,oBACnB9B,KAAM8E,EAAU7E,MAAO8E,GAAc/kE,EAAKmkE,iBAClD,GAAIS,GAAmB5kE,GACnB,OAAIA,EAAK6hE,UACD/C,IAAkBlwB,EAAKgvB,GAChBkH,EAGAC,EAIJ7mE,KAAKykB,OAAO3iB,EAAK6jE,SAG3B,GAAI3L,EAAUl4D,GACf,OAAIA,EAAK6hE,WACD/C,IAAkBlwB,EAAKgvB,GAChBkH,EAOJ9kE,EAAK2jE,aAAaI,eAAe9mB,GAI5C,MAAM,IAAI5V,EAAa,kBAAmB,gEAElD,CACO,SAAS29B,GAAWhlE,EAAMi9C,GAC7B,MAAM6hB,EAAgB9+D,EAAK8hE,oBACnB9B,KAAM8E,EAAU7E,MAAO8E,GAAc/kE,EAAKmkE,iBAClD,GAAIS,GAAmB5kE,GACnB,OAAIA,EAAK6hE,UACD/C,IAAkBlwB,EAAKgvB,GAChBmH,EAGAD,EAIJ5mE,KAAK2yC,OAAO7wC,EAAK6jE,SAG3B,GAAI3L,EAAUl4D,GACf,OAAIA,EAAK6hE,UACD/C,IAAkBlwB,EAAKgvB,GAChB59D,EAAK2jE,aAAaK,kBAAkB/mB,GAGpC6nB,EAIJ9kE,EAAK2jE,aAAaK,kBAAkB/mB,GAI/C,MAAM,IAAI5V,EAAa,kBAAmB,gEAElD,CACO,SAAS49B,GAAiBjlE,EAAM1P,GACnC,MAAM40E,EAAe50E,IAAaqsD,GAAS38C,EAAK8hE,qBAAuBlzB,EAAKgvB,IACvEttE,IAAausD,GAAS78C,EAAK8hE,qBAAuBlzB,EAAKivB,KAC5D,OAAI+G,GAAmB5kE,GACfA,EAAK6hE,WAAaqD,EACX,GAGA,EAIPllE,EAAK6hE,WAAaqD,EACX,EAGA,CAGnB,CACO,MAAMC,WAAqB9oB,EAC9B,mBAAW1T,GACP,MAAO,cACX,CACA,aAAOyvB,CAAO/N,EAAe70B,GACzB,IAAK60B,GAA0C,IAAzBA,EAAcl3D,OAChC,OAAO,EAEX,IAAIiyE,EAAgB,EACpB,MAAMC,EAAeA,CAACC,EAAcr9B,EAAM33C,IAAak0E,EAAmBG,GAAoB18B,EAAM33C,GAAWg1E,EAAazoD,OAAS,GAFtH,IAGfwtC,EAAcl4D,SAASmzE,IACnB,MAAMtlE,EAAOslE,EAAajoB,oBAC1B+nB,EAAgBlnE,KAAK2yC,IAAI7wC,EAAK2hE,gBAAiByD,GAC/C,IAAIrD,EAAQ,EACZ,MAAMjD,EAAgB9+D,EAAK6hE,UAAY7hE,EAAK8hE,mBAAqBlzB,EAAKgvB,GACtE,IAAIiC,EAAa,EACjB,GAAI5H,EAAgBj4D,GAAO,CACvB,MAAM01D,EAAO11D,EAAKkiE,UACdxM,IACAmK,EAAa3hE,KAAKwsC,IAAIgrB,EAAK5Z,aAAeuT,EAAOiH,oBAEzD,CACA,MAAM7X,EAAQz+C,EAAK0+C,WAInB,GAHID,IACAsjB,EAAQtjB,EAAM2jB,eAEdkD,EAAaxnB,gBAAkBnB,EAAO,CACtC,IAAI6lB,EAAWxiE,EAAKyiE,eAAc,GAC9B3D,IAAkBlwB,EAAKgvB,KACvB4E,GAAY3C,GAEhB,IAAI0F,EAAYF,EAAaC,EAAc9vC,EAAMmtC,YAAahmB,GAC9D,MAAM6oB,EAAShD,EAAWhtC,EAAMmtC,YAAc,IACzC2C,EAAaA,aAAa/a,cAAgBib,EAASzD,IACpDwD,GAAaxD,EAAQyD,GAEzBF,EAAatnB,YAAYxoB,EAAMmtC,aAC/BntC,EAAMmtC,aAAe4C,EACrBD,EAAappB,UAAU,GAAK,EAChC,MACK,GAAIopB,EAAaxnB,gBAAkBjB,EAAO,CAC3C,IAAI2lB,EAAWtkE,KAAK2yC,IAAIkxB,EAAQ/hE,EAAKyiE,gBAAiB,GAClD3D,IAAkBlwB,EAAKivB,OACvB2E,GAAY3C,GAEhB,IAAI0F,EAAYF,EAAaC,EAAc9vC,EAAMynB,SAAUJ,GAC3D,MAAMimB,EAAYN,EAAWhtC,EAAMynB,SAAW,IACzCqoB,EAAaA,aAAa/a,cAAgBuY,EAAYf,IACvDwD,GAAaxD,EAAQe,GAEzBwC,EAAatnB,YAAYxoB,EAAMynB,UAC/BznB,EAAMynB,UAAYsoB,EAClBD,EAAappB,UAAU,GAAK,EAChC,KAEJ,MAAMltD,EAAQq7D,EACTv6D,KAAKw1E,GAAiBA,EAAaxqB,aACnCrS,QAAO,CAACg9B,EAAUC,IAAexnE,KAAK2yC,IAAI60B,EAAYD,KACrDE,EAAUznE,KAAKykB,IAAIzkB,KAAK2yC,IAAI7hD,EAAQo2E,EAAe,GAAIlnE,KAAK2yC,IAAI7hD,GAASwmC,EAAM8iC,UAAY9iC,EAAMwtC,YAAa,IAGpH,OAFAxtC,EAAM8iC,WAAaqN,EAAU,EAC7BnwC,EAAMwtC,YAAc2C,EAAU,GACvB,CACX,CACA,oBAAOC,CAAaj3E,EAAoBqR,EAAM6lE,GAAS,IAAlC,cAAExb,GAAe17D,EAClC,IAAK07D,EACD,OACJ,MAAMyb,EAAkB,CACpBC,SAAU,KACVC,OAAQ,KACRC,OAAQ,MAEZ5b,EACKn4D,MAAM,KACNpC,KAAKo2E,GAAgBA,EAAY//D,OAAOjU,MAAM,OAC9CpC,KAAIq2E,IAAsB,IAApBjlE,EAAM5Q,GAAS61E,EACtB,MAAM5V,EAAQ,CAAE97D,KAAMqxE,EAAgB5kE,IAGtC,OAFI5Q,IACAigE,EAAMjgE,SAAW+rD,EAASE,eAAejsD,IACtCu1E,EAAQO,aAAajB,aAAa5U,MAExCzgE,KAAKygE,GAAUvwD,EAAKw9D,YAAYjN,EAAO,IAChD,CACA35D,WAAAA,CAAYnC,GACR,IAAIs3C,EACJzE,QACArxC,KAAKowE,YAAc,EACnBpwE,KAAKxB,KAAOA,EACZwB,KAAK3F,SAAWqsD,EACX0S,EAAOiB,kBAAkBr6D,KAAKxB,SACU,QAAnCs3C,EAAK91C,KAAKxB,KAAK6xE,YAAY,UAAuB,IAAPv6B,EAAgBA,EAAK,GAAK,IAAM,EAC7E91C,KAAK3F,SAAWqsD,EAEhB1mD,KAAK3F,SAAWusD,GAExB5mD,KAAKqvE,aAAe,CAAE/a,cAAc,GACpCt0D,KAAKknD,OACT,CACAA,KAAAA,GACIlnD,KAAKqvE,aAAejW,EAAOiB,kBAAkBr6D,KAAKxB,MAC7CwB,KAAKqvE,eACNrvE,KAAKqvE,aAAe,CAAE/oD,KAAMtmB,KAAKxB,KAAM81D,cAAc,IAEzD,MAAMhuC,GAAQtmB,KAAK3F,WAAaqsD,EAAQ1mD,KAAKqvE,aAAa7a,UAAYx0D,KAAKqvE,aAAa3a,YACpF10D,KAAKqvE,aAAa/oD,MAClB6/B,EAAO0Y,KACX7+D,KAAKupB,KAAOjD,CAChB,CACAgqD,eAAAA,GAAqC,IAArBhc,IAAYr3D,UAAAC,OAAA,QAAAL,IAAAI,UAAA,KAAAA,UAAA,GAExB,OADA+C,KAAKqvE,aAAa/a,aAAeA,EAC1Bt0D,IACX,CACAmjD,IAAAA,GACI,MAAMH,EAAMhjD,KAAKijD,eACXl5C,EAAO/J,KAAKonD,oBAClBpnD,KAAKyjD,cACL,MAAM1pD,EAAQiG,KAAKunD,cACb,SAAEltD,EAAQ,SAAE2sD,GAAahnD,KACzBuwE,EAAqBvwE,KAAKqvE,aAAa/a,aACvC9L,EAAQz+C,EAAK2jE,aACb8C,EAAahoB,EAAMqa,yBACnB4N,EAAQxO,EAAUl4D,IAClB,EAAE3K,GAAM2K,EAAK29D,mBAAmBrtE,EAAUN,GAC1C22E,GAAyBH,GAAsBE,EAC/CE,EAAgB3B,GAAiBjlE,EAAM1P,GAC7C,IAAIgF,EAAI,CACJ,CAACqnD,GAAQ,KACL,MAAMrnD,EAAIuvE,GAAQ7kE,EAAMi9C,IAAaA,EAAW2pB,GAAiBH,EACjE,OAAOE,EAAwBzoE,KAAKykB,IAAI87B,EAAMslB,eAAeoB,GAAa0B,gBAAiBvxE,GAAKA,GAEpG,CAACunD,GAAQ,KACL,MAAMvnD,EAAI0vE,GAAWhlE,EAAMi9C,IAAaA,EAAW2pB,GAAiBH,EACpE,OAAOE,EAAwBzoE,KAAK2yC,IAAI4N,EAAMulB,kBAAkBmB,GAAa0B,gBAAiBvxE,GAAKA,IAEzGhF,KACF,IAAKo2E,EAAO,CACR,MAAMI,EAAkBx2E,IAAaqsD,GAAS,EAAI,EAC5C6lB,EAAWxiE,EAAK24D,cAAc3oE,GAAOi4C,KAErC8+B,GADoB/mE,EAAK6jE,QAAQ7zE,GAASsF,GAAKmxE,EAChB59B,OAAO25B,GACtCwE,EA9OlB,SAAyBR,EAAoBv+B,EAAM33C,EAAUw2E,GACzD,MAAME,EAAcxC,EAAmBG,GAAoB18B,EAAM33C,GAAW23C,GAG5E,GAF4Bu+B,GAAsB9B,GAAcsC,EAAa12E,IACzD02E,EAAc,IAAM,EAGpC,OAAOA,EADkB,IACgBF,EAGzC,OAAOE,CAEf,CAmOgCC,CAAgBT,EAAoBO,EAAWz2E,EAAUw2E,GACzEpC,GAAcsC,EAAa12E,IAC3B2F,KAAKimD,UAAU,GAAK,IACxB5mD,GAAK4I,KAAKwsC,IAAIs8B,EAAcD,GAAaN,EAAaK,CAC1D,EA1QR,WAAoB,QAAAh/B,EAAA50C,UAAAC,OAAN40C,EAAI,IAAAhxC,MAAA+wC,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA90C,UAAA80C,GACVm9B,GAAahN,OACbtlD,EAAI,uBAAwBk1B,EACpC,CAwQQ5wC,CAAE,iCAADgI,OAAkC9J,EAAC,SAAA8J,OAAQ7J,EAAC,MAC7CW,KAAKZ,EAAIA,EACTY,KAAKX,EAAIA,EACTW,KAAKslD,WAAWtC,EAAK,EAAG,EAC5B,EAEJksB,GAAahN,OAAQ,EACrBgN,GAAa0B,gBAAkB,GCxRxB,MAAMK,GACT,mBAAWv+B,GACP,MAAO,eACX,CACA,QAAIyC,CAAK/6C,GACL4F,KAAKkkD,QAAQ9pD,EACjB,CACA,QAAI+6C,GACA,OAAOn1C,KAAKukD,SAChB,ECLG,MAAM2sB,WAAiB7wB,EAC1B,mBAAW3N,GACP,MAAO,UACX,CACA/xC,WAAAA,GACI0wC,QACArxC,KAAKmxE,eAAgB,EACrBnxE,KAAKoxE,gBAAiB,EACtBpxE,KAAKo7D,MAAQ,IAAI3oB,EAAS,EAAG,GAC7BzyC,KAAKqxE,eAAiB,EACtBrxE,KAAKsxE,eAAiB,IAAI7+B,EAAS,EAAG,GACtCzyC,KAAKuxE,UAAY,GACjBvxE,KAAKwxE,YAAc,GACnBxxE,KAAKyxE,aAAc,EACnBzxE,KAAK0xE,aAAe,EACpB1xE,KAAK2xE,aAAc,EACnB3xE,KAAK4xE,iBAAmB,CACpBC,QAAS,CAAErkD,KAAM,EAAGs5B,MAAO,GAC3B6S,SAAU,GACVmY,WAAY,EACZC,MAAO,CACHC,KAAM,EACNC,KAAM,EACNC,UAAW,GAGvB,CACAhrB,KAAAA,GACI,OAAOlnD,IACX,CACAumE,QAAAA,GACI,OAAOvmE,KAAKo7D,KAChB,CACAiL,iBAAAA,GACI,OAAOrmE,KAAK2xE,WAChB,CACAQ,cAAAA,CAAeC,GAEX,OADApyE,KAAK2xE,YAAcS,EACZpyE,IACX,CACA6kD,QAAAA,GACI,IAAK7kD,KAAKmxE,cACN,MAAM,IAAI//B,EAAa,kBAAmB,+CAE9C,OAAOpxC,KAAKjH,OAASiH,KAAK0nD,gBAAkB1nD,KAAK0nD,gBAAgB7C,WAAa,EAClF,CACA/K,IAAAA,GAEI,OADoB95C,KAAKqyE,iBAAiB,uCACvBv4B,OAAS95C,KAAK8hD,MACrC,CACAwwB,mBAAAA,GACI,OAAOtyE,KAAK4xE,gBAChB,CACAW,eAAAA,GACI,OAAIvyE,KAAKwyE,kBACExyE,KAAK0xE,aAET,CACX,CACAe,eAAAA,CAAgBf,GAEZ,OADA1xE,KAAK0xE,aAAeA,EACb1xE,IACX,CACAwyE,eAAAA,GACI,OAAOxyE,KAAKyxE,WAChB,CACAiB,kBAAAA,CAAmBjB,GAEf,OADAzxE,KAAKyxE,YAAcA,EACZzxE,IACX,CACA2yE,QAAAA,GACI,OAAOhhC,EAAQ3xC,KAAKkmE,MAAO,UAAW,yBAC1C,CACA0M,QAAAA,CAAS1M,GACLlmE,KAAKkmE,MAAQA,CACjB,CACA2M,SAAAA,GACI,OAAO7yE,KAAK8yE,MAChB,CACAC,cAAAA,GACI,OAAO/yE,KAAKwxE,WAChB,CACAwB,WAAAA,CAAYF,GACR,IAAIG,EACAC,EACJ,GAAIJ,EAAQ,CACR,MAAMl3E,EAAIoE,KAAKwxE,YAAYr3E,QAAQ24E,GAOnC,OANW,IAAPl3E,IACAoE,KAAKwxE,YAAYtkC,OAAOtxC,EAAG,GAC3Bq3E,EAAYH,EAAOK,eACnBD,EAAgBJ,EAAOM,mBACvBpzE,KAAKqzE,oBAAoBJ,EAAWC,IAEjClzE,IACX,CACA,KAAOA,KAAKwxE,YAAYt0E,QAEpB+1E,GADAH,EAAS9yE,KAAKwxE,YAAYxrE,OACPmtE,eACnBD,EAAgBJ,EAAOM,mBACvBpzE,KAAKqzE,oBAAoBJ,EAAWC,GAExC,OAAOlzE,IACX,CACAszE,SAAAA,CAAUR,GACN,GAAIA,EAAQ,CACR9yE,KAAKwxE,YAAY3vE,KAAKixE,GACtB,MAAMG,EAAYH,EAAOK,eACnBD,EAAgBJ,EAAOM,mBAC7BpzE,KAAKqzE,oBAAoBH,EAAeD,EAC5C,CAEA,OADAjzE,KAAK8yE,OAASA,EACP9yE,IACX,CACAuzE,oBAAAA,CAAqBtoC,GACjBjrC,KAAK0nD,gBAAkBzc,EACvB,IAAK,IAAIrvC,EAAI,EAAGA,EAAIoE,KAAKuxE,UAAUr0E,SAAUtB,EACzCoE,KAAK0nD,gBAAgB8rB,UAAUxzE,KAAKuxE,UAAU31E,IAIlD,OAFAoE,KAAK0nD,gBAAgB8rB,UAAUxzE,MAC/BA,KAAKmxE,eAAgB,EACdnxE,IACX,CACAunE,WAAAA,CAAYD,GAGR,OAFAtnE,KAAKuxE,UAAU1vE,KAAKylE,GACpBtnE,KAAKmxE,eAAgB,EACdnxE,IACX,CACAqnE,YAAAA,GACI,OAAOrnE,KAAKuxE,SAChB,CACAkC,cAAAA,CAAez2D,GACXhd,KAAKooD,YAAcprC,EACnBhd,KAAKmxE,eAAgB,CACzB,CACAkB,gBAAAA,GAA4D,IAA3CnyC,EAAOjjC,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,gCACvB,OAAO00C,EAAQ3xC,KAAKooD,YAAa,gBAAiBloB,EACtD,CACAwzC,SAAAA,GACQ1zE,KAAKmxE,gBAETnxE,KAAKjH,MAAQ,EACTiH,KAAK0nD,kBACL1nD,KAAK0nD,gBAAgBgsB,YACrB1zE,KAAKjH,OAASiH,KAAK0nD,gBAAgB7C,YAE3C,CACA,gBAAI8uB,CAAar5E,GACb0F,KAAKmxE,cAAgB72E,CACzB,CACA,gBAAIq5E,GACA,OAAO3zE,KAAKmxE,aAChB,CACAyC,UAAAA,GACI,OAAI5zE,KAAKoxE,iBAETpxE,KAAKoxE,gBAAiB,GADXpxE,IAGf,CACA,iBAAI6zE,CAAcv5E,GACd0F,KAAKoxE,eAAiB92E,CAC1B,CACA,iBAAIu5E,GACA,OAAO7zE,KAAKoxE,cAChB,CACA0C,iBAAAA,GACI,OAAO9zE,KAAKqxE,cAChB,CACA0C,iBAAAA,CAAkB1C,GACdrxE,KAAKqxE,eAAiBA,EACtBrxE,KAAKo7D,MAAQp7D,KAAKsxE,eAAel9B,QAAQV,SAAS1zC,KAAKqxE,eAC3D,CACA2C,iBAAAA,GACI,OAAOh0E,KAAKsxE,cAChB,CACA+B,mBAAAA,CAAoBtgC,EAAWC,GAC3BhzC,KAAKsxE,eAAe59B,SAASX,EAAWC,GACxChzC,KAAKo7D,MAAQp7D,KAAKsxE,eAAel9B,QAAQV,SAAS1zC,KAAKqxE,eAC3D,CACA4C,WAAAA,CAAYta,GACR,MAAMyB,EAAQzB,EAAS5mB,WAAaqmB,EAAOtJ,WAAa6J,EAAS3mB,aACjEhzC,KAAKo7D,MAAQp7D,KAAKsxE,eAAel9B,QAAQV,SAAS0nB,GAClDp7D,KAAKqxE,eAAiBrxE,KAAKo7D,MAAM9gE,OACrC,CACA45E,YAAAA,GAEI,OADoBl0E,KAAKqyE,iBAAiB,+CACvBv4B,MACvB,CACA8N,kBAAAA,CAAmB3c,GAEf,OADAjrC,KAAK0nD,gBAAkBzc,EAChBjrC,IACX,CACAynD,kBAAAA,GACI,OAAOznD,KAAK0nD,eAChB,CACAC,oBAAAA,GACI,OAAOhW,EAAQ3xC,KAAK0nD,gBAAiB,oBAAqB,iDAC9D,EClMG,MAAMysB,WAAajD,GACtB,mBAAWx+B,GACP,MAAO,MACX,CACA,oBAAO0hC,CAAcza,GAAsB,IAAZn7D,EAAIvB,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,IAClC08D,EAAWP,EAAOQ,iBAAiBD,GACnC,IAAIrzC,EAAO8yC,EAAOoG,cAAc7F,QACnB98D,IAATypB,IACAA,EAAO8yC,EAAOoG,cAAc,IAEhC,MAAMxF,EAAeZ,EAAOY,aAAax7D,EAAK4P,cAAeurD,GAI7D,OAHIK,IAAiB7T,EAAO0Y,OACxBv4C,EAAOprB,OAAOK,OAAOL,OAAOK,OAAO,CAAC,EAAG+qB,GAAO,CAAE+tD,SAAUra,KAEvD1zC,CACX,CACA,kBAAOguD,CAAYtxB,EAAKj5C,EAAMy7C,GAC1B,IAAI1P,EACJ,MAAMwS,EAAUv+C,EAAKw+C,aACfgsB,EAASxqE,EAAKmqE,eAAiB5rB,EAAQK,UAAYL,EAAQksB,oBAC3DC,EAAQ1qE,EAAKmqE,eAAiB5rB,EAAQksB,oBACtCE,EAAO3qE,EAAKmqE,eACZS,EAAS5qE,EAAKmqE,eAAiB5rB,EAAQssB,OACvCC,EAAS9qE,EAAKmqE,eAAiB5rB,EAAQssB,OAAStsB,EAAQwsB,qBACxDrM,EAAO1+D,EAAKmqE,eAAiB5rB,EAAQssB,OAAStsB,EAAQwsB,qBAAuBxsB,EAAQM,WACrFmsB,EAAgBtM,GAA4D,QAAnD3yB,EAAK/rC,EAAKuoE,sBAAsBT,QAAQ/qB,aAA0B,IAAPhR,EAAgBA,EAAK,GACzGk/B,EAASvM,EAAO8L,EACtBvxB,EAAIE,OACJF,EAAIkB,QAAQpP,EAAQxjC,IAAI,cAAe,GACvC0xC,EAAIyC,SAASx9C,KAAK+6D,MAAMgS,GAAU,KAAMT,EAASxqE,EAAKo7C,YAAaK,GACnE,MAAMnmD,EAAImmD,EAAO,EACjB,SAASj8C,EAAO0rE,EAAIC,EAAIpsD,GAAe,IAARqsD,EAAEl4E,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAGoC,EAChC2jD,EAAI2nB,YACJ3nB,EAAIJ,eAAe95B,GACnBk6B,EAAIL,aAAa75B,GACjBk6B,EAAIH,aAAa,GACjBG,EAAI4nB,OAAOqK,EAAKlrE,EAAKo7C,YAAagwB,GAClCnyB,EAAI6nB,OAAOqK,EAAKnrE,EAAKo7C,YAAagwB,GAClCnyB,EAAIz5C,QACR,CACAA,EAAOgrE,EAAQE,EAAO,OACtBlrE,EAAOkrE,EAAOC,EAAM,QACpBnrE,EAAOmrE,EAAMC,EAAQ,SACrBprE,EAAOorE,EAAQE,EAAQ,QACvBtrE,EAAOsrE,EAAQpM,EAAM,OACrBl/D,EAAOk/D,EAAMsM,EAAe,QAC5BxrE,EAAOgrE,EAASxqE,EAAKo7C,YAAaovB,EAAQ,QFzC3C,SAAiBvxB,EAAK5jD,EAAGC,GAAmB,IAAhBypB,EAAK7rB,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,OACvC+lD,EAAIE,OACJF,EAAIL,aAAa75B,GACjBk6B,EAAI2nB,YACJ3nB,EAAIoyB,IAAIh2E,EAAGC,EAAG,EAAG,EAAa,EAAV4I,KAAKoqC,IAAQ,GACjC2Q,EAAIqyB,YACJryB,EAAIp5C,OACJo5C,EAAII,SACR,CEkCQkyB,CAAQtyB,EAAK0xB,EAAO3qE,EAAKo7C,YAAa9lD,EAAG,QACzC,MAAMuyE,EAAmB7nE,EAAKuoE,sBAC9B,GAAIV,EAAiBE,WAAa,EAAG,CACjC,MAAMyD,EAAiB3D,EAAiBG,MAAMG,UACxC//B,EAASojC,GAAkB,EAAI,IAAM,GAC3CvyB,EAAIL,aAAa,OACjBK,EAAIyC,SAAStT,EAASlqC,KAAK+6D,MAAMuS,GAAiBb,EAAO3qE,EAAKo7C,YAAaK,EAAO,GACtF,CACAxC,EAAII,SACR,CACA,oBAAOoyB,CAAcC,GACjB,IAAKA,EACD,OAEJ,MACMvlC,EADS,mCACOud,KAAKgoB,GAC3B,IAAKvlC,EACD,OAKJ,MAAO,CAAEypB,SAHQzpB,EAAO,GAGLwlC,KAFNxlC,EAAO,GAAGhzC,OAEEsB,KADZ0xC,EAAO,IAAM,IAE9B,CACA,sBAAOylC,CAAgBC,GACnB,MAAMC,EAAgB1B,GAAKqB,cAAcI,EAAWjc,UACpD,IAAKkc,EACD,OAEJ,IAAIr3E,EAAOo3E,EAAWp3E,KACtB,GAAIA,IAAS46D,EAAOiI,WAAW7iE,GAC3B,OAEJ,MAAMs3E,EAAc,GACft3E,IACDA,EAAOq3E,EAAcr3E,MAAQ,SACL3B,IAApB+4E,EAAWx5E,MACXw5E,EAAWx5E,KAAKF,SAAQ,CAACkB,EAAGxB,KACxB,MAAMs0C,EAAS9yC,EAAEnB,MAAM,KACvB65E,EAAYl6E,GAAMs0C,GAA4B,IAAlBA,EAAOhzC,OAAegzC,EAAO,GAAK1xC,MAI1E,IAAI48D,EAAQhC,EAAO+B,gBAAgB0a,EAAclc,UACjD,IAAKyB,EACD,OAEJ,MAAMsa,EAAOE,EAAWF,KAAOE,EAAWF,KAAOG,EAAcH,KAC/D,GAAoB,kBAATA,EACP,OAEJ,IAAIK,EAAe3a,EACnB,IAAK,IAAIx/D,EAAI,EAAGA,EAAI85E,EAAM95E,IAAK,CAC3B,GAAIm6E,GAAgB,EAChB,OACJA,GAA8B,EAC9B3a,GAAS2a,CACb,CACA,MAAO,CACHpc,SAAUkc,EAAclc,SACxBn7D,OACAs3E,cACAJ,OACAta,QAER,CACAz6D,WAAAA,CAAYi1E,GAER,GADAvkC,SACKukC,EACD,MAAM,IAAIxkC,EAAa,eAAgB,2EAE3C,MAAM4kC,EAAmB7B,GAAKwB,gBAAgBC,GAC9C,IAAKI,EACD,MAAM,IAAI5kC,EAAa,eAAgB,uCAAFloC,OAAyCkkC,KAAKC,UAAUuoC,KAEjG51E,KAAK5D,KAAOw5E,EAAWx5E,MAAQ,GAC/B4D,KAAKi2E,SAAW,GAChBj2E,KAAK25D,SAAWqc,EAAiBrc,SACjC35D,KAAKk2E,SAAWF,EAAiBx3E,KACjCwB,KAAK81E,YAAcE,EAAiBF,YAChCF,EAAWO,iBACXn2E,KAAKi0E,YAAY2B,EAAWO,kBAG5Bn2E,KAAK+zE,kBAAkBiC,EAAiB5a,OAE5Cp7D,KAAKuxE,UAAY,GACjBvxE,KAAKo2E,WAAajC,GAAKC,cAAcp0E,KAAK25D,SAAU35D,KAAKk2E,UACzDl2E,KAAKq2E,aAAer2E,KAAK81E,YAAYj8E,KAAKmF,GAAMm1E,GAAKC,cAAcp0E,KAAK25D,SAAU36D,KAClFgB,KAAKs2E,cAAWz5E,EAChBmD,KAAK2xE,aAAc,EACnB3xE,KAAKjH,MAAQ,EACbiH,KAAKw0E,oBAAsB,EAC3Bx0E,KAAK80E,qBAAuB,EAC5B90E,KAAK8hD,OAAS,EACd9hD,KAAK2pE,GAAK,GACNiM,EAAWnE,aACXzxE,KAAK0yE,mBAAmBkD,EAAWnE,aAEvCzxE,KAAK+rE,cAAgB,CACjBwK,kBAAmB,EACnBC,SAAU,EACVz0B,OAAQ,EAEhB,CACA00B,WAAAA,GACI,OAAOz2E,KAAKs2E,QAChB,CACAI,WAAAA,CAAY3sE,GAER,OADA/J,KAAKs2E,SAAWvsE,EACT/J,IACX,CACA8mE,MAAAA,GACI,OAAO,CACX,CACA6P,SAAAA,CAAU58E,EAAOwP,GAKb,OAJAA,EAAO89C,QAAQrnD,MACfuJ,EAAOi+C,SAASztD,GAChBiG,KAAKuxE,UAAU1vE,KAAK0H,GACpBvJ,KAAK2zE,cAAe,EACb3zE,IACX,CACAyoD,QAAAA,GACI,OAAOzoD,KAAKwoD,KAChB,CACAklB,UAAAA,GACI,OAAO/7B,EAAQ3xC,KAAKwoD,MAAO,UAAW,iCAC1C,CACAO,QAAAA,CAASP,GAIL,OAHAxoD,KAAKwoD,MAAQA,EACbxoD,KAAK42E,MAAM,CAACpuB,EAAMsa,YAAY,KAC9B9iE,KAAKikD,WAAWjkD,KAAKwoD,MAAMxE,cACpBhkD,IACX,CACA2iE,sBAAAA,GACI,OAAO3iE,KAAKw0E,mBAChB,CACAqC,uBAAAA,GACI,OAAO72E,KAAK80E,oBAChB,CACAgC,sBAAAA,CAAuB13E,GAEnB,OADAY,KAAKw0E,oBAAsBp1E,EACpBY,IACX,CACA+2E,uBAAAA,CAAwB33E,GAEpB,OADAY,KAAK80E,qBAAuB11E,EACrBY,IACX,CACAqmE,iBAAAA,GACI,OAAOrmE,KAAK2xE,WAChB,CACAnF,aAAAA,CAAcwK,GACV,OAAO,CACX,CACAC,cAAAA,GACI,OAAO,CACX,CACA7C,aAAAA,GACI,OAAOp0E,KAAKo2E,UAChB,CACA1K,aAAAA,GACI,OAAO,CACX,CACAkL,KAAAA,CAAMjN,GAEF,OADA3pE,KAAK2pE,GAAKA,EACH3pE,IACX,CACA4tE,KAAAA,GACI,GAAuB,IAAnB5tE,KAAK2pE,GAAGzsE,OACR,MAAM,IAAIk0C,EAAa,YAAa,yCAExC,OAAOpxC,KAAK2pE,EAChB,CACAmE,cAAAA,CAAe9mB,GACX,OAAOhnD,KAAK0tE,aAAaI,eAAe9mB,EAC5C,CACA2rB,QAAAA,GACI,IAAK3yE,KAAKkmE,MACN,MAAM,IAAI90B,EAAa,UAAW,sBACtC,OAAOpxC,KAAKkmE,KAChB,CACA0M,QAAAA,CAAS1M,GAGL,OAFAlmE,KAAKkmE,MAAQA,EACblmE,KAAK2zE,cAAe,EACb3zE,IACX,CACAqoD,cAAAA,GACI,OAAOroD,KAAKqyE,kBAChB,CACAoB,cAAAA,CAAez2D,GAGX,OAFAhd,KAAKooD,YAAcprC,EACnBhd,KAAK2zE,cAAe,EACb3zE,IACX,CACAk3E,WAAAA,GACI,OAAOl3E,KAAK25D,QAChB,CACAwd,QAAAA,GACI,OAAOn3E,KAAKo3E,mBAAmB,OAAOl6E,OAAS,CACnD,CACA0uE,OAAAA,GACI,OAAO,CACX,CACAM,WAAAA,GACI,OAAOlsE,KAAKk2E,QAChB,CACAmB,OAAAA,GACI,OAAOr3E,KAAKs3E,IAChB,CACAC,SAAAA,GACI,OAAO5lC,EAAQ3xC,KAAKs3E,KAAM,SAAU,+BACxC,CACAE,OAAAA,GACI,YAAqB36E,IAAdmD,KAAKs3E,IAChB,CACAG,OAAAA,CAAQH,GAEJ,OADAt3E,KAAKs3E,KAAOA,EACLt3E,IACX,CACAunE,WAAAA,CAAYD,GAAqB,IAAXvtE,EAAKkD,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,EAC1B,MAAMy6E,EAAY,wDAKlB,GAJqB,kBAAV39E,IACPA,EAAQm4C,SAASn4C,GACjBgO,QAAQ29C,KAAKgyB,EAAY,2DAEL,kBAAbpQ,GAA0C,kBAAVvtE,EACvC,MAAM,IAAIq3C,EAAa,cAAe,iCAAmCsmC,EAAY,aAKzF,OAHApQ,EAASjgB,QAAQrnD,MACjBsnE,EAAS9f,SAASztD,GAClBs3C,MAAMk2B,YAAYD,GACXtnE,IACX,CACAo3E,kBAAAA,CAAmB54E,GACf,OAAOwB,KAAKuxE,UAAUh3E,QAAQ+sE,GAAaA,EAASjlB,gBAAkB7jD,GAC1E,CACAkpE,kBAAAA,CAAmBrtE,EAAUN,EAAOkZ,GAChC,IAAKjT,KAAK2zE,aACN,MAAM,IAAIviC,EAAa,kBAAmB,wDAE9C,MAAO,CACHhyC,EAAGY,KAAKk0E,eACR70E,EAAGW,KAAK2pE,GAAG,GAEnB,CACAgO,qBAAAA,CAAsB59E,GAElB,OADciG,KAAK0iE,cAAc3oE,GACpBkgE,UAAYj6D,KAAK62E,0BAA4B,CAC9D,CACAe,oBAAAA,CAAqB79E,GAEjB,OADciG,KAAK0iE,cAAc3oE,GACpBkgE,UAAYj6D,KAAK2iE,yBAA2B3iE,KAAK8hD,QAAU9hD,KAAK8hD,MACjF,CACA+1B,aAAAA,GACI,IAAIl6B,EAAK39C,KAAK62E,0BACd,MAAMiB,EAAc93E,KAAK2nD,uBAAuBowB,WAAW,eAI3D,OAH2B,IAAvBD,EAAY56E,SACZygD,GAAMm6B,EAAY,GAAGjzB,WAAa,GAE/BlH,CACX,CACA4K,UAAAA,GACI,IAAKvoD,KAAK2zE,aACN,MAAM,IAAIviC,EAAa,kBAAmB,iDAE9C,MAAMuX,EAAY3oD,KAAK0nD,gBAAkB1nD,KAAK0nD,gBAAgBswB,WAAW3V,UAAY,EAC/EzZ,EAAa5oD,KAAK0nD,gBAAkB1nD,KAAK0nD,gBAAgBswB,WAAWjL,WAAa,EACjFh0E,EAAQiH,KAAK6kD,WAOnB,MAAO,CACH9rD,QACA0yE,WARezrE,KAAK0rE,gBASpBkJ,OARW77E,EACX4vD,EACAC,EACA5oD,KAAKw0E,oBACLx0E,KAAK80E,qBAKLnsB,YACAC,aACA4rB,oBAAqBx0E,KAAKw0E,oBAC1BM,qBAAsB90E,KAAK80E,qBAC3BmD,QAAS,EAEjB,CACA/D,YAAAA,GAEI,IAAI90E,EADgBY,KAAKqyE,iBAAiB,+CACtBv4B,OAOpB,OANI95C,KAAKwoD,QACLppD,GAAKY,KAAKwoD,MAAM0vB,gBAAkBpjC,EAAQxjC,IAAI,gBAAiB,IAE/DtR,KAAKwyE,oBACLpzE,GAAKY,KAAKuyE,mBAEPnzE,CACX,CACAysE,gBAAAA,GACI,MAAM,IAAIz6B,EAAa,SAAU,iCACrC,CACA88B,cAAAA,GACI,MAAM,IAAI98B,EAAa,SAAU,iCACrC,CACA+mC,YAAAA,GACI,IAAIC,EAAYp4E,KAAKk0E,eAIrB,OAFAkE,GADuBp4E,KAAK0rE,gBACE,EAC9B0M,IAAcp4E,KAAKjH,MAAQ,EAAIiH,KAAKjH,MAAQ,EACrCq/E,CACX,CACAC,WAAAA,GACI,IAAIC,EAAUt4E,KAAKk0E,eAInB,OAFAoE,GADuBt4E,KAAK0rE,gBACA,EAC5B4M,GAAWt4E,KAAKjH,MAAQ,EAAI,EACrBu/E,CACX,CACAC,OAAAA,GACI,OAAOv4E,KAAK5D,IAChB,CACAsmE,WAAAA,GACI,OAAO1iE,KAAKi2E,QAChB,CACAnyB,cAAAA,GACI,MAAMtJ,EAAcnJ,MAAMyS,iBAC1B,IAAK,IAAIloD,EAAI,EAAGA,EAAIoE,KAAKuxE,UAAUr0E,OAAQtB,IACvC4+C,EAAYD,UAAUv6C,KAAKuxE,UAAU31E,GAAGkoD,kBAE5C,OAAOtJ,CACX,EC3XG,IAAIg+B,GCAAC,IDCX,SAAWD,GACPA,EAAsBA,EAA8B,OAAI,GAAK,SAC7DA,EAAsBA,EAA4B,KAAI,GAAK,OAC3DA,EAAsBA,EAA6B,MAAI,GAAK,QAC5DA,EAAsBA,EAA6B,MAAI,GAAK,QAC5DA,EAAsBA,EAA6B,MAAI,GAAK,QAC5DA,EAAsBA,EAA6B,MAAI,GAAK,QAC5DA,EAAsBA,EAA2B,IAAI,GAAK,KAC7D,CARD,CAQGA,KAA0BA,GAAwB,CAAC,IAC/C,MAAME,WAAsBr4B,EAC/B,mBAAW3N,GACP,MAAO,eACX,CACA,mBAAW2T,GACP,OAAOmyB,EACX,CACA73E,WAAAA,GACI0wC,QACArxC,KAAKg4C,QAAU,GACfh4C,KAAK3F,SAAWm+E,GAAsB9xB,KAC1C,CACAmB,WAAAA,GACI,OAAO7nD,KAAK3F,QAChB,CACAytD,WAAAA,CAAYztD,GAER,OADA2F,KAAK3F,SAAWA,EACT2F,IACX,CACAyoD,QAAAA,GACI,OAAOzoD,KAAKwoD,KAChB,CACAklB,UAAAA,GACI,OAAO/7B,EAAQ3xC,KAAKwoD,MAAO,UAAW,iCAC1C,CACAO,QAAAA,CAASP,GAEL,OADAxoD,KAAKwoD,MAAQA,EACNxoD,IACX,CACA24E,UAAAA,CAAW5+E,GACP,YAAiB8C,IAAV9C,GAAuBA,EAAQ,EAAI,EAAIiG,KAAKg4C,OACvD,CACA4gC,UAAAA,CAAW5gC,GAEP,OADAh4C,KAAKg4C,QAAUA,EACRh4C,IACX,CACA64E,gBAAAA,CAAiBC,GAEb,OADA94E,KAAK84E,cAAgBA,EACd94E,IACX,CACA+4E,gBAAAA,GACI,OAAO/4E,KAAK84E,aAChB,GCnDJ,SAAWL,GACPA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAiB,IAAI,GAAK,MACtCA,EAAYA,EAA0B,aAAI,GAAK,eAC/CA,EAAYA,EAAwB,WAAI,GAAK,aAC7CA,EAAYA,EAAyB,YAAI,GAAK,cAC9CA,EAAYA,EAAkB,KAAI,GAAK,MAC1C,CARD,CAQGA,KAAgBA,GAAc,CAAC,IAC3B,MAAMO,WAAgBN,GACzB,mBAAWhmC,GACP,MAAO,SACX,CACA,eAAWl0C,GACP,OAAOi6E,EACX,CACA,qBAAWQ,GACP,MAAO,CACHC,OAAQT,GAAYU,OACpBC,OAAQX,GAAYY,OACpB9sD,IAAKksD,GAAYa,IACjBC,YAAad,GAAYe,aACzBC,UAAWhB,GAAYiB,WACvBC,WAAYlB,GAAYmB,YACxBC,KAAMpB,GAAYqB,KAE1B,CACAn5E,WAAAA,CAAYnC,GACR6yC,QACArxC,KAAK+5E,UAAY3gB,EAAOkG,qBACxB,MAAM0a,EAAOvB,GACbz4E,KAAKi6E,OAAS,CAAC,EACfj6E,KAAKi6E,OAAOD,EAAKb,QAAU,EAC3Bn5E,KAAKi6E,OAAOD,EAAKX,QAAU,EAC3Br5E,KAAKi6E,OAAOD,EAAKV,KAAO,EACxBt5E,KAAKi6E,OAAOD,EAAKR,cAAgB,EACjCx5E,KAAKi6E,OAAOD,EAAKN,YAAc,EAC/B15E,KAAKi6E,OAAOD,EAAKJ,aAAe,EAChC55E,KAAKi6E,OAAOD,EAAKF,MAAQ,EACzB95E,KAAKk6E,SAAW,CAAC,EACjBl6E,KAAKk6E,SAASF,EAAKb,QAAU,EAC7Bn5E,KAAKk6E,SAASF,EAAKX,QAAU,EAC7Br5E,KAAKk6E,SAASF,EAAKV,KAAO,EAC1Bt5E,KAAKk6E,SAASF,EAAKR,cAAgB,GACnCx5E,KAAKk6E,SAASF,EAAKN,YAAc,GACjC15E,KAAKk6E,SAASF,EAAKJ,aAAe,GAClC55E,KAAKk6E,SAASF,EAAKF,MAAQ,EAC3B95E,KAAKm6E,iBAAmB,CAAC,EACzBn6E,KAAKm6E,iBAAiBH,EAAKb,QAAU,CACjCiB,KAAM,EACNC,KAAM,EACNC,YAAa,EACbC,aAAc,GAElBv6E,KAAKm6E,iBAAiBH,EAAKX,QAAU,CACjCe,MAAO,EACPC,KAAM,EACNC,YAAa,EACbC,aAAc,GAElBv6E,KAAKm6E,iBAAiBH,EAAKV,KAAO,CAC9Bc,MAAO,EACPC,KAAM,EACNC,YAAa,EACbC,aAAc,GAElBv6E,KAAKm6E,iBAAiBH,EAAKN,YAAc,CACrCU,MAAO,GACPC,KAAM,EACNC,YAAa,EACbC,aAAc,GAElBv6E,KAAKm6E,iBAAiBH,EAAKR,cAAgB,CACvCY,MAAO,EACPC,KAAM,GACNC,YAAa,EACbC,aAAc,GAElBv6E,KAAKm6E,iBAAiBH,EAAKJ,aAAe,CACtCQ,MAAO,GACPC,KAAM,GACNC,YAAa,EACbC,aAAc,GAElBv6E,KAAKm6E,iBAAiBH,EAAKF,MAAQ,CAC/BM,KAAM,EACNC,KAAM,EACNC,YAAa,EACbC,aAAc,GAElBv6E,KAAK8nD,YAAY0wB,GAAsBgC,OACvCx6E,KAAKy6E,QAAQj8E,EACjB,CACAk8E,OAAAA,GACI,OAAO16E,KAAKxB,IAChB,CACAi8E,OAAAA,CAAQj8E,GAKJ,OAJAwB,KAAKxB,KAAuB,kBAATA,EAAoBw6E,GAAQC,WAAWz6E,GAAQA,EAClEwB,KAAK+kD,SAAS/kD,KAAKi6E,OAAOj6E,KAAKxB,OAC/BwB,KAAK44E,WAAW54E,KAAKk6E,SAASl6E,KAAKxB,OACnCwB,KAAK64E,iBAAiB74E,KAAKm6E,iBAAiBn6E,KAAKxB,OAC1CwB,IACX,CACAmjD,IAAAA,GACI,MAAMqF,EAAQxoD,KAAK0tE,aACb1qB,EAAMwF,EAAMvF,eAGlB,OAFAjjD,KAAKyjD,cACLT,EAAI0nB,UAAU,eAAgB1qE,KAAKw/C,aAAa,OACxCx/C,KAAKxB,MACT,KAAKi6E,GAAYU,OACbn5E,KAAK26E,gBAAgBnyB,EAAOxoD,KAAKZ,GAAG,GACpC,MACJ,KAAKq5E,GAAYY,OACbr5E,KAAK26E,gBAAgBnyB,EAAOxoD,KAAKZ,GAAG,GACpC,MACJ,KAAKq5E,GAAYa,IACbt5E,KAAK46E,mBAAmBpyB,EAAOxoD,KAAKZ,GACpC,MACJ,KAAKq5E,GAAYe,aACbx5E,KAAK66E,cAAcryB,EAAOxoD,KAAKZ,GAAG,GAC9BopD,EAAM1O,SAAW95C,KAAKZ,GACtBY,KAAK26E,gBAAgBnyB,EAAOA,EAAM1O,QAEtC,MACJ,KAAK2+B,GAAYiB,WACb15E,KAAK66E,cAAcryB,EAAOxoD,KAAKZ,GAAG,GAClC,MACJ,KAAKq5E,GAAYmB,YACb55E,KAAK66E,cAAcryB,EAAOxoD,KAAKZ,GAAG,GAClCY,KAAK66E,cAAcryB,EAAOxoD,KAAKZ,GAAG,GAK1C4jD,EAAI8nB,YACR,CACA6P,eAAAA,CAAgBnyB,EAAOppD,EAAG07E,GACtB,MAAMC,EAAWvyB,EAAMvF,eACjB8mB,EAAOvhB,EAAMwlB,iBACbgN,EAAOxyB,EAAMyyB,uBACfH,GACAC,EAASG,SAAS97E,EAAI,EAAG2qE,EAAM,EAAGiR,EAAOjR,GAE7CgR,EAASG,SAAS97E,EAAG2qE,EAAM,EAAGiR,EAAOjR,EACzC,CACA6Q,kBAAAA,CAAmBpyB,EAAOppD,GACtB,MAAM27E,EAAWvyB,EAAMvF,eACjB8mB,EAAOvhB,EAAMwlB,iBACbgN,EAAOxyB,EAAMyyB,uBACnBF,EAASG,SAAS97E,EAAI,EAAG2qE,EAAM,EAAGiR,EAAOjR,GACzCgR,EAASG,SAAS97E,EAAI,EAAG2qE,EAAM,EAAGiR,EAAOjR,EAC7C,CACA8Q,aAAAA,CAAcryB,EAAOppD,EAAG+7E,GACpB,MAAMJ,EAAWvyB,EAAMvF,eACjB8mB,EAAOvhB,EAAMwlB,iBACbgN,EAAOxyB,EAAMyyB,uBACnB,IAAIn5B,EAAS,EACRq5B,IACDr5B,GAAU,GAEdi5B,EAASG,SAAS97E,EAAI0iD,EAAQioB,EAAM,EAAGiR,EAAOjR,GAC9CgR,EAASG,SAAS97E,EAAI,EAAG2qE,EAAM,EAAGiR,EAAOjR,GAErCoR,EACAr5B,GAAU,EAGVA,GAAU,EAEd,MAAMs5B,EAAOh8E,EAAI0iD,EAASu5B,EAC1B,IAAI5hC,GAAW+O,EAAM2jB,cAAgB,GAAK3jB,EAAMqa,yBAChDppB,EAAUA,EAAU,EAAI+O,EAAMqa,yBAA2B,EACzD,IAAIyY,EAAOvR,EAAOtwB,EAAU4hC,EAC5BN,EAASpQ,YACToQ,EAAS3F,IAAIgG,EAAME,EAZD,EAYkB,EAAa,EAAVrzE,KAAKoqC,IAAQ,GACpD0oC,EAASnxE,OACT0xE,GAAQ9yB,EAAMqa,yBACdkY,EAASpQ,YACToQ,EAAS3F,IAAIgG,EAAME,EAhBD,EAgBkB,EAAa,EAAVrzE,KAAKoqC,IAAQ,GACpD0oC,EAASnxE,MACb,EChLG,MAAM2xE,WAAgBpH,GACzB,mBAAWzhC,GACP,MAAO,SACX,CACA/xC,WAAAA,GAAuC,IAA3BnC,EAAIvB,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAGw7E,GAAYU,OAC3B9nC,MAAM,CAAEsoB,SAAU,MAClB35D,KAAKsoD,QAAU,CACX2xB,OAAQ,CAAC,GAEb,MAAMD,EAAOvB,GACbz4E,KAAKsoD,QAAQ2xB,OAAS,CAClB,CAACD,EAAKb,QAAS,EACf,CAACa,EAAKX,QAAS,GACf,CAACW,EAAKV,KAAM,GACZ,CAACU,EAAKR,cAAe,GACrB,CAACQ,EAAKN,YAAa,GACnB,CAACM,EAAKJ,aAAc,GACpB,CAACI,EAAKF,MAAO,GAEjB95E,KAAK2xE,aAAc,EACnB3xE,KAAKy6E,QAAQj8E,EACjB,CACAk8E,OAAAA,GACI,OAAO16E,KAAKxB,IAChB,CACAi8E,OAAAA,CAAQj8E,GAGJ,OAFAwB,KAAKxB,KAAuB,kBAATA,EAAoBw6E,GAAQC,WAAWz6E,GAAQA,EAClEwB,KAAK+kD,SAAS/kD,KAAKsoD,QAAQ2xB,OAAOj6E,KAAKxB,OAChCwB,IACX,CACAuzE,oBAAAA,CAAqBtoC,GACjB,OAAOjrC,IACX,CACA0zE,SAAAA,GAEI,OADA1zE,KAAK2zE,cAAe,EACb3zE,IACX,CACAmjD,IAAAA,GACI,MAAMH,EAAMhjD,KAAKijD,gBA1CzB,WAAoB,QAAApR,EAAA50C,UAAAC,OAAN40C,EAAI,IAAAhxC,MAAA+wC,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA90C,UAAA80C,GACVwpC,GAAQrZ,OACRtlD,EAAI,kBAAmBk1B,EAC/B,CAwCQ5wC,CAAE,0BAA2BlB,KAAKk0E,gBAClC,MAAMsH,EAAU,IAAIxC,GAAQh5E,KAAKxB,MACjCg9E,EAAQthC,KAAKl6C,KAAKk0E,gBAClBsH,EAAQzyB,SAAS/oD,KAAK0tE,cACtB8N,EAAQv3B,WAAWjB,GACnBw4B,EAAQz4B,gBACR/iD,KAAKyjD,aACT,EC/CJ,SAASg4B,GAAuB7gB,GAC5B,IAAI8gB,EAAU,EAQd,OAPA9gB,EAAM1+D,SAAS6N,IACPA,EAAKksE,UACLlsE,EAAKksE,SAAS/5E,SAASy/E,IACnBD,GAAWC,EAAQ3pC,KAAO,QAIlC0pC,GAAW,EACJ/iC,EAAKivB,KAETjvB,EAAKgvB,EAChB,CDoCA4T,GAAQrZ,OAAQ,EC5BT,MAAM0Z,GAAY,IAEZC,GAAY,IAClB,MAAMC,WAAaz7B,EACtB,mBAAW3N,GACP,MAAO,MACX,CACAm5B,gBAAAA,GACI,OAAO7rE,KAAK+7E,cAChB,CACA,2BAAOC,CAAqBC,GACnBA,GAAuB,MAAZA,IACZA,EAAU,OAEd,MAkBMC,EAlBW,CACb,MAAO,CAAC,OACR,MAAO,CAAC,OACR,MAAO,CAAC,OACR,MAAO,CAAC,OACR,MAAO,CAAC,OACR,MAAO,CAAC,OACR,MAAO,CAAC,OACR,MAAO,CAAC,OACR,MAAO,CAAC,OACR,MAAO,CAAC,OACR,MAAO,CAAC,OACR,MAAO,CAAC,OACR,OAAQ,CAAC,QACT,OAAQ,CAAC,QACT,OAAQ,CAAC,QACT,OAAQ,CAAC,SAEWD,GACxB,QAAep/E,IAAXq/E,EAeA,OAAOA,EAAOriF,KAAKsiF,IAAU,IAAI1pC,GAAWmC,MAAMunC,KAf5B,CACtB,MAAMC,EAAYlqC,SAAS+pC,EAAQhgF,MAAM,KAAK,GAAI,IAC5CylE,EAAYxvB,SAAS+pC,EAAQhgF,MAAM,KAAK,GAAI,IAElD,GADoBmgF,EAAY,IAAM,EAElC,MAAO,CAAC,IAAI3pC,EAAS,EAAGivB,IAEvB,GAAIA,EAAY,EACjB,MAAO,CAAC,IAAIjvB,EAAS,EAAGivB,IAEvB,GAAIA,GAAa,EAClB,MAAO,CAAC,IAAIjvB,EAAS,EAAGivB,GAEhC,CAIA,MAAO,CAAC,IAAIjvB,EAAS,EAAG,GAC5B,CACA,uBAAO4pC,CAAiBnW,EAAO2C,EAAeqT,GAC1C,OAAOJ,GAAKQ,cAAcpW,EAAME,eAAgB,CAAE8V,SAAQrT,iBAC9D,CACA,oBAAOyT,CAAc1hB,GAAoB,IAAb2hB,EAAMt/E,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC7Bs/E,EAAOL,QAAWK,EAAOL,OAAOh/E,SACjCq/E,EAAOL,OAAS,CAAC,IAAIzpC,EAAS,EAAG,KAErC,MAAM+pC,EAAaD,EAAOL,OAAOriF,KAAKsiF,IAClC,IAAKA,EAAMzoC,SACP,MAAM,IAAItC,EAAa,oBAAqB,yDAEhD,OAAO+qC,EAAM/nC,QAAQV,SAAS0lB,EAAOtJ,WAAY,MAE/C2sB,EAAmB7hB,EACzB,IAAI8hB,EAAmB,EACnBC,EAAa,GACbC,EAAe,GAInB,SAASC,IACDL,EAAWt/E,OAAS,EAAIw/E,EACxBA,GAAoB,EAGpBA,EAAmB,CAE3B,EACA,WACI,IAAII,EAAY,GACZC,EAAyB,IAAItqC,EAAS,EAAG,GAC7CgqC,EAAiBvgF,SAAS8gF,IAEtB,GADAF,EAAY,GACRE,EAAgB3W,oBAGhB,OAFAsW,EAAW96E,KAAK+6E,QAChBA,EAAeE,GAGnBF,EAAa/6E,KAAKm7E,GAClB,MAAMC,EAAgBT,EAAWE,GAAkBtoC,QAC7C8oC,EAvBd,SAAuBtiB,GACnB,OAAOA,EAAMpoB,QAAO,CAAC5tC,EAAMmF,IAASA,EAAKw8D,WAAWnyB,QAAQlnC,IAAItI,IAAO,IAAI6tC,EAAS,EAAG,GAC3F,CAqB2B0qC,CAAcP,GAAc1vE,IAAI6vE,GAC7CK,EAAahkB,EAAO8B,iBAAiB8hB,EAAgB9F,eAAiB,EAI5E,GAHIkG,GAAcJ,EAAgBnK,cAC9BoK,EAAclqC,WAAa,GAE3BmqC,EAAWlpC,YAAYipC,GAAgB,CACvC,IAAKG,EAAY,CACb,MAAMrzE,EAAO6yE,EAAa52E,MACtB+D,GACA+yE,EAAUj7E,KAAKkI,EACvB,CACA4yE,EAAW96E,KAAK+6E,GAChB,GACIG,EAAyBG,EAAWzpC,SAAS+oC,EAAWE,IACxDG,UACKE,EAAuB9oC,kBAAkBuoC,EAAWE,KAC7DE,EAAeE,CACnB,MACSI,EAAWtpC,OAAOqpC,KACvBN,EAAW96E,KAAK+6E,GAChBG,EAAyB,IAAItqC,EAAS,EAAG,GACzCmqC,EAAeE,EACfD,QAGJD,EAAa1/E,OAAS,GACtBy/E,EAAW96E,KAAK+6E,EAExB,CA8FAS,GA/EA,WACI,MAAMC,EAAkB,GACxBX,EAAWzgF,SAASigF,IAChB,IAAIoB,EAAY,GAChBpB,EAAMjgF,SAAQ,CAAC6N,EAAMhQ,EAAOoiF,KACxB,MAAMqB,EAA0B,IAAVzjF,GAAeA,IAAUoiF,EAAMj/E,OAAS,EACxDslE,EAAW2Z,EAAMpiF,EAAQ,GACzB0jF,GAAoBlB,EAAOmB,WAAa3zE,EAAK+8D,SAC7C6W,EAA0BpB,EAAOmB,WAAanB,EAAOqB,gBAAkB7zE,EAAK+8D,UAAY0W,EAC9F,IAAIK,GAAoB,EACxB,GAAItB,EAAOuB,wBAA0Btb,IAAaz4D,EAAK+8D,WAAatE,EAASsE,SAAU,CACnF,MAAMiX,EAAgBvb,EAASqJ,mBAE/BgS,EADyB9zE,EAAK8hE,qBACWkS,CAC7C,CACA,MAAMC,EAAuB9rC,SAASnoC,EAAKmtE,cAAe,IAAM,EAC5CuG,GAAoBE,GAA2BE,GAAqBG,GAEhFT,EAAUrgF,OAAS,GACnBogF,EAAgBz7E,KAAK07E,GAEzBA,EAAYM,EAAoB,CAAC9zE,GAAQ,IAGzCwzE,EAAU17E,KAAKkI,MAGnBwzE,EAAUrgF,OAAS,GACnBogF,EAAgBz7E,KAAK07E,MAG7BZ,EAAaW,CACjB,CAgDAW,GA9CItB,EAAWzgF,SAASigF,IAChB,IAAItT,EACJ,GAAI0T,EAAOuB,uBAAwB,CAC/B,MAAM/zE,EAclB,SAAuBoyE,GACnB,IAAK,IAAIvgF,EAAI,EAAGA,EAAIugF,EAAMj/E,OAAQtB,IAAK,CACnC,MAAMmO,EAAOoyE,EAAMvgF,GACnB,IAAKmO,EAAK+8D,SACN,OAAO/8D,CAEf,CACA,OAAO,CACX,CAtByBm0E,CAAc/B,GAC3BtT,EAAgB9+D,EAAOA,EAAK8hE,mBAAqBlzB,EAAKgvB,EAC1D,MAGQkB,EADA0T,EAAO1T,cACS0T,EAAO1T,cAGP4S,GAAuBU,IAevD,SAA4BA,EAAO9tB,GAC/B8tB,EAAMjgF,SAAS6N,IACXA,EAAKo0E,iBAAiB9vB,KAE9B,CAhBQ+vB,CAAmBjC,EAAOtT,MAkClC,MAAMwV,EA/FK1B,EAAWpiF,QAAQ4hF,IACtB,GAAIA,EAAMj/E,OAAS,EAAG,CAClB,IAAIohF,GAAW,EAMf,OALAnC,EAAMjgF,SAAS6N,IACPA,EAAK+pE,qBAAuB1a,EAAO+B,gBAAgB,OACnDmjB,GAAW,MAGZA,CACX,CACA,OAAO,KAsFTC,EAlBN,WACI,MAAMC,EAAgB,GAWtB,OAVA7B,EAAWzgF,SAASigF,IAChB,IAAIrJ,EACJqJ,EAAMjgF,SAAS6N,IACX,MAAM00E,EAAa10E,EAAK8oE,YACpB4L,GAAc3L,IAAW2L,IACzB3L,EAAS2L,EACTD,EAAc38E,KAAKixE,UAIxB0L,CACX,CAKmBE,GACbC,EAAQ,GA4Bd,OA3BAN,EAAiBniF,SAASigF,IACtB,MAAM7E,EAAO,IAAIwE,GAAKK,GAClBI,EAAOqC,eACPtH,EAAKvL,cAAc6S,cAAe,GAElCrC,EAAOsC,kBACPvH,EAAKvL,cAAc+S,oBAAsB1lB,EAAO+B,gBAAgBohB,EAAOsC,mBAElD,IAArBtC,EAAOwC,YACPzH,EAAKvL,cAAcgT,WAAY,EAC/BzH,EAAKvL,cAAciT,eAAiBzC,EAAOyC,gBAE/CL,EAAM98E,KAAKy1E,MAEfiH,EAAWriF,SAAS42E,IAChB,MAAMzkB,EAAYykB,EAAOlY,MAAM,GAAGiO,gBAAkBlwB,EAAKivB,MAAQ,EAAI,EACrEkL,EAAOmM,kBAAkB5wB,GACzB,IAAI6wB,GAAY,EAChB,IAAK,IAAItjF,EAAI,EAAGA,EAAIk3E,EAAOlY,MAAM19D,OAAQtB,IAAK,CAE1C,IADak3E,EAAOlY,MAAMh/D,GAChB47E,UAAW,CACjB0H,GAAY,EACZ,KACJ,CACJ,CACApM,EAAOqM,aAAaD,MAEjBP,CACX,CACAh+E,WAAAA,CAAYi6D,GAAyB,IAe7Bh/D,EACAmO,EAhBWq1E,EAAQniF,UAAAC,OAAA,QAAAL,IAAAI,UAAA,IAAAA,UAAA,GAKvB,GAJAo0C,QACArxC,KAAKq/E,MAAQ,EACbr/E,KAAK+hD,OAAS,EACd/hD,KAAKs/E,wBAA0B,CAAC,GAC3B1kB,GAA0B,IAAjBA,EAAM19D,OAChB,MAAM,IAAIk0C,EAAa,eAAgB,+BAE3C,GAAqB,IAAjBwpB,EAAM19D,OACN,MAAM,IAAIk0C,EAAa,eAAgB,2BAG3C,GADApxC,KAAKu/E,OAAS3kB,EAAM,GAAGkZ,oBACnB9zE,KAAKu/E,QAAUnmB,EAAO+B,gBAAgB,KACtC,MAAM,IAAI/pB,EAAa,eAAgB,mEAI3CpxC,KAAK+7E,eAAiBnhB,EAAM,GAAGiR,mBAC/B,IAAIhD,EAAgB7oE,KAAK+7E,eACzB,GAAIqD,GAAYrd,EAAYnH,EAAM,IAC9BiO,EAAgB4S,GAAuB7gB,QAEtC,GAAIwkB,GAAYnd,EAAUrH,EAAM,IAAK,CACtC,MAAM4kB,EAAa5kB,EAAMpoB,QAAO,CAAC5tC,EAAMmF,IAASnF,EAAOmF,EAAK8hE,oBAAoB,GAChFhD,EAAgB2W,GAAc,EAAI7mC,EAAKgvB,GAAKhvB,EAAKivB,IACrD,CACA,IAAKhsE,EAAI,EAAGA,EAAIg/D,EAAM19D,SAAUtB,EAC5BmO,EAAO6wD,EAAMh/D,GACTwjF,IACAr1E,EAAKo0E,iBAAiBtV,GACtB7oE,KAAK+7E,eAAiBlT,GAE1B9+D,EAAK0tE,QAAQz3E,MAEjBA,KAAK6zE,eAAgB,EACrB7zE,KAAK46D,MAAQA,EACb56D,KAAKy/E,WAAaz/E,KAAK0/E,eACvB1/E,KAAK2/E,eAAiB,GACtB3/E,KAAK+rE,cAAgB,CACjB6T,UAAW,EACXC,SAAU,IACVC,UAAW,IACXC,gBAAiB,GACjBC,UAAW,IACXpB,cAAc,EACdqB,iBAAkB,EAClBC,kBAAmB,GACnBnB,WAAW,EACXoB,kBAAmB,GAE3B,CACAC,QAAAA,GACI,OAAOpgF,KAAK46D,KAChB,CACA8kB,YAAAA,GAGI,OAFmB1/E,KAAK46D,MAAM/gE,KAAKkQ,GAASA,EAAKqqE,gBAAgB1U,YACjCltB,QAAO,CAACoI,EAAK8kB,IAAeA,EAAY9kB,EAAM8kB,EAAY9kB,GAE9F,CACAylC,gBAAAA,CAAiBhc,GAEb,OADArkE,KAAK2/E,eAAiBtb,EACfrkE,IACX,CACAsgF,oBAAAA,CAAqBC,EAAWC,GAE5B,OADAxgF,KAAKs/E,wBAAwBiB,GAAaC,EACnCxgF,IACX,CACAygF,sBAAAA,CAAuBF,GAEnB,cADOvgF,KAAKs/E,wBAAwBiB,GAC7BvgF,IACX,CACA0gF,SAAAA,CAAUthF,EAAGuhF,EAAQC,EAAQvB,GACzB,OAAOuB,GAAUxhF,EAAIuhF,GAAUtB,CACnC,CACAwB,cAAAA,GACI,MAAM,MAAEjmB,EAAOmR,eAAe,SAAE8T,EAAQ,SAAEC,EAAQ,gBAAEC,EAAe,UAAEC,IAAiBhgF,KAChF6oE,EAAgB7oE,KAAK+7E,eACrB+E,EAAYlmB,EAAM,GAClBmmB,EA9Ud,SAAsBD,EAAWE,GAC7B,MAAMC,EAAgBH,EAAU5S,iBAAiBnE,KAC3CmX,EAAaJ,EAAUtT,WAG7B,OAFqBwT,EAAS9S,iBAAiBnE,KAExBkX,IADLD,EAASxT,WAC0B0T,EACzD,CAwU6BC,CAAaL,EAAWlmB,EAAMA,EAAM19D,OAAS,IAC5DoyE,GAAauQ,EAAWC,GAAYC,EAC1C,IAAIqB,EAAUxuC,OAAOyuC,UACjBC,EAAY,EACZv/B,EAAS,EACb,IAAK,IAAIs9B,EAAQS,EAAUT,GAASQ,EAAUR,GAAS/P,EAAW,CAC9D,IAAIiS,EAAqB,EACrBC,EAAa,EACjB,IAAK,IAAI5lF,EAAI,EAAGA,EAAIg/D,EAAM19D,SAAUtB,EAAG,CACnC,MAAMmO,EAAO6wD,EAAMh/D,GACnB,GAAImO,EAAK6hE,WAAa7hE,EAAK+8D,SAAU,CACjC,MAAM2a,EAAmBzhF,KAAK0gF,UAAU32E,EAAKyjE,WAAYsT,EAAUtT,WAAYsT,EAAU5S,iBAAiBnE,KAAMsV,GAASmC,EACnH3S,EAAW9kE,EAAKmkE,iBAAiBnE,KACvC,GAAI8E,EAAWhG,EAAgB4Y,EAAmB5Y,EAAe,CAC7D,MAAM6Y,EAAOz5E,KAAKwsC,IAAIo6B,EAAW4S,GACjCD,GAAcE,GAAQ7Y,EACtB0Y,GAAsBG,EAAO9lF,CACjC,MAEI2lF,IAAuB1S,EAAW4S,GAAoB5Y,CAE9D,CACJ,CACA,MAAM8Y,EAAaZ,EAAe,EAE5Ba,EAAO5B,EADa/3E,KAAKwsC,IAAIktC,EAAatC,GACHp3E,KAAKwsC,IAAI8sC,GAClDK,EAAOR,IACPA,EAAUQ,EACVN,EAAYjC,EACZt9B,EAASy/B,EAEjB,CACAxhF,KAAKq/E,MAAQiC,EACbthF,KAAK+hD,OAASA,CAClB,CACA8/B,kBAAAA,GACI,MAAM,MAAEjnB,EAAOmR,eAAe,UAAE6T,EAAS,kBAAEO,EAAiB,eAAEnB,IAAsBh/E,KAC9E6oE,EAAgB7oE,KAAK+7E,eAC3B,IAAI+F,EAAQ,EACRC,EAAW,EACXC,EAAmB,EACnBC,EAAiB,EACrB,IAAK,IAAIrmF,EAAI,EAAGA,EAAIg/D,EAAM19D,OAAQtB,IAAK,CACnC,MAAMmO,EAAO6wD,EAAMh/D,GACbizE,EAAW9kE,EAAKmkE,iBAAiBnE,KACvC+X,GAASjT,EACLhG,IAAkBlwB,EAAKivB,MAAQqa,EAAiBpT,GAChDoT,EAAiBpT,EACjBkT,EAAW95E,KAAK2yC,OAAO7wC,EAAK6jE,SAC5BoU,EAAmBj4E,EAAK21E,gBAEnB7W,IAAkBlwB,EAAKgvB,KAA0B,IAAnBsa,GAAwBA,EAAiBpT,KAC5EoT,EAAiBpT,EACjBkT,EAAW95E,KAAKykB,OAAO3iB,EAAK6jE,SAC5BoU,EAAmBj4E,EAAK21E,eAEhC,CACA,IAAItzE,EAAS01E,EAAQlnB,EAAM19D,OAC3B,MAAMglF,EAAc/B,EAAoB6B,EAAmBpC,EAAY,IACjEuC,EAAYJ,EAAWG,GAAerZ,EACxCA,IAAkBlwB,EAAKivB,MAAQx7D,EAAS+1E,EACxC/1E,EAAS21E,EAAWG,EAEfrZ,IAAkBlwB,EAAKgvB,IAAMv7D,EAAS+1E,IAC3C/1E,EAAS21E,EAAWG,GAEnBlD,GAGInW,IAAkBlwB,EAAKivB,MAAQx7D,EAAS4yE,GAGxCnW,IAAkBlwB,EAAKgvB,IAAMv7D,EAAS4yE,KAF3Ch/E,KAAK+rE,cAAciT,eAAiB5yE,GAHpCpM,KAAK+rE,cAAciT,eAAiB5yE,EAQxCpM,KAAKq/E,MAAQ,EACbr/E,KAAK+hD,OAAS,CAClB,CACAqgC,cAAAA,GAGI,IAAIC,EAFcriF,KAAK46D,MAAM,GACGsT,iBAAiBnE,KAKjD,OAHI/pE,KAAK+rE,cAAcgT,WAAa/+E,KAAK+rE,cAAciT,iBACnDqD,EAAQriF,KAAK+rE,cAAciT,gBAExBqD,CACX,CACAC,mBAAAA,GACI,MAAM,MAAE1nB,EAAK,MAAEykB,EAAOtT,eAAe,aAAE6S,EAAY,iBAAEqB,EAAgB,UAAEL,IAAiB5/E,KAClF+hD,EAAS/hD,KAAK+hD,OACd2d,EAAY1/D,KAAKy/E,WACjBqB,EAAYlmB,EAAM,GAClBqmB,EAAgBjhF,KAAKoiF,iBACrBlB,EAAaJ,EAAUtT,WAC7B,IAAK,IAAI5xE,EAAI,EAAGA,EAAIg/D,EAAM19D,SAAUtB,EAAG,CACnC,MAAMmO,EAAO6wD,EAAMh/D,GACb6jE,EAAO11D,EAAKkiE,UAClB,GAAIxM,EAAM,CACN,MAAM6K,EAAQvgE,EAAKyjE,YACXzD,KAAM8E,GAAa9kE,EAAKmkE,iBAC1BqU,EAAiBviF,KAAK0gF,UAAUpW,EAAO4W,EAAYD,EAAe5B,GAASt9B,EAC3EygC,EAAmB/iB,EAAK8J,eACxBkZ,EAAgB14E,EAAK8hE,qBAAuBlzB,EAAKgvB,GAAKkH,EAAW0T,EAAiBA,EAAiB1T,EACzG,IAAI6T,EAAqB,EACzB,GAAI34E,EAAK8hE,qBAAuB7rE,KAAK+7E,eAAgB,CAEjD2G,GAAsB,EAAsB,KAD1B34E,EAAKqqE,gBAAgB1U,UACA,IAAY1/D,KAAK+rE,cAAc6T,SAC1E,CAGA,GAFAngB,EAAK4J,aAAamZ,EAAmBC,EAAgBC,GACrDjjB,EAAK4K,sBACDtgE,EAAK+8D,UAAY8X,EAAc,CAC/B,MAAM+D,GAAkBjjB,EAAY,GAAKkgB,EAAY,IAAMA,EAC3DngB,EAAKwK,eAAc,GAAME,YAAW,EAAMwY,EAAiB1C,EAC/D,CACJ,CACJ,CACJ,CACA2C,mBAAAA,CAAoBjpB,EAAUkpB,EAAUC,EAAMC,EAAUxC,GACpD,GAAiB,MAAb5mB,EACA,OAAOiiB,GAEX,MAAMoH,EAAsBhjF,KAAKs/E,wBAAwBiB,GACzD,GAAIyC,EACA,OAAOA,EACX,MAAMC,EAAiB,GAAH/5E,OAAMkwD,EAAO8B,iBAAiBvB,GAAY,GACxDupB,EAAmBL,EAAWzpB,EAAO+B,gBAAgB8nB,GACrDE,EAAmBJ,EAAW3pB,EAAO+B,gBAAgB8nB,GACrDG,EAAeN,EAAO1pB,EAAO+B,gBAAgB8nB,GACnD,OAAIC,GAAoBC,GAAoBC,EACjCvH,GAEFqH,IAAqBC,GAAoBC,EACvCxH,IAEDsH,GAAoBC,GAAoBC,EA5chC,IA+cXpjF,KAAK4iF,oBAAoBK,EAAgBJ,EAAUC,EAAMC,EAAUxC,EAC9E,CACA8C,YAAAA,CAAa1pB,GACT,MAAM2pB,EAAiBlqB,EAAO+B,gBAAgBxB,GAC9C,IAAI4pB,GAAc,EAClB,MAAMC,EAAY,GAClB,IAAIC,EACJ,MAAMvD,EAAoBlgF,KAAK+rE,cAAcmU,kBAC7C,IAAIwD,GAAsB,EACtBC,EAAY,EAChB,IAAK,IAAI/nF,EAAI,EAAGA,EAAIoE,KAAK46D,MAAM19D,SAAUtB,EAAG,CACxC,MAAMmO,EAAO/J,KAAK46D,MAAMh/D,GAExB+nF,GADc55E,EAAKw8D,WAAWjsE,QAE9B,IAAIspF,GAAc,EACd1xC,SAASynB,EAAU,KAAO,IAC1BiqB,GAAkD,IAApC5jF,KAAK2/E,eAAexlF,QAAQyB,GACtCoE,KAAK+rE,cAAc+S,qBAAuB6E,GAAa3jF,KAAK+rE,cAAc+S,sBAC1E6E,EAAY,EACZC,GAAc,IAGtB,MAAMR,EAAer5E,EAAK+pE,oBAAsBwP,EAC1ChZ,EAAQvgE,EAAKyjE,WAAa70B,EAAKkvB,MAAQ,EACvCrF,EAAWxiE,KAAK46D,MAAMh/D,EAAI,GAC1BmzD,EAAW/uD,KAAK46D,MAAMh/D,EAAI,GAC1BunF,EAAmBp0B,GAAYA,EAAS+kB,oBAAsBwP,EAC9DJ,EAAmB1gB,GAAYA,EAASsR,oBAAsBwP,EAC9DO,EAAYrhB,GAAYzT,GAAYq0B,IAAiBF,IAAqBC,EAChF,GAAIC,EACA,GAAIG,EACAE,EAAcD,EAAUA,EAAUtmF,OAAS,GAC3CumF,EAAYl3D,IAAM+9C,EACdsZ,IACAL,GAAc,EACVx0B,IAAao0B,QAAwCtmF,IAApB4mF,EAAYl3D,MAC7Ck3D,EAAYl3D,IAAMk3D,EAAYn3D,MAAQ4zD,QAI7C,CAGD,GAFAuD,EAAc,CAAEn3D,MAAOg+C,EAAO/9C,SAAK1vB,GACnC0mF,GAAc,EACVM,EAAW,CACX,MAAMhB,EAAWrgB,EAASsR,oBACpBiP,EAAWh0B,EAAS+kB,oBACpBgP,EAAO/4E,EAAK+pE,oBACZgQ,EAAgB9jF,KAAK4iF,oBAAoBjpB,EAAUkpB,EAAUC,EAAMC,EAAUnnF,GAC/E,CAACggF,GAAWC,IAAWlrE,SAASmzE,GAChCL,EAAYl3D,IAAMk3D,EAAYn3D,MAAQ4zD,EAGtCuD,EAAYl3D,IAAMk3D,EAAYn3D,MAAQ4zD,CAE9C,MACUiD,EAQDS,IACLH,EAAYl3D,IAAMk3D,EAAYn3D,MAAQ4zD,EACtCqD,GAAc,GARVE,EAAYl3D,KADXm3D,GAA6B,IAAN9nF,IAAYmzD,EAClB00B,EAAYn3D,MAAQ4zD,EAGpBuD,EAAYn3D,MAAQ4zD,EAO9CsD,EAAU3hF,KAAK4hF,EACnB,MAGAF,GAAc,EAElBG,EAAsBE,CAC1B,CACA,MAAMG,EAAWP,EAAUA,EAAUtmF,OAAS,GAI9C,OAHI6mF,QAA6BlnF,IAAjBknF,EAASx3D,MACrBw3D,EAASx3D,IAAMw3D,EAASz3D,MAAQ4zD,GAE7BsD,CACX,CACAQ,SAAAA,CAAUhhC,GACNhjD,KAAK46D,MAAM1+D,SAAS6N,IAChB,MAAM01D,EAAO11D,EAAKkiE,UAClB,GAAIxM,EAAM,CACN,MAAM6K,EAAQvgE,EAAKyjE,WACnB/N,EAAK0J,mBAAmBmB,EAAOA,GAC/B7K,EAAKxb,WAAWjB,GAAKD,eACzB,IACD/iD,KACP,CACAikF,aAAAA,CAAcjhC,GACV,MAAMkhC,EAAqB,CAAC,IAAK,IAAK,KAAM,KAAM,MAC5CpD,EAAY9gF,KAAK46D,MAAM,GAC7B,IAAIynB,EAAQriF,KAAKoiF,iBACjB,MAAMlB,EAAaJ,EAAUtT,WACvB2W,EAAgBnkF,KAAK+rE,cAAc6T,UAAY5/E,KAAK+7E,eAC1D,IAAK,IAAIngF,EAAI,EAAGA,EAAIsoF,EAAmBhnF,SAAUtB,EAAG,CAChD,MAAM+9D,EAAWuqB,EAAmBtoF,GAC9B4nF,EAAYxjF,KAAKqjF,aAAa1pB,GACpC,IAAK,IAAIyqB,EAAI,EAAGA,EAAIZ,EAAUtmF,SAAUknF,EAAG,CACvC,MAAMC,EAAWb,EAAUY,GACrBE,EAAaD,EAAS/3D,MACtBi4D,EAAavkF,KAAK0gF,UAAU4D,EAAYpD,EAAYmB,EAAOriF,KAAKq/E,OAChEmF,EAAYH,EAAS93D,IAC3B,IAAIi4D,EAWA,MAAM,IAAIpzC,EAAa,cAAe,wBAX3B,CACX,MAAMqzC,EAAYzkF,KAAK0gF,UAAU8D,EAAWtD,EAAYmB,EAAOriF,KAAKq/E,OACpEr8B,EAAI2nB,YACJ3nB,EAAI4nB,OAAO0Z,EAAYC,GACvBvhC,EAAI6nB,OAAOyZ,EAAYC,EAAaJ,GACpCnhC,EAAI6nB,OAAO2Z,EAAY,EAAGC,EAAYN,GACtCnhC,EAAI6nB,OAAO2Z,EAAY,EAAGC,GAC1BzhC,EAAIqyB,YACJryB,EAAIp5C,MACR,CAIJ,CACAy4E,GAAyB,IAAhB8B,CACb,CACJ,CACAzQ,SAAAA,GACI,OAAO1zE,IACX,CACA4zE,UAAAA,GACQ5zE,KAAK6zE,gBAEL5R,EAAUjiE,KAAK46D,MAAM,KAAO56D,KAAK+rE,cAAcgT,UAC/C/+E,KAAK6hF,qBAGL7hF,KAAK6gF,iBAET7gF,KAAKsiF,sBACLtiF,KAAK6zE,eAAgB,EACzB,CACA1wB,IAAAA,GACI,MAAMH,EAAMhjD,KAAKijD,eACjBjjD,KAAKyjD,cACDzjD,KAAKo9E,aAEJp9E,KAAK6zE,eACN7zE,KAAK4zE,aAET5wB,EAAI0nB,UAAU,OAAQ1qE,KAAKw/C,aAAa,OACxCx/C,KAAKgkF,UAAUhhC,GACfhjD,KAAKikF,cAAcjhC,GACnBA,EAAI8nB,aACR,EC3nBG,MAAMh0B,WAAasP,EACtB,mBAAW1T,GACP,MAAO,MACX,CACA,aAAWi1B,GACP,OAAO,CACX,CACA,eAAWC,GACP,OAAO,CACX,CACA,aAAOzF,CAAOuiB,EAAOnlD,GACjB,IAAKmlD,GAA0B,IAAjBA,EAAMxnF,OAChB,OAAO,EACX,IAAIynF,EAAY,EAChB,IAAK,IAAI/oF,EAAI,EAAGA,EAAI8oF,EAAMxnF,SAAUtB,EAAG,CACnC,MAAM48D,EAAOksB,EAAM9oF,GACbmO,EAAOyuD,EAAKpR,oBAClB,GAAI6a,EAAUl4D,GAAO,CACjB,MAAM66E,EAAY76E,EAAK0iE,cAAgB,EACnCltC,EAAMmtC,YAAckY,IACpBrlD,EAAMmtC,YAAckY,EAE5B,CACApsB,EAAKtT,UAAUy/B,GACfA,EAAYnsB,EAAK3T,WACjB2T,EAAKzQ,YAAYxoB,EAAMmtC,YAC3B,CAGA,OAFAntC,EAAMwtC,YAAc4X,EACpBplD,EAAMmtC,aAAe,GACd,CACX,CACAmY,YAAAA,CAAaptE,GAET,OADAzX,KAAK8kF,UAAYrtE,EACVzX,IACX,CACA+kF,YAAAA,GACI,OAAO/kF,KAAK8kF,SAChB,CACAnkF,WAAAA,CAAYqkF,GACR3zC,QACArxC,KAAK8kF,UAAYhwC,EAAQS,SAAS,aAClCv1C,KAAK8hD,OAAS,EACd9hD,KAAKilF,IAAM,GACXjlF,KAAK+rE,cAAgB,CACjBmZ,UAAW,EACXC,aAAc,GAElBnlF,KAAKglF,OAASA,EACdhlF,KAAKolF,aACT,CACAlgC,SAAAA,CAAU5qD,GAGN,OAFA0F,KAAK8hD,OAASxnD,EACd0F,KAAKolF,cACEplF,IACX,CACAqlF,MAAAA,CAAO/qF,GAEH,OADA0F,KAAKilF,IAAM3qF,EACJ0F,IACX,CACAslF,aAAAA,GACI,MAAM75E,EAAU,IAAI40C,EAAQ,QAE5B,OADA50C,EAAQ25C,QAAQplD,KAAKglF,OAAO,GAAGz7D,MACxB9d,EAAQo6C,WACnB,CACAu/B,WAAAA,GACI,MAAMtgC,EAAev7B,IACjB,MAAM9d,EAAU,IAAI40C,EAAQ,QAE5B,OADA50C,EAAQ25C,QAAQ77B,GACT9d,EAAQo5C,YAEnB,IAAI0gC,EAAa,EACjB,IAAK,IAAI3pF,EAAI,EAAGA,EAAIoE,KAAKglF,OAAO9nF,SAAUtB,EAAG,CACzC,MAAM48D,EAAOx4D,KAAKglF,OAAOppF,GACzB,QAAmBiB,IAAf27D,EAAKz/D,MACLwsF,GAAc/sB,EAAKz/D,UAElB,CACD,MAAMysF,EAAkBhtB,EAAKh6D,OAASs4C,GAAK6wB,GAAK3nE,KAAK+rE,cAAcmZ,UAAYllF,KAAK+rE,cAAcoZ,aAClG3sB,EAAKz/D,MAAQkP,KAAK2yC,IAAI4qC,EAAiB1gC,EAAY0T,EAAKjvC,OAAS,EACjEivC,EAAKitB,UAAYjtB,EAAKz/D,MAAQ,EAC9BwsF,GAAc/sB,EAAKz/D,KACvB,CACJ,CAEA,OADAiH,KAAK+kD,SAASwgC,EAAavlF,KAAK8hD,QACzB9hD,IACX,CACAmjD,IAAAA,GACI,IAAIrN,EACJ,MAAMkN,EAAMhjD,KAAKijD,eACXl5C,EAAO/J,KAAKonD,oBAClBpnD,KAAKyjD,cACL,MAAMn3B,EAAQviB,EAAK29D,mBAAmBthB,EAASC,SAASU,MAAO/mD,KAAKjG,OACpEuyB,EAAMltB,GAAK,EACXktB,EAAMjtB,GAAK,GACX,MAAMyiD,EAAS9hD,KAAK8hD,OAEd9K,EADQjtC,EAAK2jE,aACG7K,yBAChB6iB,EAAU37E,EAAK6jE,QAAQp7B,QAAO,CAACv0C,EAAGE,IAAOF,EAAIE,EAAIF,EAAIE,IACrDwnF,EAAar5D,EAAMjtB,IAAMW,KAAKgnD,SAAW,GAAKhQ,EAAU1qB,EAAMjtB,EAAIqmF,GAAW,EAC7EE,EAAct5D,EAAMjtB,IAAMW,KAAKgnD,SAAW,GAAKhQ,EAAU1qB,EAAMjtB,EAAIqmF,GAAW,EAC9EG,EAAaA,CAACzmF,EAAGC,EAAGtG,EAAO6tB,KAC7B,MAAMk/D,EAAM1mF,EAAIrG,EACVgtF,EAAM1mF,EACZW,KAAKwiD,WAAWQ,EAAKhjD,KAAK8kF,WAC1B9hC,EAAI2nB,YACJ3nB,EAAI4nB,OAAOxrE,EAAGC,GACd2jD,EAAIgjC,iBAAiBF,EAAKC,EAAK3mF,EAAIrG,EAAO6tB,GAC1Co8B,EAAIz5C,UAEF08E,EAAgBA,CAAC7mF,EAAGC,EAAGtG,EAAO6tB,KAChC5mB,KAAKwiD,WAAWQ,EAAKhjD,KAAK8kF,WAC1B9hC,EAAI2nB,YACJ3nB,EAAI4nB,OAAOxrE,EAAGwnB,GACdo8B,EAAIgjC,iBAAiB5mF,EAAIrG,EAAO6tB,EAAQxnB,EAAIrG,EAAOsG,GACnD2jD,EAAIz5C,UAEF28E,EAAkBA,CAAC9mF,EAAGC,EAAGgvD,KAC3B,MACM83B,EAAQ9mF,EADA,EACYgvD,EAC1BrL,EAAI2nB,YACJ3nB,EAAI4nB,OAAOxrE,EAAGC,GACd2jD,EAAI6nB,OAAOzrE,EAJG,EAIQ+mF,GACtBnjC,EAAI6nB,OAAOzrE,EALG,EAKQ+mF,GACtBnjC,EAAIqyB,YACJryB,EAAIp5C,QAEF07C,EAAaA,CAAClmD,EAAGmqB,KACnBy5B,EAAIkB,QAAQlkD,KAAKq8C,UACjB,MAAM+pC,EAAUhnF,EAAI4jD,EAAI8B,YAAYv7B,GAAMxwB,MAAQ,EAClDiqD,EAAIyC,SAASl8B,EAAM68D,EAASR,IAEhC,IAAIS,EACAC,EAAoB,EACpBC,EAAiB,EACrB,GAAwB,QAAnBzwC,EAAK91C,KAAKilF,WAAwB,IAAPnvC,OAAgB,EAASA,EAAG54C,OAAQ,CAEhEooD,EADiBv7C,EAAK29D,mBAAmBthB,EAASC,SAASG,OAAQxmD,KAAKjG,OACpDqF,EAAGY,KAAKilF,IAChC,CACA,IAAK,IAAIrpF,EAAI,EAAGA,EAAIoE,KAAKglF,OAAO9nF,SAAUtB,EAAG,CACzC,MAAM48D,EAAOx4D,KAAKglF,OAAOppF,GACpB48D,EAAKitB,YACNjtB,EAAKitB,UAAY,GACX,IAAN7pF,IACA48D,EAAKitB,WAAa3jC,GACtBykC,EAAiB/tB,EAAKitB,UAAYa,GAA2B,IAAN1qF,EAAUkmD,EAAS,GACtE0W,EAAKh6D,OAASs4C,GAAK6wB,KACf0e,GAAYA,EAAS7nF,OAASs4C,GAAK6wB,IACnCue,EAAgB55D,EAAMltB,EAAGumF,EAAY,GAEzCE,EAAWv5D,EAAMltB,EAAGktB,EAAMjtB,EAAGknF,EAAgBZ,IAE7CntB,EAAKh6D,OAASs4C,GAAK8wB,OACfye,GAAYA,EAAS7nF,OAASs4C,GAAK6wB,IACnCse,EAAc35D,EAAMltB,EAAGktB,EAAMjtB,EAAGknF,EAAgBZ,GAEhDU,GAAYA,EAAS7nF,OAASs4C,GAAK8wB,OACnCse,EAAgB55D,EAAMltB,EAAGktB,EAAMjtB,GAAI,GACnC4mF,EAAc35D,EAAMltB,EAAGktB,EAAMjtB,EAAGknF,EAAgBZ,IAE/CU,IACDE,EAAiB/tB,EAAKitB,UACtBQ,EAAc35D,EAAMltB,EAAGktB,EAAMjtB,EAAGknF,EAAgBZ,KAGxDrgC,EAAWh5B,EAAMltB,EAAImnF,EAAgB/tB,EAAKjvC,MAC1C88D,EAAW7tB,EACX8tB,EAAoB9tB,EAAKitB,UACzBY,EAASjnF,EAAIktB,EAAMltB,EACnBktB,EAAMltB,GAAKmnF,CACf,CACA,IAAKF,QAA2BxpF,IAAfwpF,EAASjnF,EACtB,MAAM,IAAIgyC,EAAa,oBAAqB,mBAE5Ci1C,EAAS7nF,OAASs4C,GAAK6wB,GACvBue,EAAgBG,EAASjnF,EAAImnF,EAAgBZ,EAAY,GAEpDU,EAAS7nF,OAASs4C,GAAK8wB,MAC5Bse,EAAgBG,EAASjnF,EAAImnF,EAAgBj6D,EAAMjtB,GAAI,EAE/D,ECvLG,SAASmnF,GAAa/6E,GACzB,IAAKA,EACD,OAAO,EACX,MAAMgmC,EAASH,IACf,MAA6C,oBAA7BG,EAAOg1C,mBAAoCh7E,aAAmBgmC,EAAOg1C,mBAClD,oBAAvBh7E,EAAQu4C,YAA0D,oBAAtBv4C,EAAQi7E,SACpE,CCHO,MAAMC,WAAsB1V,GAC/B,gBAAWpJ,GACP,OAAO,GACX,CACA,iBAAWC,GACP,OAAO,GACX,CACA,oCAAW8e,GACP,OAAO,KACX,CACA,yBAAOC,CAAmB9tF,EAAO6tB,GAC7B,MAAMkgE,EAAQ9mF,KAAK4mF,0BAUnB,OATI3+E,KAAK2yC,IAAI7hD,EAAO6tB,GAAUkgE,KzBiB/B,WAAuB,QAAAniB,EAAA1nE,UAAAC,OAAN40C,EAAI,IAAAhxC,MAAA6jE,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJ/yB,EAAI+yB,GAAA5nE,UAAA4nE,GACxB,MAAM7yB,EAAOF,EAAK/1C,KAAK,KACjBM,EAAM,IAAImE,MAChB8wC,IAAevpC,QAAQ6U,IAAI,YAAao1B,EAAM31C,EAAI4T,MACtD,CyBpBYy1C,CAAK,uDAAyDohC,GAC1D/tF,EAAQ+tF,IACR/tF,EAAQ+tF,GAERlgE,EAASkgE,IACTlgE,EAASkgE,IAGV,CAAC/tF,EAAO6tB,EACnB,CACAjmB,WAAAA,CAAYV,GACRoxC,QACArxC,KAAKutE,WAAa,EAClBvtE,KAAK+mF,UAAY9mF,EACjBD,KAAKgnF,aAAe/mF,EAAQgnF,eACvBhnF,EAAQwgD,OAOTzgD,KAAKygD,OAASxgD,EAAQwgD,OANtBzgD,KAAKygD,OAAS,CACV1nD,MAAO4tF,GAAc9e,MACrBjhD,OAAQ+/D,GAAc7e,OAMlC,CACA/yB,KAAAA,GACI/0C,KAAK+mF,UAAUG,UAAU,EAAG,EAAGlnF,KAAKygD,OAAO1nD,MAAOiH,KAAKygD,OAAO75B,OAClE,CACA8jD,SAAAA,CAAUyc,EAAKjhF,GACf,CACA4kE,UAAAA,GACA,CACAsc,YAAAA,CAAaC,EAAcjoF,EAAGC,GAC1BW,KAAKgnF,aAAehnF,KAAK+mF,UAAUE,eACnCjnF,KAAK+mF,UAAUO,UAAUloF,EAAGC,GAC5BW,KAAK+mF,UAAUQ,OAAQF,EAAep/E,KAAKoqC,GAAM,KACjDryC,KAAK+mF,UAAUO,WAAWloF,GAAIC,EAClC,CACAmoF,aAAAA,GACIxnF,KAAK+mF,UAAUU,aAAaznF,KAAKgnF,aACrC,CACA95E,GAAAA,CAAIsO,GACJ,CACAmnC,YAAAA,CAAalrC,GAET,OADAzX,KAAK+mF,UAAUvxC,UAAY/9B,EACpBzX,IACX,CACA0nF,sBAAAA,CAAuBjwE,GACnB,OAAOzX,IACX,CACA4iD,cAAAA,CAAenrC,GAEX,OADAzX,KAAK+mF,UAAUtxC,YAAch+B,EACtBzX,IACX,CACAyiD,cAAAA,CAAe35B,GAEX,OADA9oB,KAAK+mF,UAAUlxC,YAAc/sB,EACtB9oB,IACX,CACA0iD,aAAAA,CAAcilC,GACV,MAAM3oF,EAAIgB,KAAK+mF,UAAUE,eACnBx3B,EAAQxnD,KAAK2/E,KAAK5oF,EAAEf,EAAIe,EAAEf,EAAIe,EAAEb,EAAIa,EAAEb,EAAIa,EAAEhB,EAAIgB,EAAEhB,EAAIgB,EAAEZ,EAAIY,EAAEZ,GAEpE,OADA4B,KAAK+mF,UAAUnxC,WAAa6Z,EAAQk4B,EAC7B3nF,IACX,CACA6iD,YAAAA,CAAa9pD,GAET,OADAiH,KAAK+mF,UAAUrxC,UAAY38C,EACpBiH,IACX,CACA6nF,UAAAA,CAAWC,GAEP,OADA9nF,KAAK+mF,UAAUgB,QAAUD,EAClB9nF,IACX,CACA8iD,WAAAA,CAAYklC,GAER,OADAhoF,KAAK+mF,UAAUjkC,YAAYklC,GACpBhoF,IACX,CACAyvD,KAAAA,CAAMrwD,EAAGC,GAEL,OADAW,KAAK+mF,UAAUt3B,MAAMrwD,EAAGC,GACjBW,IACX,CACAioF,MAAAA,CAAOlvF,EAAO6tB,EAAQshE,GAClB,IAAIpyC,EACJ,MAAM2K,EAASzgD,KAAK+mF,UAAUtmC,OACxB0nC,EAA+H,QAAxHryC,EAA0B,OAArBoyC,QAAkD,IAArBA,EAA8BA,EAAmB52C,IAAe42C,wBAAqC,IAAPpyC,EAAgBA,EAAK,EAUlK,OATC/8C,EAAO6tB,GAAU+/D,GAAcE,mBAAmB9tF,EAAQovF,EAAKvhE,EAASuhE,GACzEpvF,EAASA,EAAQovF,EAAO,EACxBvhE,EAAUA,EAASuhE,EAAO,EAC1B1nC,EAAO1nD,MAAQA,EAAQovF,EACvB1nC,EAAO75B,OAASA,EAASuhE,EACrB3B,GAAa/lC,KACbA,EAAOhpC,MAAM1e,MAAQA,EAAQ,KAC7B0nD,EAAOhpC,MAAMmP,OAASA,EAAS,MAE5B5mB,KAAKyvD,MAAM04B,EAAKA,EAC3B,CACAC,IAAAA,CAAKhpF,EAAGC,EAAGtG,EAAO6tB,GAEd,OADA5mB,KAAK+mF,UAAUqB,KAAKhpF,EAAGC,EAAGtG,EAAO6tB,GAC1B5mB,IACX,CACAk7E,QAAAA,CAAS97E,EAAGC,EAAGtG,EAAO6tB,GAElB,OADA5mB,KAAK+mF,UAAU7L,SAAS97E,EAAGC,EAAGtG,EAAO6tB,GAC9B5mB,IACX,CACAqoF,WAAAA,CAAYjpF,EAAGC,EAAGtG,EAAO6tB,GACrB,OAAO5mB,IACX,CACAknF,SAAAA,CAAU9nF,EAAGC,EAAGtG,EAAO6tB,GAEnB,OADA5mB,KAAK+mF,UAAUG,UAAU9nF,EAAGC,EAAGtG,EAAO6tB,GAC/B5mB,IACX,CACA2qE,SAAAA,GAEI,OADA3qE,KAAK+mF,UAAUpc,YACR3qE,IACX,CACA4qE,MAAAA,CAAOxrE,EAAGC,GAEN,OADAW,KAAK+mF,UAAUnc,OAAOxrE,EAAGC,GAClBW,IACX,CACA6qE,MAAAA,CAAOzrE,EAAGC,GAEN,OADAW,KAAK+mF,UAAUlc,OAAOzrE,EAAGC,GAClBW,IACX,CACAsoF,aAAAA,CAAcC,EAAMC,EAAMC,EAAMC,EAAMtpF,EAAGC,GAErC,OADAW,KAAK+mF,UAAUuB,cAAcC,EAAMC,EAAMC,EAAMC,EAAMtpF,EAAGC,GACjDW,IACX,CACAgmF,gBAAAA,CAAiB2C,EAAKC,EAAKxpF,EAAGC,GAE1B,OADAW,KAAK+mF,UAAUf,iBAAiB2C,EAAKC,EAAKxpF,EAAGC,GACtCW,IACX,CACAo1E,GAAAA,CAAIh2E,EAAGC,EAAGiN,EAAQu8E,EAAYC,EAAUC,GAEpC,OADA/oF,KAAK+mF,UAAU3R,IAAIh2E,EAAGC,EAAGiN,EAAQu8E,EAAYC,EAAUC,GAChD/oF,IACX,CACA4J,IAAAA,GAEI,OADA5J,KAAK+mF,UAAUn9E,OACR5J,IACX,CACAuJ,MAAAA,GAEI,OADAvJ,KAAK+mF,UAAUx9E,SACRvJ,IACX,CACAq1E,SAAAA,GAEI,OADAr1E,KAAK+mF,UAAU1R,YACRr1E,IACX,CACA8kD,WAAAA,CAAYv7B,GACR,MAAM++B,EAAUtoD,KAAK+mF,UAAUjiC,YAAYv7B,GAC3C,IAAIlqB,EAAI,EACJunB,EAAS,EASb,OARI0hC,EAAQrH,uBACR5hD,GAAKipD,EAAQrH,sBACbr6B,EAAS0hC,EAAQpH,uBAAyBoH,EAAQrH,wBAGlD5hD,GAAKipD,EAAQnH,wBACbv6B,EAAS0hC,EAAQlH,yBAA2BkH,EAAQnH,yBAEjD,CACH/hD,EAAG,EACHC,EAAGA,EACHtG,MAAOuvD,EAAQvvD,MACf6tB,OAAQA,EAEhB,CACA6+B,QAAAA,CAASl8B,EAAMnqB,EAAGC,GAEd,OADAW,KAAK+mF,UAAUthC,SAASl8B,EAAMnqB,EAAGC,GAC1BW,IACX,CACAkjD,IAAAA,GAEI,OADAljD,KAAK+mF,UAAU7jC,OACRljD,IACX,CACAojD,OAAAA,GAEI,OADApjD,KAAK+mF,UAAU3jC,UACRpjD,IACX,CACA,aAAIw1C,CAAU/9B,GACVzX,KAAK+mF,UAAUvxC,UAAY/9B,CAC/B,CACA,aAAI+9B,GACA,OAAOx1C,KAAK+mF,UAAUvxC,SAC1B,CACA,eAAIC,CAAYh+B,GACZzX,KAAK+mF,UAAUtxC,YAAch+B,CACjC,CACA,eAAIg+B,GACA,OAAOz1C,KAAK+mF,UAAUtxC,WAC1B,CACAyO,OAAAA,CAAQ9pD,EAAG4qC,EAAMqQ,EAAQ59B,GACrB,MAAM4kC,EAAWZ,EAAKO,SAAS5hD,EAAG4qC,EAAMqQ,EAAQ59B,GAGhD,OAFAzX,KAAK+mF,UAAU5xC,KAAOsG,EAAKW,YAAYC,GACvCr8C,KAAKutE,WAAa9xB,EAAKC,wBAAwBW,EAASrX,MACjDhlC,IACX,CACAukD,OAAAA,GACI,OAAOvkD,KAAK+mF,UAAU5xC,IAC1B,EC9MJ,SAASj0C,KAAW,QAAA2wC,EAAA50C,UAAAC,OAAN40C,EAAI,IAAAhxC,MAAA+wC,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA90C,UAAA80C,GACVgF,GAAYmrB,OACZtlD,EAAI,sBAAuBk1B,EACnC,CACO,MAAMk3C,WAAyB3oC,EAClC1/C,WAAAA,CAAY4oB,EAAM0/D,EAAgBnnC,EAAQC,EAAQmnC,GAC9C73C,QACArxC,KAAKupB,KAAOA,EACZvpB,KAAKipF,eAAiBA,EACtBjpF,KAAK8hD,OAASA,EACd9hD,KAAK+hD,OAASA,EACd/hD,KAAKkpF,OAASA,CAClB,CACAC,aAAAA,GACI,OAAOnpF,KAAKipF,iBAAmBG,GAAgBC,WACnD,CACAC,WAAAA,GACI,OAAOtpF,KAAKipF,iBAAmBG,GAAgBG,SACnD,EAEG,IAAIC,GAOAC,GAKAL,GCtCAM,ID2BX,SAAWF,GACPA,EAA6BA,EAAmC,KAAI,GAAK,OACzEA,EAA6BA,EAAqC,OAAI,GAAK,SAC3EA,EAA6BA,EAAoC,MAAI,GAAK,QAC1EA,EAA6BA,EAA0C,YAAI,GAAK,aACnF,CALD,CAKGA,KAAiCA,GAA+B,CAAC,IAEpE,SAAWC,GACPA,EAA2BA,EAAgC,IAAI,GAAK,MACpEA,EAA2BA,EAAmC,OAAI,GAAK,QAC1E,CAHD,CAGGA,KAA+BA,GAA6B,CAAC,IAEhE,SAAWL,GACPA,EAAgBA,EAAsB,KAAI,GAAK,OAC/CA,EAAgBA,EAA2B,UAAI,GAAK,YACpDA,EAAgBA,EAA6B,YAAI,GAAK,aACzD,CAJD,CAIGA,KAAoBA,GAAkB,CAAC,IACnC,MAAMryC,WAAoBqP,EAC7B,mBAAW1T,GACP,MAAO,aACX,CACA,wBAAWyE,GACP,OAAOrC,EAAQxjC,IAAI,4BACvB,CACA,+BAAWq4E,GACP,OAAO70C,EAAQxjC,IAAI,sBACvB,CACA,4BAAW4lC,GACP,OAAOpC,EAAQxjC,IAAI,gCACvB,CACA,0BAAW2lC,GACP,OAAOnC,EAAQxjC,IAAI,8BACvB,CACA,qBAAWkmC,GACP,OAAO1C,EAAQxjC,IAAI,sBACvB,CACA,aAAO6wD,CAAOzlE,EAAS6iC,GACnB,IAAK7iC,GAA8B,IAAnBA,EAAQQ,OACpB,OAAO,EACX,IAAInE,EAAQ,EACRoyE,EAAY,EACZC,EAAa,EACbC,EAAoB,EACpBC,EAAqB,EACzB,IAAK,MAAM//D,KAAU7O,EAAS,CAC1B,MAAMqN,EAAOwB,EAAO67C,oBACpB,IAAIwiC,EAAa,EACjB,IAAK,IAAIxF,EAAI,EAAGA,EAAI74E,EAAOs+E,aAAa3sF,SAAUknF,EAAG,CACjD,MAAMxyC,EAAQrmC,EAAOs+E,aAAazF,GAC5B0F,EAAMl4C,EAAMu3C,gBACZY,EAAMn4C,EAAM03C,cAKlB,GAJA13C,EAAMsT,UAAUnsD,IACZ+wF,GAAOC,KACPH,EAAa,GAEbG,GAAO3F,EAAI,EAAG,CACd,MAAM4F,EAAOz+E,EAAOs+E,aAAazF,EAAI,GACjC4F,EAAKb,kBACLv3C,EAAMsT,UAAUnsD,EAAQixF,EAAKnlC,WAAa9N,GAAYS,YACtD5F,EAAMs3C,QAAS,EACfnwF,IACKixF,EAAKnlC,WACF9N,GAAYS,YACXwyC,EAAKnlC,WAAajT,EAAMiT,WAAamlC,EAAKnlC,WAAajT,EAAMiT,WAAa,GAE3F,CACA9rD,GAAS64C,EAAMiT,WAAa9N,GAAYS,UAC5C,CASA,GARIjsC,EAAO0+E,gBAAkBR,GAA2Bnd,KACpD/gE,EAAOw8C,YAAYxoB,EAAMmtC,aACzBntC,EAAMmtC,aAAekd,IAGrBr+E,EAAOw8C,YAAYxoB,EAAMynB,SAAW,GACpCznB,EAAMynB,UAAY4iC,EAAa,GAE/Br+E,EAAO2+E,iBAAkB,CACzB,GAAIloB,EAAgBj4D,GAAO,CACvB,MAAM0hE,EAAa1hE,EAAK2hE,gBACpBngE,EAAO4+E,kBAAoBX,GAA6BziC,OACxDskB,EAAoBpjE,KAAK2yC,IAAI6wB,EAAYJ,GACzCF,EAAYljE,KAAK2yC,IAAIuwB,EAAWpyE,GAASg+C,GAAYS,YAEhDjsC,EAAO4+E,kBAAoBX,GAA6B3iC,MAC7DykB,EAAqBrjE,KAAK2yC,IAAI6wB,EAAYH,GAC1CF,EAAanjE,KAAK2yC,IAAIwwB,EAAYryE,KAGlCoyE,EAAYljE,KAAK2yC,IAAIuwB,EAAWpyE,EAAQ,GAAKg+C,GAAYS,WACzD4zB,EAAanjE,KAAK2yC,IAAIwwB,EAAYryE,EAAQ,GAC1CsyE,EAAoBpjE,KAAK2yC,IAAI6wB,EAAa,EAAGJ,GAC7CC,EAAqBrjE,KAAK2yC,IAAI6wB,EAAa,EAAGH,GAEtD,CACA//D,EAAOxS,MAAQA,CACnB,CACAA,EAAQ,CACZ,CACA,MAAM+zE,EAAe7kE,KAAKykB,IAAIzkB,KAAK2yC,IAAIwwB,EAAaE,EAAoB,GAAIrjE,KAAK2yC,IAAIwwB,EAAa7rC,EAAMwtC,WAAY,IAC9GC,EAAc/kE,KAAKykB,IAAIzkB,KAAK2yC,IAAIuwB,EAAYE,EAAmB,GAAIpjE,KAAK2yC,IAAIuwB,EAAY5rC,EAAM8iC,UAAW,IAG/G,OAFA9iC,EAAM8iC,WAAa2K,EACnBztC,EAAMwtC,YAAcD,GACb,CACX,CACAnsE,WAAAA,GACI0wC,QACArxC,KAAK6pF,aAAe,GACpB7pF,KAAKoqF,WAAaZ,GAA6B3iC,KAC/C7mD,KAAKqqF,SAAWZ,GAA2Bnd,IAC3CtsE,KAAKsqF,aAAc,CACvB,CACA,qBAAIpzC,GACA,OAAOH,GAAYG,kBAAoBuE,EAAKC,wBAAwB17C,KAAKq8C,SAASrX,KACtF,CACA,mBAAIiS,GACA,OAAOF,GAAYE,gBAAkBwE,EAAKC,wBAAwB17C,KAAKq8C,SAASrX,KACpF,CACAulD,cAAAA,CAAejwF,GAEX,OADA0F,KAAKsqF,YAAchwF,EACZ0F,IACX,CACAkqF,cAAAA,GACI,OAAOlqF,KAAKsqF,WAChB,CACAE,cAAAA,GAA4B,IAAb/wB,EAAMx8D,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,CAAC,EACrB,IAAI64C,EAAI6J,EACR,MAAM8qC,EAAc,IAAIzB,GAAwC,QAAtBlzC,EAAK2jB,EAAOlwC,YAAyB,IAAPusB,EAAgBA,EAAK,GAAqC,QAAhC6J,EAAK8Z,EAAOwvB,sBAAmC,IAAPtpC,EAAgBA,EAAKypC,GAAgBtP,KAAM,EAAG,GAAG,GAO3L,GANI2Q,EAAYnB,eACZmB,EAAYzlC,UAAUhlD,KAAKi3C,iBAE3BwzC,EAAYtB,iBACZsB,EAAYzlC,UAAUhlD,KAAKk3C,mBAE3BuzC,EAAYnB,eAAiBmB,EAAYtB,gBAAiB,CAC1D,MAAM,OAAE/zC,EAAM,KAAEpQ,EAAI,OAAEqQ,EAAM,MAAE59B,GAAUzX,KAAKq8C,SACvCquC,EAAkBjvC,EAAKgB,UAAUzX,EAAM+R,GAAYI,eACzDszC,EAAYvmC,QAAQ9O,EAAQs1C,EAAiBr1C,EAAQ59B,EACzD,MAEIgzE,EAAYvmC,QAAQlkD,KAAKq8C,UAE7B,OAAOouC,CACX,CACAE,cAAAA,CAAeC,GAEX,OADA5qF,KAAK6pF,aAAahoF,KAAK7B,KAAKwqF,eAAeI,IACpC5qF,IACX,CACA6qF,OAAAA,CAAQthE,GAAuB,IAAjBqhE,EAAU3tF,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,CAAC,EACxB,OAAO+C,KAAK2qF,eAAezvF,OAAOK,OAAOL,OAAOK,OAAO,CAAC,EAAGqvF,GAAa,CAAErhE,SAC9E,CACAuhE,kBAAAA,CAAmBvhE,GACf,MAAM0/D,EAAiBG,GAAgBC,YACvC,OAAOrpF,KAAK2qF,eAAe,CAAEphE,OAAM0/D,kBACvC,CACA8B,gBAAAA,CAAiBxhE,GACb,MAAM0/D,EAAiBG,GAAgBG,UACvC,OAAOvpF,KAAK2qF,eAAe,CAAEphE,OAAM0/D,kBACvC,CACA+B,mBAAAA,CAAoBxyC,GAChB,OAAOx4C,KAAK8qF,mBAAmB/zC,GAAYk0C,OAAOzyC,GACtD,CACA0yC,QAAAA,CAAS1yC,GAAoB,IAAbihB,EAAMx8D,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,CAAC,EACtB,OAAO+C,KAAK6qF,QAAQ9zC,GAAYk0C,OAAOzyC,GAAQihB,EACnD,CACA0xB,cAAAA,CAAe5hE,GAAmB,IAAbkwC,EAAMx8D,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,CAAC,EACvB43C,EAAM,GACV,IAAK,IAAIj5C,EAAI,EAAGA,EAAI2tB,EAAKrsB,SAAUtB,EAAG,CAClC,MAAMm1B,EAAOxH,EAAK3tB,GACZ48C,EAAQzB,GAAYk0C,OAAOl6D,GAE7B8jB,GADA2D,GAIOznB,CAEf,CAIA,OAHI8jB,EAAI33C,OAAS,GACb8C,KAAK6qF,QAAQh2C,EAAK4kB,GAEfz5D,IACX,CACAorF,OAAAA,GAAqB,IAAb3xB,EAAMx8D,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,CAAC,EACd,OAAO+C,KAAK6qF,QAAQ,eAAgBpxB,EACxC,CACA4xB,WAAAA,CAAYtnD,GAER,OADA/jC,KAAKqqF,SAAyB,kBAAPtmD,EAAkBgT,GAAYo2B,sBAAsBppC,GAAMA,EAC1E/jC,IACX,CACAiqF,WAAAA,GACI,OAAOjqF,KAAKqqF,QAChB,CACAiB,aAAAA,CAAclpD,GAEV,OADApiC,KAAKoqF,WAA2B,kBAAPhoD,EAAkB2U,GAAYu2B,wBAAwBlrC,GAAMA,EAC9EpiC,IACX,CACAmqF,aAAAA,GACI,OAAOnqF,KAAKoqF,UAChB,CACAjnC,IAAAA,GACI,MAAMH,EAAMhjD,KAAKijD,eACXl5C,EAAO/J,KAAKonD,oBAClBpnD,KAAKyjD,cACLT,EAAI0nB,UAAU,cAAe1qE,KAAKw/C,aAAa,OAC/C,MAAMlzB,EAAQviB,EAAK29D,mBAAmBthB,EAASC,SAASK,MAAO1mD,KAAKjG,OAEpE,IAAIsF,EADJ2jD,EAAIkB,QAAQlkD,KAAKq8C,UAEjB,MAAMuvB,EAAU7hE,EAAK6hE,UACfpjB,EAAQz+C,EAAK2jE,aACnB,GAAI1tE,KAAKqqF,WAAaZ,GAA2B9c,QAE7C,GADAttE,EAAImpD,EAAMulB,kBAAkB/tE,KAAKgnD,SAAWoS,EAAOkH,yBAC/CsL,EAAS,CACT,MAAM6B,EAAU1jE,EAAK4jE,YAAYlE,aAC3BzyB,EAAUwR,EAAMqa,yBAChB0oB,EAAuC,IAA5BxhF,EAAK8hE,mBAA2B4B,EAAQzD,MAAQyD,EAAQ1D,KACzE1qE,EAAI4I,KAAK2yC,IAAIv7C,EAAGksF,EAAWv0C,GAAWh3C,KAAKgnD,SAAW,GAC1D,MAEC,CACD,MAAM+iB,EAAO9hE,KAAKykB,OAAO3iB,EAAK6jE,SAE9B,GADAvuE,EAAI4I,KAAKykB,IAAI87B,EAAMslB,eAAe9tE,KAAKgnD,UAAW+iB,EAAO,IACrD6B,EAAS,CACT,MAAM6B,EAAU1jE,EAAK4jE,YAAYlE,aAC3BzyB,EAAUwR,EAAMqa,yBACtBxjE,EAAI4I,KAAKykB,IAAIrtB,EAAGouE,EAAQ1D,KAAO,EAAI/yB,EAAUh3C,KAAKgnD,SACtD,CACJ,CACA,IAAI5nD,EAAIktB,EAAMltB,EAEVA,EADAY,KAAKoqF,aAAeZ,GAA6B3iC,KAC7Cv6B,EAAMltB,EAELY,KAAKoqF,aAAeZ,GAA6BziC,MAClDz6B,EAAMltB,EAAIY,KAAK6kD,WAEd7kD,KAAKoqF,aAAeZ,GAA6BhjC,OAClDl6B,EAAMltB,EAAIY,KAAK6kD,WAAa,EAG5B96C,EAAKyjE,WAAaxtE,KAAK6kD,WAAa,EAE5C3jD,GAAE,0BAA2B9B,EAAGC,GAChCW,KAAK6pF,aAAa3tF,SAASqP,IACvBrK,GAAE,mBAAoBqK,EAAO85C,UAAWjmD,EAAImM,EAAO45C,YAAa9lD,EAAIkM,EAAO05C,aAC3E15C,EAAO2uC,KAAK96C,GACZmM,EAAO4uC,KAAK96C,GACZkM,EAAO+5C,WAAWtC,EAAK,EAAG,MAE9BA,EAAI8nB,YACR,CACAhnB,cAAAA,GACI,MAAMtJ,EAAcx6C,KAAK6pF,aAAa,GAAG/lC,iBACzC,IAAK,IAAIloD,EAAI,EAAGA,EAAIoE,KAAK6pF,aAAa3sF,OAAQtB,IAC1C4+C,EAAYD,UAAUv6C,KAAK6pF,aAAajuF,GAAGkoD,kBAE/C,OAAOtJ,CACX,EAEJzD,GAAYmrB,OAAQ,EACpBnrB,GAAYo3B,kBAAoBqb,GAChCzyC,GAAYu2B,wBAA0B,CAClC9/C,KAAMg8D,GAA6B3iC,KACnCC,MAAO0iC,GAA6BziC,MACpCR,OAAQijC,GAA6BhjC,OACrC4nB,WAAYob,GAA6Bnb,aAE7Ct3B,GAAYs1B,gBAAkBod,GAC9B1yC,GAAYo2B,sBAAwB,CAChCz/C,IAAK+7D,GAA2Bnd,IAChC7lB,MAAOgjC,GAA2Bnd,IAClC3lB,MAAO8iC,GAA2B9c,OAClC2B,OAAQmb,GAA2B9c,QAEvC51B,GAAYk0C,OAAS,CACjBO,WAAYrlC,EAAOslC,eACnBC,IAAKvlC,EAAOslC,eACZE,eAAgBxlC,EAAOylC,mBACvB,IAAKzlC,EAAO0lC,cACZC,UAAW3lC,EAAO0lC,cAClBE,aAAc5lC,EAAO6lC,iBACrBvgC,MAAOtF,EAAO8lC,UACd,IAAK9lC,EAAO8lC,UACZ,IAAK,IACLC,UAAW,IACX,IAAK,IACLC,WAAY,IACZC,YAAajmC,EAAOkmC,oBACpBC,aAAcnmC,EAAOomC,qBACrBC,cAAe,IACfC,eAAgB,IAChB,IAAKtmC,EAAOumC,6BACZC,KAAMxmC,EAAOumC,6BACb,IAAKvmC,EAAOymC,oBACZzuF,EAAGgoD,EAAO0mC,oBAEd91C,GAAY+1C,gBAAkB1D,GE1TvB,MAAM2D,WAAarU,GACtB,mBAAWhmC,GACP,MAAO,MACX,CACA,gBAAWs6C,GACP,MAAM,MAAEC,EAAK,MAAEC,EAAK,MAAEC,EAAK,yBAAEC,EAAwB,iBAAEC,GAAqBlnC,EAC5E,MAAO,CACH2K,OAAQ,CACJxqC,KAAM2mE,EACNj7C,KAAM,GAEVgf,KAAM,CACF1qC,KAAM4mE,EACNl7C,KAAM,GAEVkf,KAAM,CACF5qC,KAAM6mE,EACNn7C,KAAM,GAEVif,MAAO,CACH3qC,KAAM6mE,EACNn7C,KAAM,GAEVof,WAAY,CACR9qC,KAAM8mE,EACNp7C,KAAM,GAEVmf,QAAS,CACL7qC,KAAM6mE,EACNn7C,KAAM,GAEV,gBAAiB,CACb1rB,KAAM6mE,EACNn7C,KAAM,GAEV,aAAc,CACV1rB,KAAM6mE,EACNn7C,KAAM,GAEV,aAAc,CACV1rB,KAAM4mE,EACNl7C,KAAM,GAEVqf,QAAS,CACL/qC,KAAM4mE,EACNl7C,KAAM,GAEVsf,OAAQ,CACJhrC,KAAM2mE,EACNj7C,KAAM,GAEVs7C,IAAK,CACDhnE,KAAM+mE,EACNr7C,KAAM,KAGlB,CACArxC,WAAAA,CAAYnC,EAAMwmC,EAAMumC,GACpBl6B,QACArxC,KAAKsmB,KAAOymE,GAAKC,MAAc,OAAE1mE,KACjCtmB,KAAKgyC,KAAO+6C,GAAKC,MAAc,OAAEh7C,KACjChyC,KAAKglC,KAAO,UACZhlC,KAAKxB,KAAO,SACZwB,KAAK8nD,YAAY0wB,GAAsBgC,OACvCx6E,KAAKy6E,QAAQj8E,EAAMwmC,EAAMumC,GApEjC,WAAoB,QAAA15B,EAAA50C,UAAAC,OAAN40C,EAAI,IAAAhxC,MAAA+wC,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA90C,UAAA80C,GACVg7C,GAAK7qB,OACLtlD,EAAI,eAAgBk1B,EAC5B,CAkEQ5wC,CAAE,iBAAkB1C,EACxB,CACAi8E,OAAAA,CAAQj8E,GAAoC,IAA9BwmC,EAAI/nC,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,UAAWsuE,EAAUtuE,UAAAC,OAAA,EAAAD,UAAA,QAAAJ,EAuBtC,OAtBAmD,KAAKxB,KAAOA,EACZwB,KAAKsmB,KAAOymE,GAAKC,MAAMxuF,GAAM8nB,KAC7BtmB,KAAKgyC,KAAO+6C,GAAKC,MAAMxuF,GAAMwzC,KAC7BhyC,KAAKglC,KAAgB,OAATA,QAA0B,IAATA,EAAkBA,EAAO,UACnC,QAAfumC,IACIvrE,KAAKsmB,OAAS6/B,EAAO8mC,QACrBjtF,KAAKsmB,KAAO6/B,EAAOonC,UAEnBvtF,KAAKsmB,OAAS6/B,EAAO+mC,QACrBltF,KAAKsmB,KAAO6/B,EAAOqnC,WAGR,QAAfjiB,IACIvrE,KAAKsmB,OAAS6/B,EAAO8mC,QACrBjtF,KAAKsmB,KAAO6/B,EAAOsnC,UAEnBztF,KAAKsmB,OAAS6/B,EAAO+mC,QACrBltF,KAAKsmB,KAAO6/B,EAAOunC,WAG3B1tF,KAAKupB,KAAOvpB,KAAKsmB,KACjBtmB,KAAKq8C,SAASrX,KAAO/8B,KAAKC,MAAM6kF,GAAKY,SAAS3tF,KAAKglC,OAC5ChlC,IACX,CACA,eAAO2tF,CAAS3oD,GACZ,MAAgB,YAATA,EAAqB8P,EAAQxjC,IAAI,YAAyC,EAA1BwjC,EAAQxjC,IAAI,YAAmB,CAC1F,CACAy3C,QAAAA,CAASP,GAEL,OADAxoD,KAAKwoD,MAAQA,EACNxoD,IACX,CACAmjD,IAAAA,GACI,MAAMqF,EAAQxoD,KAAK0tE,aACb1qB,EAAMwF,EAAMvF,eAClBjjD,KAAKyjD,cACLT,EAAI0nB,UAAU,OAAQ1qE,KAAKw/C,aAAa,OACxCx/C,KAAKX,EAAImpD,EAAMsa,YAAY9iE,KAAKgyC,MAChChyC,KAAKslD,WAAWtC,EAAK,EAAG,GACxBA,EAAI8nB,YACR,EAEJiiB,GAAK7qB,OAAQ,ECnHN,MAAM0rB,WAAiBzZ,GAC1B,mBAAWzhC,GACP,MAAO,UACX,CACA/xC,WAAAA,CAAYnC,GAAoC,IAA9BwmC,EAAI/nC,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,UAAWsuE,EAAUtuE,UAAAC,OAAA,EAAAD,UAAA,QAAAJ,EAC1Cw0C,MAAM,CAAEsoB,SAAU,MAClB35D,KAAKy6E,QAAQj8E,EAAMwmC,EAAMumC,GACzBvrE,KAAK2xE,aAAc,CACvB,CACA8I,OAAAA,CAAQj8E,EAAMwmC,EAAMumC,GAGhB,OAFAvrE,KAAKs5D,KAAO,IAAIyzB,GAAKvuF,EAAMwmC,EAAMumC,GACjCvrE,KAAK+kD,SAAS/kD,KAAKs5D,KAAKzU,YACjB7kD,IACX,CACA6tF,OAAAA,GACI,OAAO7tF,KAAKs5D,IAChB,CACAoa,SAAAA,GAEI,OADA1zE,KAAK2zE,cAAe,EACb3zE,IACX,CACAmjD,IAAAA,GACI,MAAMqF,EAAQxoD,KAAK0tE,aACb1qB,EAAMhjD,KAAKijD,eACjBjjD,KAAKyjD,cACLzjD,KAAKs5D,KAAKpf,KAAKl6C,KAAKk0E,gBACpBl0E,KAAKs5D,KAAKnf,KAAKqO,EAAMsa,YAAY9iE,KAAKs5D,KAAKtnB,OAC3ChyC,KAAKs5D,KAAKhU,WAAWtC,EAAK,EAAG,EACjC,CACAc,cAAAA,GACI,OAAO9jD,KAAKs5D,KAAKxV,gBACrB,EC/BG,MAAMgqC,GACT,qBAAOC,CAAeC,GAClB,MAAMC,EAAWD,EAASE,UACpBn0F,EAAQk0F,EAAS9zF,QAAQ6zF,GAC/B,GAAIj0F,EAAQ,EAAIk0F,EAAS/wF,OACrB,OAAO+wF,EAASl0F,EAAQ,EAChC,CACA4G,WAAAA,CAAYsS,GACR,IAAI6iC,EACJ91C,KAAK2zE,cAAe,EACpB3zE,KAAK6zE,eAAgB,EACrB7zE,KAAKmuF,OAAqF,QAA3Er4C,EAAiB,OAAZ7iC,QAAgC,IAAZA,OAAqB,EAASA,EAAQk7E,cAA2B,IAAPr4C,EAAgBA,EAAK,EACvH91C,KAAKouF,YAAc,IAAI37C,EAAS,EAAG,GACnCzyC,KAAKquF,SAAW,IAAI57C,EAAS,EAAG,GAChCzyC,KAAKsuF,iBAAczxF,EACnBmD,KAAKuuF,cAAW1xF,EAChBmD,KAAKwuF,iBAAc3xF,EACnBmD,KAAKg4C,QAAU,EACfh4C,KAAKZ,EAAI,EACTY,KAAKyuF,MAAQ,EACbzuF,KAAK0uF,QAAU,EACf1uF,KAAK2mE,UAAY,GACjB3mE,KAAK2uF,iBAAmB,CAAC,EACzB3uF,KAAK40E,OAAS,EACd50E,KAAKi4E,QAAU,EACfj4E,KAAKw0E,oBAAsB,EAC3Bx0E,KAAK80E,qBAAuB,EAC5B90E,KAAK2oD,UAAY,EACjB3oD,KAAK4oD,WAAa,EAClB5oD,KAAK4uF,YAAc,EACnB5uF,KAAK6uF,aAAe,EACpB7uF,KAAKkuF,UAAY,GACjBluF,KAAKjH,MAAQ,EACbiH,KAAK4xE,iBAAmB,CACpBC,QAAS,CAAErkD,KAAM,EAAGs5B,MAAO,GAEnC,CACAgoC,SAAAA,GACI,OAAO9uF,KAAKmuF,MAChB,CACAr0C,IAAAA,GACI,OAAO95C,KAAKZ,CAChB,CACA86C,IAAAA,CAAK96C,GAID,OAHAY,KAAKZ,EAAIA,EACTY,KAAKyuF,MAAQrvF,EACbY,KAAK0uF,QAAU,EACR1uF,IACX,CACA+uF,QAAAA,GACI,OAAO/uF,KAAKyuF,KAChB,CACAO,QAAAA,CAASP,GACLzuF,KAAKyuF,MAAQA,EACbzuF,KAAKZ,EAAIqvF,EAAQzuF,KAAK0uF,OAC1B,CACAO,UAAAA,GACI,OAAOjvF,KAAK0uF,OAChB,CACA1lC,UAAAA,CAAW0lC,GACP1uF,KAAK0uF,QAAUA,EACf1uF,KAAKZ,EAAIY,KAAKyuF,MAAQC,CAC1B,CACA7pC,QAAAA,GACI,OAAO7kD,KAAKjH,MAAuB,EAAfiH,KAAKg4C,OAC7B,CACA4gC,UAAAA,CAAW5gC,GAEP,OADAh4C,KAAKg4C,QAAUA,EACRh4C,IACX,CACAkvF,WAAAA,GACI,OAAOlvF,KAAKquF,QAChB,CACAc,WAAAA,GACI,OAAOnvF,KAAKuuF,QAChB,CACAa,cAAAA,GACI,OAAOpvF,KAAKsuF,WAChB,CACAe,cAAAA,GACI,OAAOrvF,KAAKwuF,WAChB,CACApoB,YAAAA,GACI,OAAOpmE,KAAK2mE,SAChB,CACA2oB,mBAAAA,CAAoBC,GAChB,OAAOvvF,KAAK2uF,iBAAiBY,EACjC,CACAC,mBAAAA,GACI,OAAOxvF,KAAK2uF,gBAChB,CACAc,yBAAAA,GACI,OAAOzvF,KAAK2mE,UAAUpsE,QAAQm1F,GAAaA,EAASld,mBACxD,CACAjqB,UAAAA,GACI,MAAM,MAAExvD,EAAK,QAAEk/E,EAAO,OAAErD,EAAM,oBAAEJ,EAAmB,qBAAEM,EAAoB,UAAEnsB,EAAS,WAAEC,EAAU,YAAEgmC,EAAW,aAAEC,GAAkB7uF,KACjI,MAAO,CACHjH,QACAk/E,UACArD,SACAJ,sBACAM,uBACAnsB,YACAC,aACAgmC,cACAC,eAER,CACAc,cAAAA,GACI,OAAO3vF,KAAKouF,WAChB,CACAwB,cAAAA,CAAe9M,GACX9iF,KAAKouF,YAActL,EACnB9iF,KAAK2zE,cAAe,CACxB,CACAkc,WAAAA,CAAYH,EAAUH,GAClB,IAAKG,EACD,MAAM,IAAIt+C,EAAa,cAAe,2BAE1C,IAAKs+C,EAASrpB,oBAAqB,CAC/B,MAAMjL,EAAQs0B,EAASnpB,WACnBnL,EAAMpnB,YAAYh0C,KAAKquF,YACvBruF,KAAKquF,SAAWjzB,EAAMhnB,QACtBp0C,KAAKsuF,YAAcoB,SAED7yF,IAAlBmD,KAAKuuF,UAIAnzB,EAAMlnB,SAASl0C,KAAKuuF,aAHzBvuF,KAAKuuF,SAAWnzB,EAAMhnB,QACtBp0C,KAAKwuF,YAAckB,EAM3B,CAKA,OAJAA,EAASjc,eAAezzE,MACxBA,KAAK2mE,UAAU9kE,KAAK6tF,GACpB1vF,KAAK2uF,iBAAgC,OAAfY,QAAsC,IAAfA,EAAwBA,EAAa,GAAKG,EACvF1vF,KAAK2zE,cAAe,EACb3zE,IACX,CACA0zE,SAAAA,GACI,IAAI59B,EACJ,GAAI91C,KAAK2zE,aACL,OAAO3zE,KACX,IAAK,IAAIpE,EAAI,EAAGA,EAAIoE,KAAK2mE,UAAUzpE,SAAUtB,EAAG,CAC5C,MAAM8zF,EAAW1vF,KAAK2mE,UAAU/qE,GAChC8zF,EAAShc,YACT,MAAMprB,EAAUonC,EAASnnC,aACzBvoD,KAAKw0E,oBAAsBvsE,KAAK2yC,IAAI56C,KAAKw0E,oBAAqBlsB,EAAQksB,qBACtEx0E,KAAK80E,qBAAuB7sE,KAAK2yC,IAAI56C,KAAK80E,qBAAsBxsB,EAAQwsB,sBACxE90E,KAAK40E,OAAS3sE,KAAK2yC,IAAI56C,KAAK40E,OAAQtsB,EAAQssB,QAC5C50E,KAAKi4E,QAAUhwE,KAAK2yC,IAAI56C,KAAKi4E,QAAuC,QAA7BniC,EAAKwS,EAAQmjB,kBAA+B,IAAP31B,EAAgBA,EAAK,GACjG91C,KAAK2oD,UAAY1gD,KAAK2yC,IAAI56C,KAAK2oD,UAAWL,EAAQK,WAClD3oD,KAAK4oD,WAAa3gD,KAAK2yC,IAAI56C,KAAK4oD,WAAYN,EAAQM,YACpD5oD,KAAK4uF,YAAc3mF,KAAK2yC,IAAI56C,KAAK4uF,YAAatmC,EAAQK,UAAYL,EAAQksB,qBAC1Ex0E,KAAK6uF,aAAe5mF,KAAK2yC,IAAI56C,KAAK6uF,aAAcvmC,EAAQM,WAAaN,EAAQwsB,sBAC7E90E,KAAKjH,MAAQiH,KAAK40E,OAAS50E,KAAK4uF,YAAc5uF,KAAK6uF,YACvD,CACA,OAAO7uF,IACX,CACA4zE,UAAAA,GACI,OAAI5zE,KAAK6zE,gBAET7zE,KAAK6zE,eAAgB,GADV7zE,IAGf,CACAsyE,mBAAAA,GACI,OAAOtyE,KAAK4xE,gBAChB,CACAt3B,IAAAA,CAAKv6B,EAAOiqE,EAAMjoF,GACd/B,KAAKk6C,KAAKl6C,KAAK85C,OAAS/5B,GACxB/f,KAAKsyE,sBAAsBT,QAAQrkD,MAAQzN,EAC3C/f,KAAKsyE,sBAAsBT,QAAQ/qB,OAAS/mC,EACxCiqE,IACAA,EAAK1X,sBAAsBT,QAAQ/qB,OAAS/mC,GAC5Che,IACAA,EAAKuwE,sBAAsBT,QAAQrkD,MAAQzN,EACnD,CACA+vE,gBAAAA,GACI,OAAOx9C,EAAStyC,KAAK2mE,UAAU9sE,KAAKmF,GAAMA,EAAEszE,sBAAsBP,MAAMG,YAC5E,CACA6d,uBAAAA,GACI,OAAK/vF,KAAK2mE,UAAUzpE,OAEb8C,KAAK8vF,mBAAqB9vF,KAAK2mE,UAAUzpE,OADrC,CAEf,ECjKG,MAAM8yF,WAAkB7b,GAC3B,mBAAWzhC,GACP,MAAO,WACX,CACA/xC,WAAAA,CAAYi1E,GACR,IAAI9/B,EACJzE,MAAMukC,GACN51E,KAAKiT,QAAU,CACXg9E,WAAY,EACZC,YAAa,EACbnuC,OAAQ,GAEZ/hD,KAAKmwF,aAAc,EACnBnwF,KAAKgyC,KAAkC,QAA1B8D,EAAK8/B,EAAW5jC,YAAyB,IAAP8D,EAAgBA,EAAK,EACpE91C,KAAK4mB,OAAS,EAClB,CACAwpE,OAAAA,CAAQp+C,GAEJ,OADAhyC,KAAKgyC,KAAOA,EACLhyC,IACX,CACAqwF,SAAAA,CAAUzpE,GAEN,OADA5mB,KAAK4mB,OAASA,EACP5mB,IACX,CACAswF,cAAAA,CAAeC,GAEX,OADAvwF,KAAKmwF,YAAcI,EACZvwF,IACX,CACA0zE,SAAAA,GAEI,OADA1zE,KAAK2zE,cAAe,EACb3zE,IACX,CACAmjD,IAAAA,GACI,MAAMH,EAAMhjD,KAAKijD,eACXuF,EAAQxoD,KAAK0tE,aACnB1tE,KAAKyjD,cACL,MAAM2E,EAAcpoD,KAAKqoD,iBACnBmoC,EAAc1C,GAAYC,eAAe3lC,GACzCqoC,EAASzwF,KAAKk0E,eACdwc,EAAOF,EAAcA,EAAY12C,OAAS0O,EAAM1O,OAAS0O,EAAM3D,WAC/DxlD,EAAImpD,EAAMsa,YAAY9iE,KAAKgyC,MAAQ,GAAK,GA/DtD,WAAoB,QAAAH,EAAA50C,UAAAC,OAAN40C,EAAI,IAAAhxC,MAAA+wC,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA90C,UAAA80C,GACVi+C,GAAU9tB,OACVtlD,EAAI,oBAAqBk1B,EACjC,CA6DQ5wC,CAAE,WAAYlB,KAAKmwF,YAAc,eAAiB,aAAcnwF,KAAK4mB,OAAQ,IAAK6pE,EAASC,GA5DnG,SAAuB1tC,EAAKyW,GACxB,MAAMg3B,EAASh3B,EAAOg3B,OAChBC,EAAOj3B,EAAOi3B,KACdrxF,EAAIo6D,EAAOp6D,EACXsxF,EAAal3B,EAAO7yC,OAAS,EACnCo8B,EAAI2nB,YACAlR,EAAOm3B,SACP5tC,EAAI4nB,OAAO6lB,EAAQpxF,EAAIsxF,GACvB3tC,EAAI6nB,OAAO6lB,EAAMrxF,GACjB2jD,EAAI6nB,OAAO4lB,EAAQpxF,EAAIsxF,KAGvB3tC,EAAI4nB,OAAO8lB,EAAMrxF,EAAIsxF,GACrB3tC,EAAI6nB,OAAO4lB,EAAQpxF,GACnB2jD,EAAI6nB,OAAO6lB,EAAMrxF,EAAIsxF,IAEzB3tC,EAAIz5C,SACJy5C,EAAIqyB,WACR,CA2CQwb,CAAc7tC,EAAK,CACfytC,OAAQA,EAASzwF,KAAKiT,QAAQg9E,WAC9BS,KAAMA,EAAO1wF,KAAKiT,QAAQi9E,YAC1B7wF,EAAGA,EAAIW,KAAKiT,QAAQ8uC,OACpBn7B,OAAQ5mB,KAAK4mB,OACbgqE,QAAS5wF,KAAKmwF,aAEtB,EAEJH,GAAU9tB,OAAQ,EJ1ElB,SAAWwnB,GACPA,EAAcA,EAAyB,UAAI,GAAK,YAChDA,EAAcA,EAAwB,SAAI,GAAK,UAClD,CAHD,CAGGA,KAAkBA,GAAgB,CAAC,IAC/B,MAAMoH,WAAczwC,EACvB,mBAAW3N,GACP,MAAO,OACX,CACA,mBAAW2T,GACP,OAAOqjC,EACX,CACA,yBAAWpjC,GACP,MAAO,CACHyqC,SAAUrH,GAAcsH,UACxBC,QAASvH,GAAcwH,SAE/B,CACAvwF,WAAAA,CAAYlE,EAAME,EAAIsW,GAClBo+B,QACArxC,KAAK+rE,cAAgB7wE,OAAOK,OAAO,CAAEw+E,UAAW,EAAGj4B,OAAQ,EAAGC,OAAQ,GAAI1nD,SAAUqvF,GAAcsH,UAAWG,YAAazH,GAAcsH,UAAWI,QAAQ,EAAOC,IAAK,CAC/J,CAAEjyF,EAAG,EAAGC,EAAG,IACX,CAAED,EAAG,EAAGC,EAAG,KACZiyF,iBAAkB,QAAUr+E,GACnCjT,KAAKuxF,SAAS90F,EAAME,EACxB,CACA40F,QAAAA,CAAS90F,EAAME,GACX,IAAKF,IAASE,EACV,MAAM,IAAIy0C,EAAa,eAAgB,kDAI3C,OAFApxC,KAAKvD,KAAOA,EACZuD,KAAKrD,GAAKA,EACHqD,IACX,CACAwxF,SAAAA,GACI,OAAQxxF,KAAKvD,OAASuD,KAAKrD,EAC/B,CACA80F,WAAAA,CAAYh4B,GACR,IAAI3jB,EAAI6J,EACR,MAAMqD,EAAMhjD,KAAKijD,eACXnB,EAAS9hD,KAAK+rE,cAAcjqB,OAC5BC,EAAS/hD,KAAK+rE,cAAchqB,OAAS0X,EAAOpL,UAC5CsyB,EAASlnB,EAAOknB,OAAS7+B,EACzB8+B,EAASnnB,EAAOmnB,OAAS7+B,EACzB2vC,EAAQj4B,EAAOi4B,MAAQ5vC,EACvB6vC,EAAQl4B,EAAOk4B,MAAQ5vC,EACvBg4B,EAAY/5E,KAAK+rE,cAAcgO,UAC/BsX,EAAMrxF,KAAK+rE,cAAcslB,KACvBjyF,EAAGwyF,EAAMvyF,EAAGwyF,GAASR,EAAI,IACzBjyF,EAAGmpF,EAAMlpF,EAAGmpF,GAAS6I,EAAI,GAC3BS,GAAuBJ,EAAQ/Q,IAAW0Q,EAAIn0F,OAAS,GAC7D8lD,EAAI2nB,YACJ3nB,EAAI4nB,OAAO+V,EAAQC,GACnB59B,EAAIslC,cAAc3H,EAASmR,EAAsBF,EAAMhR,EAASiR,EAAOp4B,EAAOpL,UAAWqjC,EAAQI,EAAsBvJ,EAAMoJ,EAAQnJ,EAAO/uB,EAAOpL,UAAWqjC,EAAOC,IACzI,QAArB77C,EAAK91C,KAAKyX,aAA0B,IAAPq+B,OAAgB,EAASA,EAAGH,WAC5DqN,EAAIslC,cAAcoJ,EAAQI,EAAsBvJ,EAAMoJ,GAASnJ,EAAOzO,GAAatgB,EAAOpL,UAAWsyB,EAASmR,EAAsBF,EAAMhR,GAAUiR,EAAO9X,GAAatgB,EAAOpL,UAAWsyB,EAAQC,GACtM59B,EAAIz5C,SACJy5C,EAAIqyB,aACwB,QAArB11B,EAAK3/C,KAAKyX,aAA0B,IAAPkoC,OAAgB,EAASA,EAAGhK,WAC5DqN,EAAIp5C,MACZ,CACAu5C,IAAAA,GACInjD,KAAKijD,eACLjjD,KAAKyjD,cACL,MAAMq9B,EAAY9gF,KAAKvD,KACjBukF,EAAWhhF,KAAKrD,GACtB,IAAIgkF,EACA+Q,EACA9Q,EACA+Q,EACA9oB,EAAgB,EAChBkpB,EAAS,QACTC,EAAY,QAChB,SAASnqC,EAAYxtD,GACjB,MAA2B,kBAAbA,EAAwBy2F,GAAMxqC,eAAejsD,GAAYA,CAC3E,CACA,MAAMA,EAAWwtD,EAAY7nD,KAAK+rE,cAAc1xE,UAC1C82F,EAActpC,EAAY7nD,KAAK+rE,cAAcolB,aAWnD,GAVI92F,IAAaqvF,GAAcwH,WAC3Ba,EAAS,OACTC,EAAY,QAEZb,IAAgBzH,GAAcsH,UAC9BgB,EAAY,QAEPb,IAAgBzH,GAAcwH,WACnCc,EAAY,QAEZlR,EACAH,EAASG,EAAU3I,eACnBtP,EAAgBiY,EAAUjV,mBAC1B+U,EAASE,EAAU5S,iBAAiB6jB,OAEnC,CAEDpR,EADcK,EAAStT,aACRukB,eACfrR,EAASI,EAAS9S,iBAAiB6jB,EACvC,CACA,GAAI/Q,EACA0Q,EAAQ1Q,EAAS3I,cACjBxP,EAAgBmY,EAASnV,mBACzB8lB,EAAQ3Q,EAAS9S,iBAAiB8jB,OAEjC,CAEDN,EADc5Q,EAAUpT,aACVwkB,aACdP,EAAQ7Q,EAAU5S,iBAAiB8jB,EACvC,CAcA,MAb4C,OAAxChyF,KAAK+rE,cAAculB,mBACnBzoB,EAAgB,GAEwB,SAAxC7oE,KAAK+rE,cAAculB,mBACnBzoB,GAAiB,GAErB7oE,KAAKyxF,YAAY,CACb9Q,SACA+Q,QACA9Q,SACA+Q,QACAtjC,UAAWwa,IAA+C,IAA9B7oE,KAAK+rE,cAAcqlB,QAAmB,EAAI,MAEnE,CACX,EKxHG,MAAM7kF,WAAY65C,EACrB,mBAAW1T,GACP,MAAO,KACX,CACA,cAAOy/C,CAAQpoF,GACX,OAAOA,EAAKqtE,mBAAmB7qE,GAAImmC,SACvC,CACA,qBAAO0/C,CAAex3B,EAAO3nD,GACzB,IAAK,MAAMlJ,KAAQ6wD,EACf,GAAgB,OAAZ3nD,QAAgC,IAAZA,OAAqB,EAASA,EAAQo/E,IAC1D,IAAK,IAAIz2F,EAAI,EAAGA,EAAImO,EAAK3N,KAAKc,OAAQtB,IAAK,CACvC,MAAM02F,EAAM,IAAI/lF,GAChBxC,EAAKw9D,YAAY+qB,EAAK12F,EAC1B,MAEC,QAA0EiB,KAAzD,OAAZoW,QAAgC,IAAZA,OAAqB,EAASA,EAAQlZ,OAAsB,CACtF,MAAMu4F,EAAM,IAAI/lF,GAChBxC,EAAKw9D,YAAY+qB,EAAiB,OAAZr/E,QAAgC,IAAZA,OAAqB,EAASA,EAAQlZ,MACpF,KACK,CACD,MAAMu4F,EAAM,IAAI/lF,GAChBxC,EAAKw9D,YAAY+qB,EAAK,EAC1B,CAER,CACA,aAAOnwB,CAAOuT,EAAMn2C,GAChB,MAAMwtC,EAAaxtC,EAAMwtC,WAEzB,IAAK2I,GAAwB,IAAhBA,EAAKx4E,OACd,OAAO,EACX,MAAMq1F,EAAU,GACVC,EAAc,CAAC,EACrB,IAAK,IAAI52F,EAAI,EAAGA,EAAI85E,EAAKx4E,SAAUtB,EAAG,CAClC,MAAM02F,EAAM5c,EAAK95E,GACXmO,EAAOuoF,EAAInrC,UACjB,IAAI1oD,EACAshB,EACJ,GAAIgiD,EAAYh4D,GAAO,CACnB,MAAMhQ,EAAQu4F,EAAI/qC,aAClB9oD,EAAQsL,EAAK24D,cAAc3oE,GAC3BgmB,EAAQhW,EAAK8tE,eACjB,KACK,KAAI5V,EAAUl4D,GAKf,MAAM,IAAIqnC,EAAa,WAAY,wBAJnC3yC,EAAQ,CAAEuzC,KAAM,IAChBjyB,EAAQgtD,CAIZ,CACA,MAAM0lB,EAAS1oF,EAAKy1C,aAAa,MACjC+yC,EAAQ1wF,KAAK,CAAEmwC,KAAMvzC,EAAMuzC,KAAMjoC,OAAM0oF,SAAQH,QAC/CE,EAAYC,GAAUxqF,KAAK2yC,IAAI43C,EAAYC,IAAW1yE,EAAOA,EACjE,CACAwyE,EAAQpvB,MAAK,CAACllE,EAAGE,IAAMA,EAAE6zC,KAAO/zC,EAAE+zC,OAClC,IAAI0gD,EAAW3lB,EACXiI,EAAS,EACT2d,EAAW,KACX3R,EAAW,KACX4R,EAAkB,KAClBC,EAAa,EACjB,IAAK,IAAIj3F,EAAI,EAAGA,EAAI22F,EAAQr1F,SAAUtB,EAAG,CACrC,MAAM,IAAE02F,EAAG,KAAEvoF,EAAI,OAAE0oF,EAAM,KAAEzgD,GAASugD,EAAQ32F,GACxCo2C,IAAS2gD,GAAY5oF,IAASi3E,IAC9B0R,EAAWF,EAAYC,IAEtB1oF,EAAK+8D,UAAY90B,IAAS2gD,IACA,KAAvB1qF,KAAKwsC,IAAIzC,EAAO,GAChB6gD,EAAa,GAGbA,EAAa,GACI,OAAb7R,GAAsBA,EAASla,UAAyB,OAAb6rB,GAAqBA,EAAW3gD,IAAS,GAG/EA,EAAO6gD,IAAeD,IAC3BC,GAAc,IAHdA,GAAc,KAOtB9oF,EAAK+8D,SACLwrB,EAAIQ,YAAcD,EAGlBP,EAAIQ,WAAaD,EAErBD,EAAkB5gD,EAAO6gD,EACzBP,EAAIptC,UAAUwtC,GACdA,GAAYJ,EAAIztC,WA5DD,EA6DfmwB,EAAS0d,EAAW1d,EAAS0d,EAAW1d,EACxC2d,EAAW3gD,EACXgvC,EAAWj3E,CACf,CAEA,OADAw1B,EAAMwtC,YAAciI,GACb,CACX,CACAr0E,WAAAA,GACI0wC,QACArxC,KAAK3F,SAAW+rD,EAASC,SAASU,MAClC/mD,KAAKolD,QAAQe,EAAOkO,iBACpBr0D,KAAK8yF,UAAY,CACrB,CACAzrC,OAAAA,CAAQt9C,GAGJ,OAFA/J,KAAK+J,KAAOA,EACZ/J,KAAKm1C,KAAOprC,EAAKorC,KACVn1C,IACX,CACA+yF,YAAAA,CAAa1zF,GAET,OADAW,KAAK8yF,UAAYzzF,EACVW,IACX,CACAmjD,IAAAA,GACI,MAAMH,EAAMhjD,KAAKijD,eACXl5C,EAAO/J,KAAKonD,oBAClBpnD,KAAKyjD,cACL,MACMmf,EADQ74D,EAAK2jE,aACK7K,yBAClBv2C,EAAQviB,EAAK29D,mBAAmB1nE,KAAK3F,SAAU2F,KAAKjG,MAAO,CAAEi5F,gBAAgB,IAC/E/wB,EAAUl4D,KACVuiB,EAAMjtB,EAAI0K,EAAKmkE,iBAAiBlE,OAEpChqE,KAAKZ,EAAIktB,EAAMltB,EACfY,KAAKX,EAAIitB,EAAMjtB,EAAIW,KAAK8yF,UAAYlwB,EACpC5iE,KAAKslD,WAAWtC,EAAK,EAAG,EAC5B,EC3HG,MAAM5L,WAAuBgP,EAChC,mBAAW1T,GACP,MAAO,gBACX,CACA,aAAOyvB,CAAO8wB,EAAM1zD,GAChB,MAAM,UAAE8iC,EAAS,WAAE0K,GAAextC,EAElC,IAAK0zD,GAAwB,IAAhBA,EAAK/1F,OACd,OAAO,EACX,MAAMg2F,EAAW,GACjB,IAAI1wB,EAAW,KACX2wB,EAAY,EACZC,EAAa,EACjB,IAAK,IAAIx3F,EAAI,EAAGA,EAAIq3F,EAAK/1F,SAAUtB,EAAG,CAClC,MAAMs0D,EAAM+iC,EAAKr3F,GACXmO,EAAOmmD,EAAI/I,UACXl+C,EAAMinD,EAAIrI,cACV9tD,EAAQm2D,EAAI3I,aACZ9oD,EAAQsL,EAAK24D,cAAc3oE,GAC3BwzE,EAAaz4B,EAAQxjC,IAAI,2BAO/B,GANI4+C,EAAI71D,WAAa6rD,EAAiBQ,QAClCnnB,EAAMmtC,aAAea,EAAanU,EAAOiH,oBAAsB,IAE/DnQ,EAAI71D,WAAa6rD,EAAiBU,QAClCrnB,EAAMynB,UAAYumB,EAAanU,EAAOiH,oBAAsB,IAE5Dt2D,IAASy4D,EAAU,CACnB,IAAK,IAAI1mE,EAAI,EAAGA,EAAIiO,EAAK3N,KAAKc,SAAUpB,EAClB,IAAdumE,IACA8wB,EAAYlrF,KAAK2yC,IAAI7wC,EAAK44D,yBAA0BwwB,IAErC,IAAfpmB,IACAqmB,EAAanrF,KAAK2yC,IAAI7wC,EAAK8sE,0BAA2Buc,IAG9D5wB,EAAWz4D,CACf,CACAmpF,EAASrxF,KAAK,CACVkI,OACAmmD,MACAjnD,MACA+oC,KAAMvzC,EAAMuzC,KACZqhD,OAAQF,EACRG,OAAQF,GAEhB,CACAF,EAAS/vB,MAAK,CAACllE,EAAGE,IAAMA,EAAE6zC,KAAO/zC,EAAE+zC,OACnC,IAAIuhD,EAAY,EACZC,EAAY,EACZC,EAAU,EACVC,EAAU,EACVf,EAAW,KACX3R,EAAW,KACf,IAAK,IAAIplF,EAAI,EAAGA,EAAIs3F,EAASh2F,SAAUtB,EAAG,CACtC,IAAI+3F,EAAW,EACf,MAAM,KAAE5pF,EAAI,IAAEd,EAAG,IAAEinD,EAAG,KAAEle,EAAI,OAAEqhD,EAAM,OAAEC,GAAWJ,EAASt3F,GACtDo2C,IAAS2gD,GAAY5oF,IAASi3E,IAC9BuS,EAAYlxB,EAAYgxB,EACxBG,EAAYzmB,EAAaumB,GAE7B,MAAMM,EAAW1jC,EAAIrL,WAtDN,EAuDX57C,IAAQm9C,EAASC,SAASQ,MAC1BqJ,EAAIhL,UAAUmd,EAAYkxB,GAC1BI,EAAWtxB,EAAYuxB,EACvBH,EAAUE,EAAWF,EAAUE,EAAWF,GAErCxqF,IAAQm9C,EAASC,SAASU,QAC/BmJ,EAAIhL,UAAUsuC,GACdG,EAAWP,EAAaQ,EACxBF,EAAUC,EAAWD,EAAUC,EAAWD,GAE9Cf,EAAW3gD,EACXgvC,EAAWj3E,CACf,CAGA,OAFAw1B,EAAM8iC,WAAaoxB,EACnBl0D,EAAMwtC,YAAc2mB,GACb,CACX,CACA,oBAAO/jB,GAAkD,IAApC,WAAEkkB,GAAY52F,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAG8M,EAAI9M,UAAAC,OAAA,EAAAD,UAAA,QAAAJ,EAAE+yE,EAAO3yE,UAAAC,OAAA,EAAAD,UAAA,QAAAJ,EACpC,OAAfg3F,QAAsC,IAAfA,GAAiCA,EAAW53F,MAAM,KAAKpC,KAAKi6F,IAC/E,MAAM73F,EAAQ63F,EAAgB5jF,OAAOjU,MAAM,KACrCw9D,EAAS,CAAEvvD,OAAQjO,EAAM,IAG/B,OAFIA,EAAM,KACNw9D,EAAOp/D,SAAW4B,EAAM,IACrB2zE,EAAQO,aAAa4jB,UAAUt6B,MACvC5/D,KAAI,CAACm6F,EAAWj6F,IAAUgQ,EAAKw9D,YAAYysB,EAAWj6F,IAC7D,CACA4G,WAAAA,CAAY1G,GACRo3C,QACArxC,KAAKi0F,kBAAkBh6F,GACvB+F,KAAK3F,SAAW+rD,EAASC,SAASQ,KAClC7mD,KAAK0uF,QAAU,EACf1uF,KAAKy5C,QAAU,CACnB,CACAw6C,iBAAAA,CAAkBh6F,GAEd,OADA+F,KAAKupB,KAAOtvB,EACL+F,IACX,CACAk0F,iBAAAA,GACI,OAAOl0F,KAAKupB,IAChB,CACA4qE,UAAAA,CAAW/0F,GAEP,OADAY,KAAK0uF,QAAUtvF,EACRY,IACX,CACAo0F,UAAAA,CAAW/0F,GAEP,OADAW,KAAKy5C,QAAUp6C,EACRW,IACX,CACAmjD,IAAAA,GACI,MAAMH,EAAMhjD,KAAKijD,eACXl5C,EAAO/J,KAAKonD,oBAClBpnD,KAAKyjD,cACL,MAAMn3B,EAAQviB,EAAK29D,mBAAmB1nE,KAAK3F,SAAU2F,KAAKjG,OAC1D,IAAIqhF,EAAO9uD,EAAMltB,EAAIY,KAAK0uF,QACtBpT,EAAOhvD,EAAMjtB,EAAIW,KAAKy5C,QAAU,EACpC,OAAQz5C,KAAK3F,UACT,KAAK+rD,EAASC,SAASK,MACnB00B,GAAQ,EACRE,GAAQ,GACR,MACJ,KAAKl1B,EAASC,SAASO,MACnBw0B,GAAQ,EACRE,GAAQ,GACR,MACJ,KAAKl1B,EAASC,SAASQ,KACnBu0B,GAAQp7E,KAAKjH,MACb,MACJ,KAAKqtD,EAASC,SAASU,MACnBq0B,GAAQ,EACR,MACJ,QACI,MAAM,IAAIhqC,EAAa,kBAAmB,gBAAFloC,OAAkBlJ,KAAK3F,SAAQ,oBAE/E2F,KAAKslD,WAAWtC,EAAKo4B,EAAME,EAC/B,EC1IJ,SAASp6E,KAAW,QAAA2wC,EAAA50C,UAAAC,OAAN40C,EAAI,IAAAhxC,MAAA+wC,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA90C,UAAA80C,GACVsiD,GAAOnyB,OACPtlD,EAAI,iBAAkBk1B,EAC9B,CAEA,SAASwiD,GAAev1F,GACpB,GAAI,kBAAmBA,EACnB,OAAOA,EAAEw1F,cACb,GAAI,YAAax1F,EACb,OAAOu1F,GAAev1F,EAAEy1F,SAC5B,MAAMA,EAAUz1F,EAChB,OAAuB,IAAnBy1F,EAAQt3F,OACDo3F,GAAeE,EAAQ,IACX,IAAnBA,EAAQt3F,OACD,KACJs3F,EAAQ36F,IAAIy6F,GACvB,CACO,MAAMD,GACT1zF,WAAAA,CAAY8zF,GACRz0F,KAAKy0F,QAAUA,EACfz0F,KAAKgyC,KAAO,GACZhyC,KAAKiJ,IAAM,EACXjJ,KAAK00F,UAlBQ,CAmBjB,CACA9/C,KAAAA,CAAM5C,GACFhyC,KAAKgyC,KAAOA,EACZhyC,KAAKiJ,IAAM,EACXjJ,KAAK00F,UAvBQ,EAwBb,MAAMxkD,EAASlwC,KAAK20F,OAAO30F,KAAKy0F,QAAQtZ,SAExC,OADAjrC,EAAOwkD,SAAW10F,KAAK00F,SAChBxkD,CACX,CACA0kD,SAAAA,CAAUC,IA5BO,IA6BT70F,KAAK00F,WACL10F,KAAK00F,SAAW10F,KAAKiJ,KACzBjJ,KAAKiJ,IAAM4rF,CACf,CACAC,YAAAA,GACI90F,KAAK00F,UAlCQ,CAmCjB,CACAK,UAAAA,CAAWC,GACP,MAAMC,EADeh4F,UAAAC,OAAA,QAAAL,IAAAI,UAAA,IAAAA,UAAA,GACI,IAAIi4F,OAAO,MAAQF,EAAQ,MAAQ,IAAIE,OAAO,MAAQF,EAAQ,UAEjF9kD,EADclwC,KAAKgyC,KAAKloC,MAAM9J,KAAKiJ,KACdkH,MAAM8kF,GACjC,OAAe,OAAX/kD,EACO,CACHilD,SAAS,EACTZ,cAAerkD,EAAO,GACtBklD,aAAcllD,EAAO,GAAGhzC,OACxB+L,IAAKjJ,KAAKiJ,KAIP,CAAEksF,SAAS,EAAOlsF,IAAKjJ,KAAKiJ,IAE3C,CACAosF,SAAAA,CAAUC,GAAqB,IAAfC,EAAKt4F,UAAAC,OAAA,QAAAL,IAAAI,UAAA,IAAAA,UAAA,GACjB,MAAMu3F,EAAU,GACVvrF,EAAMjJ,KAAKiJ,IACjB,IAAIusF,GAAa,EACbC,GAAW,EAEf,GADAF,GAAkB,IAAVA,IAAiC,IAAfD,EAAKC,MAC3BD,EAAKX,OACL,IAAK,MAAM5yF,KAAQuzF,EAAKX,OAAQ,CAC5B,MAAMe,EAAW11F,KAAKiJ,IAChBinC,EAASlwC,KAAK20F,OAAO5yF,GAC3B,GAAImuC,EAAOilD,SAGP,GAFAX,EAAQ3yF,KAAKquC,GACbulD,GAAW,EACPH,EAAKK,GACL,WAIJ,GADAH,GAAa,GACRF,EAAKK,GAAI,CACV31F,KAAKiJ,IAAMysF,EACX,KACJ,CAER,CAEJ,MAAME,EAAUN,EAAKK,IAAMF,GAAaD,EAClCL,EAAUS,IAAoB,IAAVL,EACpBM,EAAaD,EAAS,EAAI,EAShC,OARIL,IAAUK,IACV51F,KAAKiJ,IAAMA,GACXksF,EACAn1F,KAAK80F,eAGL90F,KAAK40F,UAAU3rF,GAEZ,CAAEksF,UAASX,UAASqB,aAC/B,CACAC,eAAAA,CAAgBR,GAAqB,IAAfC,EAAKt4F,UAAAC,OAAA,QAAAL,IAAAI,UAAA,IAAAA,UAAA,GACvB,MAAMu3F,EAAU,GACVvrF,EAAMjJ,KAAKiJ,IACjB,IAAI4sF,EAAa,EACbE,GAAO,EACX,EAAG,CACC,MAAM7lD,EAASlwC,KAAKq1F,UAAUC,GAC1BplD,EAAOilD,SAAWjlD,EAAOskD,SACzBqB,IACArB,EAAQ3yF,KAAKquC,EAAOskD,UAGpBuB,GAAO,CAEf,OAASA,GACT,MAAMZ,EAAUU,EAAa,IAAe,IAAVN,EASlC,OARIA,GAAWM,EAAa,IACxB71F,KAAKiJ,IAAMA,GACXksF,EACAn1F,KAAK80F,eAGL90F,KAAK40F,UAAU3rF,GAEZ,CAAEksF,UAASX,UAASqB,aAC/B,CACAG,gBAAAA,CAAiBV,GACb,OAAOt1F,KAAK81F,gBAAgBR,GAAM,EACtC,CACAX,MAAAA,CAAOsB,GAEH,GADA/0F,GAAE,4BAA6B+0F,IAC1BA,EACD,MAAM,IAAI7kD,EAAa,yBAE3B,IAAIlB,EACJ,MAAMolD,EAAOW,EAAS7xF,KAAKpE,KAAKy0F,QAAnBwB,GACb,GAAIX,EAAKN,MACL9kD,EAASlwC,KAAK+0F,WAAWO,EAAKN,OAAwB,IAAjBM,EAAKY,SACtChmD,EAAOilD,UACPn1F,KAAKiJ,KAAOinC,EAAOklD,kBAGtB,KAAIE,EAAKX,OAaV,MADAzzF,GAAEo0F,GACI,IAAIlkD,EAAa,gDAAkDkkD,GAXrEplD,EADAolD,EAAKa,UACIn2F,KAAK81F,gBAAgBR,GAEzBA,EAAKc,WACDp2F,KAAKg2F,iBAAiBV,GAGtBt1F,KAAKq1F,UAAUC,EAMhC,CACA,MAAMe,EAAU,GAQhB,OAPAnmD,EAAOmmD,QAAUA,EACbnmD,EAAOskD,SACPtkD,EAAOskD,QAAQt4F,SAAS6C,GAAMs3F,EAAQx0F,KAAKyyF,GAAev1F,MAE1Du2F,EAAKgB,KAAOpmD,EAAOilD,SACnBG,EAAKgB,IAAI,CAAED,YAERnmD,CACX,EC1JJ,SAAShvC,KAAW,QAAA2wC,EAAA50C,UAAAC,OAAN40C,EAAI,IAAAhxC,MAAA+wC,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA90C,UAAA80C,GACVwkD,GAAUr0B,OACVtlD,EAAI,oBAAqBk1B,EACjC,CDyJAuiD,GAAOnyB,OAAQ,ECxJR,MAAMs0B,GACT71F,WAAAA,CAAYivE,GACR5vE,KAAK4vE,QAAUA,CACnB,CACAuL,KAAAA,GACI,OAAOn7E,KAAKy2F,IAChB,CACAA,IAAAA,GACI,MAAO,CACH9B,OAAQ,CAAC30F,KAAK02F,MAAO12F,KAAK22F,OAAQ32F,KAAK42F,KAE/C,CACAF,KAAAA,GACI,MAAO,CACH/B,OAAQ,CAAC30F,KAAK62F,YAAa72F,KAAK82F,QAChCR,IAAKA,IAAMt2F,KAAK4vE,QAAQmnB,cAEhC,CACAJ,MAAAA,GACI,MAAO,CACHhC,OAAQ,CAAC30F,KAAKg3F,MAAOh3F,KAAK02F,OAC1BN,YAAY,EAEpB,CACAU,MAAAA,GACI,MAAO,CACHnC,OAAQ,CAAC30F,KAAKi3F,SAAUj3F,KAAKg6E,KAAMh6E,KAAKk3F,KAAMl3F,KAAKm3F,MAE3D,CACAN,WAAAA,GACI,MAAO,CACHlC,OAAQ,CAAC30F,KAAKo3F,MAAOp3F,KAAKq3F,YAC1B1B,IAAI,EAEZ,CACAyB,KAAAA,GACI,MAAO,CACHzC,OAAQ,CAAC30F,KAAKs3F,OAAQt3F,KAAKu3F,MAAOv3F,KAAKw3F,QACvClB,IAAM/2D,GAAUv/B,KAAK4vE,QAAQ6nB,SAASl4D,EAAM82D,QAAQ,IAE5D,CACAkB,KAAAA,GACI,MAAO,CACH5C,OAAQ,CAAC30F,KAAK03F,MACdvB,WAAW,EAEnB,CACAuB,IAAAA,GACI,MAAO,CACH/C,OAAQ,CAAC30F,KAAK23F,SAAU33F,KAAK43F,WAAY53F,KAAK63F,QAEtD,CACAR,UAAAA,GACI,MAAO,CACH1C,OAAQ,CAAC30F,KAAK23F,SAAU33F,KAAK43F,WAAY53F,KAAK63F,QAC9CvB,IAAM/2D,IACF,MAAMviC,EAAIuiC,EACVv/B,KAAK4vE,QAAQkoB,cAAc96F,EAAEq5F,QAAQ,GAAIr5F,EAAEq5F,QAAQ,GAAIr5F,EAAEq5F,QAAQ,KAG7E,CACAuB,UAAAA,GACI,MAAO,CACHjD,OAAQ,CAAC30F,KAAK+3F,WAAY/3F,KAAKg4F,aAC/BzC,OAAO,EACPI,IAAI,EAEZ,CACAuB,IAAAA,GACI,MAAO,CACHvC,OAAQ,CAAC30F,KAAKi4F,KACd7B,YAAY,EACZE,IAAM/2D,GAAUv/B,KAAK4vE,QAAQsoB,YAAY34D,EAAM82D,SAEvD,CACArc,IAAAA,GACI,MAAO,CACH2a,OAAQ,CAAC30F,KAAKm4F,MAAOn4F,KAAKo4F,WAAYp4F,KAAKq4F,OAC3C9C,OAAO,EACPe,IAAM/2D,GAAUv/B,KAAK4vE,QAAQ0oB,YAAY/4D,EAAM82D,QAAQ,IAE/D,CACAY,QAAAA,GACI,MAAO,CACHtC,OAAQ,CAAC30F,KAAKm4F,MAAOn4F,KAAKu4F,WAC1BhD,OAAO,EACPe,IAAM/2D,GAAUv/B,KAAK4vE,QAAQ4oB,gBAAgBj5D,EAAM82D,QAAQ,IAEnE,CACAc,IAAAA,GACI,MAAO,CACHxC,OAAQ,CAAC30F,KAAKy4F,SAAUz4F,KAAK04F,OAAQ14F,KAAK24F,QAAS34F,KAAK44F,UACxDrD,OAAO,EAEf,CACAoD,OAAAA,GACI,MAAO,CACHhE,OAAQ,CAAC30F,KAAKg3F,MAAOh3F,KAAK04F,QAC1BtC,YAAY,EAEpB,CACAsC,MAAAA,GAEI,MAAO,CACH/D,OAAQ,CAAC30F,KAAK64F,IAAK74F,KAAK84F,OAAQ94F,KAAK+4F,KACrCzC,IAAM/2D,GAAUv/B,KAAK4vE,QAAQopB,cAAcz5D,EAAM82D,QAAQ,GAAY92D,EAAM82D,QAAQ,GAH1DvsF,MAAM,GAAI,IAK3C,CACAivF,GAAAA,GACI,MAAO,CACHpE,OAAQ,CAAC30F,KAAKi5F,KAAMj5F,KAAKk5F,MACzBvD,IAAI,EAEZ,CACAkD,GAAAA,GACI,MAAO,CAAE7D,MAAO,uBACpB,CACAkE,IAAAA,GACI,MAAO,CAAElE,MAAO,cACpB,CACAiE,IAAAA,GACI,MAAO,CAAEjE,MAAO,cACpB,CACA2C,QAAAA,GACI,MAAO,CAAE3C,MAAO,WACpB,CACA6C,MAAAA,GACI,MAAO,CAAE7C,MAAO,SACpB,CACAgD,WAAAA,GACI,MAAO,CAAEhD,MAAO,cACpB,CACA+C,UAAAA,GACI,MAAO,CAAE/C,MAAO,8CACpB,CACAuD,SAAAA,GACI,MAAO,CAAEvD,MAAO,YACpB,CACAqD,KAAAA,GACI,MAAO,CAAErD,MAAO,eACpB,CACAsC,MAAAA,GACI,MAAO,CAAEtC,MAAO,MACpB,CACAwC,MAAAA,GACI,MAAO,CAAExC,MAAO,MACpB,CACAgC,KAAAA,GACI,MAAO,CAAEhC,MAAO,MACpB,CACAiD,GAAAA,GACI,MAAO,CAAEjD,MAAO,MACpB,CACAmD,KAAAA,GACI,MAAO,CAAEnD,MAAO,MACpB,CACAoD,UAAAA,GACI,MAAO,CAAEpD,MAAO,OACpB,CACA8D,MAAAA,GACI,MAAO,CAAE9D,MAAO,MACpB,CACAyD,QAAAA,GACI,MAAO,CAAEzD,MAAO,MACpB,CACA4D,QAAAA,GACI,MAAO,CAAE5D,MAAO,MACpB,CACA4B,GAAAA,GACI,MAAO,CAAE5B,MAAO,IACpB,EAEG,MAAMmE,GACTx4F,WAAAA,CAAYg5D,GACR35D,KAAKrH,MAAQ,GACbqH,KAAK01E,KAAO,EACZ11E,KAAKiT,QAAU,CAAC,EAChBjT,KAAK25D,SAAWA,CACpB,EAEG,MAAMy/B,GACTz4F,WAAAA,CAAY04F,GACRr5F,KAAKs5F,YAAc,GACnBt5F,KAAKq5F,QAAUA,EACfr5F,KAAKknD,OACT,CACAA,KAAAA,CAAMj0C,GACFjT,KAAKiT,QAAU/X,OAAOK,OAAO,CAAEkkE,KAAM,OAAQnG,KAAM,UAAYrmD,GAC/DjT,KAAKu5F,SAAW,CAAE3+B,MAAO,GAAI1O,YAAa,IAC1ClsD,KAAKw5F,gBAAkB,IACvBx5F,KAAKy5F,YACT,CACAtpB,UAAAA,GACI,OAAOnwE,KAAKq5F,OAChB,CACAK,WAAAA,GACI,OAAO15F,KAAKu5F,QAChB,CACAI,aAAAA,CAAcC,GACV55F,KAAKs5F,YAAYz3F,KAAK+3F,EAC1B,CACAH,UAAAA,GACIv4F,GAAE,cACFlB,KAAK65F,MAAQ,IAAIV,GAAMn5F,KAAKw5F,gBAChC,CACAtB,WAAAA,CAAYxiB,GACRx0E,GAAE,eAAgBw0E,GACdA,IACA11E,KAAK65F,MAAMnkB,KAAOA,EAAKx4E,OAC/B,CACAs7F,eAAAA,CAAgB7+B,GACZz4D,GAAE,mBAAoBy4D,GACtB35D,KAAKw5F,gBAAkBx5F,KAAK65F,MAAMlgC,SAAWA,GAAY35D,KAAKw5F,eAClE,CACAlB,WAAAA,CAAY95F,GACR0C,GAAE,eAAgB1C,GACdA,IACAwB,KAAK65F,MAAMr7F,KAAOA,EAC1B,CACAw6F,aAAAA,CAAch/F,EAAKM,GACf4G,GAAE,sBAAuBlH,EAAK,SAAUM,GACxC0F,KAAK65F,MAAM5mF,QAAQjZ,GAAOM,CAC9B,CACAw/F,OAAAA,CAAQ9/F,EAAK+/F,EAAOzvC,GAChBppD,GAAE,WAAYlH,EAAK+/F,EAAOzvC,GAC1BtqD,KAAK65F,MAAMlhG,MAAMkJ,KAAK,CAClB7H,IAAKA,EACL+/F,QACAzvC,UAER,CACAwtC,aAAAA,CAAc99F,EAAK+/F,EAAOzvC,GACtBppD,GAAE,iBAAkBlH,EAAK+/F,EAAOzvC,GAChCtqD,KAAK85F,QAAQ9/F,EAAK+/F,EAAOzvC,EAC7B,CACAmtC,QAAAA,CAAS78B,GACL15D,GAAE,cACsB,kBAAb05D,EAAM,GACb56D,KAAK83F,cAAcl9B,EAAM,IAGzBA,EAAM1+D,SAASJ,IACPA,GACAkE,KAAK85F,WAAWh+F,MAG5BoF,GAAE,WACN,CACA61F,WAAAA,GACI71F,GAAE,eACF,MAAM,QAAEm4F,GAAYr5F,KACpB,IAAKq5F,EACD,OACJ,MAAMpmF,EAAU/X,OAAOK,OAAOL,OAAOK,OAAO,CAAC,EAAGyE,KAAKiT,SAAUjT,KAAK65F,MAAM5mF,SACpEwsD,EAAO9tB,EAAQ1+B,EAAQwsD,KAAM,eAAgB,+BAA+BxxD,cAC5EqrD,EAAO3nB,EAAQ1+B,EAAQqmD,KAAM,eAAgB,+BAA+BrrD,eAC5E,MAAEtV,EAAK,SAAEghE,EAAQ,KAAE+b,EAAI,KAAEl3E,GAASwB,KAAK65F,MACvCG,EAAsB/wC,EAAMiD,YAC5B9vD,EAAOzD,EAAMkB,KAAKogG,IACpB,IAAInkD,EACJ,OAAOmkD,EAAUjgG,KACZggG,EAAoBrpF,SAAoC,QAA1BmlC,EAAKmkD,EAAUF,aAA0B,IAAPjkD,EAAgBA,EAAK,IAAMmkD,EAAUF,MAAQ,IAC9G,IACAE,EAAU3vC,UAEZ80B,EAAoB,SAAT3f,EACX11D,EAA4E,OAA3D,OAATvL,QAA0B,IAATA,OAAkB,EAASA,EAAKyP,eACzDorF,EAAQa,UAAU,CAAEvgC,WAAU+b,SAC9B2jB,EAAQc,UAAU,CAAE/9F,OAAMu9D,WAAU+b,OAAMl3E,OAAM86D,OAAM8lB,aACvDA,GACDr1E,EAAKo0E,iBAA0B,OAAT1e,EAAgB9mB,EAAKgvB,GAAKhvB,EAAKivB,MACzD,MAAM1b,EAAc,GACpBvzD,EAAMuD,SAAQ,CAAC+9F,EAAWlgG,KACtB,MAAMggG,EAAQE,EAAUF,MACxB,GAAqB,kBAAVA,EAAoB,CAC3B,MAAMrwC,EAAa2vC,EAAQ9iD,WAAW,CAAE/3C,KAAMu7F,IAC9ChwF,EAAKw9D,YAAY7d,EAAY3vD,GAC7BmyD,EAAYrqD,KAAK6nD,EACrB,MAEIwC,EAAYrqD,UAAKhF,MAGzB,IAAK,IAAIjB,EAAI,EAAGA,EAAI85E,EAAM95E,IACtB2Q,GAAI6lF,eAAe,CAACroF,GAAO,CAAEsoF,KAAK,IACtCryF,KAAKs5F,YAAYp9F,SAAS09F,GAAeA,EAAW3mF,EAASlJ,EAAM/J,QACnEA,KAAKu5F,SAAS3+B,MAAM/4D,KAAKkI,GACzB/J,KAAKu5F,SAASrtC,YAAYrqD,KAAKqqD,GAC/BlsD,KAAKy5F,YACT,EAEJ,SAASW,GAAMnnF,EAASlJ,QACDlN,IAAfoW,EAAQ/M,IAEZ6D,EAAK6E,aAAa,KAAMqE,EAAQ/M,GACpC,CACA,MAAMm0F,GAAsB,UAC5B,SAASC,GAASrnF,EAASlJ,QACDlN,IAAlBoW,EAAQ2rC,OAEZ3rC,EAAQ2rC,MAAM3iD,MAAMo+F,IAAqBn+F,SAASgkD,GAAcn2C,EAAKu5C,SAASpD,IAClF,CACO,MAAMq2C,GACT51F,WAAAA,GAA0B,IAAdsS,EAAOhW,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,CAAC,EACnB+C,KAAKu6F,SAAW,CACZjhC,KAAM,SACN9vC,KAAM,MACNi2C,KAAM,QAEVz/D,KAAKkpE,WAAWj2D,EACpB,CACA1C,GAAAA,CAAIgqF,GAEA,OADAv6F,KAAKu6F,SAAWr/F,OAAOK,OAAOL,OAAOK,OAAO,CAAC,EAAGyE,KAAKu6F,UAAWA,GACzDv6F,IACX,CACAkpE,UAAAA,CAAWj2D,GACP,IAAI6iC,EAAI6J,EACR,MAAM05C,EAAUpmF,EAAQomF,QAClBzpB,EAAqC,QAA1B95B,EAAK7iC,EAAQ28D,eAA4B,IAAP95B,EAAgBA,EAAK,IAAIsjD,GAAQC,GAQpF,OAPAr5F,KAAKiT,QAAU/X,OAAOK,OAAOL,OAAOK,OAAO,CAAE+9F,YAAa,CAACc,GAAOE,GAAUprB,GAAaS,cAAev4B,GAAeu4B,eAAgB6qB,cAAc,GAASvnF,GAAU,CAAEomF,UACtKzpB,YACJ5vE,KAAKq5F,QAAUA,EACfr5F,KAAK4vE,QAAUA,EACf5vE,KAAKy0F,QAAU,IAAI+B,GAAiBx2F,KAAK4vE,SACzC5vE,KAAKy6F,OAAS,IAAIpG,GAAOr0F,KAAKy0F,SACM,QAAnC90C,EAAK3/C,KAAKiT,QAAQqmF,mBAAgC,IAAP35C,GAAyBA,EAAGzjD,SAAS09F,GAAe55F,KAAK25F,cAAcC,KAC5G55F,IACX,CACAikD,UAAAA,CAAWhkD,GAEP,OADAD,KAAKq5F,QAAQp1C,WAAWhkD,GACjBD,IACX,CACA40C,KAAAA,CAAM5C,GAAoB,IAAd/+B,EAAOhW,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,CAAC,EACnB+C,KAAK4vE,QAAQ1oB,MAAMj0C,GACnB,MAAMi9B,EAASlwC,KAAKy6F,OAAO7lD,MAAM5C,GACjC,IAAK9B,EAAOilD,SAAWn1F,KAAKiT,QAAQunF,aAEhC,MADAt5F,GAAEgvC,GACI,IAAIkB,EAAa,uBAAyBY,GAEpD,OAAO9B,CACX,CACAonC,IAAAA,CAAK1c,EAAO3nD,GAER,OADAjT,KAAKq5F,QAAQvd,KAAK,CAAElhB,QAAO3nD,YACpB2nD,CACX,CACAkY,MAAAA,CAAOlY,EAAO3nD,GAEV,OADAjT,KAAKq5F,QAAQ7/C,OAAO,CAAEohB,QAAO3nD,YACtB2nD,CACX,CACAA,KAAAA,CAAM5oB,GAAoB,IAAd/+B,EAAOhW,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,CAAC,EAGnB,OAFAgW,EAAU/X,OAAOK,OAAO,CAAE+9D,KAAMt5D,KAAKu6F,SAASjhC,KAAMmG,KAAMz/D,KAAKu6F,SAAS96B,MAAQxsD,GAChFjT,KAAK40C,MAAM5C,EAAM/+B,GACVjT,KAAK4vE,QAAQ8pB,cAAc9+B,KACtC,CACAsL,KAAAA,CAAMtL,GAAqB,IAAd3nD,EAAOhW,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,CAAC,EAEpB,OADAgW,EAAU/X,OAAOK,OAAO,CAAEiuB,KAAMxpB,KAAKu6F,SAAS/wE,MAAQvW,GAC/CjT,KAAKq5F,QAAQqB,MAAMznF,GAAS0nF,aAAa//B,EACpD,CACA++B,aAAAA,CAAcC,GACV55F,KAAK4vE,QAAQ+pB,cAAcC,EAC/B,EAEJrD,GAAUr0B,OAAQ,EC9WX,MAAM3qB,WAAiB48B,GAC1B,mBAAWzhC,GACP,MAAO,UACX,CACA/xC,WAAAA,CAAYi1E,GACR,IAAI9/B,EACJzE,MAAMukC,GACN51E,KAAK46F,aAAc,EACnB56F,KAAK66F,OAAS,CACV,SAAU,SACV,SAAU,UAEd76F,KAAKjG,MAAQ67E,EAAW77E,MACxBiG,KAAKZ,EAAIw2E,EAAWx2E,GAAK,EACzBY,KAAKX,EAAIu2E,EAAWv2E,GAAK,EACrBu2E,EAAWM,WACXl2E,KAAKk2E,SAAWN,EAAWM,UAC/Bl2E,KAAKi6D,UAAY2b,EAAW3b,YAAa,EACzCj6D,KAAK6oE,cAAgB+M,EAAW/M,eAAiBlwB,EAAKgvB,GACtD3nE,KAAKgyC,KAAO4jC,EAAW5jC,MAAQ,EAC/BhyC,KAAKo2E,WAAajC,GAAKC,cAAcp0E,KAAK25D,SAAU35D,KAAKk2E,UACzDvkC,EAAQ3xC,KAAKo2E,WAAY,eAAgB,gCAAFltE,OAAkClJ,KAAK25D,SAAQ,gBAAAzwD,OAAelJ,KAAKk2E,SAAQ,OAC7Gl2E,KAAKgyC,KAAO,GAAKhyC,KAAKgyC,KAAO,IAAMhyC,KAAK66F,OAAO76F,KAAKo2E,WAAW/B,YAChEr0E,KAAKo2E,WAAW/B,SAAWr0E,KAAK66F,OAAO76F,KAAKo2E,WAAW/B,WAE3Dr0E,KAAKupB,KAAOvpB,KAAKo2E,WAAW/B,SACxBuB,EAAWklB,kBACX96F,KAAK46F,aAAc,EACnB56F,KAAKupB,KAAOqsD,EAAWklB,iBAE3B96F,KAAKsiD,SAAqC,QAA3BxM,EAAK8/B,EAAWn+D,aAA0B,IAAPq+B,EAAgBA,EAAK,CAAC,GACxE91C,KAAK+6F,QAAUnlB,EAAWmlB,UAAW,EACrC/6F,KAAK+rE,cAAgB7wE,OAAOK,OAAO,CAAC,EAAGyE,KAAK+rE,cAChD,CACAlnB,QAAAA,GACI,OAAO7kD,KAAKjH,KAChB,CACAiiG,WAAAA,GACI,OAA0B,IAAnBh7F,KAAKi6D,SAChB,CACAghC,OAAAA,GACI,OAAOj7F,KAAKgyC,IAChB,CACAo+C,OAAAA,CAAQp+C,GAEJ,OADAhyC,KAAKgyC,KAAOA,EACLhyC,IACX,CACAk0E,YAAAA,GACI,MAAM90E,EAAKY,KAAK2zE,aAAwBtiC,MAAM6iC,eAAfl0E,KAAKZ,EAC9B87F,EAA6BviD,EAAKkvB,MAAQ,EAChD,OAAOzoE,GAAKY,KAAKi6D,WAAaj6D,KAAKjH,MAAQmiG,GAA8Bl7F,KAAK6oE,cAAgB,EAClG,CACA9f,QAAAA,CAASP,GACL,MAAMxW,EAAOhyC,KAAKi7F,UAMlB,OALAj7F,KAAKwoD,MAAQA,EACTxoD,KAAKwoD,QACLxoD,KAAKm6C,KAAKn6C,KAAKwoD,MAAM2yC,YAAYnpD,IACjChyC,KAAKikD,WAAWjkD,KAAKwoD,MAAMxE,eAExBhkD,IACX,CACA0zE,SAAAA,GACI,OAAI1zE,KAAK2zE,eAET3zE,KAAK2zE,cAAe,GADT3zE,IAGf,CACAmjD,IAAAA,GACI,IAAIrN,EACJ,MAAMkN,EAAMhjD,KAAKijD,eACjBjjD,KAAKyjD,cACLT,EAAI0nB,UAAU,WAAY1qE,KAAKw/C,aAAa,OA3EpD,WAAoB,QAAA3N,EAAA50C,UAAAC,OAAN40C,EAAI,IAAAhxC,MAAA+wC,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA90C,UAAA80C,GACVwF,GAAS2qB,OACTtlD,EAAI,mBAAoBk1B,EAChC,CAyEQ5wC,CAAE,sBAAuBlB,KAAKk2E,SAAUl2E,KAAK25D,SAAU,OAAQ35D,KAAKZ,EAAGY,KAAKX,GAC5EW,KAAKZ,EAAIY,KAAKk0E,eACdl0E,KAAKslD,WAAWtC,EAAK,EAAG,GACD,QAAtBlN,EAAK91C,KAAKoiD,cAA2B,IAAPtM,GAAyBA,EAAGslD,cAAcp7F,MACzEgjD,EAAI8nB,YACR,EAEJvzB,GAAS2qB,OAAQ,EChFV,MAAMm5B,WAAah7C,EACtB,mBAAW3N,GACP,MAAO,MACX,CACAyQ,IAAAA,GACI,MAAMH,EAAMhjD,KAAKijD,eACjBjjD,KAAKyjD,cACLT,EAAI0nB,UAAU,OAAQ1qE,KAAKw/C,aAAa,OAXhD,WAAoB,QAAA3N,EAAA50C,UAAAC,OAAN40C,EAAI,IAAAhxC,MAAA+wC,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA90C,UAAA80C,GACVspD,GAAKn5B,OACLtlD,EAAI,eAAgBk1B,EAC5B,CASQ5wC,CAAE,iBAAkBlB,KAAKupB,KAAM,OAAQvpB,KAAKZ,EAAGY,KAAKX,GACpDW,KAAKslD,WAAWtC,EAAK,EAAG,GACxBA,EAAI8nB,YACR,EAEJuwB,GAAKn5B,OAAQ,ECbN,MAAMo5B,WAAsBnnB,GAC/B,mBAAWzhC,GACP,MAAO,eACX,CACA/xC,WAAAA,CAAYi1E,GACRvkC,MAAMukC,GACN51E,KAAKoyE,KAAO,IAAIipB,EACpB,CACApvB,OAAAA,GACI,OAAOjsE,KAAKy/D,IAChB,CACAkO,SAAAA,GACI,IAAK3tE,KAAKy/D,KACN,MAAM,IAAIruB,EAAa,SAAU,gCAErC,OAAOpxC,KAAKy/D,IAChB,CACA87B,OAAAA,CAAQ97B,GAGJ,OAFAz/D,KAAKy/D,KAAOA,EACZz/D,KAAKmiD,SAASsd,GACPz/D,IACX,CACAw7F,SAAAA,GACI,MAAM/7B,EAAO,IAAI9mB,EAEjB,OADA34C,KAAKu7F,QAAQ97B,GACNz/D,IACX,CACAy7F,SAAAA,GACI,IAAI3lD,EAAI6J,EAAIooB,EACZ,MAAM,WAAEqO,GAAep2E,KACvB,GAAIA,KAAK07F,UAAW,CAChB,MAAMC,EAAW37F,KAAK6rE,qBAAuBlzB,EAAKivB,KAC5CnsE,OAAOmgG,eAA8G,QAA9Fj8C,EAAsC,QAAhC7J,EAAKsgC,EAAWxW,kBAA+B,IAAP9pB,OAAgB,EAASA,EAAGu6B,YAAY,UAAuB,IAAP1wB,EAAgBA,GAAM,GAAK,GACtH,QAAhCooB,EAAKqO,EAAWxW,kBAA+B,IAAPmI,EAAgBA,EAAK5hB,EAAO0Y,KAC5E7+D,KAAKoyE,KAAKhtB,QAAQu2C,GAClB37F,KAAKoyE,KAAK/1B,SAAWr8C,KAAKq8C,QAC9B,CACJ,CACAw/C,+BAAAA,GACI,OAAI77F,KAAK6rE,qBAAuBlzB,EAAKivB,KAC1B5nE,KAAKq2E,aAAar2E,KAAKq2E,aAAan5E,OAAS,GAG7C8C,KAAKq2E,aAAa,EAEjC,CACAylB,aAAAA,GACI,OAAOnjD,EAAKmvB,OAAS9nE,KAAK+7F,kBAC9B,CACArc,YAAAA,GACI,MAAMtJ,EAAap2E,KAAKo0E,gBACxB,OAAIgC,EACOA,EAAW1W,UAGX,CAEf,CACAs8B,oBAAAA,GACI,MAAMC,EAAO7iC,EAAO6B,mBAAmBj7D,KAAK25D,UACtCuiC,OAAgCr/F,IAAdmD,KAAKs3E,KAC7B,IAAIp6E,EAAS++F,EAAK3hG,SAAW,EAAI,EAAI,GACrC,OAAQ0F,KAAK25D,UACT,IAAK,IACL,IAAK,KACDz8D,EAASg/F,EAAkB,GAAK,GAChC,MACJ,IAAK,KACDh/F,EAASg/F,EAAkB,GAAK,GAChC,MACJ,IAAK,KACDh/F,EAASg/F,EAAkB,GAAK,GAChC,MACJ,IAAK,MACDh/F,EAASg/F,EAAkB,GAAK,GAKxC,OAAOh/F,CACX,CACA2uE,gBAAAA,GACI,IAAK7rE,KAAK6oE,cACN,MAAM,IAAIz3B,EAAa,SAAU,kCACrC,OAAOpxC,KAAK6oE,aAChB,CACAsV,gBAAAA,CAAiB9vB,GAGb,GAFKA,IACDA,EAAY1V,EAAKgvB,IACjBtZ,IAAc1V,EAAKgvB,IAAMtZ,IAAc1V,EAAKivB,KAC5C,MAAM,IAAIx2B,EAAa,cAAe,2BAAFloC,OAA6BmlD,IAerE,OAbAruD,KAAK6oE,cAAgBxa,EACrBruD,KAAKknD,QACDlnD,KAAK07F,WACL17F,KAAKy7F,YAETz7F,KAAKs3E,UAAOz6E,EACRmD,KAAKy/D,OACLz/D,KAAKy/D,KAAK2J,aAAa/a,GACvBruD,KAAKy/D,KAAK4J,aAAarpE,KAAK+7F,qBAE5B/7F,KAAK2zE,cACL3zE,KAAK0zE,YAEF1zE,IACX,CACAwtE,QAAAA,GACI,MAAMhF,EAASxoE,KAAKk0E,eAAiBl0E,KAAK8hD,OACpC2mB,EAAOzoE,KAAKk0E,eAAiBl0E,KAAK8hD,OAAS9hD,KAAK0rE,gBAEtD,OADc1rE,KAAK6oE,gBAAkBlwB,EAAKivB,KAAOY,EAASC,CAE9D,CACA0zB,eAAAA,GACI,OAAOn8F,KAAKk0E,eAAiBl0E,KAAK8hD,OAAS9hD,KAAK0rE,gBAAkB,CACtE,CACAqwB,gBAAAA,GACI,MAAM3lB,EAAap2E,KAAKo0E,gBAClBgoB,EAAap8F,KAAKoyE,KAAKvsB,YACvB4J,EAAQzvD,KAAK0kD,eACnB,YAAmC7nD,IAA/BmD,KAAKq8F,sBACEr8F,KAAKq8F,sBAEZr8F,KAAKs3E,KACElB,EAAWzW,kBAAoBlQ,EAEnC2sC,EAAazjD,EAAKmvB,OAASrY,EAAQ2sC,EAAazjD,EAAKmvB,OAASrY,EAAQ,CACjF,CACA6sC,aAAAA,CAAc11E,GAEV,OADA5mB,KAAKq8F,sBAAwBz1E,EAAS+xB,EAAKmvB,OACpC9nE,IACX,CACAkuE,cAAAA,GACI,IAAKluE,KAAKy/D,KACN,MAAM,IAAIruB,EAAa,SAAU,kCACrC,OAAOpxC,KAAKy/D,KAAKgK,YACrB,CACAqE,cAAAA,CAAe9mB,GACX,MAAMwB,EAAQxoD,KAAK0tE,aACnB,GAAI1tE,KAAK4rE,UAAW,CAChB,MAAMqC,EAAUjuE,KAAKkuE,iBACrB,IAAKD,EACD,MAAM,IAAI78B,EAAa,eAAgB,+BAC3C,OAAOnpC,KAAKykB,IAAI87B,EAAMslB,eAAe9mB,GAAWinB,EAAQlE,KAAO/pE,KAAK+rE,cAAcwK,mBAAqBvvB,EAAW,GACtH,CAEI,OAAOwB,EAAMslB,eAAe9mB,EAEpC,CACA+mB,iBAAAA,CAAkB/mB,GACd,MAAMwB,EAAQxoD,KAAK0tE,aACnB,GAAI1tE,KAAK4rE,UAAW,CAChB,MAAMqC,EAAUjuE,KAAKkuE,iBACrB,IAAKD,EACD,MAAM,IAAI78B,EAAa,eAAgB,+BAC3C,OAAOnpC,KAAK2yC,IAAI4N,EAAMslB,eAAe9mB,GAAWinB,EAAQjE,MAAQhqE,KAAK+rE,cAAcwK,kBAAoBvvB,EAC3G,CAEI,OAAOwB,EAAMulB,kBAAkB/mB,EAEvC,CACA00C,OAAAA,GACI,YAAsC7+F,IAA/BmD,KAAKo2E,WAAWxW,aAA6B5/D,KAAKs3E,OAASt3E,KAAK8mE,QAC3E,CACA8M,UAAAA,GACI,IAAI99B,EAGJ,OAFqB,QAApBA,EAAK91C,KAAKs3E,YAAyB,IAAPxhC,GAAyBA,EAAG89B,aACzD5zE,KAAK6zE,eAAgB,EACd7zE,IACX,CACAgsE,QAAAA,CAASuwB,GACL,IAAIzmD,EACJ91C,KAAKijD,eACLjjD,KAAKyjD,cACLzjD,KAAKu7F,QAAQ,IAAI5iD,EAAK4jD,IACD,QAApBzmD,EAAK91C,KAAKy/D,YAAyB,IAAP3pB,GAAyBA,EAAGmO,WAAWjkD,KAAKgkD,cAAcjB,eAC3F,ECvKJ,SAASy5C,GAAkBC,EAAM1yF,EAAM2yF,GACnC,MAAMC,EAAQD,EACdD,EAAKzqD,MAAQ2qD,EACbF,EAAKG,SAAWD,EAChBF,EAAKI,SAAWF,EAChBF,EAAK1yF,KAAK+yF,WAAW,EAAGL,EAAK1yF,KAAKgzF,WAAW,GAAKJ,EACtD,CAQO,MAAMxC,WAAkBmB,GAC3B,mBAAW5oD,GACP,MAAO,WACX,CACA,6BAAWsqD,GACP,OAAO,CACX,CACA,6BAAWC,GACP,OAAOnoD,EAAQxjC,IAAI,sBACvB,CACA,aAAO6wD,CAAOvH,EAAOr7B,GACjB,IAAKq7B,GAASA,EAAM19D,OAAS,EACzB,OAAO,EACX,MAAMggG,EAAY,GAClB,IAAK,IAAIthG,EAAI,EAAGA,EAAIg/D,EAAM19D,OAAQtB,IAAK,CACnC,MAAM6C,EAAQm8D,EAAMh/D,GAAGuhG,eACjBnrD,EAAOvzC,EAAM,GAAGw3E,SAASjkC,KAC/B,IAAIorD,EAAO3+F,EAAMA,EAAMvB,OAAS,GAAG+4E,SAASjkC,KAC5C,MAAM62B,EAAgBjO,EAAMh/D,GAAGiwE,mBACzBwxB,EAAUziC,EAAMh/D,GAAGkgG,gBAAkB,GACrCwB,EAAU1iC,EAAMh/D,GAAGogG,uBAAyB,GAClD,IAAIuB,EACA3iC,EAAMh/D,GAAGkrE,UACTy2B,EACIvrD,EACI/pC,KAAK4/B,KAAK+yB,EAAMh/D,GAAG4hG,WAAW,GAAG53C,iBAAiBzE,wBAA0BiY,EAAOiH,qBAC3F+8B,EACIprD,EACI/pC,KAAK4/B,KAAK+yB,EAAMh/D,GAAG4hG,WAAW,GAAG53C,iBAAiBxE,yBAA2BgY,EAAOiH,uBAG5Fk9B,EACsB,IAAlB10B,EAAsBpqE,EAAMA,EAAMvB,OAAS,GAAG+4E,SAASjkC,KAAOqrD,EAAU5+F,EAAMA,EAAMvB,OAAS,GAAG+4E,SAASjkC,KAC7GorD,EAAyB,IAAlBv0B,EAAsBpqE,EAAM,GAAGw3E,SAASjkC,KAAOvzC,EAAM,GAAGw3E,SAASjkC,KAAOqrD,GAEnFH,EAAUr7F,KAAK,CACXmwC,KAAMvzC,EAAM,GAAGw3E,SAASjkC,KACxB4qD,QAASW,EACTV,QAASO,EACTK,OAAQ7iC,EAAMh/D,GAAGkrE,SACjB+B,gBACAw0B,UACAC,UACAI,WAAY9iC,EAAMh/D,GAAG+hG,qBACrB3C,YAAapgC,EAAMh/D,GAAGo/F,cACtBjxF,KAAM6wD,EAAMh/D,IAEpB,CACA,IACIgiG,EACAC,EACAC,EAHA/3B,EAAS,EAIb,MAAM5iB,EAAO,EAAC,GAAO,GAAO,GAC5B,IAAK,IAAIvnD,EAAI,EAAGA,EAAIshG,EAAUhgG,OAAQtB,IAClCunD,EAAKvnD,IAA8C,IAAzCshG,EAAUthG,GAAGmO,KAAKgiE,cAAc5oB,KAE9C,GAAIA,EAAK,IAAMA,EAAK,IAAMA,EAAK,GAC3B4iB,EAAS,EACT63B,EAAQV,EAAU,GAClBW,EAAQX,EAAU,GAClBY,EAAQZ,EAAU,QAEjB,GAAI/5C,EAAK,IAAMA,EAAK,GACrB4iB,EAAS,EACT63B,EAAQV,EAAU,GAClBY,EAAQZ,EAAU,QAEjB,GAAI/5C,EAAK,IAAMA,EAAK,GACrB4iB,EAAS,EACT63B,EAAQV,EAAU,GAClBY,EAAQZ,EAAU,OAEjB,KAAI/5C,EAAK,KAAMA,EAAK,GAMrB,OAAO,EALP4iB,EAAS,EACT63B,EAAQV,EAAU,GAClBY,EAAQZ,EAAU,EAItB,CACe,IAAXn3B,IAAyC,IAAzB63B,EAAM/0B,eAAgD,IAAxBi1B,EAAMj1B,gBACpD+0B,EAAQV,EAAU,GAClBY,EAAQZ,EAAU,IAEtB,MAAMa,EAAc91F,KAAK2yC,IAAIgjD,EAAMF,WAAYI,EAAMJ,YACrD,IAAI57C,EAAS,EACb,GAAe,IAAXikB,EAAc,CACd,MAAMi4B,EAAcJ,EAAM7zF,KAAK6hE,WAAakyB,EAAM/zF,KAAK6hE,WAAagyB,EAAM/0B,gBAAkBi1B,EAAMj1B,cAAgB,EAAM,GACxH,GAAIi1B,EAAML,QAAUG,EAAMH,QAAUG,EAAM7zF,KAAK4vD,WAAamkC,EAAM/zF,KAAK4vD,SACnEmkC,EAAM/zF,KAAKgiE,cAAc5oB,MAAO,OAE/B,GAAIy6C,EAAMf,SAAWiB,EAAMlB,QAAUoB,EACtC,GAAIJ,EAAMH,OACNjB,GAAkBoB,EAAOE,EAAO,QAE/B,GAAIA,EAAML,OACXjB,GAAkBsB,EAAOF,GAAQ,OAEhC,CACD,MAAMK,EAAWh2F,KAAKwsC,IAAImpD,EAAM5rD,KAAO8rD,EAAM9rD,MAC7C,GAAI4rD,EAAM7zF,KAAK6hE,WAAakyB,EAAM/zF,KAAK6hE,UAAW,CAC9C,MAAMsyB,EAAYN,EAAM7zF,KAAKozF,eAAe,GAAGlnB,SAAS3vD,KAClD63E,EAAYL,EAAM/zF,KAAKozF,eAAeW,EAAM/zF,KAAKozF,eAAejgG,OAAS,GAAG+4E,SAAS3vD,MACtF8yC,EAAO8F,QACRg/B,IAAcC,GACdP,EAAM7zF,KAAKs9D,eAAe9sE,QAAQkqE,GAAgC,QAAvBA,EAAKpiB,eAA+C,IAApBoiB,EAAKnd,aAC3EpqD,SACD4gG,EAAM/zF,KAAKs9D,eAAe9sE,QAAQkqE,GAAgC,QAAvBA,EAAKpiB,eAA+C,IAApBoiB,EAAKnd,aAC3EpqD,QACR+gG,EAAW,GAAKA,EAAW,GAC5B7wD,KAAKC,UAAUuwD,EAAM7zF,KAAKwrC,cAAgBnI,KAAKC,UAAUywD,EAAM/zF,KAAKwrC,aACpEuM,EAASi8C,EAAc,EACnBH,EAAM/0B,gBAAkBi1B,EAAMj1B,cAC9B+0B,EAAM7zF,KAAKm7C,UAAUpD,GAGrBg8C,EAAM/zF,KAAKm7C,UAAUpD,IAGpB87C,EAAM7zF,KAAKm8D,QAAU43B,EAAM/zF,KAAKm8D,OACjC03B,EAAM/0B,gBAAkBi1B,EAAMj1B,gBAC1B+0B,EAAM5rD,OAAS8rD,EAAM9rD,MACrB8P,EAASi8C,EAAc,EACvBH,EAAM7zF,KAAKm7C,UAAUpD,IAGO,IAAxBg8C,EAAMj1B,gBACNi1B,EAAMj1B,eAAiB,EACvBi1B,EAAM/zF,KAAKo0E,kBAAkB,IAKjD,MACS8f,EAAW,GAChBn8C,EAASi8C,EAAc,EACnBH,EAAM7zF,KAAK4vD,SAAWmkC,EAAM/zF,KAAK4vD,SACjCikC,EAAM7zF,KAAKm7C,UAAUpD,GAGrBg8C,EAAM/zF,KAAKm7C,UAAUpD,IAGpB87C,EAAM7zF,KAAK6hE,WAChBgyB,EAAM/0B,eAAiB+0B,EAAM7zF,KAAK8hE,mBAClC+xB,EAAM7zF,KAAKo0E,iBAAiByf,EAAM/0B,gBAE7Bi1B,EAAM/zF,KAAK6hE,YAChBkyB,EAAMj1B,eAAiBi1B,EAAM/zF,KAAK8hE,mBAClCiyB,EAAM/zF,KAAKo0E,iBAAiB2f,EAAMj1B,eAE1C,CAGJ,OADAtpC,EAAMwtC,YAAcjrB,GACb,CACX,CACA,IAAK+7C,EACD,MAAM,IAAIzsD,EAAa,eAAgB,sBAC3C,GAAIysD,EAAMJ,SAAWG,EAAMH,SAAWK,EAAML,SACpCG,EAAMf,SAAWgB,EAAMjB,SAAWiB,EAAMhB,SAAWiB,EAAMlB,SAAS,CAmBlE,OAlBmBiB,EAAMjB,QAAUiB,EAAMhB,QAC3Be,EAAMf,QAAUiB,EAAMlB,QAxKpD,SAAoBH,EAAMmB,EAAOE,GAC7B,MAAMnB,EAAQF,EAAKzqD,KAAOC,EAAQ2rD,EAAMf,QAASiB,EAAMlB,SACvDH,EAAK1yF,KAAK+yF,WAAW,EAAGL,EAAK1yF,KAAKgzF,WAAW,GAAKJ,GAClDF,EAAKzqD,MAAQ2qD,EACbF,EAAKG,SAAWD,EAChBF,EAAKI,SAAWF,CACpB,CAoKoByB,CAAWP,EAAOD,EAAOE,IAGzBh8C,EAASi8C,EAAc,EACvBF,EAAM9zF,KAAKm7C,UAAUpD,IACQ,IAAzBg8C,EAAM/zF,KAAKytE,YACXsmB,EAAMj1B,eAAiB,EACvBi1B,EAAM/zF,KAAKo0E,kBAAkB,IAE7Byf,EAAMf,SAAWiB,EAAMlB,UAAoC,IAAzBgB,EAAM7zF,KAAKytE,YAC7ComB,EAAM/0B,cAAgB,EACtB+0B,EAAM7zF,KAAKo0E,iBAAiB,KAGpC5+C,EAAMwtC,YAAcjrB,GACb,CACX,CAEJ,OAAI87C,EAAMH,QAAUI,EAAMJ,QAAUK,EAAML,QACtCG,EAAM7zF,KAAKgiE,cAAc5oB,MAAO,EAChC26C,EAAM/zF,KAAKgiE,cAAc5oB,MAAO,EAChC5jB,EAAMwtC,YAAcjrB,GACb,IAEP+7C,EAAMJ,QAAUG,EAAMH,QAAUI,EAAMhB,SAAWiB,EAAMlB,UACvDiB,EAAM9zF,KAAKgiE,cAAc5oB,MAAO,GAEhC06C,EAAMJ,QAAUK,EAAML,QAAUG,EAAMf,SAAWgB,EAAMjB,UACvDiB,EAAM9zF,KAAKgiE,cAAc5oB,MAAO,GAEhCy6C,EAAMH,QAAUG,EAAMf,SAAWgB,EAAMjB,SACvCJ,GAAkBoB,EAAOC,EAAO,GAEhCC,EAAML,QAAUI,EAAMhB,SAAWiB,EAAMlB,SACvCJ,GAAkBsB,EAAOD,GAAQ,IAEjCD,EAAMf,SAAWgB,EAAMjB,QAAU,IAAOiB,EAAMhB,SAAWiB,EAAMlB,WAC/D96C,EAASi8C,EAAc,EACvBF,EAAM9zF,KAAKm7C,UAAUpD,IACQ,IAAzBg8C,EAAM/zF,KAAKytE,YACXsmB,EAAMj1B,eAAiB,EACvBi1B,EAAM/zF,KAAKo0E,kBAAkB,IAE7Byf,EAAMf,SAAWiB,EAAMlB,UAAoC,IAAzBgB,EAAM7zF,KAAKytE,YAC7ComB,EAAM/0B,cAAgB,EACtB+0B,EAAM7zF,KAAKo0E,iBAAiB,KAGpC5+C,EAAMwtC,YAAcjrB,GACb,EACX,CACA,iBAAO8xB,CAAWhZ,GACd,QAAKA,IAELA,EAAM1+D,SAAS6N,GAASA,EAAK6pE,gBACtB,EACX,CACAjzE,WAAAA,CAAYi1E,GACR,IAAI9/B,EAAI6J,EAAIooB,EACZ12B,MAAMukC,GACN51E,KAAK68F,QAAU,EACf78F,KAAK48F,QAAU,EACf58F,KAAKm9F,eAAiB,GACtBn9F,KAAKq+F,gBAAkB,CAAC,EACxBr+F,KAAKs5D,KAAkC,QAA1BxjB,EAAK8/B,EAAWtc,YAAyB,IAAPxjB,EAAgBA,EAAK,SACpE91C,KAAK05D,YAAgD,QAAjC/Z,EAAKi2B,EAAWlc,mBAAgC,IAAP/Z,EAAgBA,EAAK,EAClF3/C,KAAKo2E,WAAajC,GAAKC,cAAcp0E,KAAK25D,SAAU35D,KAAKk2E,UACzDvkC,EAAQ3xC,KAAKo2E,WAAY,eAAgB,gCAAFltE,OAAkClJ,KAAK25D,SAAQ,gBAAAzwD,OAAelJ,KAAKk2E,SAAQ,MAClHl2E,KAAKi6D,WAAY,EACjBj6D,KAAK8yF,UAAY,EACjB9yF,KAAKs+F,iBAAkB,EACvBt+F,KAAKw9F,WAAa,GAClBx9F,KAAKuxE,UAAY,GACjBvxE,KAAK+rE,cAAgB7wE,OAAOK,OAAOL,OAAOK,OAAO,CAAC,EAAGyE,KAAK+rE,eAAgB,CAAEyK,SAAUZ,EAAWY,UAAY2jB,GAAU6C,qBACvHh9F,KAAKu+F,oBACLv+F,KAAKw7F,YACD5lB,EAAWwJ,SACXp/E,KAAKo/E,WAGLp/E,KAAKm+E,iBAAqD,QAAnCpW,EAAK6N,EAAW/M,qBAAkC,IAAPd,EAAgBA,EAAKpvB,EAAKgvB,IAEhG3nE,KAAKknD,QACLlnD,KAAKy7F,WACT,CACAv0C,KAAAA,GACI7V,MAAM6V,QACN,MAAMs3C,EAAiBx+F,KAAKw9F,WAAW3jG,KAAK4kG,GAAaA,EAASlpD,aAClEv1C,KAAK0+F,iBACL1+F,KAAKw9F,WAAWthG,SAAQ,CAACuiG,EAAU1kG,KAC/B,MAAM4kG,EAAgBH,EAAezkG,GACjC4kG,GACAF,EAASn8C,SAASq8C,MAE1B,MAAMn2C,EAAQxoD,KAAKwoD,MAKnB,OAJIA,GACAxoD,KAAK+oD,SAASP,GAElBxoD,KAAK4+F,wBACE5+F,IACX,CACAy3E,OAAAA,CAAQH,GAMJ,OALAt3E,KAAKs3E,KAAOA,EACZt3E,KAAK4+F,wBACD5+F,KAAKy/D,MACLz/D,KAAKy/D,KAAK4J,aAAarpE,KAAK+7F,oBAEzB/7F,IACX,CACAw7F,SAAAA,GAEI,OADAx7F,KAAKu7F,QAAQ,IAAI5iD,EAAK,CAAEmwB,KAAM9oE,KAAK8mE,YAC5B9mE,IACX,CACA0+F,cAAAA,GACI1+F,KAAKw9F,WAAa,GAClB,MAAM30B,EAAgB7oE,KAAK6rE,mBACrBzvE,EAAO4D,KAAKu4E,UAClB,IAAIoa,EACAsL,EAEA3xE,EACAC,EACA+uB,EAHA2e,GAAY,EAIZ4O,IAAkBlwB,EAAKgvB,IACvBr7C,EAAQ,EACRC,EAAMnwB,EAAKc,OACXo+C,EAAO,IAGPhvB,EAAQlwB,EAAKc,OAAS,EACtBqvB,GAAO,EACP+uB,GAAQ,GAEZ,IAAK,IAAI1/C,EAAI0wB,EAAO1wB,IAAM2wB,EAAK3wB,GAAK0/C,EAAM,CACtC,MAAMujD,EAAY7+F,KAAKm9F,eAAevhG,GAAGq6E,SACnCjkC,EAAO6sD,EAAU7sD,UACNn1C,IAAb81F,EACAA,EAAW3gD,GAGXisD,EAAWh2F,KAAKwsC,IAAIk+C,EAAW3gD,GACd,IAAbisD,GAA+B,KAAbA,EAClBhkC,GAAaA,GAGbA,GAAY,EACZj6D,KAAKs+F,iBAAkB,IAG/B3L,EAAW3gD,EACX,MAAM8sD,EAAW,IAAIvnD,GAAS,CAC1BoiB,SAAU35D,KAAK25D,SACfuc,SAAUl2E,KAAKk2E,SACfjc,YACA4O,gBACAiyB,gBAAiB+D,EAAUv4E,KAC3B0rB,KAAM6sD,EAAU7sD,OAEpB8sD,EAASziD,SAAWr8C,KAAKq8C,SACzBr8C,KAAKmiD,SAAS28C,GACd9+F,KAAKw9F,WAAWx9F,KAAKm9F,eAAevhG,GAAG7B,OAAS+kG,CACpD,CACA,OAAO9+F,KAAKw9F,UAChB,CACApe,QAAAA,GACIp/E,KAAKm+E,iBAAiBn+E,KAAK++F,gCAC/B,CACAA,6BAAAA,GACI/+F,KAAK68F,QAAU78F,KAAKm9F,eAAe,GAAGlnB,SAASjkC,KAC/ChyC,KAAK48F,QAAU58F,KAAKm9F,eAAen9F,KAAKi2E,SAAS/4E,OAAS,GAAG+4E,SAASjkC,KAItE,OAFiBhyC,KAAK68F,QAAU78F,KAAK48F,SAAW,EAD5B,EAE0BjkD,EAAKgvB,GAAKhvB,EAAKivB,IAEjE,CACA22B,iBAAAA,GACI,IAAIzoD,EACJ,IAAI68C,EACJ,IAAK,IAAI/2F,EAAI,EAAGA,EAAIoE,KAAK5D,KAAKc,SAAUtB,EAAG,CACvC,MAAM5B,EAAMgG,KAAK5D,KAAKR,GAChBqX,EAAU,CAAEymD,YAAyC,QAA3B5jB,EAAK91C,KAAK05D,mBAAgC,IAAP5jB,EAAgBA,EAAK,EAAG6jB,SAAU35D,KAAK25D,UACpGl7D,EAAQ26D,EAAOG,cAAcv/D,EAAKgG,KAAKs5D,KAAMt5D,KAAKk2E,SAAUjjE,GAClE,IAAKxU,EACD,MAAM,IAAI2yC,EAAa,eAAgB,oCAAFloC,OAAsClP,IAE7D,MAAdyE,EAAMzE,MACgB,MAAlBgG,KAAK25D,UAAsC,MAAlB35D,KAAK25D,SAC9Bl7D,EAAMuzC,KAAO,EAGbvzC,EAAMuzC,KAAO,GAGrB,MAAMA,EAAOvzC,EAAMuzC,UACFn1C,IAAb81F,EACAA,EAAW3gD,EAGP/pC,KAAKwsC,IAAIk+C,EAAW3gD,GAAQ,IAC5BhyC,KAAKi6D,WAAY,EACjBx7D,EAAMw7D,WAAY,EACdj6D,KAAKi2E,SAAS/4E,OAAS,IACvB8C,KAAKi2E,SAASr6E,EAAI,GAAGq+D,WAAY,IAI7C04B,EAAW3gD,EACXhyC,KAAKi2E,SAASp0E,KAAKpD,EACvB,CACAuB,KAAKi2E,SAAS/5E,SAAQ,CAAC+5E,EAAUl8E,KAC7BiG,KAAKm9F,eAAet7F,KAAK,CAAEo0E,WAAUl8E,aAEzCiG,KAAKm9F,eAAeh6B,MAAK,CAACllE,EAAGE,IAAMF,EAAEg4E,SAASjkC,KAAO7zC,EAAE83E,SAASjkC,MACpE,CACA8R,cAAAA,GACI,MAAMtJ,EAAc,IAAIZ,EAAY55C,KAAKk0E,eAAgBl0E,KAAK2pE,GAAG,GAAI,EAAG,GACxE3pE,KAAKw9F,WAAWthG,SAAS4iG,IACrBtkD,EAAYD,UAAUukD,EAASh7C,qBAEnC,MAAM,KAAE4kB,EAAI,QAAEC,GAAY3oE,KAAKg/F,oBAC/B,IAAKh/F,KAAK8mE,UAAY9mE,KAAK4rE,UAAW,CAClC,MAAMqzB,EAAiBj/F,KAAKy/D,KAAK5Z,YAC3B0kB,EAAQvqE,KAAK6rE,qBAAuBlzB,EAAKivB,KACzCc,EAAOu2B,EAAiBj/F,KAAKoyE,KAAKxsB,iBAAiBxE,yBACnDunB,EAAUs2B,EAAiBj/F,KAAKoyE,KAAKxsB,iBAAiBzE,wBAC5D3G,EAAYD,UAAU,IAAIX,EAAY55C,KAAKk0E,eAAgB3J,EAAO,EAAG,GACzE,CACA,GAAIvqE,KAAK07F,UAAW,CAChB,MAAMwD,EAASl/F,KAAKoyE,KAAKtuB,iBACzBtJ,EAAYD,UAAU2kD,EAC1B,CACA,IAAK,IAAItjG,EAAI,EAAGA,EAAIoE,KAAKuxE,UAAUr0E,OAAQtB,IACvC4+C,EAAYD,UAAUv6C,KAAKuxE,UAAU31E,GAAGkoD,kBAE5C,OAAOtJ,CACX,CACAgyB,aAAAA,CAAcwK,GACV,IAAKh3E,KAAKi2E,SAAS/4E,OACf,MAAM,IAAIk0C,EAAa,aAAc,yEAEzC,IAAI+tD,EAAan/F,KAAKi2E,SAAS,GAAGjkC,KAClC,IAAK,IAAIp2C,EAAI,EAAGA,EAAIoE,KAAKi2E,SAAS/4E,OAAQtB,IAAK,CAC3C,MAAMwjG,EAAWp/F,KAAKi2E,SAASr6E,GAAGo2C,KAC9BglC,EACIooB,EAAWD,IACXA,EAAaC,GAGbA,EAAWD,IACXA,EAAaC,EAEzB,CACA,OAAOD,CACX,CACAr4B,MAAAA,GACI,MAAMlqE,EAAMoD,KAAKo2E,WAAW/B,SAC5B,OAAOz3E,GAAO,UAAYA,GAAO,QACrC,CACAyiG,OAAAA,GACI,OAAQr/F,KAAK8mE,UAAY9mE,KAAK5D,KAAKc,OAAS,CAChD,CACA0uE,OAAAA,GACI,OAAO5rE,KAAKo2E,WAAW3W,IAC3B,CACAi8B,OAAAA,GACI,OAAOrqD,MAAMqqD,YAAc17F,KAAK8mE,QACpC,CACA0G,QAAAA,GACI,MAAsB,MAAlBxtE,KAAKk2E,SACEl2E,KAAKm8F,kBAGL9qD,MAAMm8B,YAAcxtE,KAAK6oE,cAAgBlwB,EAAKkvB,OAAS,GAAK7nE,KAAK6oE,eAAiB,EAEjG,CACAiF,cAAAA,CAAe9mB,GACX,MAAMinB,EAAUjuE,KAAKkuE,iBACrB,OAAOjmE,KAAKykB,IAAI1sB,KAAK0tE,aAAaI,eAAe9mB,GAAWinB,EAAQlE,KAAO/pE,KAAK+rE,cAAcwK,mBAAqBvvB,EAAW,GAClI,CACA+mB,iBAAAA,CAAkB/mB,GACd,MAAMinB,EAAUjuE,KAAKkuE,iBACrB,OAAOjmE,KAAK2yC,IAAI56C,KAAK0tE,aAAaI,eAAe9mB,GAAWinB,EAAQjE,MAAQhqE,KAAK+rE,cAAcwK,kBAAoBvvB,EACvH,CACA+B,QAAAA,CAASP,GACLnX,MAAM0X,SAASP,GACf,MAAMmhB,EAAK3pE,KAAKw9F,WAAW3jG,KAAKilG,IAC5BA,EAAS/1C,SAASP,GACXs2C,EAAS/kD,UAGpB,GADA/5C,KAAK42E,MAAMjN,GACP3pE,KAAKy/D,KAAM,CACX,MAAM,KAAEiJ,EAAI,QAAEC,GAAY3oE,KAAKg/F,oBAC/Bh/F,KAAKy/D,KAAK+J,WAAWd,EAAMC,EAC/B,CACA,OAAO3oE,IACX,CACAg7F,WAAAA,GACI,OAAOh7F,KAAKi6D,SAChB,CACAqlC,gBAAAA,CAAiBrlC,GAEb,OADAj6D,KAAKi6D,UAAYA,EACVj6D,IACX,CACAm4E,YAAAA,GACI,IAAIC,EAAYp4E,KAAKk0E,eAIrB,OAHAkE,GAAap4E,KAAK0rE,gBAAkB1rE,KAAK8hD,OAAS9hD,KAAK80E,qBACnD90E,KAAK0nD,kBACL0wB,GAAap4E,KAAK0nD,gBAAgB63C,iBAC/BnnB,CACX,CACAC,WAAAA,GACI,IAAIC,EAAUt4E,KAAKk0E,eAEnB,OADAoE,GAAWt4E,KAAK8hD,OAAS9hD,KAAKw0E,oBACvB8D,CACX,CACArB,cAAAA,GACI,IAAIuoB,EAAWx/F,KAAKi2E,SAAS,GAAGjkC,KAChC,GAAIhyC,KAAKi2E,SAAS/4E,OAAS,EAAG,CAC1B,MAAMy1F,EAAW3yF,KAAKi2E,SAASj2E,KAAKi2E,SAAS/4E,OAAS,GAAG80C,KAGzDwtD,EAAWvtD,EAFChqC,KAAK2yC,IAAI4kD,EAAU7M,GACnB1qF,KAAKykB,IAAI8yE,EAAU7M,GAEnC,CACA,OAAO6M,CACX,CACA93B,kBAAAA,CAAmBrtE,EAAUN,GAAqB,IAAdkZ,EAAOhW,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3C,IAAK+C,KAAK2zE,aACN,MAAM,IAAIviC,EAAa,kBAAmB,wDAE9C,GAAuB,IAAnBpxC,KAAK2pE,GAAGzsE,OACR,MAAM,IAAIk0C,EAAa,YAAa,yCAExC,MAAM,MAAEsV,EAAK,MAAEE,EAAK,KAAEC,EAAI,MAAEE,GAAUX,EAASC,SAC/C,IAAIjnD,EAAI,EACJ/E,IAAawsD,EACbznD,GAAI,EAEC/E,IAAa0sD,GAClB3nD,EAAIY,KAAK0rE,gBAAkB1rE,KAAK8hD,OAAS,EACrC9hD,KAAK6oE,gBAAkBlwB,EAAKgvB,IAC5B3nE,KAAK07F,YACJzoF,EAAQ+/E,gBAvgBAyM,EAAC11F,EAAMhQ,IAAUA,KAAWgQ,EAAK8hE,qBAAuBlzB,EAAKgvB,GAAK59D,EAAKksE,SAAS/4E,OAAS,EAAI,GAugB3EuiG,CAAiBz/F,KAAMjG,MAClDqF,GAAKY,KAAKoyE,KAAKvtB,aAGdxqD,IAAausD,GAASvsD,IAAaqsD,IACxCtnD,EAAIY,KAAK0rE,gBAAkB,GAE/B,IAAIg0B,EAAY,EAChB,OAAQ1/F,KAAKw9F,WAAWzjG,GAAOsrD,WAC3B,KAAKc,EAAO0X,gBACZ,KAAK1X,EAAO2X,UACR4hC,GAAa,GACb,MACJ,KAAKv5C,EAAO4X,SACZ,KAAK5X,EAAO6X,YACZ,KAAK7X,EAAO8X,QACZ,KAAK9X,EAAO+X,SACRwhC,GAAa,GACb,MACJ,KAAKv5C,EAAOgY,SACZ,KAAKhY,EAAOiY,SACRshC,GAAa,IACb,MACJ,KAAKv5C,EAAOkY,UACRqhC,GAAa,IAGrB,MAAO,CACHtgG,EAAGY,KAAKk0E,eAAiB90E,EACzBC,EAAGW,KAAK2pE,GAAG5vE,GAAS2lG,EAAY1/F,KAAK0tE,aAAa7K,yBAE1D,CACAvgB,QAAAA,CAAS7qC,GACL,OAAO45B,MAAMkR,cAAc9qC,EAC/B,CACAkoF,YAAAA,CAAaloF,GACT,MAAMgoD,EAAOz/D,KAAKisE,UAGlB,OAFIxM,GACAA,EAAKnd,SAAS7qC,GACXzX,IACX,CACA4/F,YAAAA,GACI,IAAI9pD,EACJ,OAA4B,QAApBA,EAAK91C,KAAKy/D,YAAyB,IAAP3pB,OAAgB,EAASA,EAAGP,UACpE,CACAsqD,kBAAAA,CAAmBpoF,GACfzX,KAAKq+F,gBAAkB5mF,CAC3B,CACAqoF,kBAAAA,GACI,OAAO9/F,KAAKq+F,eAChB,CACA0B,YAAAA,CAAatoF,GACTzX,KAAKoyE,KAAK9vB,SAAS7qC,EACvB,CACAuoF,YAAAA,GACI,OAAOhgG,KAAKoyE,KAAK78B,UACrB,CACAm2B,aAAAA,GACI,OAAO1rE,KAAKigG,UAAU,GAAGp7C,UAC7B,CACAq7C,WAAAA,CAAYnmG,EAAO0d,GAEf,OADAzX,KAAKw9F,WAAWzjG,GAAOuoD,SAAS7qC,GACzBzX,IACX,CACA88F,UAAAA,CAAW/iG,EAAOi4C,GAGd,OAFAhyC,KAAKi2E,SAASl8E,GAAOi4C,KAAOA,EAC5BhyC,KAAKknD,QACElnD,IACX,CACA+8F,UAAAA,CAAWhjG,GACP,OAAOiG,KAAKi2E,SAASl8E,GAAOi4C,IAChC,CACA2rD,kBAAAA,GACI,OAAO39F,KAAK0rE,iBAAmB1rE,KAAKi6D,UAAY,EAAI,EACxD,CACA2kC,qBAAAA,GACI5+F,KAAK82E,uBAAuB92E,KAAKi6D,WAAaj6D,KAAK6oE,gBAAkBlwB,EAAKivB,KAAO5nE,KAAK0rE,gBAAkB,GACxG1rE,KAAK+2E,yBAAyB/2E,KAAK07F,WAAa17F,KAAKi6D,WAAaj6D,KAAK6oE,gBAAkBlwB,EAAKgvB,GAAK3nE,KAAK0rE,gBAAkB,EAC9H,CACAgI,SAAAA,GACI,GAAI1zE,KAAK2zE,aACL,OACJ,IAAIwsB,EAAkB,EAClBngG,KAAK0nD,kBACL1nD,KAAK0nD,gBAAgBgsB,YACmB,IAApC1zE,KAAK0nD,gBAAgB7C,aACrBs7C,EAAkBhG,GAAU8C,qBAGpC,IAAIlkG,EAAQiH,KAAK0rE,gBAAkB1rE,KAAKw0E,oBAAsBx0E,KAAK80E,qBAAuBqrB,EACtFngG,KAAKogG,kBAAoBpgG,KAAK6oE,gBAAkBlwB,EAAKgvB,KACrD5uE,GAASiH,KAAK0rE,iBAElB1rE,KAAK+kD,SAAShsD,GACdiH,KAAK2zE,cAAe,CACxB,CACAqrB,iBAAAA,GACI,IAEIqB,EACAC,EAGAC,EACAC,EAPA93B,EAAQlgC,IACRmgC,GAAWngC,IAGXi4D,EAAczgG,KAAK0tE,aAAavB,cAChCu0B,EAAa,EAGbC,EAA0BF,EAC1BG,EAAyBF,EAuB7B,OAtBA1gG,KAAKw9F,WAAWthG,SAAS4iG,IACrB,MAAM9sD,EAAO8sD,EAAS7D,UAChB57F,EAAIy/F,EAAS/kD,OACnB2uB,EAAOzgE,KAAKykB,IAAIrtB,EAAGqpE,GACnBC,EAAU1gE,KAAK2yC,IAAIv7C,EAAGspE,QACH9rE,IAAfyjG,GAA4BxB,EAAS9D,gBACrCsF,EAAaxB,EAAS5qB,qBAEJr3E,IAAlBwjG,GAAgCvB,EAAS9D,gBACzCqF,EAAgBvB,EAAS5qB,gBAE7BusB,EAAcx4F,KAAK2yC,IAAI5I,EAAMyuD,GAC7BC,EAAaz4F,KAAKykB,IAAIslB,EAAM0uD,GACxB5B,EAAS9D,eACTuF,OAAgD1jG,IAAzB0jG,EAAqCvuD,EAAO/pC,KAAK2yC,IAAI5I,EAAMuuD,GAClFC,OAA8C3jG,IAAxB2jG,EAAoCxuD,EAAO/pC,KAAKykB,IAAIslB,EAAMwuD,KAGhFG,EAA0B14F,KAAK2yC,IAAI5I,EAAM2uD,GACzCC,EAAyB34F,KAAKykB,IAAIslB,EAAM4uD,MAE7C5gG,MACI,CACH0oE,OACAC,UACA23B,aACAD,gBACAI,cACAC,aACAH,uBACAC,sBACAG,0BACAC,yBAER,CACAC,iBAAAA,GACI,OAAO7gG,KAAKk0E,eAAiBl0E,KAAK8hD,MACtC,CACAg/C,eAAAA,GAEI,OADe9gG,KAAK6gG,oBACJ7gG,KAAK0rE,eACzB,CACA,aAAIu0B,GACA,OAAOjgG,KAAKw9F,WAAW1zF,OAC3B,CACAi3F,eAAAA,GACI,MAAMv4C,EAAQxoD,KAAK0tE,cACX3B,eAAe,SAAEyK,IAAgBx2E,KACnCgjD,EAAMhjD,KAAKijD,eACXlqD,EAAQiH,KAAK0rE,gBAA6B,EAAX8K,EAC/BwqB,EAAc,GAAKhhG,KAAK0rE,gBAAkB8K,GAAY79B,EAAKkvB,MAAQ,EACzE,GAAI7nE,KAAK8mE,SACL,OACJ,IAAK9jB,EACD,MAAM,IAAI5R,EAAa,kBAAmB,wCAE9C,MAAM,YAAEqvD,EAAW,WAAEC,EAAU,qBAAEH,EAAoB,wBAAEI,EAAuB,oBAAEH,EAAmB,uBAAEI,EAAsB,WAAEN,EAAU,cAAED,GAAmBrgG,KAAKg/F,oBACjK,GAAIyB,EAAc,GAAKC,EAAa,EAChC,OACJ,MAAMO,EAAOh5F,KAAKykB,IAAmB,OAAf4zE,QAAsC,IAAfA,EAAwBA,EAAa,EAAqB,OAAlBD,QAA4C,IAAlBA,EAA2BA,EAAgB,GACpJa,EAAiBA,CAAC7hG,EAAG8hG,EAAQlnC,KAC/B,IAAI76D,EAEAA,EADA66D,GAAaknC,EACTF,EAAOzqB,EACN2qB,GACkB,OAAlBd,QAA4C,IAAlBA,EAA2BA,EAAgB,GAAK7pB,GAE3D,OAAf8pB,QAAsC,IAAfA,EAAwBA,EAAa,GAAK9pB,EAC1E,MAAM4qB,EAAcD,GAAUlnC,EAAY+mC,EAAcjoG,EACxDiqD,EAAI2nB,YACJ3nB,EAAI4nB,OAAOxrE,EAAGC,GACd2jD,EAAI6nB,OAAOzrE,EAAIgiG,EAAa/hG,GAC5B2jD,EAAIz5C,UAEFkO,EAAQvc,OAAOK,OAAOL,OAAOK,OAAO,CAAC,EAAGitD,EAAM64C,6BAA8BrhG,KAAK8/F,sBACvF98C,EAAIE,OACJljD,KAAKwiD,WAAWQ,EAAKvrC,GACrB,IAAK,IAAIu6B,EAAO,EAAGA,GAAQyuD,IAAezuD,EAAM,CAC5C,MAAMmvD,OAA2BtkG,IAAlBwjG,GAA+BruD,GAAQ2uD,EAChD1mC,OAAqCp9D,IAAzB0jG,GAAsCvuD,GAAQuuD,EAChEW,EAAe14C,EAAM2yC,YAAYnpD,GAAOmvD,EAAQlnC,EACpD,CACA,IAAK,IAAIjoB,EAAO,EAAGA,GAAQ0uD,IAAc1uD,EAAM,CAC3C,MAAMmvD,OAA2BtkG,IAAlBwjG,GAA+BruD,GAAQ4uD,EAChD3mC,OAAoCp9D,IAAxB2jG,GAAqCxuD,GAAQwuD,EAC/DU,EAAe14C,EAAM2yC,YAAYnpD,GAAOmvD,EAAQlnC,EACpD,CACAjX,EAAII,SACR,CACAg4C,aAAAA,CAAckG,GACV,MAAMt+C,EAAMhjD,KAAKijD,eACjB,IAAK,IAAIrnD,EAAI,EAAGA,EAAIoE,KAAKuxE,UAAUr0E,OAAQtB,IAAK,CAC5C,MAAM0rE,EAAWtnE,KAAKuxE,UAAU31E,GAC1B7B,EAAQutE,EAAS/f,aACNvnD,KAAKw9F,WAAWzjG,KAChBunG,IACbh6B,EAASrjB,WAAWjB,GACpBskB,EAASvkB,gBAEjB,CACJ,CACAq9C,cAAAA,GACI,MAAMx0B,OAAwB/uE,IAAdmD,KAAKy/D,KACfi8B,OAAyC7+F,IAA/BmD,KAAKo2E,WAAWxW,WAC1B2hC,OAA0B1kG,IAAdmD,KAAKs3E,KACvB,OAAO1L,GAAW8vB,GAAW6F,IAAcvhG,KAAK8mE,QACpD,CACA06B,QAAAA,GACI,MAAMx+C,EAAMhjD,KAAKijD,eACjB,IAAKD,EACD,MAAM,IAAI5R,EAAa,kBAAmB,wCAE9C,GAAIpxC,KAAKogG,iBAAkB,CACvB,MAAM,KAAE13B,EAAI,QAAEC,GAAY3oE,KAAKg/F,oBACzBC,EAAiBj/F,KAAKy/D,KAAK5Z,YAC3B47C,EAAQzhG,KAAKwtE,WAAapU,EAAOgG,WAAa,EAC9CsiC,EAAQ1hG,KAAK6rE,qBAAuBlzB,EAAKivB,KAEvCc,EAAOu2B,EAAiBj/F,KAAKoyE,KAAKxsB,iBAAiBxE,yBAEnDunB,EAAUs2B,EAAiBj/F,KAAKoyE,KAAKxsB,iBAAiBzE,wBAC9DnhD,KAAKoyE,KAAKnuB,WAAWjB,GAAK9I,KAAKunD,GAAOtnD,KAAKunD,GAAO3+C,eACtD,CACJ,CACA4+C,aAAAA,GACI,MAAM3+C,EAAMhjD,KAAKijD,eACjBjjD,KAAKw9F,WAAWthG,SAAS4iG,IACrBA,EAAS76C,WAAWjB,GAAKD,kBAEjC,CACAipB,QAAAA,CAASuwB,GACL,MAAMv5C,EAAMhjD,KAAKijD,eACbs5C,GACAv8F,KAAKu7F,QAAQ,IAAI5iD,EAAK4jD,IAEtBv8F,KAAKogG,kBAAoBpgG,KAAKy/D,MAC9Bz/D,KAAKy/D,KAAK2K,sBAEVpqE,KAAKy/D,MACLz/D,KAAKy/D,KAAKxb,WAAWjB,GAAKD,eAElC,CACAg5C,gBAAAA,GACI,MAAM6F,EAAqBvwD,MAAM0qD,mBACjC,IAAK/7F,KAAKo2E,WAAW3W,KACjB,OAAOmiC,EAEX,MAAM/4B,EAAgB7oE,KAAK6rE,mBAC3B,GAAIhD,IAAkB7oE,KAAK++F,gCACvB,OAAO6C,EAEX,IAAIC,EAGAA,EADAh5B,IAAkBlwB,EAAKgvB,GADP,EAEgB3nE,KAAK48F,QAGnB58F,KAAK68F,QALP,EAOpB,MAAMiF,EAA6BD,EAAkB,IACrD,GAAIC,GAA8B,EAC9B,OAAOF,EAEX,MAAMp5C,EAAQxoD,KAAKyoD,WACnB,IAAIs5C,EAAsB,GAI1B,YAHcllG,IAAV2rD,IACAu5C,EAAsBv5C,EAAMqa,0BAEzB++B,EAAqBE,EAA6BC,CAC7D,CACA5+C,IAAAA,GACI,IAAgC,IAA5BnjD,KAAK+rE,cAAc5oB,KACnB,OACJ,GAAuB,IAAnBnjD,KAAK2pE,GAAGzsE,OACR,MAAM,IAAIk0C,EAAa,YAAa,qCAExC,MAAM4R,EAAMhjD,KAAKijD,eACXulB,EAASxoE,KAAK6gG,oBACdmB,EAAmBhiG,KAAK4rE,YAAc5rE,KAAKs3E,KAEjD,GADAt3E,KAAKw9F,WAAWthG,SAAS4iG,GAAaA,EAAS5kD,KAAKsuB,KAChDxoE,KAAKy/D,KAAM,CACX,MAAM6K,EAAQtqE,KAAKwtE,WACnBxtE,KAAKy/D,KAAK0J,mBAAmBmB,EAAOA,EACxC,EA7yBR,WAAoB,QAAAz4B,EAAA50C,UAAAC,OAAN40C,EAAI,IAAAhxC,MAAA+wC,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA90C,UAAA80C,GACVooD,GAAUj4B,OACVtlD,EAAI,oBAAqBk1B,EACjC,CA2yBQ5wC,CAAE,aAAclB,KAAKq/F,UAAY,UAAY,SAAUr/F,KAAK5D,MAC5D4mD,EAAI0nB,UAAU,YAAa1qE,KAAKw/C,aAAa,OAC7Cx/C,KAAK+gG,kBACDiB,GACAhiG,KAAKgsE,WACThsE,KAAK2hG,gBACL3hG,KAAKwhG,WACL,MAAM7uF,EAAK3S,KAAK8jD,iBAChBd,EAAIqlC,YAAY11E,EAAGmnC,OAAQnnC,EAAGonC,OAAQpnC,EAAGqnC,OAAQrnC,EAAGsnC,QACpD+I,EAAI8nB,aACJ9qE,KAAKyjD,aACT,EAEJ02C,GAAUj4B,OAAQ,ECn0BX,MAAMxpB,WAAiB2H,EAC1B,mBAAW3N,GACP,MAAO,UACX,CACA/xC,WAAAA,CAAYi6D,GAAkB,IAAXrxC,EAAItsB,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,GACtBo0C,QACArxC,KAAKuxF,SAAS32B,GACd56D,KAAKupB,KAAOA,EACZvpB,KAAK+rE,cAAgB,CACjBk2B,IAAK,EACLC,IAAK,GACLC,eAAgB,GAChBC,SAAU,EACVC,SAAU,EACVC,WAAY,EACZC,YAAa,EACbC,WAAY,EACZzgD,OAAQ,EACR0gD,WAAY,EAEpB,CACAC,YAAAA,GACI,YAAuB7lG,IAAnBmD,KAAKquD,WAA8C,OAAnBruD,KAAKquD,UAC9BruD,KAAKquD,UAEPruD,KAAK46D,MAAMomB,SACThhF,KAAK46D,MAAMomB,SAASnV,mBAEtB7rE,KAAK46D,MAAMkmB,UACT9gF,KAAK46D,MAAMkmB,UAAUjV,mBAGrB,CAEf,CACAzC,YAAAA,CAAa/a,GAET,OADAruD,KAAKquD,UAAYA,EACVruD,IACX,CACAuxF,QAAAA,CAAS32B,GACL,IAAKA,EAAMkmB,YAAclmB,EAAMomB,SAC3B,MAAM,IAAI5vC,EAAa,eAAgB,uDAQ3C,GANKwpB,EAAM+nC,eACP/nC,EAAM+nC,aAAe,CAAC,IAErB/nC,EAAMgoC,cACPhoC,EAAMgoC,YAAc,CAAC,IAErBhoC,EAAM+nC,aAAazlG,SAAW09D,EAAMgoC,YAAY1lG,OAChD,MAAM,IAAIk0C,EAAa,eAAgB,gDAG3C,OADApxC,KAAK46D,MAAQA,EACN56D,IACX,CACAwxF,SAAAA,GACI,OAAQxxF,KAAK46D,MAAMkmB,YAAc9gF,KAAK46D,MAAMomB,QAChD,CACA6hB,SAAAA,CAAUppC,GACN,GAA8B,IAA1BA,EAAOqpC,QAAQ5lG,QAAyC,IAAzBu8D,EAAOspC,OAAO7lG,OAC7C,MAAM,IAAIk0C,EAAa,eAAgB,yBAE3C,MAAM4R,EAAMhjD,KAAKijD,eACjB,IAAIg/C,EAAMjiG,KAAK+rE,cAAck2B,IACzBC,EAAMliG,KAAK+rE,cAAcm2B,IACzBj6F,KAAKwsC,IAAIglB,EAAOi4B,MAAQj4B,EAAOknB,QAAU3gF,KAAK+rE,cAAco2B,iBAC5DF,EAAMjiG,KAAK+rE,cAAcq2B,SACzBF,EAAMliG,KAAK+rE,cAAcs2B,UAE7B,MAAME,EAAcviG,KAAK+rE,cAAcw2B,YACjCC,EAAaxiG,KAAK+rE,cAAcy2B,WAChCzgD,EAAS/hD,KAAK+rE,cAAchqB,OAAS0X,EAAOpL,UAC5Cs0C,EAAe3iG,KAAK46D,MAAM+nC,aAC1BC,EAAc5iG,KAAK46D,MAAMgoC,YAC/B5/C,EAAI0nB,UAAU,WAAY1qE,KAAKw/C,aAAa,OAC5C,IAAK,IAAI5jD,EAAI,EAAGA,EAAI+mG,EAAazlG,SAAUtB,EAAG,CAC1C,MAAMkqF,GAAOrsB,EAAOi4B,MAAQ8Q,GAAc/oC,EAAOknB,OAAS4hB,IAAgB,EACpE3hB,EAASnnB,EAAOqpC,QAAQH,EAAa/mG,IAAMmmD,EAC3C4vC,EAAQl4B,EAAOspC,OAAOH,EAAYhnG,IAAMmmD,EAC9C,GAAIxzC,MAAMqyE,IAAWryE,MAAMojF,GACvB,MAAM,IAAIvgD,EAAa,eAAgB,kCAE3C,MAAM4xD,GAAoBpiB,EAAS+Q,GAAS,EAAIsQ,EAAMxoC,EAAOpL,UACvD40C,GAAuBriB,EAAS+Q,GAAS,EAAIuQ,EAAMzoC,EAAOpL,UAChErL,EAAI2nB,YACJ3nB,EAAI4nB,OAAOnR,EAAOknB,OAAS4hB,EAAa3hB,GACxC59B,EAAIgjC,iBAAiBF,EAAKkd,EAAkBvpC,EAAOi4B,MAAQ8Q,EAAY7Q,GACvE3uC,EAAIgjC,iBAAiBF,EAAKmd,EAAqBxpC,EAAOknB,OAAS4hB,EAAa3hB,GAC5E59B,EAAIqyB,YACJryB,EAAIp5C,MACR,CACAo5C,EAAI8nB,YACR,CACAo4B,aAAAA,CAAcviB,EAAQ+Q,GAClB,IAAI57C,EAAI6J,EAAIooB,EACZ,MAAM/kB,EAAMhjD,KAAKijD,eACjB,IAAIkgD,GAAWxiB,EAAS+Q,GAAS,EACjCyR,GAAWngD,EAAI8B,YAAY9kD,KAAKupB,MAAMxwB,MAAQ,EAC9C,MAAMyvD,EAAoG,QAA3F7I,EAAqC,QAA/B7J,EAAK91C,KAAK46D,MAAMkmB,iBAA8B,IAAPhrC,OAAgB,EAASA,EAAG43B,oBAAiC,IAAP/tB,EAAgBA,EAAoC,QAA9BooB,EAAK/nE,KAAK46D,MAAMomB,gBAA6B,IAAPjZ,OAAgB,EAASA,EAAG2F,aACtMllB,IACAxF,EAAIkB,QAAQlkD,KAAKq8C,UACjB2G,EAAIyC,SAASzlD,KAAKupB,KAAM45E,EAAUnjG,KAAK+rE,cAAcu2B,WAAY95C,EAAMslB,iBAAmB,GAElG,CACAsS,QAAAA,GACI,OAAOpgF,KAAK46D,KAChB,CACAwoC,SAAAA,GACI,OAAIpjG,KAAK46D,MAAMkmB,UACJ9gF,KAAK46D,MAAMkmB,UAAU3I,eAAiBn4E,KAAK+rE,cAAc02B,WAE3DziG,KAAK46D,MAAMomB,SACThhF,KAAK46D,MAAMomB,SAAStT,aAAaukB,eAGjC,CAEf,CACAoR,QAAAA,GACI,OAAIrjG,KAAK46D,MAAMomB,SACJhhF,KAAK46D,MAAMomB,SAAS3I,cAAgBr4E,KAAK+rE,cAAc02B,WAEzDziG,KAAK46D,MAAMkmB,UACT9gF,KAAK46D,MAAMkmB,UAAUpT,aAAawkB,aAGlC,CAEf,CACAoR,UAAAA,GACI,OAAItjG,KAAK46D,MAAMkmB,UACJ9gF,KAAK46D,MAAMkmB,UAAUlT,QAEvB5tE,KAAK46D,MAAMomB,SACThhF,KAAK46D,MAAMomB,SAASpT,QAGpB,CAAC,EAEhB,CACA21B,SAAAA,GACI,OAAIvjG,KAAK46D,MAAMomB,SACJhhF,KAAK46D,MAAMomB,SAASpT,QAEtB5tE,KAAK46D,MAAMkmB,UACT9gF,KAAK46D,MAAMkmB,UAAUlT,QAGrB,CAAC,EAEhB,CACA41B,kBAAAA,GACQxjG,KAAK46D,MAAMkmB,WAAa9gF,KAAK46D,MAAMomB,WAG7BhhF,KAAK46D,MAAMkmB,WAAc9gF,KAAK46D,MAAMomB,YAGrChhF,KAAK46D,MAAMkmB,UAChB9gF,KAAK46D,MAAMgoC,YAAc5iG,KAAK46D,MAAM+nC,aAGpC3iG,KAAK46D,MAAM+nC,aAAe3iG,KAAK46D,MAAMgoC,YAE7C,CACAz/C,IAAAA,GACInjD,KAAKijD,eACLjjD,KAAKyjD,cACLzjD,KAAKwjG,qBACL,MAAM7iB,EAAS3gF,KAAKojG,YACd1R,EAAQ1xF,KAAKqjG,WASnB,OARArjG,KAAK6iG,UAAU,CACXliB,SACA+Q,QACAoR,QAAS9iG,KAAKsjG,aACdP,OAAQ/iG,KAAKujG,YACbl1C,UAAWruD,KAAK0iG,iBAEpB1iG,KAAKkjG,cAAcviB,EAAQ+Q,IACpB,CACX,ECrLG,MAAMt4C,WAAeV,GACxB,mBAAWhG,GACP,MAAO,QACX,CACA,qBAAO+wD,CAAe7oC,GAClB,OAAO,IAAIxhB,GAAOwhB,EAAO,IAC7B,CACA,oBAAO8oC,CAAc9oC,GACjB,OAAO,IAAIxhB,GAAOwhB,EAAO,IAC7B,CACAj6D,WAAAA,CAAYi6D,EAAOrxC,GACf8nB,MAAMupB,EAAOrxC,GACbvpB,KAAK+rE,cAAck2B,IAAM,EACzBjiG,KAAK+rE,cAAcm2B,IAAM,GACzBliG,KAAK+rE,cAAchqB,OAAS,EAC5B/hD,KAAKquD,WAAa,CACtB,ECbG,IAAIs1C,IACX,SAAWA,GACPA,EAAUA,EAAkB,OAAI,GAAK,SACrCA,EAAUA,EAAgB,KAAI,GAAK,OACnCA,EAAUA,EAAgB,KAAI,GAAK,MACtC,CAJD,CAIGA,KAAcA,GAAY,CAAC,IACvB,MAAMjJ,WAAcr6C,EACvB,mBAAW3N,GACP,MAAO,OACX,CACA,eAAWkxD,GACP,OAAOD,EACX,CACAhjG,WAAAA,CAAY6oB,GAWR,IAAIq6E,EACJ,GAXAxyD,QACArxC,KAAK8jG,qBAAuB,EAC5B9jG,KAAK81B,KAAO6tE,GAAUI,OACtB/jG,KAAK2zE,cAAe,EACpB3zE,KAAKgkG,UAAY,IAAIvxD,EAAS,EAAG,GACjCzyC,KAAKikG,iBAAmB,EACxBjkG,KAAK2mE,UAAY,GACjB3mE,KAAKiT,QAAU,CACXixF,cAAe9qC,EAAO+F,gBAGN,kBAAT31C,EAAmB,CAC1B,MAAMrZ,EAAQqZ,EAAKrZ,MAAM,gBACrBA,IACA0zF,EAAY,CACRpiC,SAAUvvB,SAAS/hC,EAAM,IACzBuxD,UAAWxvB,SAAS/hC,EAAM,KAGtC,MAEI0zF,EAAYr6E,EAEhBxpB,KAAKwpB,KAAOtuB,OAAOK,OAAO,CAAEkmE,SAAU,EAAGC,UAAW,EAAGC,WAAYvI,EAAOtJ,YAAc+zC,GACxF7jG,KAAKk9E,WAAa,IAAIzqC,EAASzyC,KAAKwpB,KAAKi4C,UAAYzhE,KAAKwpB,KAAKm4C,WAAa3hE,KAAKwpB,KAAKk4C,WAAY,GAClG1hE,KAAKmkG,kBAAoBnkG,KAAKk9E,WAAW9oC,OAC7C,CACA+oC,aAAAA,GACI,OAAOn9E,KAAKk9E,UAChB,CACAknB,YAAAA,GACI,OAAOpkG,KAAKgkG,SAChB,CACAK,mBAAAA,GACI,OAAOrkG,KAAKikG,gBAChB,CACAK,oBAAAA,GACI,OAAOtkG,KAAKmkG,iBAChB,CACA/9B,YAAAA,GACI,OAAOpmE,KAAK2mE,SAChB,CACA49B,OAAAA,GACI,OAAOvkG,KAAK81B,IAChB,CACA0uE,OAAAA,CAAQ1uE,GAEJ,OADA91B,KAAK81B,KAAOA,EACL91B,IACX,CACAykG,uBAAAA,GACI,OAAOzkG,KAAK8jG,oBAChB,CACAY,mBAAAA,GACI,OAAO1kG,KAAK8jG,qBAAuB9jG,KAAKwpB,KAAKm4C,UACjD,CACA5Y,QAAAA,CAASP,GAEL,OADAxoD,KAAKwoD,MAAQA,EACNxoD,IACX,CACAyoD,QAAAA,GACI,OAAOzoD,KAAKwoD,KAChB,CACA1E,cAAAA,GACI,MAAMtJ,EAAcx6C,KAAK2mE,UAAU,GAAG7iB,iBACtC,IAAK,IAAIloD,EAAI,EAAGA,EAAIoE,KAAK2mE,UAAUzpE,SAAUtB,EAAG,CAC5C,MAAM8zF,EAAW1vF,KAAK2mE,UAAU/qE,IAC3B8zF,EAASjnC,YAAczoD,KAAKwoD,OAC7BknC,EAAS3mC,SAAS/oD,KAAKwoD,OAC3B,MAAM71C,EAAK+8E,EAAS5rC,iBACpBtJ,EAAYD,UAAU5nC,EAC1B,CACA,OAAO6nC,CACX,CACAmqD,SAAAA,CAAUC,GAEN,OADA5kG,KAAK81B,KAAO8uE,EAASjB,GAAUI,OAASJ,GAAUkB,KAC3C7kG,IACX,CACA8kG,UAAAA,GACI,OAAI9kG,KAAK81B,OAAS6tE,GAAUI,QAAU/jG,KAAK81B,OAAS6tE,GAAUoB,MACnD/kG,KAAKgkG,UAAUpwD,OAAO5zC,KAAKk9E,WAK1C,CACA8nB,gBAAAA,CAAiBC,GAGb,OAFAjlG,KAAKiT,QAAQixF,cAAgBe,EAC7BjlG,KAAKklG,aAAe,EACbllG,IACX,CACAmlG,uBAAAA,GACI,MAAMjoB,EAAal9E,KAAKgkG,UAAU1pG,QAGlC,OADA0F,KAAKklG,aAAe5yD,EAAStyC,KAAK2mE,UAAU9sE,KAD/B61F,GAAaznF,KAAKm9F,IAAIplG,KAAKiT,QAAQixF,cAAexU,EAASnpB,WAAWjsE,QAAU4iF,MAEtFl9E,KAAKklG,YAChB,CACAG,OAAAA,CAAQC,GACCtlG,KAAKklG,eACNllG,KAAKklG,aAAellG,KAAKmlG,2BAE7B,MAAMjoB,EAAal9E,KAAKgkG,UAAU1pG,QAGlC,MAFa4E,IAAM+I,KAAKm9F,IAAIplG,KAAKiT,QAAQixF,cAAehlG,EAAIg+E,GACjDqoB,CAAID,GAAatlG,KAAKklG,YAErC,CACArV,WAAAA,CAAYH,GACR,IAAKA,EAASrpB,oBAAqB,CAC/B,MAAMjL,EAAQs0B,EAASnpB,WAGvB,GAFAvmE,KAAKgkG,UAAU92F,IAAIkuD,GACnBp7D,KAAKklG,aAAe,GACfllG,KAAK81B,OAAS6tE,GAAUI,QAAU/jG,KAAK81B,OAAS6tE,GAAUoB,OAC3D/kG,KAAKgkG,UAAUhwD,YAAYh0C,KAAKk9E,YAEhC,MADAl9E,KAAKgkG,UAAUvwD,SAAS2nB,GAClB,IAAIhqB,EAAa,cAAe,mBAEtCgqB,EAAMlnB,SAASl0C,KAAKmkG,qBACpBnkG,KAAKmkG,kBAAoB/oC,EAAMhnB,SAEnCp0C,KAAK8jG,qBAAuB9jG,KAAKgkG,UAAUhxD,YAC3ChzC,KAAKk9E,WAAWhwE,IAAI,EAAGlN,KAAKgkG,UAAUhxD,YAC1C,CAGA,OAFAhzC,KAAK2mE,UAAU9kE,KAAK6tF,GACpBA,EAAS9c,SAAS5yE,MACXA,IACX,CACA26F,YAAAA,CAAah0B,GACT,IAAK,IAAI/qE,EAAI,EAAGA,EAAI+qE,EAAUzpE,SAAUtB,EACpCoE,KAAK6vF,YAAYlpB,EAAU/qE,IAE/B,OAAOoE,IACX,CACA0zE,SAAAA,GACI,GAAI1zE,KAAK2zE,aACL,OAAO3zE,KACX,MAAMwoD,EAAQxoD,KAAK0tE,aAOnB,OANA1tE,KAAK2mE,UAAUzqE,SAASwzF,IACfA,EAASjnC,YACVinC,EAAS3mC,SAASP,MAG1BxoD,KAAK2zE,cAAe,EACb3zE,IACX,CACA0tE,UAAAA,GACI,OAAO/7B,EAAQ3xC,KAAKwoD,MAAO,UAAW,iCAC1C,CACArF,IAAAA,GAA2C,IAAtCljD,EAAOhD,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG+C,KAAKijD,eAAgBuF,EAAKvrD,UAAAC,OAAA,EAAAD,UAAA,QAAAJ,EACrC2rD,EAAkB,OAAVA,QAA4B,IAAVA,EAAmBA,EAAQxoD,KAAKwoD,MAC1DxoD,KAAKyjD,cACL,IAAK,IAAI7nD,EAAI,EAAGA,EAAIoE,KAAK2mE,UAAUzpE,SAAUtB,EAAG,CAC5C,MAAM8zF,EAAW1vF,KAAK2mE,UAAU/qE,GAC5B4sD,GACAknC,EAAS3mC,SAASP,GAEtB7W,EAAQ+9C,EAASjnC,WAAY,eAAgB,mDAC7CinC,EAASzrC,WAAWhkD,GACpByvF,EAAS3sC,eACb,CACJ,EClKG,MAAMyiD,WAAuBp/C,EAChC,mBAAW1T,GACP,MAAO,gBACX,CACA,aAAOyvB,CAAOsjC,EAAiBlmE,GAG3B,IAAKkmE,GAA8C,IAA3BA,EAAgBvoG,OACpC,OAAO,EACX,MAAMwoG,EAAY,GAClB,IAAIljC,EAAW,KACXziD,EAAQ,EACZ,IAAK,IAAInkB,EAAI,EAAGA,EAAI6pG,EAAgBvoG,SAAUtB,EAAG,CAC7C,MAAM+pG,EAAiBF,EAAgB7pG,GACjCmO,EAAO47F,EAAex+C,UACtBy+C,EAAc7jC,EAAYh4D,GAC1BitC,EAAU4uD,EAXM,EACF,EAWpB,GAAIA,GAAe77F,IAASy4D,EAAU,CAClC,IAAK,IAAI1mE,EAAI,EAAGA,EAAIiO,EAAK3N,KAAKc,SAAUpB,EACpCikB,EAAQ9X,KAAK2yC,IAAI7wC,EAAK44D,yBAA0B5iD,GAEpDyiD,EAAWz4D,CACf,CACA27F,EAAU7jG,KAAK,CAAEke,MAAOA,EAAO4lF,iBAAgB3uD,WACnD,CACA,IACI6uD,EADAC,EAAaJ,EAAU,GAAG3lF,MAE1B+mC,GAAQ,EACRt5B,GAAO,EACX,IAAK,IAAI5xB,EAAI,EAAGA,EAAI8pG,EAAUxoG,SAAUtB,EAAG,CACvC,MAAM+pG,EAAiBD,EAAU9pG,GAAG+pG,eAChCA,EAAetrG,WAAa+rD,EAASC,SAASU,MAC9CD,GAAQ,EAERt5B,GAAO,EACXm4E,EAAejyB,YACfmyB,EAAcF,EAAe9gD,WAAa6gD,EAAU9pG,GAAGo7C,QACvD8uD,EAAa79F,KAAK2yC,IAAIirD,EAAaC,EACvC,CACA,IAAK,IAAIlqG,EAAI,EAAGA,EAAI8pG,EAAUxoG,SAAUtB,EAAG,CACvC,MAAM+pG,EAAiBD,EAAU9pG,GAAG+pG,eACpCE,EAAcF,EAAe9gD,WAAa6gD,EAAU9pG,GAAGo7C,QACvD2uD,EAAe39C,2BAA2B89C,EAAa79F,KAAKykB,IAAIm5E,EAAaC,GAAc3L,GAAU8C,mBACzG,CAKA,OAJIn2C,IACAvnB,EAAMwtC,YAAc+4B,GACpBt4E,IACA+R,EAAM8iC,WAAayjC,IAChB,CACX,CACAnlG,WAAAA,CAAYolG,EAAYC,GAkBpB,OAjBA30D,QACArxC,KAAK2zE,cAAe,EACpB3zE,KAAK3F,SAAW+rD,EAASC,SAASQ,KAClC7mD,KAAK+lG,WAAaA,EAClB/lG,KAAKjH,MAAQ,EACbiH,KAAKgmG,SAAWA,EAChBhmG,KAAKimG,UAAOppG,EACZmD,KAAKkmE,MAAQ,IAAIw0B,GAAM,CACnBj5B,SAAU,EACVC,UAAW,EACXC,WAAYvI,EAAOtJ,aACpB60C,WAAU,GACb3kG,KAAK+rE,cAAgB,CACjBm6B,WAAY,GAEhBlmG,KAAK2+E,MAAQ,GACb3+E,KAAKkmE,MAAMy0B,aAAa36F,KAAK+lG,YACtB/lG,IACX,CACA0zE,SAAAA,GACQ1zE,KAAK2zE,eAEJ3zE,KAAKmmG,YACNnmG,KAAKmmG,UAAY,IAAIC,IAEzBpmG,KAAKmmG,UAAUE,WAAW,CAACrmG,KAAKkmE,QAAQ/D,OAAO,CAACniE,KAAKkmE,OAAQ,EAAG,CAAC,GACjElmE,KAAK+kD,SAAS/kD,KAAKmmG,UAAUG,oBAC7BtmG,KAAK2zE,cAAe,EACxB,CACA4yB,SAAAA,CAAUR,GAEN,IADAA,EAAaA,GAAc/lG,KAAK+lG,YACjB7oG,OAAS,EAAG,CACvB,MAAMo6E,EAAO,IAAIwE,GAAKiqB,GACtBzuB,EAAKvL,cAAc6T,UAAY,EAC/BtI,EAAKvL,cAAcmU,kBAAoB,EACvClgF,KAAK2+E,MAAM98E,KAAKy1E,EACpB,CACA,OAAOt3E,IACX,CACA+kD,QAAAA,CAAShsD,GAEL,OADAiH,KAAKjH,MAAQA,EACNiH,IACX,CACA6kD,QAAAA,GACI,OAAO7kD,KAAKjH,MAAQohG,GAAU8C,kBAClC,CACAz1B,aAAAA,GACI,OAAOxnE,KAAK+lG,UAChB,CACA5iD,IAAAA,GACI,MAAMH,EAAMhjD,KAAKijD,eACXl5C,EAAO/J,KAAKonD,oBAMlB,GALApnD,KAAKyjD,cA3Gb,WAAoB,QAAA5R,EAAA50C,UAAAC,OAAN40C,EAAI,IAAAhxC,MAAA+wC,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA90C,UAAA80C,GACVyzD,GAAetjC,OACftlD,EAAI,yBAA0Bk1B,EACtC,CAyGQ5wC,CAAE,gCAAiC6I,GACnC/J,KAAKkoD,sBAAsBloD,KAAKwnE,gBAAiBz9D,EAAM/J,KAAK3F,UAC5D2F,KAAK+lG,WAAW7pG,SAASsqG,GAAcA,EAAUviD,WAAWjB,GAAKD,kBACjE/iD,KAAK2+E,MAAMziF,SAASo7E,GAASA,EAAKrzB,WAAWjB,GAAKD,kBAC9C/iD,KAAKgmG,SAAU,CACf,MAAMJ,EAAc7jC,EAAYh4D,GAC1B08F,EAAWb,EAAcltD,GAAWU,GAC1Cp5C,KAAKimG,KAAO,IAAIQ,EAAS,CACrBzlB,SAAUhhF,KAAK+lG,WAAW,GAC1BjlB,UAAW/2E,EACX44F,aAAc,CAAC,GACfC,YAAa,CAAC,KAElB5iG,KAAKimG,KAAKl6B,cAAcm2B,IAAM,GAC9BliG,KAAKimG,KAAKl6B,cAAchqB,QAAU6jD,EAAc,EAAI,GAAK5lG,KAAK+rE,cAAcm6B,WAC5ElmG,KAAKimG,KAAKhiD,WAAWjB,GAAKD,eAC9B,CACJ,EAEJyiD,GAAetjC,OAAQ,ECrIhB,MAAMwkC,WAAqBtgD,EAC9B,mBAAW1T,GACP,MAAO,cACX,CACA,aAAOyvB,CAAO+Z,EAAQ38C,GAClB,IAAK28C,GAA4B,IAAlBA,EAAOh/E,OAClB,OAAO,EACX,IAAInE,EAAQ,EACZ,IAAK,IAAI6C,EAAI,EAAGA,EAAIsgF,EAAOh/E,SAAUtB,EAAG,CACpC,MAAMugF,EAAQD,EAAOtgF,GACrBugF,EAAMzI,YACN36E,GAASojF,EAAMt3B,UACnB,CAEA,OADAtlB,EAAM8iC,WAAatpE,GACZ,CACX,CACA4H,WAAAA,CAAYwnD,GACR9W,QACArxC,KAAK2zE,cAAe,EACpB3zE,KAAK3F,SAAW+rD,EAASC,SAASQ,KAClC7mD,KAAKmoD,SAAWA,EAChBnoD,KAAKmoD,SAASjsD,SAAS2sD,IACnBA,EAAQspB,gBAAe,MAE3BnyE,KAAKjH,MAAQ,EACbiH,KAAKmmG,UAAY,IAAIC,GACrBpmG,KAAKkmE,MAAQ,IAAIw0B,GAAM,CACnBj5B,SAAU,EACVC,UAAW,EACXC,WAAYvI,EAAOtJ,aACpB60C,WAAU,GACb3kG,KAAKkmE,MAAMy0B,aAAa36F,KAAKmoD,SACjC,CACAurB,SAAAA,GACQ1zE,KAAK2zE,eAET3zE,KAAKmmG,UAAUE,WAAW,CAACrmG,KAAKkmE,QAAQ/D,OAAO,CAACniE,KAAKkmE,OAAQ,GAC7DlmE,KAAK+kD,SAAS/kD,KAAKmmG,UAAUG,oBAC7BtmG,KAAK2zE,cAAe,EACxB,CACA5uB,QAAAA,CAAShsD,GAEL,OADAiH,KAAKjH,MAAQA,EACNiH,IACX,CACA6kD,QAAAA,GACI,OAAO7kD,KAAKjH,KAChB,CACAoqD,IAAAA,GACI,MAAMH,EAAMhjD,KAAKijD,eACXl5C,EAAO/J,KAAKonD,oBAClBpnD,KAAKyjD,cACLzjD,KAAKkoD,sBAAsBloD,KAAKmoD,SAAUp+C,GAC1C/J,KAAKmoD,SAASjsD,SAAS2sD,GAAYA,EAAQ5E,WAAWjB,GAAKD,iBAC/D,EC9CG,MAAM4jD,WAAiBvgD,EAC1B,mBAAW1T,GACP,MAAO,UACX,CACA,qBAAW8E,GACP,OAAO1C,EAAQxjC,IAAI,sBACvB,CACA,aAAO6wD,CAAOhM,EAAW52B,GACrB,IAAIuW,EAAI6J,EACR,IAAKwW,GAAkC,IAArBA,EAAUj5D,OACxB,OAAO,EACX,IAAInE,EAAQ,EACRg0E,EAAaxtC,EAAMwtC,WACnB1K,EAAY9iC,EAAM8iC,UACtB,IAAK,IAAIzmE,EAAI,EAAGA,EAAIu6D,EAAUj5D,SAAUtB,EAAG,CACvC,MAAM6+D,EAAWtE,EAAUv6D,GACrB0zE,EAAY,EAClB,GAAI7U,EAASpgE,WAAa6rD,EAAiBa,MACvC0T,EAAS3Y,QAAUirB,EAAa,EAChCA,GAActS,EAAS1hE,MAAQ4tG,GAASnvD,gBAEvC,GAAIijB,EAASpgE,WAAa6rD,EAAiBW,KAC5C4T,EAAS3Y,QAAUugB,EAAY5H,EAAS1hE,MAAQ,EAChDspE,GAAa5H,EAAS1hE,MAAQ4tG,GAASnvD,gBAEtC,GAAIijB,EAASpgE,WAAa6rD,EAAiBQ,MAAO,CACnD3tD,EAAQkP,KAAK2yC,IAAI6f,EAAS5V,WAAY9rD,GACtC,MAAMgR,EAAO0wD,EAAStT,UACtB,IAAIooB,EAASxlE,EAAKyiE,eAAc,GAAQjtC,EAAMmtC,YAC9C,MAAMjN,EAAO11D,EAAKkiE,UACdxM,GAAQ11D,EAAK8hE,qBAAuBlzB,EAAKgvB,KACzC4H,GAAUtnE,KAAKwsC,IAAIgrB,EAAK5Z,aAAeuT,EAAOiH,qBAElD,MAAMumC,EAAmG,QAAvFjnD,EAAgC,QAA1B7J,EAAK/rC,EAAK0+C,kBAA+B,IAAP3S,OAAgB,EAASA,EAAGq2B,qBAAkC,IAAPxsB,EAAgBA,EAAK,EAClI4vB,EAASq3B,IACTrnE,EAAMmtC,aAAek6B,EAAWr3B,GACpC9U,EAAS1S,YAAYxoB,EAAMmtC,aAC3BntC,EAAMmtC,aAAe4C,CACzB,MAEIv2E,EAAQkP,KAAK2yC,IAAI6f,EAAS5V,WAAY9rD,GACtC0hE,EAAS1S,YAAYxoB,EAAMynB,UAC3BznB,EAAMynB,UAAYsoB,CAE1B,CAGA,OAFA/vC,EAAM8iC,UAAYA,EAAYtpE,EAAQ,EACtCwmC,EAAMwtC,WAAaA,EAAah0E,EAAQ,GACjC,CACX,CACA,iCAAW8tG,GACP,MAAO,CAAC,OAAQ,WAAY,QAChC,CACA,yBAAWC,GACP,MAAO,CAAC,QACZ,CACA,oCAAWC,GACP,MAAO,CAAC,OAAQ,OAAQ,WAAY,WAAY,QACpD,CACA,0BAAWC,GACP,MAAO,CAAC,OAAQ,OAAQ,WAAY,WAAY,WAAY,QAAS,OACzE,CACA,uBAAWC,GACP,MAAO,CAAC,QACZ,CACA,wBAAWC,GACP,MAAO,CAAC,OAAQ,OAAQ,WAAY,WACxC,CACA,yBAAWC,GACP,MAAO,CAAC,WACZ,CACA,+BAAWC,GACP,MAAO,CAAC,OAAQ,gBAAiB,cACrC,CACAzmG,WAAAA,CAAYnC,GACR6yC,QACArxC,KAAK3F,SAAW6rD,EAAiBQ,MAC7BigD,GAASO,cAAc/sG,QAAQqE,IAAS,IACxCwB,KAAK3F,SAAW6rD,EAAiBa,OAEjC4/C,GAASM,aAAa9sG,QAAQqE,IAAS,IACvCwB,KAAK3F,SAAW6rD,EAAiBW,MAErC7mD,KAAKxB,KAAOA,EACZwB,KAAKqnG,SAAU,EACfrnG,KAAK+rE,cAAgB,CACjBu7B,uBAAwB,EACxBC,uBAAwB,GAE5BvnG,KAAKwnG,wBAAyB,EAC9BxnG,KAAK+mG,0BAA4BJ,GAASI,0BAA0B5sG,QAAQ6F,KAAKxB,OAAS,EACtFmoG,GAASE,uBAAuB1sG,QAAQ6F,KAAKxB,OAAS,IACtDwB,KAAKqnG,SAAU,GAEnBrnG,KAAKupB,KAAO6vC,EAAOoB,cAAcx6D,KAAKxB,KAC1C,CACA6oD,OAAAA,CAAQt9C,GAUJ,OATAsnC,MAAMgW,QAAQt9C,GACV48F,GAASS,qBAAqBjtG,QAAQ6F,KAAKxB,OAAS,IAChDuL,EAAKyiE,iBAAmB,EACxBxsE,KAAK3F,SAAW+rD,EAASC,SAASK,MAGlC1mD,KAAK3F,SAAW+rD,EAASC,SAASO,OAGnC5mD,IACX,CACAynG,UAAAA,CAAWJ,GAEP,OADArnG,KAAKqnG,QAAUA,EACRrnG,IACX,CACA0nG,kBAAAA,CAAmB3N,GAGf,OAFA/5F,KAAK2nG,gBAAkB,IAAItnD,EAC3BrgD,KAAK2nG,gBAAgBviD,QAAQgU,EAAOmB,gBAAgBw/B,IAC7C/5F,IACX,CACA4nG,kBAAAA,CAAmB7N,GAGf,OAFA/5F,KAAK6nG,gBAAkB,IAAIxnD,EAC3BrgD,KAAK6nG,gBAAgBziD,QAAQgU,EAAOmB,gBAAgBw/B,IAC7C/5F,IACX,CACAmjD,IAAAA,GACI,MAAMH,EAAMhjD,KAAKijD,eACXl5C,EAAO/J,KAAKonD,oBAClBpnD,KAAKyjD,cACL,MAAM+E,EAAQz+C,EAAK2jE,aACnB1qB,EAAI0nB,UAAU,WAAY1qE,KAAKw/C,aAAa,OAC5C,MAAMlzB,EAAQviB,EAAK29D,mBAAmB1nE,KAAK3F,SAAU2F,KAAKjG,OAC1D,IAAI+tG,EAASx7E,EAAMltB,EACnB,MAAMoxE,EAAahoB,EAAMqa,yBACnB8N,EAAgB3B,GAAiBjlE,EAAM/J,KAAK3F,UAClD,IAAI0tG,EAAS/nG,KAAK+mG,0BAA4Bz6E,EAAMjtB,EAAI,EAOxD,GANIW,KAAK3F,WAAa6rD,EAAiBQ,QACnCqhD,EAASn5B,GAAQ7kE,EAAM/J,KAAKgnD,WAAahnD,KAAKgnD,SAAW2pB,GAAiBH,GAE1ExwE,KAAK3F,WAAa6rD,EAAiBU,QACnCmhD,EAASh5B,GAAWhlE,EAAM/J,KAAKgnD,WAAahnD,KAAKgnD,SAAW2pB,EAAgB,KAAOH,GAEnFxwE,KAAKqnG,QAAS,CACd,IAAIW,EAAc,EAClB,MAAMC,EAASl+F,EAAKs+C,iBAAiBvO,OACrC,QAAyBj9C,IAArBmD,KAAKgoG,YACLA,EAAchoG,KAAKgoG,gBAElB,CACD,MAAMrhC,EAAY58D,EAAK4oE,WAAWvM,eAC5BrsE,EAAQ4sE,EAAUxsE,QAAQ4P,GAC1BymF,EAAcz2F,EAAQ,EAAI4sE,EAAUzpE,OAASypE,EAAU5sE,EAAQ,GAAGs4E,wBAAqBx1E,EAEzFmrG,GADAxX,EAC+C,IAA/BA,EAAY12C,OAASmuD,GAGuB,IAA5Cz/C,EAAM1O,OAAS0O,EAAM3D,WAAaijD,GAEtD9nG,KAAKgoG,YAAcA,CACvB,CACAF,GAAUE,CACd,EAjKR,WAAoB,QAAAn2D,EAAA50C,UAAAC,OAAN40C,EAAI,IAAAhxC,MAAA+wC,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA90C,UAAA80C,GACV40D,GAASzkC,OACTtlD,EAAI,mBAAoBk1B,EAChC,CA+JQ5wC,CAAE,uBAAwBlB,KAAKupB,KAAK2+E,WAAW,GAAIJ,EAAQC,GACvD/nG,KAAK6nG,kBACL7nG,KAAK6nG,gBAAgBviD,WAAWtC,EAAK8kD,EAAS9nG,KAAK8hD,OAA2C,GAAlC9hD,KAAK6nG,gBAAgBhjD,WAAkBkjD,EAAS/nG,KAAK+hD,OAAS/hD,KAAK6nG,gBAAgBjiD,iBAAiBxE,0BAChK2mD,GAAU/nG,KAAK6nG,gBAAgBhiD,YAAc7lD,KAAK+rE,cAAcu7B,wBAEhEX,GAASQ,eAAehtG,QAAQ6F,KAAKxB,OAAS,IAC9CwB,KAAK+hD,QAAU/hD,KAAK6lD,aAExB7lD,KAAKZ,EACD0oG,GACK9nG,KAAK3F,WAAa6rD,EAAiBQ,OAAS1mD,KAAK3F,WAAa6rD,EAAiBU,MAAqB,GAAb5mD,KAAKjH,MAAc,GACnHiH,KAAKX,EAAI0oG,EACT/nG,KAAKslD,WAAWtC,EAAK,EAAG,GACpBhjD,KAAK2nG,kBACLI,GAAU/nG,KAAK6lD,YAAc7lD,KAAK+rE,cAAcw7B,uBAChDvnG,KAAK2nG,gBAAgBriD,WAAWtC,EAAK8kD,EAAS9nG,KAAK8hD,OAA2C,GAAlC9hD,KAAK2nG,gBAAgB9iD,WAAkBkjD,EAAS/nG,KAAK+hD,OAAS/hD,KAAK2nG,gBAAgB/hD,iBAAiBxE,2BAEpK4B,EAAI8nB,YACR,EAEJ67B,GAASzkC,OAAQ,EC5LV,MAAMimC,WAAoB/hD,EAC7B,mBAAW1T,GACP,MAAO,aACX,CACA,qBAAO0/C,CAAex3B,GAClB,IAAK,MAAM7wD,KAAQ6wD,EACf,IAAK,IAAIh/D,EAAI,EAAGA,EAAImO,EAAK3N,KAAKc,OAAQtB,IAClCmO,EAAKw9D,YAAY,IAAI4gC,GAAYjiD,EAAiBW,MAAOjrD,GACzDmO,EAAKw9D,YAAY,IAAI4gC,GAAYjiD,EAAiBa,OAAQnrD,EAGtE,CACA,aAAOumE,CAAO2V,EAAav4C,GACvB,IAAKu4C,GAAsC,IAAvBA,EAAY56E,OAC5B,OAAO,EACX,IAAIu2F,EAAU,EACVC,EAAU,EACd,IAAK,IAAI93F,EAAI,EAAGA,EAAIk8E,EAAY56E,SAAUtB,EAAG,CACzC,MAAMwsG,EAActwB,EAAYl8E,GAC1BmO,EAAOq+F,EAAYjhD,UACnBl+C,EAAMm/F,EAAYvgD,cAClB9tD,EAAQquG,EAAY7gD,aAC1B,IAAIxnC,EAAQ,EACR9W,IAAQi9C,EAAiBa,QACzBhnC,EAAQhW,EAAK4tE,sBAAsB59E,GACnC25F,EAAUA,EAAU3zE,EAAQqoF,EAAYrvG,MAAQ26F,EAAU3zE,EAAQqoF,EAAYrvG,OAE9EkQ,IAAQi9C,EAAiBW,OACzB9mC,EAAQhW,EAAK6tE,qBAAqB79E,GAASquG,EAAYrvG,MACvD06F,EAAUA,EAAU1zE,EAAQqoF,EAAYrvG,MAAQ06F,EAAU1zE,EAAQqoF,EAAYrvG,OAElFqvG,EAAYljD,UAAUnlC,EAC1B,CAGA,OAFAwf,EAAM8iC,WAAaoxB,EACnBl0D,EAAMwtC,YAAc2mB,GACb,CACX,CACA/yF,WAAAA,CAAYtG,GACRg3C,QACArxC,KAAK3F,SAAwB,OAAbA,QAAkC,IAAbA,EAAsBA,EAAW+rD,EAASC,SAASQ,KACpF7mD,KAAK3F,WAAa+rD,EAASC,SAASU,MACpC/mD,KAAKupB,KAAO,SAEPvpB,KAAK3F,WAAa+rD,EAASC,SAASQ,OACzC7mD,KAAKupB,KAAO,SAEpB,CACA89B,OAAAA,CAAQt9C,GAGJ,OAFA/J,KAAK+J,KAAOA,EACZ/J,KAAKkkD,QAAQn6C,EAAKw6C,WACXvkD,IACX,CACAmjD,IAAAA,GACI,MAAMH,EAAMhjD,KAAKijD,eACXl5C,EAAO/J,KAAKonD,oBAClBpnD,KAAKyjD,cACL,MAAMn3B,EAAQviB,EAAK29D,mBAAmB1nE,KAAK3F,SAAU2F,KAAKjG,MAAO,CAAEi5F,gBAAgB,IACnFhzF,KAAKslD,WAAWtC,EAAK12B,EAAMltB,EAAGktB,EAAMjtB,EACxC,ECrDJ,MAAMgpG,GAAuB,CACzBC,KAAM,CACFlpG,GAAG,EACHC,GAAG,EACHtG,OAAO,EACP6tB,QAAQ,EACR,eAAe,EACf,eAAe,EACf,cAAc,EACd,aAAa,GAEjBwhE,KAAM,CACF,eAAe,EACf,eAAe,EACf,cAAc,EACd,aAAa,GAEjB7+D,KAAM,CACFxwB,OAAO,EACP6tB,QAAQ,IAIV2hF,GAAS,EAAItgG,KAAKoqC,GACjB,MAAMm2D,WAAmBv3B,GAC5BtwE,WAAAA,CAAY8K,GACR4lC,QACArxC,KAAKjH,MAAQ,EACbiH,KAAK4mB,OAAS,EACd5mB,KAAKyoG,UAAY,EACjBzoG,KAAK0oG,oBAAsB,QAC3B1oG,KAAK2oG,cAAgB,GACrB3oG,KAAKyL,QAAUA,EACfzL,KAAKyoG,UAAYxgG,KAAKm9F,IAAI,GAAIhsC,EAAOmG,yBACrC,MAAMqpC,EAAM5oG,KAAKq9B,OAAO,OACxBurE,EAAIh6F,aAAa,iBAAkB,QACnC5O,KAAKyL,QAAQ2I,YAAYw0F,GACzB5oG,KAAK4oG,IAAMA,EACX5oG,KAAKoiD,OAASpiD,KAAK4oG,IACnB5oG,KAAKk8E,OAAS,CAACl8E,KAAK4oG,KACpB5oG,KAAKsoG,KAAO,GACZtoG,KAAK6oG,IAAM,CAAEzpG,EAAG0pG,IAAKzpG,EAAGypG,KACxB,MAAMC,EAAwB,CAC1B,cAAej0D,EAAQxjC,IAAI,cAC3B,YAAa,OACb,cAAewpC,EAAWoB,OAC1B,aAAcnB,EAAUmB,QAE5Bl8C,KAAKu/B,MAAQrkC,OAAOK,OAAO,CAAEytG,OAAQ,EAAGC,OAAQ,GAAKF,GACrD/oG,KAAKkpG,WAAahuG,OAAOK,OAAO,CAAE,eAAgB,EAAK,mBAAoB,OAAQqO,KAAM,QAASL,OAAQ,QAASqsC,WAAY,EAAGC,YAAa,SAAWkzD,GAC1J/oG,KAAKmpG,gBAAkB,GACvBnpG,KAAKopG,gBAAgBR,EAAK5oG,KAAKkpG,YAC/BlpG,KAAKmpG,gBAAgBtnG,KAAK3G,OAAOK,OAAO,CAAC,EAAGyE,KAAKkpG,aACjDlpG,KAAKqpG,WAAa,EACtB,CACArmC,KAAAA,CAAMlnE,GACF,OAAOmM,KAAK+6D,MAAMlnE,EAAIkE,KAAKyoG,WAAazoG,KAAKyoG,SACjD,CACAprE,MAAAA,CAAOisE,GACH,OAAOj8F,SAAS43B,gBArCT,6BAqCiCqkE,EAC5C,CACA5+B,SAAAA,CAAUyc,EAAKjhF,GACX,MAAMi2E,EAAQn8E,KAAKq9B,OAAO,KAU1B,OATAr9B,KAAKk8E,OAAOr6E,KAAKs6E,GACjBn8E,KAAKoiD,OAAOhuC,YAAY+nE,GACxBn8E,KAAKoiD,OAAS+5B,EACVgL,GACAhL,EAAMvtE,aAAa,QAASujC,EAAOg1C,IACnCjhF,GACAi2E,EAAMvtE,aAAa,KAAMujC,EAAOjsC,IACpClG,KAAKopG,gBAAgBjtB,EAAOn8E,KAAKkpG,YACjClpG,KAAKmpG,gBAAgBtnG,KAAK3G,OAAOK,OAAOL,OAAOK,OAAO,CAAC,EAAGyE,KAAKmpG,gBAAgBnpG,KAAKmpG,gBAAgBjsG,OAAS,IAAK8C,KAAKkpG,aAChH/sB,CACX,CACArR,UAAAA,GACI9qE,KAAKk8E,OAAOl2E,MACZhG,KAAKmpG,gBAAgBnjG,MACrBhG,KAAKoiD,OAASpiD,KAAKk8E,OAAOl8E,KAAKk8E,OAAOh/E,OAAS,EACnD,CACAkqF,YAAAA,CAAaC,EAAcjoF,EAAGC,GAC1BW,KAAK0qE,YAAY97D,aAAa,YAAa,aAAF1F,OAAe9J,EAAC,KAAA8J,OAAI7J,EAAC,aAAA6J,OAAYm+E,EAAY,iBAAAn+E,OAAgB9J,EAAC,MAAA8J,OAAK7J,EAAC,KACjH,CACAmoF,aAAAA,GACIxnF,KAAK8qE,YACT,CACA59D,GAAAA,CAAIkyC,GACAp/C,KAAKoiD,OAAOhuC,YAAYgrC,EAC5B,CACAuD,YAAAA,CAAalrC,GAET,OADAzX,KAAKkpG,WAAWt/F,KAAO6N,EAChBzX,IACX,CACA0nF,sBAAAA,CAAuBjwE,GAEnB,OADAzX,KAAK0oG,oBAAsBjxF,EACpBzX,IACX,CACA4iD,cAAAA,CAAenrC,GAEX,OADAzX,KAAKkpG,WAAW3/F,OAASkO,EAClBzX,IACX,CACAyiD,cAAAA,CAAe35B,GAEX,OADA9oB,KAAKkpG,WAAWrzD,YAAc/sB,EACvB9oB,IACX,CACA0iD,aAAAA,CAAcilC,GAEV,OADA3nF,KAAKkpG,WAAWtzD,WAAa+xC,EACtB3nF,IACX,CACA6iD,YAAAA,CAAa9pD,GAET,OADAiH,KAAKkpG,WAAW,gBAAkBnwG,EAC3BiH,IACX,CACA8iD,WAAAA,CAAYnN,GACR,GAAiD,mBAA7Cz6C,OAAOE,UAAUsG,SAASvE,KAAKw4C,GAE/B,OADA31C,KAAKkpG,WAAW,oBAAsBvzD,EAAS55C,KAAK,KAC7CiE,KAGP,MAAM,IAAIoxC,EAAa,gBAAiB,yCAEhD,CACAy2C,UAAAA,CAAWC,GAEP,OADA9nF,KAAKkpG,WAAW,kBAAoBphB,EAC7B9nF,IACX,CACAioF,MAAAA,CAAOlvF,EAAO6tB,GACV5mB,KAAKjH,MAAQA,EACbiH,KAAK4mB,OAASA,EACd5mB,KAAKyL,QAAQgM,MAAM1e,MAAQA,EAAM2I,WACjC1B,KAAK4oG,IAAInxF,MAAM1e,MAAQA,EAAM2I,WAC7B1B,KAAK4oG,IAAInxF,MAAMmP,OAASA,EAAOllB,WAC/B,MAAMwnG,EAAa,CACfnwG,QACA6tB,UAIJ,OAFA5mB,KAAKopG,gBAAgBppG,KAAK4oG,IAAKM,GAC/BlpG,KAAKyvD,MAAMzvD,KAAKu/B,MAAMypE,OAAQhpG,KAAKu/B,MAAM0pE,QAClCjpG,IACX,CACAyvD,KAAAA,CAAMrwD,EAAGC,GACLW,KAAKu/B,MAAMypE,OAAShpG,KAAKu/B,MAAMypE,OAAShpG,KAAKu/B,MAAMypE,OAAS5pG,EAAIA,EAChEY,KAAKu/B,MAAM0pE,OAASjpG,KAAKu/B,MAAM0pE,OAASjpG,KAAKu/B,MAAM0pE,OAAS5pG,EAAIA,EAChE,MAAMkqG,EAAevpG,KAAKjH,MAAQiH,KAAKu/B,MAAMypE,OACvCQ,EAAgBxpG,KAAK4mB,OAAS5mB,KAAKu/B,MAAM0pE,OAE/C,OADAjpG,KAAKypG,WAAW,EAAG,EAAGF,EAAcC,GAC7BxpG,IACX,CACAypG,UAAAA,CAAWC,EAAeC,EAAM5wG,EAAO6tB,GACnC,GAA6B,kBAAlB8iF,EACP1pG,KAAK4oG,IAAIh6F,aAAa,UAAW86F,OAEhC,CACD,MAAME,EAAgBF,EAAgB,IAAMC,EAAO,IAAM5wG,EAAQ,IAAM6tB,EACvE5mB,KAAK4oG,IAAIh6F,aAAa,UAAWg7F,EACrC,CACJ,CACAR,eAAAA,CAAgB39F,EAASy9F,GACrB,MAAMW,EAAoBxB,GAAqB58F,EAAQyF,UACvD,IAAK,MAAM44F,KAAYZ,EACfW,GAAqBA,EAAkBC,KAGvCZ,EAAWY,IACsB,IAAhC9pG,KAAKmpG,gBAAgBjsG,QAClBgsG,EAAWY,IAAa9pG,KAAKmpG,gBAAgBnpG,KAAKmpG,gBAAgBjsG,OAAS,GAAG4sG,IAClFr+F,EAAQoD,eAAe,KAAMi7F,EAAUZ,EAAWY,IAE1D,OAAOr+F,CACX,CACAspC,KAAAA,GACI,KAAO/0C,KAAK4oG,IAAIp0F,WACZxU,KAAK4oG,IAAIz0F,YAAYnU,KAAK4oG,IAAIp0F,UAEtC,CACA4zE,IAAAA,CAAKhpF,EAAGC,EAAGtG,EAAO6tB,EAAQsiF,GAClBtiF,EAAS,IACTvnB,GAAKunB,EACLA,IAAW,GAEf,MAAMmjF,EAAY/pG,KAAKq9B,OAAO,QAQ9B,OAPA6rE,EAA4B,OAAfA,QAAsC,IAAfA,EAAwBA,EAAa,CAAEt/F,KAAM,OAAQ,eAAgB5J,KAAKkpG,WAAW,gBAAiB3/F,OAAQ,SAClJnK,EAAIY,KAAKgjE,MAAM5jE,GACfC,EAAIW,KAAKgjE,MAAM3jE,GACftG,EAAQiH,KAAKgjE,MAAMjqE,GACnB6tB,EAAS5mB,KAAKgjE,MAAMp8C,GACpB5mB,KAAKopG,gBAAgBW,EAAW7uG,OAAOK,OAAO,CAAE6D,IAAGC,IAAGtG,QAAO6tB,UAAUsiF,IACvElpG,KAAKkN,IAAI68F,GACF/pG,IACX,CACAk7E,QAAAA,CAAS97E,EAAGC,EAAGtG,EAAO6tB,GAClB,MAAMsiF,EAAa,CAAEt/F,KAAM5J,KAAKkpG,WAAWt/F,KAAML,OAAQ,QAEzD,OADAvJ,KAAKooF,KAAKhpF,EAAGC,EAAGtG,EAAO6tB,EAAQsiF,GACxBlpG,IACX,CACAqoF,WAAAA,CAAYjpF,EAAGC,EAAGtG,EAAO6tB,GAGrB,OADA5mB,KAAKooF,KAAKhpF,EAAGC,EAAGtG,EAAO6tB,EADJ,CAAEpQ,QAAS,IAAK,iBAAkB,SAE9CxW,IACX,CACAknF,SAAAA,CAAU9nF,EAAGC,EAAGtG,EAAO6tB,GAEnB,OADA5mB,KAAKooF,KAAKhpF,EAAGC,EAAGtG,EAAO6tB,EAAQ,CAAEhd,KAAM5J,KAAK0oG,oBAAqBn/F,OAAQ,SAClEvJ,IACX,CACA2qE,SAAAA,GAII,OAHA3qE,KAAKsoG,KAAO,GACZtoG,KAAK6oG,IAAIzpG,EAAI0pG,IACb9oG,KAAK6oG,IAAIxpG,EAAIypG,IACN9oG,IACX,CACA4qE,MAAAA,CAAOxrE,EAAGC,GAMN,OALAD,EAAIY,KAAKgjE,MAAM5jE,GACfC,EAAIW,KAAKgjE,MAAM3jE,GACfW,KAAKsoG,MAAQ,IAAMlpG,EAAI,IAAMC,EAC7BW,KAAK6oG,IAAIzpG,EAAIA,EACbY,KAAK6oG,IAAIxpG,EAAIA,EACNW,IACX,CACA6qE,MAAAA,CAAOzrE,EAAGC,GAMN,OALAD,EAAIY,KAAKgjE,MAAM5jE,GACfC,EAAIW,KAAKgjE,MAAM3jE,GACfW,KAAKsoG,MAAQ,IAAMlpG,EAAI,IAAMC,EAC7BW,KAAK6oG,IAAIzpG,EAAIA,EACbY,KAAK6oG,IAAIxpG,EAAIA,EACNW,IACX,CACAsoF,aAAAA,CAAcrT,EAAI+0B,EAAI90B,EAAI+0B,EAAI7qG,EAAGC,GAU7B,OATAD,EAAIY,KAAKgjE,MAAM5jE,GACfC,EAAIW,KAAKgjE,MAAM3jE,GACf41E,EAAKj1E,KAAKgjE,MAAMiS,GAChB+0B,EAAKhqG,KAAKgjE,MAAMgnC,GAChB90B,EAAKl1E,KAAKgjE,MAAMkS,GAChB+0B,EAAKjqG,KAAKgjE,MAAMinC,GAChBjqG,KAAKsoG,MAAQ,IAAMrzB,EAAK,IAAM+0B,EAAK,IAAM90B,EAAK,IAAM+0B,EAAK,IAAM7qG,EAAI,IAAMC,EACzEW,KAAK6oG,IAAIzpG,EAAIA,EACbY,KAAK6oG,IAAIxpG,EAAIA,EACNW,IACX,CACAgmF,gBAAAA,CAAiB/Q,EAAI+0B,EAAI5qG,EAAGC,GAQxB,OAPAD,EAAIY,KAAKgjE,MAAM5jE,GACfC,EAAIW,KAAKgjE,MAAM3jE,GACf41E,EAAKj1E,KAAKgjE,MAAMiS,GAChB+0B,EAAKhqG,KAAKgjE,MAAMgnC,GAChBhqG,KAAKsoG,MAAQ,IAAMrzB,EAAK,IAAM+0B,EAAK,IAAM5qG,EAAI,IAAMC,EACnDW,KAAK6oG,IAAIzpG,EAAIA,EACbY,KAAK6oG,IAAIxpG,EAAIA,EACNW,IACX,CACAo1E,GAAAA,CAAIh2E,EAAGC,EAAGiN,EAAQu8E,EAAYC,EAAUC,GACpC,IAAImhB,EAAK9qG,EAAIkN,EAASrE,KAAKkiG,IAAIthB,GAC3BuhB,EAAK/qG,EAAIiN,EAASrE,KAAKoiG,IAAIxhB,GAC/BqhB,EAAKlqG,KAAKgjE,MAAMknC,GAChBE,EAAKpqG,KAAKgjE,MAAMonC,GAChB,MAAME,EAAel4D,EAAey2C,GAC9B0hB,EAAan4D,EAAe02C,GAClC,IAAMC,GAAoBD,EAAWD,GAAc0f,IAC9Cxf,GAAoBF,EAAaC,GAAYyf,IAC9C+B,IAAiBC,EAAY,CAC7B,IAAIt1B,EAAK71E,EAAIkN,EAASrE,KAAKkiG,IAAIthB,EAAa5gF,KAAKoqC,IAC7C23D,EAAK3qG,EAAIiN,EAASrE,KAAKoiG,IAAIxhB,EAAa5gF,KAAKoqC,IACjD4iC,EAAKj1E,KAAKgjE,MAAMiS,GAChB+0B,EAAKhqG,KAAKgjE,MAAMgnC,GAChB19F,EAAStM,KAAKgjE,MAAM12D,GACpBtM,KAAKsoG,MAAQ,IAAJp/F,OAAQghG,EAAE,KAAAhhG,OAAIkhG,EAAE,MAAAlhG,OAAKoD,EAAM,KAAApD,OAAIoD,EAAM,WAAApD,OAAU+rE,EAAE,KAAA/rE,OAAI8gG,EAAE,KAChEhqG,KAAKsoG,MAAQ,IAAJp/F,OAAQoD,EAAM,KAAApD,OAAIoD,EAAM,WAAApD,OAAUghG,EAAE,KAAAhhG,OAAIkhG,GACjDpqG,KAAK6oG,IAAIzpG,EAAI8qG,EACblqG,KAAK6oG,IAAIxpG,EAAI+qG,CACjB,KACK,CACD,IAIII,EAJAv1B,EAAK71E,EAAIkN,EAASrE,KAAKkiG,IAAIrhB,GAC3BkhB,EAAK3qG,EAAIiN,EAASrE,KAAKoiG,IAAIvhB,GAC/BD,EAAayhB,EACbxhB,EAAWyhB,EAGPC,EADAviG,KAAKwsC,IAAIq0C,EAAWD,GAAc5gF,KAAKoqC,GAC/B02C,GAGCA,EAETF,EAAaC,IACb0hB,GAASA,GAEb,MAAMC,GAAS1hB,EACf9T,EAAKj1E,KAAKgjE,MAAMiS,GAChB+0B,EAAKhqG,KAAKgjE,MAAMgnC,GAChB19F,EAAStM,KAAKgjE,MAAM12D,GACpBtM,KAAKsoG,MAAQ,IAAJp/F,OAAQghG,EAAE,KAAAhhG,OAAIkhG,EAAE,MAAAlhG,OAAKoD,EAAM,KAAApD,OAAIoD,EAAM,OAAApD,QAAOshG,EAAK,KAAAthG,QAAKuhG,EAAK,KAAAvhG,OAAI+rE,EAAE,KAAA/rE,OAAI8gG,GAC9EhqG,KAAK6oG,IAAIzpG,EAAI61E,EACbj1E,KAAK6oG,IAAIxpG,EAAI2qG,CACjB,CACA,OAAOhqG,IACX,CACAq1E,SAAAA,GAEI,OADAr1E,KAAKsoG,MAAQ,IACNtoG,IACX,CACA0qG,cAAAA,GACI,MAAO,2BAAPxhG,OAAkClJ,KAAKkpG,WAAWtzD,WAAa,IAAG,OAAA1sC,OAAMlJ,KAAKkpG,WAAWrzD,YAAW,IACvG,CACAjsC,IAAAA,CAAKs/F,GACD,MAAMZ,EAAOtoG,KAAKq9B,OAAO,QAUzB,MAT0B,qBAAf6rE,IACPA,EAAahuG,OAAOK,OAAOL,OAAOK,OAAO,CAAC,EAAGyE,KAAKkpG,YAAa,CAAE3/F,OAAQ,UAE7E2/F,EAAW9qG,EAAI4B,KAAKsoG,KAChBtoG,KAAKkpG,WAAWtzD,WAAa,IAC7BszD,EAAWzxF,MAAQzX,KAAK0qG,kBAE5B1qG,KAAKopG,gBAAgBd,EAAMY,GAC3BlpG,KAAKkN,IAAIo7F,GACFtoG,IACX,CACAuJ,MAAAA,GACI,MAAM++F,EAAOtoG,KAAKq9B,OAAO,QACnB6rE,EAAahuG,OAAOK,OAAOL,OAAOK,OAAO,CAAC,EAAGyE,KAAKkpG,YAAa,CAAEt/F,KAAM,OAAQxL,EAAG4B,KAAKsoG,OAM7F,OALItoG,KAAKkpG,WAAWtzD,WAAa,IAC7BszD,EAAWzxF,MAAQzX,KAAK0qG,kBAE5B1qG,KAAKopG,gBAAgBd,EAAMY,GAC3BlpG,KAAKkN,IAAIo7F,GACFtoG,IACX,CACA8kD,WAAAA,CAAYv7B,GACRi/E,GAAWmC,mBAAmBvlD,QAAQ77B,GACtCi/E,GAAWmC,mBAAmBzmD,QAAQlkD,KAAKkpG,WAAW,eAAgBlpG,KAAKkpG,WAAW,aAAclpG,KAAKkpG,WAAW,eAAgBlpG,KAAKkpG,WAAW,eACpJ,MAAMv2F,EAAK61F,GAAWmC,mBAAmB7mD,iBACzC,MAAO,CAAE1kD,EAAGuT,EAAGvT,EAAGC,EAAGsT,EAAGtT,EAAGtG,MAAO4Z,EAAGxT,EAAGynB,OAAQjU,EAAGrU,EACvD,CACAmnD,QAAAA,CAASl8B,EAAMnqB,EAAGC,GACd,IAAKkqB,GAAQA,EAAKrsB,QAAU,EACxB,OAAO8C,KAEXZ,EAAIY,KAAKgjE,MAAM5jE,GACfC,EAAIW,KAAKgjE,MAAM3jE,GACf,MAAM6pG,EAAahuG,OAAOK,OAAOL,OAAOK,OAAO,CAAC,EAAGyE,KAAKkpG,YAAa,CAAE3/F,OAAQ,OAAQnK,IACnFC,MACEurG,EAAM5qG,KAAKq9B,OAAO,QAIxB,OAHAutE,EAAIl3F,YAAc6V,EAClBvpB,KAAKopG,gBAAgBwB,EAAK1B,GAC1BlpG,KAAKkN,IAAI09F,GACF5qG,IACX,CACAkjD,IAAAA,GAKI,OAJAljD,KAAKqpG,WAAWxnG,KAAK,CACjB09B,MAAO+V,gBAAgBt1C,KAAKu/B,OAC5B2pE,WAAY5zD,gBAAgBt1C,KAAKkpG,cAE9BlpG,IACX,CACAojD,OAAAA,GACI,MAAMynD,EAAa7qG,KAAKqpG,WAAWrjG,MACnC,GAAI6kG,EAAY,CACZ,MAAMtrE,EAAQsrE,EACd7qG,KAAKu/B,MAAQ+V,gBAAgB/V,EAAMA,OACnCv/B,KAAKkpG,WAAa5zD,gBAAgB/V,EAAM2pE,WAC5C,CACA,OAAOlpG,IACX,CACA,aAAIw1C,CAAU/9B,GACVzX,KAAK2iD,aAAalrC,EACtB,CACA,aAAI+9B,GACA,OAAOx1C,KAAKkpG,WAAWt/F,IAC3B,CACA,eAAI6rC,CAAYh+B,GACZzX,KAAK4iD,eAAenrC,EACxB,CACA,eAAIg+B,GACA,OAAOz1C,KAAKkpG,WAAW3/F,MAC3B,CACA26C,OAAAA,CAAQ9pD,EAAG4qC,EAAMqQ,EAAQ59B,GACrB,MAAM4kC,EAAWZ,EAAKO,SAAS5hD,EAAG4qC,EAAMqQ,EAAQ59B,GAChDzX,KAAK2oG,cAAgBltD,EAAKW,YAAYC,GACtC,MAAMyuD,EAAiB,CACnB,cAAezuD,EAASjH,OACxB,YAAaiH,EAASrX,KACtB,cAAeqX,EAAShH,OACxB,aAAcgH,EAAS5kC,OAI3B,OAFAzX,KAAKkpG,WAAahuG,OAAOK,OAAOL,OAAOK,OAAO,CAAC,EAAGyE,KAAKkpG,YAAa4B,GACpE9qG,KAAKu/B,MAAQrkC,OAAOK,OAAOL,OAAOK,OAAO,CAAC,EAAGyE,KAAKu/B,OAAQurE,GACnD9qG,IACX,CACAukD,OAAAA,GACI,OAAOvkD,KAAK2oG,aAChB,EClYG,IAAIoC,GAKAC,GCLAC,GCJAC,GHwYX1C,GAAWmC,mBAAqB,IAAItqD,ECnYpC,SAAW0qD,GACPA,EAAiBA,EAAyB,OAAI,GAAK,SACnDA,EAAiBA,EAAsB,IAAI,GAAK,KACnD,CAHD,CAGGA,KAAqBA,GAAmB,CAAC,IAE5C,SAAWC,GACPA,EAAoBA,EAA0B,KAAI,GAAK,OACvDA,EAAoBA,EAAwB,GAAI,GAAK,KACrDA,EAAoBA,EAA0B,KAAI,GAAK,MAC1D,CAJD,CAIGA,KAAwBA,GAAsB,CAAC,IAC3C,MAAMG,GACT,mBAAOC,CAAaC,EAAWC,EAASvyG,EAAO6tB,GAA6B,IAArB2kF,EAAUtuG,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,OAChE,MAAMuuG,EAAW,IAAIL,GAASE,EAAWC,GACrCvyG,GAAS6tB,GACT4kF,EAASvjB,OAAOlvF,EAAO6tB,GAE3B,MAAMo8B,EAAMwoD,EAASxnD,aAGrB,OAFAhB,EAAI0kC,uBAAuB6jB,GAC3BJ,GAASM,YAAczoD,EAChBA,CACX,CACA,uBAAO0oD,CAAiBL,EAAWtyG,EAAO6tB,EAAQ2kF,GAC9C,OAAOJ,GAASC,aAAaC,EAAWF,GAASQ,SAASC,OAAQ7yG,EAAO6tB,EAAQ2kF,EACrF,CACA,oBAAOM,CAAcR,EAAWtyG,EAAO6tB,EAAQ2kF,GAC3C,OAAOJ,GAASC,aAAaC,EAAWF,GAASQ,SAASG,IAAK/yG,EAAO6tB,EAAQ2kF,EAClF,CACA,qBAAOQ,CAAe9rG,EAAS+rG,EAAOC,EAAOC,EAAKC,EAAKC,GACnDnsG,EAAQ0qE,YACR,MAAM0hC,EAAKH,EAAMF,EACXM,EAAKH,EAAMF,EACXM,EAAQtkG,KAAKukG,MAAMF,EAAID,GAC7B,IAAIjtG,EAAI4sG,EACJ3sG,EAAI4sG,EACRhsG,EAAQ2qE,OAAOohC,EAAOC,GACtB,IAAIQ,EAAM,EACNtpD,GAAO,EACX,OAAUkpD,EAAK,EAAIjtG,GAAK8sG,EAAM9sG,GAAK8sG,MAASI,EAAK,EAAIjtG,GAAK8sG,EAAM9sG,GAAK8sG,IAAO,CACxE,MAAMO,EAAaN,EAAYK,IAAQL,EAAYlvG,QAC7CyvG,EAAKvtG,EAAI6I,KAAKkiG,IAAIoC,GAASG,EACjCttG,EAAIitG,EAAK,EAAIpkG,KAAK2yC,IAAIsxD,EAAKS,GAAM1kG,KAAKykB,IAAIw/E,EAAKS,GAC/C,MAAMC,EAAKvtG,EAAI4I,KAAKoiG,IAAIkC,GAASG,EACjCrtG,EAAIitG,EAAK,EAAIrkG,KAAK2yC,IAAIuxD,EAAKS,GAAM3kG,KAAKykB,IAAIy/E,EAAKS,GAC3CzpD,EACAljD,EAAQ4qE,OAAOzrE,EAAGC,GAGlBY,EAAQ2qE,OAAOxrE,EAAGC,GAEtB8jD,GAAQA,CACZ,CACAljD,EAAQo1E,YACRp1E,EAAQsJ,QACZ,CACA5I,WAAAA,CAAYksG,EAAMC,GACd,GrCnCgChuC,EqCmCZ+tC,ErCnC4B,iBqCoC5C7sG,KAAKgjD,IAAM6pD,MAEV,CACD,QAAahwG,IAATiwG,EACA,MAAM,IAAI17D,EAAa,kBAAmB,4BAE9C,MAAMk6D,EAAUwB,EAChB,IAAIrhG,EACJ,GAAoB,kBAATohG,EAAmB,CAC1B,MAAME,EAAe1/F,SAASkyC,eAAestD,GAC7C,IAAKE,EACD,MAAM,IAAI37D,EAAa,eAAgB,gCAAFloC,OAAiC6jG,EAAY,MAEtFthG,EAAUshG,CACd,MAEIthG,EAAUohG,EAEd,GAAIvB,IAAYH,GAASQ,SAASC,OAAQ,CACtC,IAAKplB,GAAa/6E,GACd,MAAM,IAAI2lC,EAAa,aAAc,iDAEzC,MAAMnxC,EAAUwL,EAAQu4C,WAAW,KAAM,CAAEgpD,oBAAoB,IAC/D,IAAK/sG,EACD,MAAM,IAAImxC,EAAa,aAAc,4BAEzCpxC,KAAKgjD,IAAM,IAAI2jC,GAAc1mF,EACjC,KACK,IAAIqrG,IAAYH,GAASQ,SAASG,IAOnC,MAAM,IAAI16D,EAAa,iBAAkB,2BAAFloC,OAA6BoiG,IANpE,IxBnFT,SAAmB7/F,GACtB,IAAKA,EACD,OAAO,EACX,MAAMgmC,EAASH,IACf,MAA0C,oBAA1BG,EAAOw7D,gBAAiCxhG,aAAmBgmC,EAAOw7D,gBAC9C,oBAAxBxhG,EAAQ2I,aAAuD,kBAAlB3I,EAAQgM,KACrE,CwB6EqBy1F,CAAUzhG,GACX,MAAM,IAAI2lC,EAAa,aAAc,2CAEzCpxC,KAAKgjD,IAAM,IAAIwlD,GAAW/8F,EAI9B,CACJ,CACJ,CACAw8E,MAAAA,CAAOlvF,EAAO6tB,GAEV,OADA5mB,KAAKgjD,IAAIilC,OAAOlvF,EAAO6tB,GAChB5mB,IACX,CACAgkD,UAAAA,GACI,OAAOhkD,KAAKgjD,GAChB,EAEJmoD,GAASQ,SAAWZ,GACpBI,GAASgC,YAAcnC,GACvBG,GAASM,iBAAc5uG,EGxGhB,MAAM+7C,WAAqBwN,EAC9B,mBAAW1T,GACP,MAAO,cACX,CACA,aAAOyvB,CAAO8wB,EAAM1zD,GAChB,MAAM8iC,EAAY9iC,EAAM8iC,UAClB0K,EAAaxtC,EAAMwtC,WAEzB,IAAKkmB,GAAwB,IAAhBA,EAAK/1F,OACd,OAAO,EACX,MAAMg2F,EAAW,GACjB,IAAI1wB,EAAW,KACX4qC,EAAkC,EAClCha,EAAa,EAEjB,IAAK,IAAIx3F,EAAI,EAAGA,EAAIq3F,EAAK/1F,SAAUtB,EAAG,CAClC,MAAMs0D,EAAM+iC,EAAKr3F,GACXmO,EAAOmmD,EAAI/I,UACXl+C,EAAMinD,EAAIrI,cAChB,IAAKka,EAAYh4D,GACb,MAAM,IAAIqnC,EAAa,eAE3B,MAAMr3C,EAAQm2D,EAAI3I,aACZ9oD,EAAQsL,EAAK24D,cAAc3oE,GAC3BkxC,EAAKlhC,EAAK09C,qBACV+jB,EAAoC,EAAbtb,EAAI5jD,OAAc8sD,EAAOiH,oBAAsB,GAW5E,GAVIp1B,IACIhiC,IAAQi9C,EAAiBQ,OACzBwJ,EAAIlJ,SAAW/b,EAAG+sC,WAAWtL,YAC7BntC,EAAMmtC,aAAelB,GAEhBviE,IAAQi9C,EAAiBU,QAC9BsJ,EAAIlJ,SAAW/b,EAAG+sC,WAAWhxB,SAC7BznB,EAAMynB,UAAYwkB,IAGtBzhE,IAASy4D,EAAU,CACnB,IAAK,IAAI1mE,EAAI,EAAGA,EAAIiO,EAAK3N,KAAKc,SAAUpB,EAChCmN,IAAQm9C,EAASC,SAASQ,OAC1BumD,EAAkCnlG,KAAK2yC,IAAI7wC,EAAK44D,yBAA0ByqC,IAE3D,IAAfrgC,IACAqmB,EAAanrF,KAAK2yC,IAAI7wC,EAAK8sE,0BAA2Buc,IAG9D5wB,EAAWz4D,CACf,CACA,MAAMsjG,EAA6B5uG,EAAMuzC,KACzCkhD,EAASrxF,KAAK,CACVoH,MACAc,OACAmmD,MACAle,KAAMq7D,EACNha,OAAQ+Z,EACR9Z,OAAQF,GAEhB,CACAF,EAAS/vB,MAAK,CAACllE,EAAGE,IAAMA,EAAE6zC,KAAO/zC,EAAE+zC,OACnC,IAAIwhD,EAAY,EACZC,EAAU,EACVC,EAAU,EACVf,EAAW,KACX3R,EAAW,KACf,IAAK,IAAIplF,EAAI,EAAGA,EAAIs3F,EAASh2F,SAAUtB,EAAG,CACtC,MAAMmO,EAAOmpF,EAASt3F,GAAGmO,KACnBd,EAAMiqF,EAASt3F,GAAGqN,IAClBinD,EAAMgjC,EAASt3F,GAAGs0D,IAClBle,EAAOkhD,EAASt3F,GAAGo2C,KACnBshD,EAASJ,EAASt3F,GAAG03F,OACvBthD,IAAS2gD,GAAY5oF,IAASi3E,IAC9BwS,EAAYzmB,EAAaumB,GAE7B,MAAMM,EAAW1jC,EAAIrL,WAjEN,EAkEf,IAAIyoD,EAAY,EACZrkG,IAAQm9C,EAASC,SAASQ,MAC1BqJ,EAAIhL,UAAUmd,EAAY+qC,GAC1BE,EAAY1Z,EACZH,EAAUxrF,KAAK2yC,IAAI0yD,EAAW7Z,IAEzBxqF,IAAQm9C,EAASC,SAASU,QAC/BmJ,EAAIhL,UAAUsuC,GACd8Z,GAAa1Z,EACbF,EAAU4Z,EAAY5Z,EAAU4Z,EAAY5Z,GAEhDf,EAAW3gD,EACXgvC,EAAWj3E,CACf,CAGA,OAFAw1B,EAAM8iC,WAAaoxB,EACnBl0D,EAAMwtC,YAAc2mB,GACb,CACX,CACA/yF,WAAAA,CAAYuJ,GACRmnC,QACArxC,KAAKutG,aAAerjG,EACpBlK,KAAK3F,SAAW+rD,EAASC,SAASK,MAClC1mD,KAAK8hD,OAAS,EACd9hD,KAAK+hD,OAAS,EACd/hD,KAAKgnD,SAAW,EAChBhnD,KAAKwtG,WAAa,EAClBxtG,KAAK0uF,QAAU,EACf1uF,KAAKy5C,QAAU,EACfz5C,KAAKytG,QAAS,EACdztG,KAAK0tG,IAAMvC,GAASgC,YAAYrzB,KAChC95E,KAAKsM,OAAS,EACdtM,KAAK2tG,YAAa,EAClB3tG,KAAK+kD,SAAuB,EAAd/kD,KAAKsM,OAAa,EACpC,CACAshG,cAAAA,CAAeF,GAIX,OAHIA,GAAOvC,GAASgC,YAAYrzB,MAAQ4zB,GAAOvC,GAASgC,YAAYvlC,OAChE5nE,KAAK0tG,IAAMA,GAER1tG,IACX,CACA6tG,eAAAA,CAAgB3jG,GAEZ,OADAlK,KAAKutG,aAAerjG,EACblK,IACX,CACAm0F,UAAAA,CAAW/0F,GAEP,OADAY,KAAK0uF,QAAUtvF,EACRY,IACX,CACAo0F,UAAAA,CAAW/0F,GAEP,OADAW,KAAKy5C,QAAUp6C,EACRW,IACX,CACA8tG,WAAAA,CAAY/jG,GAER,OADA/J,KAAKghF,SAAWj3E,EACT/J,IACX,CACA+tG,SAAAA,CAAUN,GAEN,OADAztG,KAAKytG,OAASA,EACPztG,IACX,CACAguG,aAAAA,CAAcL,GAEV,OADA3tG,KAAK2tG,WAAaA,EACX3tG,IACX,CACAmjD,IAAAA,GACI,MAAMH,EAAMhjD,KAAKijD,eACXl5C,EAAO/J,KAAKonD,oBAClBpnD,KAAKyjD,cACL,MAAMn3B,EAAQviB,EAAK29D,mBAAmB1nE,KAAK3F,SAAU2F,KAAKjG,OACpD8uE,EAAgB9+D,EAAK6hE,UAAY7hE,EAAK8hE,mBAAqBlzB,EAAKgvB,GACtE,IAAIyT,EAAO9uD,EAAMltB,EAAIY,KAAK8hD,OAAS9hD,KAAK0uF,QACpCjhB,EAAU,CAAC,EACX1jE,EAAK6hE,YACL6B,EAAU1jE,EAAK4jE,YAAYlE,cAE/B,IAAI6R,EAAOhvD,EAAMjtB,EAAIW,KAAK+hD,OAAS/hD,KAAKy5C,QACxC,OAAQz5C,KAAK3F,UACT,KAAK+rD,EAASC,SAASK,MAGf40B,EADWvxE,EAAK6jE,QACNp7B,QAAO,CAACv0C,EAAGE,IAAOF,EAAIE,EAAIF,EAAIE,IACpC4L,EAAK6hE,WAAa/C,IAAkBlwB,EAAKgvB,KACzC2T,EAAO7N,EAAQ1D,KAAOj1B,EAAQxjC,IAAI,6BAEtCgqE,GACIt7E,KAAKsM,OAASwoC,EAAQxjC,IAAI,gCAAkCtR,KAAKgnD,SAAWoS,EAAOiH,oBAE3F,MACJ,KAAKja,EAASC,SAASO,MAGf00B,EADWvxE,EAAK6jE,QACNp7B,QAAO,CAACv0C,EAAGE,IAAOF,EAAIE,EAAIF,EAAIE,IACpC4L,EAAK6hE,WAAa/C,IAAkBlwB,EAAKivB,OACzC0T,EAAO7N,EAAQ1D,KAAOj1B,EAAQxjC,IAAI,6BAEtCgqE,GACIt7E,KAAKsM,OAASwoC,EAAQxjC,IAAI,gCAAkCtR,KAAKgnD,SAAWoS,EAAOiH,oBAE3F,MACJ,KAAKja,EAASC,SAASQ,KACnBu0B,GAAQp7E,KAAKsM,OAAS,EAAIwoC,EAAQxjC,IAAI,4BACtC,MACJ,KAAK80C,EAASC,SAASU,MACnBq0B,GAAQp7E,KAAKsM,OAAS,EAAIwoC,EAAQxjC,IAAI,6BACtC,MACJ,QACI,MAAM,IAAI8/B,EAAa,kBAAmB,gBAAFloC,OAAkBlJ,KAAK3F,SAAQ,gBAE3E2F,KAAK2tG,aACL3qD,EAAI2nB,YACJ3nB,EAAIoyB,IAAIgG,EAAME,EAAMt7E,KAAKsM,OAAQ,EAAa,EAAVrE,KAAKoqC,IAAQ,GACjD2Q,EAAIH,aAAa,KACjBG,EAAIz5C,UAERy5C,EAAIkB,QAAQlkD,KAAKq8C,UACjB,MAAMj9C,EAAIg8E,EAAOp4B,EAAI8B,YAAY9kD,KAAKutG,cAAcx0G,MAAQ,EAC5DiqD,EAAIyC,SAAS,GAAKzlD,KAAKutG,aAAcnuG,EAAGk8E,EAAO,KAC/C,MAAM0F,EAAWhhF,KAAKghF,SACtB,GAAIhf,EAAgBgf,GAAW,CAC3B,MAAMz0D,EAAMy0D,EAASxT,WAAazjE,EAAK+vC,OAAS,EAUhD,IAAIm0D,EACAC,EACJ,OAXAlrD,EAAIJ,eAAe,WACnBI,EAAI6kC,WAAW,SACf7kC,EAAIH,aAAa,IACb7iD,KAAKytG,OACLtC,GAASY,eAAe/oD,EAAKo4B,EAAO,GAAIE,EAAMF,EAAO7uD,EAAK+uD,EAAM,CAAC,EAAG,IAGpE6vB,GAASY,eAAe/oD,EAAKo4B,EAAO,GAAIE,EAAMF,EAAO7uD,EAAK+uD,EAAM,CAAC,EAAG,IAIhEt7E,KAAK0tG,KACT,KAAKvC,GAASgC,YAAYxlC,GACtBsmC,GAAO,GACPC,EAAUluG,KAAKytG,OAAS,CAAC,EAAG,GAAK,CAAC,EAAG,GACrCtC,GAASY,eAAe/oD,EAAKo4B,EAAO7uD,EAAK+uD,EAAMF,EAAO7uD,EAAK+uD,EAAO2yB,EAAKC,GACvE,MACJ,KAAK/C,GAASgC,YAAYvlC,KACtBqmC,EAAM,GACNC,EAAUluG,KAAKytG,OAAS,CAAC,EAAG,GAAK,CAAC,EAAG,GACrCtC,GAASY,eAAe/oD,EAAKo4B,EAAO7uD,EAAK+uD,EAAMF,EAAO7uD,EAAK+uD,EAAO2yB,EAAKC,GAKnF,CACJ,EC5NG,MAAMl1D,WAAeoN,EACxB,mBAAW1T,GACP,MAAO,QACX,CACA,aAAOyvB,CAAOgsC,EAAS5uE,GACnB,MAAM8iC,EAAY9iC,EAAM8iC,UAExB,IAAK8rC,GAA8B,IAAnBA,EAAQjxG,OACpB,OAAO,EACX,MAAMkxG,EAAaD,EAAQt0G,KAAK0P,IAC5B,MAAMQ,EAAOR,EAAO49C,UACdptD,EAAQwP,EAAOg+C,aACrB,GAAIwa,EAAYh4D,GAAO,CACnB,MAAM,KAAEioC,GAASjoC,EAAK24D,cAAc3oE,GAEpC,MAAO,CAAEi4C,OAAMjyB,MADDhW,EAAK44D,yBACGp5D,SAC1B,CACK,GAAI04D,EAAUl4D,GAAO,CACtB,MAAQ8qC,IAAKn6C,GAAWqP,EAAKskG,eAAet0G,GAC5C,MAAO,CAAEi4C,KAAMt3C,EAAQqlB,MAAO,EAAGxW,SACrC,CAEI,MAAM,IAAI6nC,EAAa,WAAY,2BAGrCk9D,EAAcjsC,EACdvgB,EAASssD,EAAW57D,QAAO,CAACsP,EAAMppD,KAAwB,IAAtB,OAAE6Q,EAAM,MAAEwW,GAAOrnB,EAEvD,OADA6Q,EAAO27C,UAAUopD,EAAcvuF,GACxB9X,KAAK2yC,IAAIrxC,EAAOs7C,WAtBL,EAsBiC/C,KACpD,GAEH,OADAviB,EAAM8iC,WAAavgB,GACZ,CACX,CACAnhD,WAAAA,CAAYnC,EAAMyU,GACdo+B,QACArxC,KAAKiT,QAAU/X,OAAOK,OAAO,CAAEgzG,WAAW,GAAQt7F,GAClDjT,KAAKuuG,UAAYvuG,KAAKiT,QAAQs7F,UAC9BvuG,KAAKxB,KAAOA,EACZwB,KAAK3F,SAAW+rD,EAASC,SAASQ,KAClC7mD,KAAK+rE,cAAgB,CACjB11B,UAAWvB,EAAQxjC,IAAI,oBAE3BtR,KAAKklD,UAAU,GACfllD,KAAK+kD,SAAS,GAClB,CACA8C,WAAAA,GACI,OAAO7nD,KAAK3F,QAChB,CACAm0G,UAAAA,CAAWzkG,GAEP,OADA/J,KAAKyuG,QAAU1kG,EACR/J,IACX,CACAmjD,IAAAA,GACI,MAAMH,EAAMhjD,KAAKijD,eACXl5C,EAAO/J,KAAKonD,oBAClBpnD,KAAKyjD,cACL,MAAMn3B,EAAQviB,EAAK29D,mBAAmB1nE,KAAK3F,SAAU2F,KAAKjG,OAC1D,IAAI20G,EAAa3kG,EAAK6jE,QAClB7D,EAAOz9C,EAAMjtB,EACb27E,EAAO1uD,EAAMjtB,EACjB,MAAMD,EAAIktB,EAAMltB,EAAI,EACdwjE,EAAY74D,EAAK2jE,aAAa7K,yBAC9BjI,EAAQ56D,KAAK2nD,uBAAuBowB,WAAWhuE,EAAKs4C,eAC1D,IAAK,IAAIzmD,EAAI,EAAGA,EAAIg/D,EAAM19D,OAAQtB,IAAK,CACnC,MAAMmO,EAAO6wD,EAAMh/D,GACnB,GAAIkmE,EAAO/3D,GAAO,CACd2kG,EAAa3kG,EAAK6jE,QAClB,IAAK,IAAI9xE,EAAI,EAAGA,EAAI4yG,EAAWxxG,OAAQpB,KAC/BkE,KAAK+J,OAAS6wD,EAAMh/D,IAAMoE,KAAKuuG,aAC/BxkC,EAAO9hE,KAAKykB,IAAIq9C,EAAM2kC,EAAW5yG,IACjCk/E,EAAO/yE,KAAK2yC,IAAIogC,EAAM0zB,EAAW5yG,IAG7C,CACJ,CACA,IAAI6yG,EAAQ,GACRC,EAAS,EACTC,EAAQ,EACZ,OAAQ7uG,KAAKxB,MACT,KAAKw6C,GAAO81D,KAAKC,WACjB,KAAK/1D,GAAO81D,KAAKE,UACjB,KAAKh2D,GAAO81D,KAAKG,eACbN,EAAQxoD,EAAO+oD,iBACfN,EAAS7kC,EACTA,GAAQnH,EAAY,EACpBoY,GAAQpY,EAAY,EACpB,MACJ,KAAK5pB,GAAO81D,KAAKK,SACjB,KAAKn2D,GAAO81D,KAAKM,QACjB,KAAKp2D,GAAO81D,KAAKO,aACbV,EAAQxoD,EAAOmpD,mBACfV,EAAS5zB,EAAOpY,EAChBmH,GAAQnH,EAAY,EACpB,MACJ,KAAK5pB,GAAO81D,KAAKS,uBACbxlC,GAAQnH,EAAY,EACpBoY,GAAQpY,EAAY,EACpB,MACJ,QACI,MAAM,IAAIxxB,EAAa,cAAe,mBAAFloC,OAAqBlJ,KAAKxB,KAAI,oBAE1E,GAAIwB,KAAKxB,OAASw6C,GAAO81D,KAAKC,YAAc/uG,KAAKxB,OAASw6C,GAAO81D,KAAKK,SAClEnsD,EAAIk4B,SAAS97E,EAAIY,KAAK8hD,OAAQioB,EAAM,EAAGiR,EAAOjR,OAE7C,CACD,MAAMylC,EAAYb,IAAUxoD,EAAOmpD,mBAAqBnpD,EAAOspD,qBAAuBtpD,EAAOupD,mBAC7F,IAAI9E,EAAM,GACV,MAAM7+D,EAAK,IAAIsU,EACf,KAAOtU,EAAG8Y,WAAam2B,EAAOjR,GAC1B6gC,GAAO4E,EACPzjE,EAAGqZ,QAAQwlD,GAEX5qG,KAAKxB,OAASw6C,GAAO81D,KAAKG,gBAC1BjvG,KAAKxB,OAASw6C,GAAO81D,KAAKE,WAC1BhvG,KAAKxB,OAASw6C,GAAO81D,KAAKS,wBAC1BvsD,EAAIokC,aAAa,GAAIhoF,EAAIY,KAAK8hD,OAAQioB,GACtCh+B,EAAGuZ,WAAWtC,EAAK5jD,EAAIY,KAAK8hD,OAAQioB,EAAOh+B,EAAG6Z,iBAAiBxE,yBAA2BrV,EAAG8Z,YAAc,GAC3G7C,EAAIwkC,gBACJqnB,EAAQ9kC,EAAOh+B,EAAG8Y,WAAa,IAG/B7B,EAAIokC,cAAc,GAAIhoF,EAAIY,KAAK8hD,OAAQk5B,GACvCjvC,EAAGuZ,WAAWtC,EAAK5jD,EAAIY,KAAK8hD,OAAQk5B,EAAOjvC,EAAG6Z,iBAAiBxE,yBAA2BrV,EAAG8Z,YAAc,GAC3G7C,EAAIwkC,gBACJqnB,EAAQ7zB,EAAOjvC,EAAG8Y,WAAa,EAEvC,CACA,GAAe,IAAX+pD,EAAc,CACd,MAAM7iE,EAAK,IAAIsU,EACftU,EAAGqZ,QAAQupD,GACX5iE,EAAGuZ,WAAWtC,EAAK5jD,EAAIY,KAAK8hD,OAAS/V,EAAG8Y,WAAa,EAAG+pD,EAC5D,CACA,GAAI5uG,KAAKxB,OAASw6C,GAAO81D,KAAKG,gBAAkBjvG,KAAKxB,OAASw6C,GAAO81D,KAAKO,aAAc,CACpF,MAAMtjE,EAAK,IAAIsU,EAAQ,eACvBtU,EAAGqZ,QAAQ,KACXrZ,EAAGuZ,WAAWtC,EAAK5jD,EAAIY,KAAK8hD,OAAS/V,EAAG8Y,WAAa,EAAGgqD,GAAS7uG,KAAKxB,OAASw6C,GAAO81D,KAAKG,eAAiBljE,EAAG8Z,YAAc,GACjI,CACJ,EAEJ7M,GAAO81D,KAAO,CACVC,WAAY,EACZI,SAAU,EACVH,UAAW,EACXI,QAAS,EACTH,eAAgB,EAChBI,aAAc,EACdE,uBAAwB,GCpJrB,MAAMI,WAAgBvpD,EACzB,mBAAW1T,GACP,MAAO,SACX,CACA,aAAOyvB,CAAOytC,EAAUrwE,EAAOt/B,GAC3B,IAAK2vG,GAAgC,IAApBA,EAAS1yG,OACtB,OAAO,EACX,IAAI8pD,EAAWznB,EAAMmtC,YACjB3zE,EAAQ,EACRgnB,EAAQwf,EAAMwtC,WAAa,EAC/B,MAAM2X,EAAQzkF,EAAQ83E,WAAWjhC,GAAKpE,UACtC,GAAIgyC,GAASA,EAAMxnF,OAAS,EAAG,CAE3B8pD,GADmB09B,EAAM7qF,KAAK8Y,GAAOA,EAAG2yE,kBAAiB9yC,QAAO,CAACv0C,EAAGE,IAAOF,EAAIE,EAAIF,EAAIE,IAAMi7D,EAAOiH,oBAChE,CACxC,MAEI9gC,EAAMmtC,aAAe,EAEzB,IAAK,IAAI9wE,EAAI,EAAGA,EAAIg0G,EAAS1yG,SAAUtB,EAAG,CACtC,MAAMi0G,EAAUD,EAASh0G,GACzBi0G,EAAQ3qD,UAAUnlC,GAClB8vF,EAAQ9nD,YAAYf,GACpBjuD,GAAS82G,EAAQhrD,WACjB9kC,GAAShnB,CACb,CAEA,OADAwmC,EAAMwtC,YAAch0E,GACb,CACX,CACA4H,WAAAA,GACI0wC,QACArxC,KAAK3F,SAAW+rD,EAASC,SAASU,MAClC/mD,KAAK+rE,cAAgB,CACjBzlD,KAAM,MACNvtB,MAAO,IAEXiH,KAAK8vG,gBAAgB9vG,KAAK+rE,cAAchzE,MAC5C,CACA+2G,eAAAA,CAAgB/2G,GACZiH,KAAK+rE,cAAchzE,MAAQA,EAC3BiH,KAAKupB,KAAO9tB,OAAOmgG,cAAc57F,KAAK+rE,cAAczlD,MACpD,MAAMypF,EAAU/vG,KAAK6kD,WACrB,IAAKkrD,EACD,MAAM,IAAI3+D,EAAa,0CAE3B,MAAM4+D,EAAQ/nG,KAAK+6D,MAAMhjE,KAAK+rE,cAAchzE,MAAQg3G,GACpD,IAAK,IAAIn0G,EAAI,EAAGA,EAAIo0G,EAAOp0G,IACvBoE,KAAKupB,MAAQ9tB,OAAOmgG,cAAc57F,KAAK+rE,cAAczlD,MAEzD,OAAOtmB,IACX,CACAiwG,cAAAA,CAAe3pF,GAEX,OADAtmB,KAAK+rE,cAAczlD,KAAOA,EACnBtmB,KAAK8vG,gBAAgB9vG,KAAK+rE,cAAchzE,MACnD,CACAoqD,IAAAA,GACI,MAAMH,EAAMhjD,KAAKijD,eACXl5C,EAAO/J,KAAKonD,oBAClBpnD,KAAKyjD,cACL,MACMysD,EADQnmG,EAAK29D,mBAAmBthB,EAASC,SAASU,MAAO/mD,KAAKjG,OACnDqF,EACX+wG,EAAKpmG,EAAK+jE,eAAe9tE,KAAKgnD,UAAY,EAChDhnD,KAAKslD,WAAWtC,EAAKktD,EAAIC,EAC7B,EClDJ,SAASjvG,KAAW,QAAA2wC,EAAA50C,UAAAC,OAAN40C,EAAI,IAAAhxC,MAAA+wC,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA90C,UAAA80C,GACVq+D,GAAgBluC,OAChBtlD,EAAI,0BAA2Bk1B,EACvC,CACO,MAAMs+D,GACTzvG,WAAAA,GACIX,KAAKu/B,MAAQ,CACT8iC,UAAW,EACX0K,WAAY,EACZ/lB,SAAU,EACV0lB,YAAa,GAEjB1sE,KAAKqwG,QAAU,CAAC,EAChBrwG,KAAK2zE,cAAe,EACpB3zE,KAAK6zE,eAAgB,EACrB7zE,KAAKswG,WAAY,EACjBtwG,KAAKjH,MAAQ,EACbiH,KAAKg3C,QAAU,CACnB,CACAuwB,WAAAA,CAAYgpC,GAER,OADArvG,GAAE,qDACKlB,KAAKwzE,UAAU+8B,EAC1B,CACA/8B,SAAAA,CAAU+8B,GACN,MAAM1vD,EAAW0vD,EAAOluD,cAOxB,OANKriD,KAAKqwG,QAAQxvD,KACd7gD,KAAKqwG,QAAQxvD,GAAY,IAE7B7gD,KAAKqwG,QAAQxvD,GAAUh/C,KAAK0uG,GAC5BA,EAAO3oD,mBAAmB5nD,MAC1BA,KAAK2zE,cAAe,EACb3zE,IACX,CACAqnE,YAAAA,CAAaxmB,GAET,OADA3/C,GAAE,uDACKlB,KAAK+3E,WAAWl3B,EAC3B,CACAk3B,UAAAA,CAAWl3B,GACP,IAAI/K,EACJ,OAAyC,QAAjCA,EAAK91C,KAAKqwG,QAAQxvD,UAA8B,IAAP/K,EAAgBA,EAAK,EAC1E,CACA+O,QAAAA,GACI,OAAO7kD,KAAKjH,KAChB,CACAy3G,YAAAA,GACI,OAAOxwG,KAAKu/B,MAAM8iC,SACtB,CACAk9B,aAAAA,GACI,OAAOv/F,KAAKu/B,MAAMwtC,UACtB,CACAiL,QAAAA,GACI,OAAOh4E,KAAKu/B,KAChB,CACAgpB,UAAAA,GACI,IAAKvoD,KAAKswG,UACN,MAAM,IAAIl/D,EAAa,oBAAqB,sCAEhD,MAAO,CACHr4C,MAAOiH,KAAKu/B,MAAM8iC,UAAYriE,KAAKu/B,MAAMwtC,WAAa/sE,KAAKg3C,QAC3DA,QAASh3C,KAAKg3C,QAEtB,CACA08B,SAAAA,GACI,GAAI1zE,KAAK2zE,aACL,OACJzyE,GAAE,iCACF,MAAMq+B,EAAQv/B,KAAKu/B,MACb8wE,EAAUrwG,KAAKqwG,QACrBlW,GAAUh4B,OAAOkuC,EAAmB,UAAG9wE,GACvC4oE,GAAYhmC,OAAOkuC,EAAqB,YAAG9wE,GAC3ChzB,GAAI41D,OAAOkuC,EAAa,IAAG9wE,GAC3B6X,GAAe+qB,OAAOkuC,EAAwB,eAAG9wE,GACjDgX,EAAW4rB,OAAOkuC,EAAoB,WAAG9wE,GACzCyZ,GAAOmpB,OAAOkuC,EAAgB,OAAG9wE,GACjCimE,GAAerjC,OAAOkuC,EAAwB,eAAG9wE,GACjDmnE,GAAavkC,OAAOkuC,EAAsB,aAAG9wE,GAC7CqZ,GAAaupB,OAAOkuC,EAAsB,aAAG9wE,GAC7C2vC,GAAa/M,OAAOkuC,EAAsB,aAAG9wE,GAC7ConE,GAASxkC,OAAOkuC,EAAkB,SAAG9wE,GACrCsX,EAAWsrB,OAAOkuC,EAAoB,WAAG9wE,GACzCwX,GAAYorB,OAAOkuC,EAAqB,YAAG9wE,GAC3CuX,GAAKqrB,OAAOkuC,EAAc,KAAG9wE,GAC7BowE,GAAQxtC,OAAOkuC,EAAiB,QAAG9wE,EAAOv/B,MAC1CA,KAAKjH,MAAQwmC,EAAM8iC,UAAY9iC,EAAMwtC,WACrC/sE,KAAK2zE,cAAe,CACxB,CACAC,UAAAA,GACQ5zE,KAAK6zE,gBAET3yE,GAAE,kCACFi5F,GAAUvmB,WAAW5zE,KAAK+3E,WAAW,cACzC,EAEJq4B,GAAgBluC,OAAQ,ECtGjB,MAAMuuC,WAAqB/3B,GAC9B,mBAAWhmC,GACP,MAAO,cACX,CACA/xC,WAAAA,CAAYg6D,EAAS+1C,EAAeC,GAChCt/D,QACArxC,KAAK66D,QAAU,GACf76D,KAAK4wG,UAAUj2C,EAAS+1C,EAAeC,GACvC3wG,KAAK8nD,YAAY0wB,GAAsBgC,OACvCx6E,KAAKoB,SAAW,GAChBpB,KAAK6wG,eAAgB,CACzB,CACAC,cAAAA,CAAeC,EAAKC,EAASxoD,GACzB,MAAMliC,EAAO8yC,EAAOmB,gBAAgBw2C,EAAIvyG,MAClCg6C,EAAQ,IAAI6H,EAAQ,gBAC1B7H,EAAM4M,QAAQ9+B,GACd,IAAI2qF,EAAa,EAEjB,GADAz4D,EAAMwM,UAAUwD,EAAMsa,YAAYiuC,EAAI/+D,OAClChyC,KAAKoB,SAASlE,OAAS,EAAG,CAC1B,MAAMg0G,EAAYlxG,KAAKoB,SAASpB,KAAKoB,SAASlE,OAAS,GACjDi0G,EAAaplE,GAAOA,EAAGsZ,YAAcc,EAAO8M,kBAC5Cm+C,EAAaA,CAACC,EAAKC,IAAQrpG,KAAKwsC,IAAI68D,EAAIrsD,YAAcosD,EAAIpsD,cAC3DksD,EAAUD,IAAcC,EAAU34D,KAAW44D,EAAWF,EAAW14D,GAAS,KAC7Ey4D,EAAa,GAEjBz4D,EAAM0M,UAAUgsD,EAAU/rD,YAAc+rD,EAAUrsD,WAAaosD,EACnE,CACAjxG,KAAKoB,SAASS,KAAK22C,GACnBx4C,KAAKjH,OAASy/C,EAAMqM,WAAaosD,CACrC,CACAM,SAAAA,CAAU72C,GAGN,OAFA16D,KAAKswG,WAAY,EACjBtwG,KAAK0wG,cAAgBh2C,EACd16D,IACX,CACAwxG,sBAAAA,CAAuB92C,GACnB,MAAM+2C,EAAgBr4C,EAAO/J,aAAaqL,GACpCg3C,EAAiB1xG,KAAK66D,QAAQ39D,OAAS,GAAKu0G,EAAcv0G,OAAS,GAAKu0G,EAAc,GAAGjzG,OAASwB,KAAK66D,QAAQ,GAAGr8D,KAClHmzG,EAAWD,EAAiBD,EAAcv0G,OAASu0G,EAAcv0G,OAAS8C,KAAK66D,QAAQ39D,OAC7F,GAAIy0G,EAAW,EACX,OACJ,MAAMC,EAAY,GAClB,IAAK,IAAIh2G,EAAI,EAAGA,EAAI+1G,EAAU/1G,IAAK,CAC/B,IAAI7B,EAAQ6B,EACP81G,IACD33G,EAAQ03G,EAAcv0G,OAASy0G,EAAW/1G,GAE9C,MAAMm1G,EAAMU,EAAc13G,GAC1B63G,EAAU/vG,KAAK,CAAErD,KAAM,IAAKwzC,KAAM++D,EAAI/+D,MAC1C,CAEA,OADAhyC,KAAK66D,QAAU+2C,EAAU1oG,OAAOlJ,KAAK66D,SAC9B,CACHA,QAAS+2C,EACTpzG,KAAMizG,EAAc,GAAGjzG,KAE/B,CACAqzG,UAAAA,CAAWrpD,GAGP,OAFAxoD,KAAK6wG,eAAgB,EACrBroD,EAAM+e,YAAYvnE,MACXA,IACX,CACA+oD,QAAAA,CAASP,GAEL,OADAxoD,KAAKswG,WAAY,EACVj/D,MAAM0X,SAASP,EAC1B,CACA1E,cAAAA,GAGI,OAFK9jD,KAAKswG,WACNtwG,KAAKmiE,SACF9wB,MAAMyS,gBACjB,CACAguD,mBAAAA,GACI,IAAIt3D,EAEAA,EADAx6C,KAAKoB,SAASlE,OAAS,EACT8C,KAAKoB,SAAS,GAAG0iD,iBAGjB,IAAIlK,EAAY55C,KAAKZ,EAAIY,KAAK8hD,OAAQ9hD,KAAKX,EAAIW,KAAK+hD,OAAQ,EAAG,GAEjF/hD,KAAKoB,SAASlF,SAASs8C,IACnBgC,EAAYD,UAAU/B,EAAMsL,qBAEhC9jD,KAAKjH,MAAQyhD,EAAYR,OACzBh6C,KAAK4mB,OAAS4zB,EAAYP,OAC1Bj6C,KAAKX,EAAIm7C,EAAYT,MACzB,CACAg4D,eAAAA,CAAgBz4C,EAAM96D,GAA8B,IAE5CwzG,EAqCAp2G,EAvCoBi/D,EAAO59D,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG+C,KAAK66D,QACnCzuD,EAAS,EAEb,OAAQktD,GACJ,IAAK,UACY,MAAT96D,EACAwzG,EAAc,CAAC,IAAK,GAAK,EAAG,EAAG,KAAM,GAAK,GAE1C5lG,GAAU,EACd,MACJ,IAAK,gBACY,MAAT5N,EACAwzG,EAAc,CAAC,EAAG,EAAG,GAAK,IAAK,EAAG,EAAG,KAErC5lG,EAAS,IACb,MACJ,IAAK,OACDA,EAAS,GACT,MACJ,IAAK,QACY,MAAT5N,EACAwzG,EAAc,CAAC,EAAG,EAAG,IAAK,GAAK,EAAG,EAAG,KAErC5lG,GAAU,GACd,MACJ,IAAK,aACL,IAAK,aACY,MAAT5N,EACAwzG,EAAc,CAAC,GAAK,IAAK,EAAG,EAAG,IAAK,IAAK,GAEzC5lG,EAAS,EACb,MACJ,IAAK,OACL,IAAK,SACDA,EAAS,EAMjB,GAA2B,qBAAhB4lG,EACP,IAAKp2G,EAAI,EAAGA,EAAIi/D,EAAQ39D,SAAUtB,EAC9Bi/D,EAAQj/D,GAAGo2C,KAAOggE,EAAYp2G,QAGjC,GAAe,IAAXwQ,EACL,IAAKxQ,EAAI,EAAGA,EAAIi/D,EAAQ39D,SAAUtB,EAC9Bi/D,EAAQj/D,GAAGo2C,MAAQ5lC,CAG/B,CACAusE,UAAAA,CAAW5+E,GAGP,OAFKiG,KAAKswG,WACNtwG,KAAKmiE,SACuB,IAAzBniE,KAAKoB,SAASlE,SAAkB8C,KAAK6wG,eAAiB92G,EAAQ,EAAK,EAAIiG,KAAKg4C,OACvF,CACA6M,QAAAA,GAGI,OAFK7kD,KAAKswG,WACNtwG,KAAKmiE,SACFniE,KAAKjH,KAChB,CACA63G,SAAAA,CAAUj2C,EAAS+1C,EAAeC,GAK9B,OAJA3wG,KAAKswG,WAAY,EACjBtwG,KAAK26D,QAAUA,EACf36D,KAAK0wG,cAAgBA,EACrB1wG,KAAK2wG,aAAeA,EACb3wG,IACX,CACAiyG,QAAAA,CAAStB,GAGL,OAFA3wG,KAAKswG,WAAY,EACjBtwG,KAAK2wG,aAAeA,EACb3wG,IACX,CACAkyG,qBAAAA,CAAsBvB,GAClB,MAAM/1D,EAAM3yC,KAAKykB,IAAIikF,EAAazzG,OAAQ8C,KAAK66D,QAAQ39D,QACvD,IAAK,IAAItB,EAAI,EAAGA,EAAIg/C,IAAOh/C,EACnB+0G,EAAa/0G,KACboE,KAAK66D,QAAQj/D,GAAG4C,KAAOmyG,EAAa/0G,GAGhD,CACAumE,MAAAA,GACI,IAAI3Z,EAAQxoD,KAAKyoD,WACZD,IACDA,EAAQ,IAAIzQ,GAAM,EAAG,EAAG,KACxB/3C,KAAK+oD,SAASP,IAElBxoD,KAAKjH,MAAQ,EACbiH,KAAKoB,SAAW,GAChBpB,KAAK66D,QAAUzB,EAAO/J,aAAa1d,EAAQ3xC,KAAK26D,UAChD,MAAME,EAAU76D,KAAK66D,QACfs3C,EAAsBt3C,EAAQ39D,OAAS,EAAI29D,EAAQ,GAAGr8D,UAAO3B,EACnE,IAAI40G,EAOJ,GANIzxG,KAAK0wG,gBACLe,EAAgBzxG,KAAKwxG,uBAAuBxxG,KAAK0wG,gBAEjD1wG,KAAK2wG,cACL3wG,KAAKkyG,sBAAsBlyG,KAAK2wG,cAEhC3wG,KAAK66D,QAAQ39D,OAAS,EAAG,CACzB,MAAMo8D,GAAQt5D,KAAK3F,WAAam+E,GAAsBc,IAAM9wB,EAAM4pD,aAAe5pD,EAAMqlC,YAAcrlC,EAAMqlC,UACvG4jB,GACAzxG,KAAK+xG,gBAAgBz4C,EAAMm4C,EAAcjzG,KAAMizG,EAAc52C,SAEjE76D,KAAK+xG,gBAAgBz4C,EAAM64C,EAAqBt3C,GAChD,IAAK,IAAIj/D,EAAI,EAAGA,EAAIoE,KAAK66D,QAAQ39D,SAAUtB,EACvCoE,KAAK8wG,eAAe9wG,KAAK66D,QAAQj/D,GAAIoE,KAAK66D,QAAQj/D,EAAI,GAAI4sD,EAElE,CACAxoD,KAAK8xG,sBACL9xG,KAAKswG,WAAY,CACrB,CACAntD,IAAAA,GACI,MACMH,EADQhjD,KAAK0tE,aACDzqB,eACbjjD,KAAKswG,WACNtwG,KAAKmiE,SACTniE,KAAKyjD,cACLT,EAAI0nB,UAAU,eAAgB1qE,KAAKw/C,aAAa,OAChD,IAAK,IAAI5jD,EAAI,EAAGA,EAAIoE,KAAKoB,SAASlE,OAAQtB,IAAK,CAC7BoE,KAAKoB,SAASxF,GACtB0pD,WAAWtC,EAAKhjD,KAAKZ,EAAG,EAClC,CACA4jD,EAAI8nB,YACR,ECrNG,MAAMpzB,WAAmBghC,GAC5B,mBAAWhmC,GACP,MAAO,YACX,CACA/xC,WAAAA,CAAYnC,EAAMY,EAAG2iD,GACjB1Q,QACArxC,KAAKqyG,WAAa7zG,EAClBwB,KAAKZ,EAAIA,EACTY,KAAK8hD,OAAS,EACd9hD,KAAK+hD,OAASA,CAClB,CACAuwD,SAAAA,CAAUlzG,GAEN,OADAY,KAAK8hD,OAAS1iD,EACPY,IACX,CACAuyG,SAAAA,CAAUlzG,GAEN,OADAW,KAAK+hD,OAAS1iD,EACPW,IACX,CACAmjD,IAAAA,GACI,MAAMqF,EAAQxoD,KAAK0tE,aACbtuE,EAAIopD,EAAMgqD,kBAAkBxyG,KAAK6nD,eAEvC,OADA7nD,KAAKyjD,cACGzjD,KAAKqyG,YACT,KAAK36D,GAAWl5C,KAAKi0G,WACjBzyG,KAAK0yG,cAAclqD,EAAOppD,EAAIopD,EAAM3D,YACpC,MACJ,KAAKnN,GAAWl5C,KAAKm0G,UACjB3yG,KAAK4yG,eAAepqD,EAAOppD,EAAG,QAAQ,GACtC,MACJ,KAAKs4C,GAAWl5C,KAAKq0G,WACjB7yG,KAAK8yG,eAAetqD,EAAOppD,GAC3B,MACJ,KAAKs4C,GAAWl5C,KAAKu0G,YACjB/yG,KAAK8yG,eAAetqD,EAAOppD,EAAIopD,EAAM3D,YACrC,MACJ,KAAKnN,GAAWl5C,KAAKw0G,GACjBhzG,KAAK4yG,eAAepqD,EAAOppD,EAAG,QAAQ,GACtC,MACJ,KAAKs4C,GAAWl5C,KAAKy0G,WACjBjzG,KAAK4yG,eAAepqD,EAAOppD,EAAG,WAAW,GACzC,MACJ,KAAKs4C,GAAWl5C,KAAK00G,WACjBlzG,KAAK4yG,eAAepqD,EAAOppD,EAAG,gBAAgB,GAC9C,MACJ,KAAKs4C,GAAWl5C,KAAK20G,GACjBnzG,KAAK4yG,eAAepqD,EAAOppD,EAAG,QAAQ,GACtC,MACJ,KAAKs4C,GAAWl5C,KAAK40G,WACjBpzG,KAAK4yG,eAAepqD,EAAOppD,EAAG,WAAW,GACzC,MACJ,KAAKs4C,GAAWl5C,KAAK60G,WACjBrzG,KAAK4yG,eAAepqD,EAAOppD,EAAG,gBAAgB,GAC9C,MACJ,KAAKs4C,GAAWl5C,KAAK80G,KACjBtzG,KAAK4yG,eAAepqD,EAAOppD,EAAG,QAAQ,GACtC,MACJ,KAAKs4C,GAAWl5C,KAAK+0G,QACjBvzG,KAAK4yG,eAAepqD,EAAOppD,EAAG,MAAM,GAKhD,CACAszG,aAAAA,CAAclqD,EAAOppD,GACjB,MAAMC,EAAImpD,EAAMslB,eAAetlB,EAAM2jB,eAGrC,OAFAnsE,KAAKupB,KAAO48B,EAAOtO,KACnB73C,KAAKslD,WAAWkD,EAAMvF,eAAgB7jD,EAAGC,EAAIy1C,EAAQxjC,IAAI,4BAClDtR,IACX,CACA8yG,cAAAA,CAAetqD,EAAOppD,GAClB,MAAMC,EAAImpD,EAAMslB,eAAetlB,EAAM2jB,eAGrC,OAFAnsE,KAAKupB,KAAO48B,EAAOrO,MACnB93C,KAAKslD,WAAWkD,EAAMvF,eAAgB7jD,EAAGC,EAAIy1C,EAAQxjC,IAAI,6BAClDtR,IACX,CACA4yG,cAAAA,CAAepqD,EAAOppD,EAAGmqB,EAAMiqF,GAC3B,MAAMxwD,EAAMwF,EAAMvF,eAClB,IAAIwwD,EAAQ,EAMZ,OALAzzG,KAAKupB,KAAOA,EACRiqF,IACAxzG,KAAKupB,MAAQ,WAEjBvpB,KAAKkkD,QAAQpP,EAAQI,YAAY,oBACzBl1C,KAAKqyG,YACT,KAAK36D,GAAWl5C,KAAKm0G,UACjBc,EAAQjrD,EAAMkrD,sBACd,MACJ,KAAKh8D,GAAWl5C,KAAKw0G,GACrB,KAAKt7D,GAAWl5C,KAAK00G,WACrB,KAAKx7D,GAAWl5C,KAAK20G,GACrB,KAAKz7D,GAAWl5C,KAAK60G,WACrB,KAAK37D,GAAWl5C,KAAK80G,KACrB,QACIG,EACIr0G,GAAKopD,EAAM0vB,gBAAkBl4E,KAAKZ,GAAKopD,EAAM3D,WAAa7kD,KAAKjH,MAAQ+7C,EAAQxjC,IAAI,2BAE/F,MAAMjS,EAAImpD,EAAMslB,eAAetlB,EAAM2jB,eAAiBr3B,EAAQxjC,IAAI,2BAElE,OADAtR,KAAKslD,WAAWtC,EAAKywD,EAAOp0G,GACrBW,IACX,EAEJ03C,GAAWl5C,KAAO,CACds7E,KAAM,EACN64B,UAAW,EACXF,WAAY,EACZI,WAAY,EACZE,YAAa,EACbC,GAAI,EACJC,WAAY,EACZC,WAAY,EACZC,GAAI,EACJC,WAAY,GACZC,WAAY,GACZC,KAAM,GACNC,QAAS,ICpHN,MAAMj7D,WAAqBogC,GAC9B,mBAAWhmC,GACP,MAAO,cACX,CACA/xC,WAAAA,CAAYgzG,GAA6C,IAApCv0G,EAACnC,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,EAAG8kD,EAAM9kD,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,EAAG22G,IAAQ32G,UAAAC,OAAA,QAAAL,IAAAI,UAAA,KAAAA,UAAA,GAC5Co0C,QACArxC,KAAKolD,QAAQuuD,GACb3zG,KAAKZ,EAAIA,EACTY,KAAK+hD,OAASA,EACd/hD,KAAK4zG,SAAWA,EAChB5zG,KAAKg4C,QAAUlD,EAAQxjC,IAAI,uBAC/B,CACAuiG,WAAAA,CAAYD,GAER,OADA5zG,KAAK4zG,SAAWA,EACT5zG,IACX,CACAmjD,IAAAA,GACI,MAAMqF,EAAQxoD,KAAK0tE,aACb1qB,EAAMwF,EAAMvF,eAClBjjD,KAAKyjD,cACLzjD,KAAKZ,EAAIopD,EAAM1O,OAAS0O,EAAMgqD,kBAAkBxyG,KAAK6nD,eACrD,MAAMisD,GAAY,EAAI9zG,KAAK+jD,YAAY3C,yBACjCroD,EAAQiH,KAAKjH,MAAQ,EAAIiH,KAAKg4C,QAC9BpxB,EAAS5mB,KAAK4mB,OAAS,EAAI5mB,KAAKg4C,QAChC34C,EAAImpD,EAAMslB,eAAe,KAAO9tE,KAAK+hD,OACrC3iD,EAAIY,KAAKZ,EAAIY,KAAK8hD,OACpB9hD,KAAK4zG,WACL5wD,EAAI2nB,YACJ3nB,EAAIolC,KAAKhpF,EAAGC,EAAIunB,EAASktF,EAAU/6G,EAAO6tB,GAC1Co8B,EAAIz5C,UAERvJ,KAAKslD,WAAWtC,EAAKhjD,KAAK8hD,OAAS9hD,KAAKg4C,QAAS34C,EAAIW,KAAKg4C,QAC9D,EC9BG,MAAMO,WAAmBmgC,GAC5B,mBAAWhmC,GACP,MAAO,YACX,CACA/xC,WAAAA,CAAYozG,EAAO30G,EAAG40G,GAClB3iE,QACArxC,KAAKi0G,eAAiB,CAClB,MAAO9tD,EAAO+tD,yBACdC,KAAMhuD,EAAO+tD,yBACb,MAAO/tD,EAAOiuD,mBACdC,MAAOluD,EAAOiuD,mBACd,EAAGjuD,EAAOmuD,aACVC,MAAOpuD,EAAOmuD,aACdn1G,EAAGgnD,EAAOmuD,aACV,EAAGnuD,EAAOquD,cACVC,KAAMtuD,EAAOquD,cACbl2G,EAAG6nD,EAAOquD,cACV,EAAGruD,EAAOuuD,iBACVC,QAASxuD,EAAOuuD,iBAChB32G,EAAGooD,EAAOuuD,iBACV,EAAGvuD,EAAOyuD,aACVC,OAAQ1uD,EAAOyuD,aACf,GAAIzuD,EAAO2uD,cACX,OAAQ3uD,EAAO2uD,cACf,GAAI3uD,EAAO4uD,cACX,OAAQ5uD,EAAO4uD,cACf,GAAI5uD,EAAO6uD,cACX,OAAQ7uD,EAAO6uD,cACf,IAAK7uD,EAAO8uD,eACZ,QAAS9uD,EAAO8uD,eAChB,IAAK9uD,EAAO+uD,eACZ,QAAS/uD,EAAO+uD,eAChB,IAAK/uD,EAAOgvD,eACZ,QAAShvD,EAAOgvD,eAChB,KAAMhvD,EAAOivD,gBACb,SAAUjvD,EAAOivD,iBAErBp1G,KAAK+zG,MAAQA,EACb/zG,KAAK3F,SAAWm+E,GAAsB9xB,MACtC1mD,KAAKZ,EAAIA,EACTY,KAAKklD,UAAU,IACfllD,KAAKglD,UAAUgvD,EACnB,CACAqB,QAAAA,CAAStB,GAEL,OADA/zG,KAAK+zG,MAAQA,EACN/zG,IACX,CACAmjD,IAAAA,GACI,MAAMqF,EAAQxoD,KAAK0tE,aACb4nC,EAAS9sD,EAAMgqD,kBAAkBxyG,KAAK6nD,eACtC7E,EAAMwF,EAAMvF,eAClBjjD,KAAKyjD,cACL,MAAM,KAAEx4C,EAAI,SAAE0uD,EAAQ,KAAE+b,EAAI,IAAE6/B,EAAG,UAAEC,EAAS,MAAEC,EAAK,YAAErN,GAAgBpoG,KAAK+zG,MAC1E,IAAI30G,EAAIY,KAAKZ,EAAIk2G,EACjB,MAAMj2G,EAAImpD,EAAMslB,eAAe,GACzB/hC,EAAK,IAAIsU,EAAQ,oBACjBq1D,EAAS,IAAIr1D,EAAQ,cAY3B,GAXIp1C,IACAjL,KAAKupB,KAAOte,EACZjL,KAAKq8C,SAAWvH,EAAQI,YAAY,mBACpCl1C,KAAKslD,WAAWtC,EAAKsyD,EAAQj2G,GAC7BD,GAAKY,KAAK6kD,WAAa,IAEtB55C,GAAQ0uD,GAAayuC,KACtBsN,EAAOtwD,QAAQ,KACfswD,EAAOpwD,WAAWtC,EAAK5jD,EAAIY,KAAK8hD,OAAQziD,EAAIW,KAAK+hD,QACjD3iD,GAAKs2G,EAAO7wD,WAAa,GAEzB8U,EAAU,CAIV,GAHA5tB,EAAGqZ,QAAQplD,KAAKi0G,eAAet6C,IAC/B5tB,EAAGuZ,WAAWtC,EAAK5jD,EAAIY,KAAK8hD,OAAQziD,EAAIW,KAAK+hD,QAC7C3iD,GAAK2sC,EAAG8Y,WAAa,EACjB6wB,EAAM,CACN3pC,EAAGqZ,QAAQe,EAAOwvD,oBAClB,IAAK,IAAI/5G,EAAI,EAAGA,EAAI85E,EAAM95E,IACtBmwC,EAAGuZ,WAAWtC,EAAK5jD,EAAIY,KAAK8hD,OAAQziD,EAAI,EAAIW,KAAK+hD,QACjD3iD,GAAK2sC,EAAG8Y,WAAa,CAE7B,CAIA,GAHA6wD,EAAOtwD,QAAQ,KACfswD,EAAOpwD,WAAWtC,EAAK5jD,EAAIY,KAAK8hD,OAAQziD,EAAIW,KAAK+hD,QACjD3iD,GAAKs2G,EAAO7wD,WAAa,EACrB2wD,GAIA,GAHAzpE,EAAGqZ,QAAQplD,KAAKi0G,eAAeuB,IAC/BzpE,EAAGuZ,WAAWtC,EAAK5jD,EAAIY,KAAK8hD,OAAQziD,EAAIW,KAAK+hD,QAC7C3iD,GAAK2sC,EAAG8Y,WAAa,EACjB4wD,EAAO,CACP1pE,EAAGqZ,QAAQe,EAAOwvD,oBAClB,IAAK,IAAI/5G,EAAI,EAAGA,EAAI65G,EAAO75G,IACvBmwC,EAAGuZ,WAAWtC,EAAK5jD,EAAIY,KAAK8hD,OAAQziD,EAAI,EAAIW,KAAK+hD,QACjD3iD,GAAK2sC,EAAG8Y,WAAa,CAE7B,OAEK0wD,IACLG,EAAOtwD,QAAQ,GAAKmwD,GACpBG,EAAOpwD,WAAWtC,EAAK5jD,EAAIY,KAAK8hD,OAAQziD,EAAIW,KAAK+hD,QACjD3iD,GAAKs2G,EAAO7wD,WAAa,IAEzB55C,GAAQm9F,KACRsN,EAAOtwD,QAAQ,KACfswD,EAAOpwD,WAAWtC,EAAK5jD,EAAIY,KAAK8hD,OAAQziD,EAAIW,KAAK+hD,QAEzD,CACJ,GTtGJ,SAAWkpD,GACPA,EAAkBA,EAAwB,KAAI,GAAK,OACnDA,EAAkBA,EAA0B,OAAI,GAAK,SACrDA,EAAkBA,EAAyB,MAAI,GAAK,OACvD,CAJD,CAIGA,KAAsBA,GAAoB,CAAC,IACvC,MAAM3xD,WAAiB66B,GAC1B,mBAAWzhC,GACP,MAAO,UACX,CACA,iBAAWkjE,GACP,MAAO,CACH99D,MAAOqO,EAAOrO,MACd8e,GAAIzQ,EAAO0Q,cACXT,QAASjQ,EAAOoQ,gBAChBs/C,aAAc1vD,EAAOkQ,mBACrBy/C,aAAc3vD,EAAOoQ,gBACrBn8D,EAAG+rD,EAAO4vD,aACVp4G,EAAGwoD,EAAO6vD,aACVx4G,EAAG2oD,EAAO8vD,aACVj5G,EAAGmpD,EAAO+vD,iBACV52G,EAAG6mD,EAAOgwD,SACVt+D,KAAMsO,EAAOtO,KACbu+D,UAAWjwD,EAAOkwD,iBAClBC,WAAYnwD,EAAOowD,gBACnBC,gBAAiBrwD,EAAOswD,QACxBC,cAAevwD,EAAOuwD,cACtBC,OAAQxwD,EAAOywD,gBACf9zB,KAAM38B,EAAO0wD,eACbrgD,KAAMrQ,EAAOsQ,aACbC,aAAcvQ,EAAOwQ,kBAE7B,CACAh2D,WAAAA,CAAYi1E,GACR,IAAI9/B,EAAI6J,EACRtO,MAAMukC,GACN51E,KAAKupB,KAAkC,QAA1BusB,EAAK8/B,EAAWrsD,YAAyB,IAAPusB,EAAgBA,EAAK,GAChE8/B,EAAWp9B,QACXx4C,KAAKupB,MAAQ+vB,GAASs8D,OAAOhgC,EAAWp9B,QAAUo9B,EAAWp9B,OAE7Do9B,EAAWzgC,KACXn1C,KAAKkkD,QAAQ0xB,EAAWzgC,WAEEt4C,IAArB+4E,EAAWp9B,OAChBx4C,KAAKkkD,QAAQpP,EAAQI,YAAY,2BAErC,MAAMw1C,EAAqE,QAAnDjvC,EAAKM,wBAAwB/7C,KAAKq8C,SAASrX,MAC/D4wC,EAAWkhC,cACX92G,KAAK82G,YAAc,IAAIz2D,EAAQ,oBAC/BrgD,KAAK82G,YAAY1xD,QAAQwwB,EAAWkhC,aACpC92G,KAAK82G,YAAYtyD,YAAYkmC,IAE7B9U,EAAWmhC,YACX/2G,KAAK+2G,UAAY,IAAI12D,EAAQ,oBAC7BrgD,KAAK+2G,UAAU3xD,QAAQwwB,EAAWmhC,WAClC/2G,KAAK+2G,UAAUvyD,YAAYkmC,IAE/B1qF,KAAKgyC,KAAkC,QAA1B2N,EAAKi2B,EAAW5jC,YAAyB,IAAP2N,EAAgBA,EAAK,EACpE3/C,KAAKg3G,OAASphC,EAAWohC,SAAU,EACnCh3G,KAAK2xE,YAAciE,EAAWjE,cAAe,EAC7C3xE,KAAKi3G,cAAgBhM,GAAkBpkD,IAC3C,CACAwmB,gBAAAA,CAAiBH,GAEb,OADAltE,KAAKi3G,cAAgB/pC,EACdltE,IACX,CACAowF,OAAAA,CAAQp+C,GAEJ,OADAhyC,KAAKgyC,KAAOA,EACLhyC,IACX,CACAi7F,OAAAA,GACI,OAAOj7F,KAAKgyC,IAChB,CACA0hC,SAAAA,GACI,GAAI1zE,KAAK2zE,aACL,OACJ,MAAMvrB,EAAcpoD,KAAKqyE,iBAAiB,0CACtCryE,KAAKi3G,gBAAkBhM,GAAkBzkD,OACzCxmD,KAAKw0E,oBAAsBx0E,KAAKjH,MAAQ,EAEnCiH,KAAKi3G,gBAAkBhM,GAAkBlkD,QAC9C/mD,KAAKw0E,oBAAsBx0E,KAAKjH,OAEpCiH,KAAK80E,qBAAuB1sB,EAAYG,aAAa0vB,QAAU,EAC/Dj4E,KAAK2zE,cAAe,CACxB,CACAxwB,IAAAA,GACI,MAAMH,EAAMhjD,KAAKijD,eACXuF,EAAQxoD,KAAK0tE,aACbtlB,EAAcpoD,KAAKqyE,iBAAiB,qCAC1CryE,KAAKyjD,cACL,IAAIrkD,EAAIY,KAAKk0E,eAAiB9rB,EAAYG,aAAa0vB,QAAU,EACjE,MAAMl/E,EAAQiH,KAAK6kD,WACf7kD,KAAKi3G,gBAAkBhM,GAAkBzkD,OACzCpnD,GAAKrG,EAAQ,EAERiH,KAAKi3G,gBAAkBhM,GAAkBlkD,QAC9C3nD,GAAKrG,GAET,MAAMsG,EAAImpD,EAAMsa,YAAY9iE,KAAKgyC,MAAQ,GACzChyC,KAAKslD,WAAWtC,EAAK5jD,EAAGC,GACxB,MAAMunB,EAAS5mB,KAAK6lD,YAChB7lD,KAAK82G,aACL92G,KAAK82G,YAAYxxD,WAAWtC,EAAK5jD,EAAIY,KAAKjH,MAAQ,EAAGsG,EAAIunB,EAAS,KAElE5mB,KAAK+2G,WACL/2G,KAAK+2G,UAAUzxD,WAAWtC,EAAK5jD,EAAIY,KAAKjH,MAAQ,EAAGsG,EAAIunB,EAAS,IAAM,EAE9E,EAEJ0yB,GAAS49D,cAAgBjM,GUhHlB,MAAMxyD,WAAkBigC,GAC3B,mBAAWhmC,GACP,MAAO,WACX,CACA/xC,WAAAA,CAAY4oB,EAAMlvB,GAAwB,IAAd4Y,EAAOhW,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,CAAC,EACnC,IAAI64C,EAAI6J,EAAIooB,EACZ12B,QACArxC,KAAKolD,QAAQ77B,GACbvpB,KAAKklD,UAAoC,QAAzBpP,EAAK7iC,EAAQqiG,cAA2B,IAAPx/D,EAAgBA,EAAK,GACtE91C,KAAKglD,UAAoC,QAAzBrF,EAAK1sC,EAAQ+gG,cAA2B,IAAPr0D,EAAgBA,EAAK,GACtE3/C,KAAK3F,SAAWA,EAChB2F,KAAKi3G,cAAiD,QAAhClvC,EAAK90D,EAAQgkG,qBAAkC,IAAPlvC,EAAgBA,EAAKzuB,GAAS49D,cAAc1wD,MAC9G,CACArD,IAAAA,GACI,MAAMqF,EAAQxoD,KAAK0tE,aACb1qB,EAAMwF,EAAMvF,eAElB,IAAI7jD,EACAC,EACJ,OAHAW,KAAKyjD,cAGGzjD,KAAK3F,UACT,KAAKm+E,GAAsB3xB,KAC3B,KAAK2xB,GAAsBzxB,MACvB1nD,GAAKmpD,EAAMsa,YAAY,GAAKta,EAAM2uD,kBAAoB,EAElD/3G,EADAY,KAAK3F,WAAam+E,GAAsB3xB,KACpC2B,EAAM1O,OAAS95C,KAAKjH,MAAQ,GAG5ByvD,EAAM1O,OAAS0O,EAAM3D,WAAa,GAE1C,MACJ,KAAK2zB,GAAsB9xB,MAC3B,KAAK8xB,GAAsB5xB,MACvBxnD,EAAIopD,EAAM1O,OACN95C,KAAKi3G,gBAAkBhM,GAAkBzkD,OACzCpnD,GAAKopD,EAAM3D,WAAa,EAAI7kD,KAAKjH,MAAQ,EAEpCiH,KAAKi3G,gBAAkBhM,GAAkBlkD,QAC9C3nD,GAAKopD,EAAM3D,WAAa7kD,KAAKjH,OAG7BsG,EADAW,KAAK3F,WAAam+E,GAAsB9xB,MACpC8B,EAAMslB,eAAe,GAGrBtlB,EAAMulB,kBAAkB,GAEhC,MACJ,QACI,MAAM,IAAI38B,EAAa,kBAAmB,uCAElDpxC,KAAKslD,WAAWtC,EAAK5jD,EAAGC,EAAI,EAChC,GTnDJ,SAAW6rG,GACPA,EAAUA,EAAgB,KAAI,GAAK,OACnCA,EAAUA,EAAiB,MAAI,GAAK,QACpCA,EAAUA,EAAe,IAAI,GAAK,MAClCA,EAAUA,EAAe,IAAI,GAAK,MAClCA,EAAUA,EAAqB,UAAI,GAAK,WAC3C,CAND,CAMGA,KAAcA,GAAY,CAAC,IACvB,MAAMvxD,WAAc++B,GACvB,mBAAWhmC,GACP,MAAO,OACX,CACA,eAAWl0C,GACP,OAAO0sG,EACX,CACAvqG,WAAAA,CAAYnC,EAAM44G,EAAOh4G,EAAG2iD,GACxB1Q,QACArxC,KAAKxB,KAAOA,EACZwB,KAAKZ,EAAIA,EACTY,KAAK+hD,OAASA,EACd/hD,KAAKupB,KAAO6tF,CAChB,CACAj0D,IAAAA,GACI,MAAMqF,EAAQxoD,KAAK0tE,aACbtuE,EAAIopD,EAAMgqD,kBAAkBxyG,KAAK6nD,eACjC7E,EAAMwF,EAAMvF,eAClBjjD,KAAKyjD,cACL,IAAI1qD,EAAQyvD,EAAM3D,WAAazlD,EAC/B,MAAM2qE,EAAOvhB,EAAMslB,eAAetlB,EAAM2jB,eAAiBnsE,KAAK+hD,OACxDs1D,EAAa,IAAM7uD,EAAMqa,yBAC/B,OAAQ7iE,KAAKxB,MACT,KAAK0sG,GAAU1wB,MACXx3B,EAAIk4B,SAASl7E,KAAKZ,EAAIA,EAAG2qE,EAAM,EAAGstC,GAClC,MACJ,KAAKnM,GAAU5xB,IACXvgF,GAAS,EACTiqD,EAAIk4B,SAASl7E,KAAKZ,EAAIA,EAAIrG,EAAOgxE,EAAM,EAAGstC,GAC1C,MACJ,KAAKnM,GAAUoM,UACXv+G,GAAS,EACTiqD,EAAIk4B,SAASl7E,KAAKZ,EAAIA,EAAG2qE,EAAM,EAAGstC,GAClCr0D,EAAIk4B,SAASl7E,KAAKZ,EAAIA,EAAIrG,EAAOgxE,EAAM,EAAGstC,GAK9Cr3G,KAAKxB,OAAS0sG,GAAU1wB,OAASx6E,KAAKxB,OAAS0sG,GAAUoM,WACzDt3G,KAAKslD,WAAWtC,EAAK5jD,EAAI,EAAG2qE,EAAO/pE,KAAK+hD,OAAS,IAErDiB,EAAIk4B,SAASl7E,KAAKZ,EAAIA,EAAG2qE,EAAMhxE,EAAO,EAC1C,EUvCG,MAAMw+G,WAAsB7+B,GAC/B,mBAAWhmC,GACP,MAAO,eACX,CACA/xC,WAAAA,GAAuE,IAA3D62G,EAAQv6G,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,MAAOw6G,EAAax6G,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,GAAIy6G,IAAYz6G,UAAAC,OAAA,QAAAL,IAAAI,UAAA,KAAAA,UAAA,GAC1Do0C,QACArxC,KAAKw3G,SAAW,MAChBx3G,KAAKgyC,KAAO,EACZhyC,KAAK23G,WAAY,EACjB33G,KAAK43G,UAAY,EACjB53G,KAAK63G,UAAY,EACjB73G,KAAK+wD,UAAY,EACjB/wD,KAAK83G,QAAU,IAAIz3D,EACnBrgD,KAAK+3G,QAAU,IAAI13D,EACnBrgD,KAAK03G,aAAeA,EACpB,MAAM1/D,EAAUy/D,EAChBz3G,KAAKg4G,QAAU,EACfh4G,KAAKi4G,WAAa,EAClBj4G,KAAK8nD,YAAY0wB,GAAsBgC,OACvCx6E,KAAKk4G,WAAWV,GAChBx3G,KAAK44E,WAAW5gC,EACpB,CACA,qBAAOmgE,CAAen+G,GAAuB,IAAlBo+G,EAAQn7G,UAAAC,OAAA,QAAAL,IAAAI,UAAA,IAAAA,UAAA,GAC3BqpB,EAAO6/B,EAAO0Y,KAClB,OAAQ7kE,GACJ,IAAK,IACDssB,EAAO6/B,EAAOkyD,cACd,MACJ,IAAK,KACD/xF,EAAO6/B,EAAOmyD,iBACd,MACJ,IAAK,IACDhyF,EAAO8xF,EAAWjyD,EAAOoyD,iBAAmBpyD,EAAOqyD,YACnD,MACJ,IAAK,IACDlyF,EAAO6/B,EAAOsyD,aACd,MACJ,IAAK,IACDnyF,EAAO8xF,EAAWjyD,EAAOuyD,uBAAyBvyD,EAAOwyD,kBACzD,MACJ,IAAK,IACDryF,EAAO8xF,EAAWjyD,EAAOyyD,wBAA0BzyD,EAAO0yD,mBAC1D,MACJ,QACIvyF,EAAO7qB,OAAOmgG,cAAc,MAAShpD,OAAO54C,EAAI,KAGxD,OAAOssB,CACX,CACAwyF,sBAAAA,CAAuBC,EAAWC,GAC9B,IAAIpO,EAAM,GACNqO,EAAW,EACXryF,EAAS,EACb,IAAK,IAAIhrB,EAAI,EAAGA,EAAIm9G,EAAU77G,SAAUtB,EAAG,CAEvCgvG,GADa2M,GAAcY,eAAeY,EAAUn9G,GAAIo9G,EAAU97G,OAAS,EAE/E,CACA8C,KAAK83G,QAAQ1yD,QAAQwlD,GACrBqO,EAAWj5G,KAAK83G,QAAQjzD,WACxBj+B,EAAS5mB,KAAK83G,QAAQjyD,YACtB,IAAIqzD,EAAW,EACftO,EAAM,GACN,IAAK,IAAIhvG,EAAI,EAAGA,EAAIo9G,EAAU97G,SAAUtB,EAAG,CAEvCgvG,GADa2M,GAAcY,eAAea,EAAUp9G,IAAI,EAE5D,CACAoE,KAAK+3G,QAAQ3yD,QAAQwlD,GACrBsO,EAAWl5G,KAAK+3G,QAAQlzD,WACxBj+B,EAAS3e,KAAK2yC,IAAIh0B,EAAQ5mB,KAAK+3G,QAAQlyD,aACvC7lD,KAAK+wD,UAAYnqC,EAAS,GAAK,GAAM,EACrC5mB,KAAKjH,MAAQkP,KAAK2yC,IAAIq+D,EAAUC,GAChCl5G,KAAK43G,WAAa53G,KAAKjH,MAAQkgH,GAAY,EAC3Cj5G,KAAK63G,WAAa73G,KAAKjH,MAAQmgH,GAAY,CAC/C,CACAhB,UAAAA,CAAWV,GACP,IAAI1hE,EAAI6J,EAER,GADA3/C,KAAKw3G,SAAWA,EACC,MAAbA,GAAiC,OAAbA,EAAmB,CACvC,MAAMlxF,EAAOixF,GAAcY,eAAeX,GAC1Cx3G,KAAKgyC,KAAO,EACZhyC,KAAKupB,KAAOjD,EACZtmB,KAAK23G,WAAY,CACrB,KACK,CACG33G,KAAK03G,cA5FSF,KACVA,EAASv7G,MAAM,KACvBC,SAASgO,IACb,IAAqC,IAAjC,gBAAgBuE,KAAKvE,GACrB,MAAM,IAAIknC,EAAa,mBAAoB,sBAAFloC,OAAwBsuG,EAAQ,yCAyFrE2B,CAAqB3B,GAEzB,MAAMhpD,EAAQgpD,EAASv7G,MAAM,KAC7B+D,KAAKgyC,KAAO,EACZhyC,KAAK23G,WAAY,EACjB33G,KAAK84G,uBAA2C,QAAnBhjE,EAAK0Y,EAAM,UAAuB,IAAP1Y,EAAgBA,EAAK,GAAwB,QAAnB6J,EAAK6O,EAAM,UAAuB,IAAP7O,EAAgBA,EAAK,GACtI,CACA,OAAO3/C,IACX,CACAo5G,WAAAA,GACI,OAAOp5G,KAAKw3G,QAChB,CACAvc,OAAAA,GACI,OAAOj7F,KAAKgyC,IAChB,CACAo+C,OAAAA,CAAQp+C,GACJhyC,KAAKgyC,KAAOA,CAChB,CACAqnE,YAAAA,GACI,OAAOr5G,KAAK23G,SAChB,CACA2B,YAAAA,CAAa3B,GACT33G,KAAK23G,UAAYA,CACrB,CACAx0D,IAAAA,GACI,MAAMqF,EAAQxoD,KAAK0tE,aACb1qB,EAAMwF,EAAMvF,eAClBjjD,KAAKyjD,cACLT,EAAI0nB,UAAU,gBAAiB1qE,KAAKw/C,aAAa,OACjDx/C,KAAKu5G,OAAOv2D,EAAKwF,EAAOxoD,KAAKZ,GAC7B4jD,EAAI8nB,YACR,CACAyuC,MAAAA,CAAOv2D,EAAKwF,EAAOppD,GAEf,GADAY,KAAKyjD,cACDzjD,KAAK23G,UAAW,CAChB,IAAI1P,EAAS7oG,EAAIY,KAAK43G,UAClBv4G,EAAI,EAEJA,EADAW,KAAK+3G,QAAQ1yD,UAAUnoD,OAAS,EAC5BsrD,EAAMsa,YAAY9iE,KAAKg4G,QAAUh4G,KAAK+wD,YAErCvI,EAAMsa,YAAY9iE,KAAKg4G,SAAWxvD,EAAMsa,YAAY9iE,KAAKi4G,aAAe,EACjFj4G,KAAK83G,QAAQxyD,WAAWtC,EAAKilD,EAAQ5oG,GACrC4oG,EAAS7oG,EAAIY,KAAK63G,UAClBx4G,EAAImpD,EAAMsa,YAAY9iE,KAAKi4G,WAAaj4G,KAAK+wD,WAC7C/wD,KAAK+3G,QAAQzyD,WAAWtC,EAAKilD,EAAQ5oG,EACzC,MAEIW,KAAKslD,WAAWtC,EAAK5jD,EAAIY,KAAKZ,EAAGopD,EAAMsa,YAAY9iE,KAAKgyC,MAEhE,EClIJ,MAAMwnE,GAA2B,CAC7B,CAACxgC,GAAQtmC,UAAW,EACpB,CAACq6C,GAAKr6C,UAAW,EACjB,CAAC+9D,GAAa/9D,UAAW,EACzB,CAAC6kE,GAAc7kE,UAAW,GAExB+mE,GAA2B,CAC7B,CAAClC,GAAc7kE,UAAW,EAC1B,CAAC+9D,GAAa/9D,UAAW,EACzB,CAACsmC,GAAQtmC,UAAW,EACpB,CAACq6C,GAAKr6C,UAAW,GAEd,MAAMqF,WAAcsI,EACvB,mBAAW3N,GACP,MAAO,OACX,CACA,yBAAWgnE,GACP,OAAO5kE,EAAQxjC,IAAI,iBAAmBwjC,EAAQxjC,IAAI,sBACtD,CACA,uBAAWynC,GACP,OAAOjE,EAAQxjC,IAAI,sBACvB,CACA3Q,WAAAA,CAAYvB,EAAGC,EAAGtG,EAAOka,GACrBo+B,QACArxC,KAAKZ,EAAIA,EACTY,KAAKX,EAAIA,EACTW,KAAKjH,MAAQA,EACbiH,KAAKswG,WAAY,EACjBtwG,KAAKioG,OAAS7oG,EAAI,EAClBY,KAAK0wF,KAAOtxF,EAAIrG,EAChBiH,KAAKuxE,UAAY,GACjBvxE,KAAK25G,QAAU,EACf35G,KAAKs5D,KAAO,SACZt5D,KAAK45G,aAAU/8G,EACfmD,KAAKiT,QAAU/X,OAAOK,OAAO,CAAEs+G,iBAAkB,GAAIjT,SAAU,EAAGkT,SAAS,EAAMC,UAAU,EAAMC,sBAAuB5gD,EAAOiH,oBAAqB45C,kBAAmB,EAAGC,kBAAmB,EAAGC,gBAAiB,EAAGC,mBAAoB,EAAGC,WAAY,IAAMpnG,GAC7PjT,KAAKs6G,OAAS,CAAEl7G,EAAGY,KAAKZ,EAAGC,EAAGW,KAAKX,EAAGF,EAAGa,KAAKjH,MAAOuF,EAAG,GACxD0B,KAAKu6G,uBAAyB,CAAE9kE,YAAa,OAAQC,UAAW,GAChE11C,KAAKw6G,aACLx6G,KAAKunE,YAAY,IAAIyR,GAAQh5E,KAAKiT,QAAQ6mG,QAAUrhC,GAAYU,OAASV,GAAYqB,OACrF95E,KAAKy6G,eAAe,IAAIzhC,GAAQh5E,KAAKiT,QAAQ8mG,SAAWthC,GAAYU,OAASV,GAAYqB,MAC7F,CACA4gC,yBAAAA,CAA0BjjG,GACtBzX,KAAKu6G,uBAAyB9iG,CAClC,CACA4pF,yBAAAA,GACI,OAAOnmG,OAAOK,OAAOL,OAAOK,OAAO,CAAC,EAAGyE,KAAKu1C,YAAav1C,KAAKu6G,uBAClE,CACAxoC,KAAAA,CAAM/6B,GACF,OAAOh3C,KAAKiT,QAAQ+mG,sBAAwBhjE,CAChD,CACAwjE,UAAAA,GACIx6G,KAAKiT,QAAQonG,WAAa,GAC1B,IAAK,IAAIz+G,EAAI,EAAGA,EAAIoE,KAAKiT,QAAQ2zF,SAAUhrG,IACvCoE,KAAKiT,QAAQonG,WAAWx4G,KAAK,CAAE84G,SAAS,IAE5C36G,KAAK4mB,QAAU5mB,KAAKiT,QAAQ2zF,SAAW5mG,KAAKiT,QAAQgnG,mBAAqBj6G,KAAKiT,QAAQ+mG,sBACtFh6G,KAAKiT,QAAQmnG,mBAAqBp6G,KAAKiT,QAAQ2zF,QACnD,CACAgU,aAAAA,CAAcx7G,GAIV,OAHKY,KAAKswG,WACNtwG,KAAKmiE,SACTniE,KAAKioG,OAAS7oG,EACPY,IACX,CACAk4E,aAAAA,GAGI,OAFKl4E,KAAKswG,WACNtwG,KAAKmiE,SACFniE,KAAKioG,MAChB,CACA4S,WAAAA,GAGI,OAFK76G,KAAKswG,WACNtwG,KAAKmiE,SACFniE,KAAK0wF,IAChB,CACAuB,YAAAA,GACI,OAAOjyF,KAAKioG,MAChB,CACA/V,UAAAA,GACI,OAAOlyF,KAAK0wF,IAChB,CACAvkB,WAAAA,GACI,OAAOnsE,KAAKiT,QAAQ2zF,QACxB,CACAkU,WAAAA,CAAYh/G,GAGR,OAFAkE,KAAKiT,QAAQ2zF,SAAW9qG,EACxBkE,KAAKw6G,aACEx6G,IACX,CACAguE,cAAAA,GACI,OAAOhuE,KAAK8iE,YAAY,EAC5B,CACAmY,oBAAAA,GACI,IAAInlC,EACJ,OAAO91C,KAAK8iE,YAAY9iE,KAAKmsE,cAAgB,IAA2C,QAApCr2B,EAAK91C,KAAKu1C,WAAWG,iBAA8B,IAAPI,EAAgBA,EAAK,EACzH,CACAoE,IAAAA,CAAK96C,GACD,MAAM2gB,EAAQ3gB,EAAIY,KAAKZ,EACvBY,KAAKswG,WAAY,EACjBtwG,KAAKZ,EAAIA,EACTY,KAAKioG,QAAUloF,EACf/f,KAAK0wF,MAAQ3wE,EACb,IAAK,IAAInkB,EAAI,EAAGA,EAAIoE,KAAKuxE,UAAUr0E,OAAQtB,IAAK,CAC5C,MAAMm/G,EAAM/6G,KAAKuxE,UAAU31E,GAC3Bm/G,EAAI7gE,KAAK6gE,EAAIjhE,OAAS/5B,EAC1B,CACA,OAAO/f,IACX,CACA+kD,QAAAA,CAAShsD,GAIL,OAHAiH,KAAKswG,WAAY,EACjBtwG,KAAKjH,MAAQA,EACbiH,KAAK0wF,KAAO1wF,KAAKZ,EAAIrG,EACdiH,IACX,CACAg7G,UAAAA,CAAWrB,GAEP,OADA35G,KAAK25G,QAAUA,EACR35G,IACX,CACAi7G,UAAAA,GACI,OAAOj7G,KAAK25G,OAChB,CACAnH,iBAAAA,GAA6B,IAAXz4G,EAAKkD,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,EACtB,GAAqB,kBAAVlD,EACP,MAAM,IAAIq3C,EAAa,eAAgB,0BAI3C,GAFKpxC,KAAKswG,WACNtwG,KAAKmiE,SACqD,IAA1DniE,KAAKqnE,aAAamR,GAAsBgC,OAAOt9E,OAC/C,OAAO,EAEX,GAAI8C,KAAKuxE,UAAUx3E,GAAO8tD,gBAAkB2wB,GAAsBzxB,MAC9D,OAAO,EAEX,IAAIkhD,EAASjoG,KAAKioG,OAASjoG,KAAKZ,EAChC,MAAM87G,EAAal7G,KAAKuxE,UAAU,GAIlC,OAHI2pC,EAAWxgC,YAAcjC,GAAYe,cAAgByuB,EAASiT,EAAWr2D,aACzEojD,GAAUiT,EAAWr2D,YAElBojD,CACX,CACAkT,iBAAAA,CAAkB38G,GAAkB,IAAZujD,EAAM9kD,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,EAE7B,OADA+C,KAAKuxE,UAAU1vE,KAAK,IAAI61C,GAAWl5C,EAAMwB,KAAKZ,EAAG2iD,IAC1C/hD,IACX,CACAo7G,YAAAA,CAAa58G,EAAM44G,EAAO/3G,GAEtB,OADAW,KAAKuxE,UAAU1vE,KAAK,IAAI83C,GAAMn7C,EAAM44G,EAAOp3G,KAAKZ,EAAGC,IAC5CW,IACX,CACAq7G,UAAAA,CAAW1H,EAASt0G,GAA2C,IAAxCqvF,EAAOzxF,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,EAAG0M,EAAQ1M,UAAAC,OAAA,EAAAD,UAAA,QAAAJ,EAAE+2G,IAAQ32G,UAAAC,OAAA,QAAAL,IAAAI,UAAA,KAAAA,UAAA,GAClD,MAAMq+G,EAAe,IAAIhjE,GAAaq7D,GAAS3uD,UAAU3lD,GAAG6lD,UAAUwpC,GAASmlB,YAAYD,GAK3F,OAJIjqG,GACA2xG,EAAa92D,YAAY76C,GAE7B3J,KAAKunE,YAAY+zC,GACVt7G,IACX,CACAq1G,QAAAA,CAAStB,EAAO10G,GAEZ,OADAW,KAAKuxE,UAAU1vE,KAAK,IAAI02C,GAAWw7D,EAAO/zG,KAAKZ,EAAGC,IAC3CW,IACX,CACAu7G,YAAAA,CAAahyF,EAAMlvB,GAAwB,IAAd4Y,EAAOhW,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,CAAC,EAEpC,OADA+C,KAAKuxE,UAAU1vE,KAAK,IAAI42C,GAAUlvB,EAAMlvB,EAAU4Y,IAC3CjT,IACX,CACA6iE,sBAAAA,GACI,OAAO7iE,KAAKiT,QAAQ+mG,qBACxB,CACAl2D,cAAAA,GACI,OAAO,IAAIlK,EAAY55C,KAAKZ,EAAGY,KAAKX,EAAGW,KAAKjH,MAAOiH,KAAK+uE,aAAe/uE,KAAKX,EAChF,CACA0vE,UAAAA,GACI,MAAM97D,EAAUjT,KAAKiT,QACf+jC,EAAU/jC,EAAQ+mG,sBAExB,OADoBh6G,KAAK8iE,YAAY7vD,EAAQ2zF,UAAY3zF,EAAQinG,kBAAoBljE,CAEzF,CACAmgE,cAAAA,GACI,OAAOn3G,KAAK8iE,YAAY9iE,KAAKiT,QAAQ2zF,SACzC,CACA9jC,WAAAA,CAAY9wB,GACR,MAAM/+B,EAAUjT,KAAKiT,QACf+jC,EAAU/jC,EAAQ+mG,sBAClBlG,EAAW7gG,EAAQgnG,kBAEzB,OADUj6G,KAAKX,EAAI2yC,EAAOgF,EAAU88D,EAAW98D,CAEnD,CACAwkE,WAAAA,CAAYn8G,GACR,MAAM4T,EAAUjT,KAAKiT,QACf+jC,EAAU/jC,EAAQ+mG,sBAClBlG,EAAW7gG,EAAQgnG,kBACzB,OAAQ56G,EAAIW,KAAKX,GAAK23C,EAAU88D,CACpC,CACAhmC,cAAAA,GAAyB,IAAV97B,EAAI/0C,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,EAClB,OAAO+C,KAAK8iE,aAAa9wB,EAAOhyC,KAAKiT,QAAQknG,gBACjD,CACApsC,iBAAAA,GAA4B,IAAV/7B,EAAI/0C,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,EACrB,OAAO+C,KAAK8iE,YAAY9iE,KAAKiT,QAAQmnG,mBAAqBpoE,EAC9D,CACAmpD,WAAAA,CAAYnpD,GACR,MAAM/+B,EAAUjT,KAAKiT,QACf+jC,EAAU/jC,EAAQ+mG,sBAClBlG,EAAW7gG,EAAQgnG,kBACzB,OAAOj6G,KAAKX,EAAIy0G,EAAW98D,EAAU,EAAIA,EAAUhF,EAAOgF,CAC9D,CACAykE,aAAAA,GACI,OAAOz7G,KAAK8iE,YAAY,EAC5B,CACAyE,WAAAA,CAAYD,EAAUjtE,GAOlB,YANiBwC,IAAbxC,GACAitE,EAASxf,YAAYztD,GAEzBitE,EAASve,SAAS/oD,MAClBA,KAAKswG,WAAY,EACjBtwG,KAAKuxE,UAAU1vE,KAAKylE,GACbtnE,IACX,CACAy6G,cAAAA,CAAenzC,GAEX,OADAtnE,KAAKunE,YAAYD,EAAUkR,GAAsBc,KAC1Ct5E,IACX,CACA07G,aAAAA,CAAcl9G,GACV,MAAM,OAAE26E,EAAM,aAAEK,EAAY,KAAEM,GAASrB,GAKvC,OAJIj6E,IAAS26E,GAAU36E,IAASg7E,GAAgBh7E,IAASs7E,IACrD95E,KAAKuxE,UAAU,GAAGkJ,QAAQj8E,GAC1BwB,KAAKswG,WAAY,GAEdtwG,IACX,CACA27G,aAAAA,CAAcn9G,GAKV,OAJIA,IAASi6E,GAAYe,eACrBx5E,KAAKuxE,UAAU,GAAGkJ,QAAQj8E,GAC1BwB,KAAKswG,WAAY,GAEdtwG,IACX,CACA47G,OAAAA,CAAQC,EAAU72E,EAAMumC,EAAYlxE,QACfwC,IAAbxC,IACAA,EAAWm+E,GAAsBgC,OAEjCngF,IAAam+E,GAAsBc,IACnCt5E,KAAK45G,QAAUiC,EAGf77G,KAAKs5D,KAAOuiD,EAEhB,MAAMhrD,EAAQ7wD,KAAKqnE,aAAahtE,EAAU0yF,GAAKr6C,UAO/C,OANqB,IAAjBme,EAAM3zD,OACN8C,KAAK87G,QAAQD,EAAU72E,EAAMumC,EAAYlxE,GAGzCw2D,EAAM,GAAG4pB,QAAQohC,EAAU72E,EAAMumC,GAE9BvrE,IACX,CACA6tF,OAAAA,GACI,OAAO7tF,KAAKs5D,IAChB,CACAyiD,UAAAA,CAAWF,EAAU72E,EAAMumC,GAEvB,OADAvrE,KAAK47G,QAAQC,EAAU72E,EAAMumC,EAAYiN,GAAsBc,KACxDt5E,IACX,CACAoyG,UAAAA,GACI,OAAOpyG,KAAK45G,OAChB,CACAoC,eAAAA,CAAgBrhD,EAAS+1C,EAAer2G,QACnBwC,IAAbxC,IACAA,EAAWm+E,GAAsBgC,OAErC,MAAMvqB,EAAgBjwD,KAAKqnE,aAAahtE,EAAUo2G,GAAa/9D,UAO/D,OAN6B,IAAzBud,EAAc/yD,OACd8C,KAAKi8G,gBAAgBthD,EAAS+1C,EAAer2G,GAG7C41D,EAAc,GAAG2gD,UAAUj2C,EAAS+1C,GAEjC1wG,IACX,CACAk8G,kBAAAA,CAAmBvhD,EAAS+1C,GAExB,OADA1wG,KAAKg8G,gBAAgBrhD,EAAS+1C,EAAel4B,GAAsBc,KAC5Dt5E,IACX,CACAm8G,gBAAAA,CAAiB3E,EAAUC,EAAep9G,QACrBwC,IAAbxC,IACAA,EAAWm+E,GAAsBgC,OAErC,MAAM4hC,EAAiBp8G,KAAKqnE,aAAahtE,EAAUk9G,GAAc7kE,UAOjE,OAN8B,IAA1B0pE,EAAel/G,OACf8C,KAAKq8G,iBAAiB7E,EAAUC,EAAep9G,GAG/C+hH,EAAe,GAAGlE,WAAWV,GAE1Bx3G,IACX,CACAs8G,mBAAAA,CAAoB9E,EAAUC,GAE1B,OADAz3G,KAAKm8G,iBAAiB3E,EAAUC,EAAej/B,GAAsBc,KAC9Dt5E,IACX,CACAi8G,eAAAA,CAAgBthD,EAAS+1C,EAAer2G,GAKpC,YAJiBwC,IAAbxC,IACAA,EAAWm+E,GAAsBgC,OAErCx6E,KAAKunE,YAAY,IAAIkpC,GAAa91C,EAAS+1C,GAAe5oD,YAAYztD,GAAWA,GAC1E2F,IACX,CACA87G,OAAAA,CAAQxiD,EAAMt0B,EAAMumC,EAAYlxE,GAQ5B,YAPiBwC,IAAbxC,GAA0BA,IAAam+E,GAAsBgC,MAC7Dx6E,KAAKs5D,KAAOA,EAEPj/D,IAAam+E,GAAsBc,MACxCt5E,KAAK45G,QAAUtgD,GAEnBt5D,KAAKunE,YAAY,IAAIwlB,GAAKzzB,EAAMt0B,EAAMumC,GAAalxE,GAC5C2F,IACX,CACAu8G,UAAAA,CAAWjjD,EAAMt0B,EAAMumC,GAEnB,OADAvrE,KAAK87G,QAAQxiD,EAAMt0B,EAAMumC,EAAYiN,GAAsBc,KACpDt5E,IACX,CACAq8G,gBAAAA,CAAiB7E,EAAUC,EAAep9G,GAEtC,OADA2F,KAAKunE,YAAY,IAAIgwC,GAAcC,EAAUC,GAAgBp9G,GACtD2F,IACX,CACAw8G,mBAAAA,CAAoBhF,EAAUC,GAE1B,OADAz3G,KAAKq8G,iBAAiB7E,EAAUC,EAAej/B,GAAsBc,KAC9Dt5E,IACX,CACAy8G,cAAAA,GAEI,OADAz8G,KAAK87G,QAAQ,UACN97G,IACX,CACAqnE,YAAAA,CAAahtE,EAAUwmD,GACnB,MAAM67D,OAA0B7/G,IAAbxC,EACbsiH,OAA0B9/G,IAAbgkD,EACnB,OAAI67D,GAAcC,EACP38G,KAAKuxE,UAEPmrC,EACE18G,KAAKuxE,UAAUh3E,QAAQiD,GAAMqjD,IAAarjD,EAAE6kD,gBAE9Cs6D,EACE38G,KAAKuxE,UAAUh3E,QAAQiD,GAAMnD,IAAamD,EAAEqqD,gBAG5C7nD,KAAKuxE,UAAUh3E,QAAQiD,GAAMnD,IAAamD,EAAEqqD,eAAiBhH,IAAarjD,EAAE6kD,eAE3F,CACAu6D,cAAAA,CAAe5M,EAAOv5F,GAClB,IAAK,IAAI7a,EAAIo0G,EAAM9yG,OAAS,EAAGtB,GAAK,EAAGA,IACnC,IAAK,IAAIwoF,EAAI,EAAGA,EAAIxoF,EAAGwoF,IACnB,GAAI3tE,EAAMu5F,EAAM5rB,GAAG/hC,eAAiB5rC,EAAMu5F,EAAM5rB,EAAI,GAAG/hC,eAAgB,CACnE,MAAMw6D,EAAO7M,EAAM5rB,GACnB4rB,EAAM5rB,GAAK4rB,EAAM5rB,EAAI,GACrB4rB,EAAM5rB,EAAI,GAAKy4B,CACnB,CAGZ,CACA16C,MAAAA,GACI,IAAIrsB,EAAI6J,EAAIooB,EAAIC,EAChB,MAAMkzC,EAAal7G,KAAKuxE,UAAU,GAC5BurC,EAAa98G,KAAKuxE,UAAU,GAC5BwrC,EAAe/8G,KAAKqnE,aAAamR,GAAsBgC,OACvDwiC,EAAeh9G,KAAKqnE,aAAamR,GAAsBc,KAU7D,IAAIvgF,EACAi/C,EACAsvB,EAXJtnE,KAAK48G,eAAeG,EAAcvD,IAClCx5G,KAAK48G,eAAeI,EAAcvD,IAC9BsD,EAAa7/G,OAAS,GAAKg+G,EAAWxgC,YAAcjC,GAAYe,eAChEujC,EAAal7G,KAAKk7G,EAAa7vE,OAAO,EAAG,GAAG,IAC5C6vE,EAAa7vE,OAAO,EAAG,EAAG,IAAI8rC,GAAQP,GAAYU,UAElD6jC,EAAa7iH,QAAQ2iH,GAAc,GACnCE,EAAa9vE,OAAO,EAAG,EAAG,IAAI8rC,GAAQP,GAAYqB,OAKtD,IAAI1tE,EAAS,EACThN,EAAIY,KAAKZ,EACb,IAAK,IAAIxD,EAAI,EAAGA,EAAImhH,EAAa7/G,OAAQtB,IACrC0rE,EAAWy1C,EAAanhH,GACxBo8C,EAAUsvB,EAASqR,WAAW/8E,EAAIwQ,GAClCrT,EAAQuuE,EAASziB,WACjBzlD,GAAK44C,EACLsvB,EAASptB,KAAK96C,GACdA,GAAKrG,EACDi/C,EAAUj/C,IAAU,GACpBqT,IAERpM,KAAKioG,OAAS7oG,EACdA,EAAIY,KAAKZ,EAAIY,KAAKjH,MAClB,MAAMkhF,EAAS,CACXzsD,KAAM,EACNs5B,MAAO,EACPyzB,aAAc,EACdD,YAAa,GAEjB,IAAI2iC,EAAiB,EACrB,IAAK,IAAIrhH,EAAI,EAAGA,EAAIohH,EAAa9/G,OAAQtB,IAAK,CAC1C0rE,EAAW01C,EAAaphH,GACxBqhH,EAAiBr7C,EAAU0F,GAAY1rE,EAAIqhH,EAC3ChjC,EAAOnzB,MAAQ,EACfmzB,EAAOzsD,KAAO,EACdysD,EAAOM,aAAe,EACtBN,EAAOK,YAAc,EACrB,MAAMxB,EAAgBxR,EAASyR,mBAC3BD,GACU,IAANl9E,IACAq+E,EAAOnzB,MAAsC,QAA7BhR,EAAKgjC,EAAcuB,YAAyB,IAAPvkC,EAAgBA,EAAK,EAC1EmkC,EAAOM,aAAqD,QAArC56B,EAAKm5B,EAAcyB,oBAAiC,IAAP56B,EAAgBA,EAAK,GAE7Fs6B,EAAOzsD,OAAuC,QAA7Bu6C,EAAK+Q,EAAcsB,YAAyB,IAAPrS,EAAgBA,EAAK,GAC3EkS,EAAOK,YAAmD,QAApCtS,EAAK8Q,EAAcwB,mBAAgC,IAAPtS,EAAgBA,EAAK,EACnFpsE,IAAMohH,EAAa9/G,OAAS,IAC5B+8E,EAAOK,YAAc,KAIzBL,EAAOM,aAAejT,EAASqR,WAAW/8E,EAAIqhH,GACpC,IAANrhH,IACAq+E,EAAOnzB,MAAQwgB,EAASziB,YAElB,IAANjpD,IACAq+E,EAAOzsD,KAAO85C,EAASziB,aAG/BzlD,GAAK66E,EAAOM,aACZn7E,GAAK66E,EAAOnzB,MACZwgB,EAASptB,KAAK96C,GACdA,GAAK66E,EAAOzsD,KACZpuB,GAAK66E,EAAOK,WAChB,CACAt6E,KAAK0wF,KAA+B,IAAxBssB,EAAa9/G,OAAe8C,KAAKZ,EAAIY,KAAKjH,MAAQqG,EAC9DY,KAAKswG,WAAY,CACrB,CACAntD,IAAAA,GACI,IAAIrN,EACJ,MAAMkN,EAAMhjD,KAAKijD,eACjBjjD,KAAKyjD,cACLT,EAAI0nB,UAAU,QAAS1qE,KAAKw/C,aAAa,OACpCx/C,KAAKswG,WACNtwG,KAAKmiE,SACT,MAAMykC,EAAW5mG,KAAKiT,QAAQ2zF,SACxB7tG,EAAQiH,KAAKjH,MACbqG,EAAIY,KAAKZ,EACf,IAAIC,EACJ,MACM69G,GADiD,QAApCpnE,EAAK91C,KAAKu1C,WAAWG,iBAA8B,IAAPI,EAAgBA,EAAK,GAC5C,IAAM,EAAI,EAAI,GACtD,IAAK,IAAI9D,EAAO,EAAGA,EAAO40D,EAAU50D,IAChC3yC,EAAIW,KAAK8iE,YAAY9wB,GACjBhyC,KAAKiT,QAAQonG,WAAWroE,GAAM2oE,UAC9B33D,EAAI2nB,YACJ3nB,EAAI4nB,OAAOxrE,EAAGC,EAAI69G,GAClBl6D,EAAI6nB,OAAOzrE,EAAIrG,EAAOsG,EAAI69G,GAC1Bl6D,EAAIz5C,UAGZy5C,EAAI8nB,aACJ,IAAK,IAAIlvE,EAAI,EAAGA,EAAIoE,KAAKuxE,UAAUr0E,OAAQtB,IAAK,CAC5C,MAAM0rE,EAAWtnE,KAAKuxE,UAAU31E,GAChC0rE,EAASrjB,WAAWjB,GACpBskB,EAASve,SAAS/oD,MAClBsnE,EAASvkB,eACb,CACA,GAAI/iD,KAAK25G,QAAU,EAAG,CAClB32D,EAAIkB,QAAQlkD,KAAKq8C,UACjB,MAAM+d,EAAYpX,EAAI8B,YAAY,GAAK9kD,KAAK25G,SAAS5gH,MACrDsG,EAAIW,KAAK8tE,eAAe,GAAK,EAC7B9qB,EAAIyC,SAAS,GAAKzlD,KAAK25G,QAAS35G,KAAKZ,EAAIg7D,EAAY,EAAG/6D,EAC5D,CACJ,CACAq0G,mBAAAA,GACI,OAAO1zG,KAAKiT,QAAQ4mG,gBACxB,CACAsD,iBAAAA,GACI,OAAOn9G,KAAKiT,QAAQonG,UACxB,CACA+C,gBAAAA,CAAiBC,EAAYhD,GACzB,GAAIgD,GAAcr9G,KAAKiT,QAAQ2zF,UAAYyW,EAAa,EACpD,MAAM,IAAIjsE,EAAa,mBAAoB,iFAE/C,QAA2Bv0C,IAAvBw9G,EAAWM,QACX,MAAM,IAAIvpE,EAAa,mBAAoB,oEAE/C,GAAkC,mBAAvBipE,EAAWM,QAClB,MAAM,IAAIvpE,EAAa,mBAAoB,4EAG/C,OADApxC,KAAKiT,QAAQonG,WAAWgD,GAAchD,EAC/Br6G,IACX,CACAs9G,iBAAAA,CAAkBC,GACd,GAAIA,EAAmBrgH,SAAW8C,KAAKiT,QAAQ2zF,SAC3C,MAAM,IAAIx1D,EAAa,mBAAoB,2FAE/C,IAAK,MAAMipE,KAAckD,OAC0B1gH,IAA3C0gH,EAAmBlD,GAAYM,UAC/B4C,EAAmBlD,GAAcr6G,KAAKiT,QAAQonG,WAAWA,IAE7Dr6G,KAAKiT,QAAQonG,WAAWA,GAAcn/G,OAAOK,OAAOL,OAAOK,OAAO,CAAC,EAAGyE,KAAKiT,QAAQonG,WAAWA,IAAckD,EAAmBlD,IAGnI,OADAr6G,KAAKiT,QAAQonG,WAAakD,EACnBv9G,IACX,CACA,yBAAOw9G,CAAmBC,GACtB,MAAMC,EAAwB78D,IAC1B,IAAI88D,EAAY,EAChBF,EAAOvhH,SAASssD,IACZ,MAAM+oB,EAAY/oB,EAAM6e,aAAamR,GAAsBgC,MAAO35B,GAC9D0wB,EAAUr0E,OAAS,GAAKq0E,EAAU,GAAGz3B,OAAS6jE,IAC9CA,EAAYpsC,EAAU,GAAGz3B,WAEjC,IAAI8jE,EAAU,EACdH,EAAOvhH,SAASssD,IACZo1D,EAAU,EACQp1D,EAAM6e,aAAamR,GAAsBgC,MAAO35B,GACxD3kD,SAASorE,IACXq2C,EAAYr2C,EAASxtB,OAAS8jE,IAC9BA,EAAUD,EAAYr2C,EAASxtB,WAEvC,MAAM+jE,EAAer1D,EAAM6e,aAAamR,GAAsBgC,OAC9D,IAAIsjC,GAAU,EACdD,EAAa3hH,SAASorE,IACdA,EAASjlB,gBAAkBxB,IAC3Bi9D,GAAU,GACVA,GAAWF,EAAU,GACrBt2C,EAASptB,KAAKotB,EAASxtB,OAAS8jE,MAExCp1D,EAAMoyD,cAAcpyD,EAAM0vB,gBAAkB0lC,OAGpDH,EAAOvhH,SAASssD,IACPA,EAAM8nD,WACP9nD,EAAM2Z,YAEdu7C,EAAqB,QACrBA,EAAqB,gBACrBA,EAAqB,iBACrB,IAAIK,EAAO,EACXN,EAAOvhH,SAASssD,IACRA,EAAM0vB,gBAAkB6lC,IACxBA,EAAOv1D,EAAM0vB,oBAErBulC,EAAOvhH,SAASssD,IACZA,EAAMoyD,cAAcmD,MAExBA,EAAO,EACPN,EAAOvhH,SAASssD,IACMA,EAAM6e,aAAamR,GAAsBgC,MAAO,WACxDt+E,SAASorE,IACXA,EAASoT,YAAcjC,GAAYe,cAC/BlS,EAASxtB,OAASikE,IAClBA,EAAOz2C,EAASxtB,cAGhC2jE,EAAOvhH,SAASssD,IACMA,EAAM6e,aAAamR,GAAsBgC,MAAO,WACxDt+E,SAASorE,IACXA,EAASoT,YAAcjC,GAAYe,cACnClS,EAASptB,KAAK6jE,QAG9B,EC3jBJ,SAASC,GAAmBh7D,EAAKxkD,EAAMy/G,EAAMl0C,EAAMiR,GAC/C,GAAIx8E,IAAS45C,GAAe55C,KAAK0/G,kBAAoB1/G,IAAS45C,GAAe55C,KAAK2/G,kBAC9E,MAAM,IAAI/sE,EAAa,mBAAoB,uDAE/C,IAAI0Q,EAAS,EACTs8D,EAAgB,IAEhB5/G,IAAS45C,GAAe55C,KAAK2/G,oBAC7Br8D,GAAU,EACVs8D,EAAgB,GAEpBp7D,EAAIk4B,SAAS+iC,EAAOn8D,EAAQioB,EAAM,EAAGiR,EAAOjR,GAC5C/mB,EAAIk4B,SAAS+iC,EANW,EAMal0C,EAAMq0C,EAAepjC,EAAOjR,EACrE,CACO,MAAM3xB,WAAuBiI,EAChC,mBAAW3N,GACP,MAAO,gBACX,CACA/xC,WAAAA,CAAY09G,EAAUC,GAClBjtE,QACArxC,KAAK+5E,UAAY3gB,EAAOkG,qBACxBt/D,KAAKq+G,SAAWA,EAChBr+G,KAAKs+G,YAAcA,EACnBt+G,KAAKxB,KAAO45C,GAAe55C,KAAK66E,OAChCr5E,KAAK8hD,OAAS,EACd9hD,KAAKu+G,MAAQ,EACjB,CACA9jC,OAAAA,CAAQj8E,GACJ,MAAMggH,EAA0B,kBAAThgH,EAAoB45C,GAAe6gC,WAAWz6E,GAAQA,EAI7E,OAHItD,OAAOujH,OAAOrmE,GAAe55C,MAAMmS,SAAS6tG,KAC5Cx+G,KAAKxB,KAAOggH,GAETx+G,IACX,CACA06E,OAAAA,GACI,OAAO16E,KAAKxB,IAChB,CACA4mD,OAAAA,CAAQ77B,GAAoB,IAAdtW,EAAOhW,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,CAAC,EACrB,IAAI64C,EAAI6J,EACR,MAAM++D,EAAc,IAAIr+D,EAAQ,uBAKhC,OAJAq+D,EAAYt5D,QAAQ77B,GACpBm1F,EAAYx5D,UAAoC,QAAzBpP,EAAK7iC,EAAQqiG,cAA2B,IAAPx/D,EAAgBA,EAAK,GAC7E4oE,EAAY15D,UAAoC,QAAzBrF,EAAK1sC,EAAQ+gG,cAA2B,IAAPr0D,EAAgBA,EAAK,GAC7E3/C,KAAKu+G,MAAM18G,KAAK68G,GACT1+G,IACX,CACAmjD,IAAAA,GACI,MAAMH,EAAMhjD,KAAKijD,eACjBjjD,KAAKyjD,cACL,IAAIsmB,EAAO/pE,KAAKq+G,SAASv7C,YAAY,GACjCkY,EAAOh7E,KAAKs+G,YAAYx7C,YAAY9iE,KAAKs+G,YAAYnyC,cAAgB,GAAKnsE,KAAK+5E,UAC/EhhF,EAAQ,EACRklH,EAAOj+G,KAAKq+G,SAASvkE,QACK95C,KAAKxB,OAAS45C,GAAe55C,KAAKmgH,cAC5D3+G,KAAKxB,OAAS45C,GAAe55C,KAAK2/G,mBAClCn+G,KAAKxB,OAAS45C,GAAe55C,KAAKogH,eAElCX,EAAOj+G,KAAKq+G,SAASvkE,OAAS95C,KAAKq+G,SAASx5D,YAEhD,IAAIg6D,EAAmB7jC,EAAOjR,EAC9B,MAAMt+D,EAAU,IAAI40C,EACpB,OAAQrgD,KAAKxB,MACT,KAAK45C,GAAe55C,KAAK26E,OAGzB,KAAK/gC,GAAe55C,KAAKsgH,YAGzB,KAAK1mE,GAAe55C,KAAKmgH,aACrB5lH,EAAQ,EACR,MACJ,KAAKq/C,GAAe55C,KAAK66E,OACrB4kC,GAAQ,EACRl0C,GAAQ/pE,KAAK+5E,UACb8kC,GAAoB,GACpB,MACJ,KAAKzmE,GAAe55C,KAAKugH,MAAO,CAC5BhmH,EAAQ,GACR,MAAMk8E,EAAKj1E,KAAKq+G,SAASvkE,OAAS,EAAI95C,KAAK8hD,OACrCkoD,EAAKjgC,EACLi1C,EAAK/pC,EACLgqC,EAAKjkC,EACL9F,EAAKD,EAAKl8E,EACVkxG,EAAKD,EAAK6U,EAAmB,EAC7BK,EAAOhqC,EAAK,GAAMn8E,EAClBomH,EAAOnV,EAAK,GAAM6U,EAClBO,EAAOnqC,EAAK,IAAMl8E,EAClBsmH,EAAOpV,EAAK,KAAQ4U,EACpBS,EAAOF,EACPG,EAAOtV,EAAK,KAAQ4U,EACpBW,EAAON,EACPO,EAAOR,EAAK,GAAMJ,EAClBa,EAAOxqC,EAAKn8E,EACZ4mH,EAAOF,EACPG,EAAO3qC,EAAK,GAAMl8E,EAClB8mH,EAAO5V,EAAK,KAAQ4U,EACpBiB,EAAOF,EACPG,EAAO9V,EAAK,KAAQ4U,EACpBmB,EAAON,EACPO,EAAOd,EACbn8D,EAAI2nB,YACJ3nB,EAAI4nB,OAAOqK,EAAI+0B,GACfhnD,EAAIslC,cAAc42B,EAAMC,EAAMC,EAAMC,EAAMnqC,EAAI+0B,GAC9CjnD,EAAIslC,cAAcg3B,EAAMC,EAAMC,EAAMC,EAAMT,EAAIC,GAC9Cj8D,EAAIslC,cAAco3B,EAAMC,EAAMC,EAAMC,EAAM3qC,EAAI+0B,GAC9CjnD,EAAIslC,cAAcw3B,EAAMC,EAAMC,EAAMC,EAAMhrC,EAAI+0B,GAC9ChnD,EAAIp5C,OACJo5C,EAAIz5C,SACJ,KACJ,CACA,KAAK6uC,GAAe55C,KAAK0hH,QACrBn2C,GAAQ,EACRiR,GAAQ,EACR6jC,EAAmB7jC,EAAOjR,EAC1Bt+D,EAAQ25C,QAAQe,EAAOg6D,YACvB10G,EAAQ65C,WAAWtC,EAAKi7D,EAAO,EAAGl0C,GAClCt+D,EAAQ25C,QAAQe,EAAOi6D,eACvB30G,EAAQ65C,WAAWtC,EAAKi7D,EAAO,EAAGjjC,GAClCijC,GAAQ,EACR,MACJ,KAAK7lE,GAAe55C,KAAK0/G,iBACrBF,GAAmBh7D,EAAKhjD,KAAKxB,KAAMy/G,EAAOj+G,KAAK8hD,OAAQioB,EAAMiR,EAAOh7E,KAAK+5E,WACzE,MACJ,KAAK3hC,GAAe55C,KAAK2/G,kBACrBH,GAAmBh7D,EAAKhjD,KAAKxB,KAAMy/G,EAAMl0C,EAAMiR,EAAOh7E,KAAK+5E,WAC3D,MACJ,KAAK3hC,GAAe55C,KAAKogH,YACrB7lH,EAAQ,EACR8lH,GAAoB7+G,KAAK+5E,UACzB,MACJ,KAAK3hC,GAAe55C,KAAKs7E,KACrB,MACJ,QACI,MAAM,IAAI1oC,EAAa,cAAe,qCAAFloC,OAAuClJ,KAAKxB,KAAI,kBAExFwB,KAAKxB,OAAS45C,GAAe55C,KAAKugH,OAClC/+G,KAAKxB,OAAS45C,GAAe55C,KAAK0/G,kBAClCl+G,KAAKxB,OAAS45C,GAAe55C,KAAK2/G,mBAClCn+G,KAAKxB,OAAS45C,GAAe55C,KAAKs7E,MAClC92B,EAAIk4B,SAAS+iC,EAAMl0C,EAAMhxE,EAAO8lH,GAEhC7+G,KAAKxB,OAAS45C,GAAe55C,KAAKogH,aAClC57D,EAAIk4B,SAAS+iC,EAAO,EAAGl0C,EAAMhxE,EAAO8lH,GAExC,IAAK,IAAIjjH,EAAI,EAAGA,EAAIoE,KAAKu+G,MAAMrhH,OAAQtB,IAAK,CACxC,MAAM8iH,EAAc1+G,KAAKu+G,MAAM3iH,GACzBwD,EAAIY,KAAKq+G,SAASvkE,OAAS4kE,EAAY75D,WAAa,GACpDxlD,GAAKW,KAAKq+G,SAASv7C,YAAY,GAAK9iE,KAAKs+G,YAAYnH,kBAAoB,EAC/EuH,EAAYp5D,WAAWtC,EAAK5jD,EAAGC,EAAI,EACvC,CACJ,EC1GJ,SAASghH,GAA4BzlD,EAAO0lD,EAAcC,EAAe17G,GACrE,IAAI27G,EAAeF,EACnB,IAAK,IAAI//B,EAAYggC,EAAgB,EAAGhgC,EAAY3lB,EAAM19D,OAAQqjF,IAAa,CAC3E,MAAMx2E,EAAO6wD,EAAM2lB,GACnB,GAAIze,EAAO/3D,KAAUA,EAAK+8D,WAAa/8D,EAAKs8D,oBAAqB,CAC7Dm6C,EAAez2G,EAAKktE,iBACpB,KACJ,CACJ,CACA,GAAIpyE,GAAWy7G,IAAiBE,EAAc,CAG1CA,EAAevuE,EAFHhqC,KAAK2yC,IAAI0lE,EAAcE,GACvBv4G,KAAKykB,IAAI4zF,EAAcE,GAEvC,CACA,OAAOA,CACX,CD6FApoE,GAAe55C,KAAO,CAClBmgH,aAAc,EACdG,YAAa,EACb3lC,OAAQ,EACRE,OAAQ,EACR0lC,MAAO,EACPmB,QAAS,EACThC,iBAAkB,EAClBC,kBAAmB,EACnBS,YAAa,EACb9kC,KAAM,GAEV1hC,GAAe6gC,WAAa,CACxBwnC,YAAaroE,GAAe55C,KAAKmgH,aACjC+B,WAAYtoE,GAAe55C,KAAKsgH,YAChC5lC,OAAQ9gC,GAAe55C,KAAK26E,OAC5BC,OAAQhhC,GAAe55C,KAAK66E,OAC5BsnC,MAAOvoE,GAAe55C,KAAKugH,MAC3B6B,QAASxoE,GAAe55C,KAAK0hH,QAC7BW,eAAgBzoE,GAAe55C,KAAK0/G,iBACpC4C,gBAAiB1oE,GAAe55C,KAAK2/G,kBACrC4C,WAAY3oE,GAAe55C,KAAKogH,YAChC/kC,KAAMzhC,GAAe55C,KAAKs7E,MClHvB,MAAMssB,GACT,mBAAO4a,CAAapmD,GAA4C,IAArCx7D,EAACnC,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,GAAG,eAAEgkH,EAAiB,IAAIhkH,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,CAAC,EACzD29D,EAAMpoB,QAAO,CAAC0uE,EAAan3G,KACvBA,EAAKwpE,qBAAqB,IAAI68B,IAC9B,MAAMhoD,GAAc,IAAI0lC,IAAc+B,YAAY9lF,GAAM2pE,YAClDprB,EAAUF,EAAYG,aAE5B,OADAH,EAAYlO,KAAKgnE,EAAc54D,EAAQsmC,aAChCsyB,EAAc94D,EAAYvD,WAAayD,EAAQumC,aAAeoyB,IACtE7hH,EACP,CACA,oBAAO+hH,CAAcn+D,EAAKmjD,EAAW5gD,EAAMykD,EAAIC,EAAIh3F,GAC/C,IAAI6iC,EAAI6J,EAER,MAAMvgD,EAAImmD,GADVtyC,EAAU/X,OAAOK,OAAO,CAAE6lH,aAActsE,EAAQxjC,IAAI,kBAAoB2B,IAC/CmuG,aACnBC,EAAclb,EAAUkb,YAQ9Br+D,EAAIE,OACJF,EAAIkB,QAAQpP,EAAQxjC,IAAI,cAAe,GACvC+vG,EAAYC,KAAKplH,SAASqlH,IAT1B,IAAgBtsC,EAAIC,EAAIpsD,EAARmsD,EAUL71E,EAAImiH,EAAItsC,GAVCC,EAUG91E,EAAImiH,EAAIrsC,GAVPpsD,EAUW,wBAT/Bk6B,EAAI2nB,YACJ3nB,EAAIJ,eAAe95B,GACnBk6B,EAAIL,aAAa75B,GACjBk6B,EAAIH,aAAa,GACjBG,EAAIk4B,SAASjG,EAAI+0B,EAAI/hG,KAAK2yC,IAAIs6B,EAAKD,EAAI,GAAIg1B,EAAKD,GAMhDhnD,EAAIL,aAAa,SACjBK,EAAIyC,SAASx9C,KAAK+6D,MAAMu+C,EAAIrsC,GAAKqsC,EAAItsC,IAAIvzE,WAAYtC,EAAImiH,EAAItsC,GAAIg1B,EAAK,OAE1EjnD,EAAIL,aAAa,OACjBK,EAAIyC,SAAS,SAADv8C,QAA0C,QAA9B4sC,EAAKqwD,EAAUqb,iBAA8B,IAAP1rE,EAAgBA,EAAK,GAAG2rE,QAAQ,GAAE,YAAAv4G,QAA4C,QAA/By2C,EAAKwmD,EAAU3gC,kBAA+B,IAAP7lB,EAAgBA,EAAK,GAAG8hE,QAAQ,GAAE,UAAAv4G,OAASm4G,EAAYv/B,MAAM2/B,QAAQ,IAAMriH,EAAI,GAAI6qG,EAAK,IAC5OjnD,EAAII,SACR,CACA,oBAAOs+D,CAAc1+D,EAAKwF,EAAOoS,EAAOnB,GACpC,IAAIxmD,EAAU,CACV0uG,UAAU,EACVC,YAAY,GAEM,kBAAXnoD,EACPxmD,EAAU/X,OAAOK,OAAOL,OAAOK,OAAO,CAAC,EAAG0X,GAAUwmD,GAE7B,mBAAXA,IACZxmD,EAAQ0uG,SAAWloD,GAEvB,MAAMyM,EAAQ,IAAIw0B,GAAMthC,EAAOoI,SAASgjC,QAAQ9J,GAAMkJ,KAAKiB,MAAMlK,aAAa//B,GACxE+jB,EAAQ1rE,EAAQ0uG,SAAW7lC,GAAKO,iBAAiBnW,GAAS,GAMhE,OALA,IAAIkgC,IACCC,WAAW,CAACngC,IACZ27C,cAAc,CAAC37C,GAAQ1d,EAAO,CAAEo5D,WAAY3uG,EAAQ2uG,WAAYp5D,UACrE0d,EAAMjiB,WAAWjB,GAAK+F,SAASP,GAAOzF,gBACtC47B,EAAMziF,SAASo7E,GAASA,EAAKrzB,WAAWjB,GAAKD,kBACtCmjB,EAAMpiB,gBACjB,CACA,uBAAOg+D,CAAiB9+D,EAAK++D,EAAUv5D,EAAOw5D,EAAUpnD,EAAO+mD,EAAUloD,GACrE,IAAIwoD,EAAO,CACPN,WACAC,YAAY,GAEM,kBAAXnoD,EACPwoD,EAAO/mH,OAAOK,OAAOL,OAAOK,OAAO,CAAC,EAAG0mH,GAAOxoD,GAEvB,mBAAXA,IACZwoD,EAAKN,SAAWloD,GAEpB,MAAMyoD,EAAY,IAAIxnB,GAAMthC,EAAOoI,SAASgjC,QAAQ9J,GAAMkJ,KAAKiB,MAAMlK,aAAa//B,GAC5EunD,EAAW,IAAIznB,GAAMthC,EAAOoI,SAASgjC,QAAQ9J,GAAMkJ,KAAKiB,MAAMlK,aAAaqnB,GAC3ErjC,EAAQsjC,EAAKN,SAAW7lC,GAAKO,iBAAiB6lC,GAAa,IACjE,IAAI9b,IACCC,WAAW,CAAC6b,IACZ7b,WAAW,CAAC8b,IACZN,cAAc,CAACK,EAAWC,GAAW35D,EAAO,CAAEo5D,WAAYK,EAAKL,aACpEM,EAAU/+D,KAAKH,EAAKwF,GACpB25D,EAASh/D,KAAKH,EAAK++D,GACnBpjC,EAAMziF,SAASo7E,GAASA,EAAKrzB,WAAWjB,GAAKD,kBAC7C,IAAI3K,GAAeoQ,EAAOu5D,GAAU99D,WAAWjB,GAAKD,eACxD,CACA,wBAAOq/D,CAAkBz7C,EAAW07C,EAAeC,GAC/C37C,EAAUzqE,SAAQ,CAACqmH,EAAcxoH,KAC7B,GAAIgoE,EAAYwgD,IAAiBA,EAAaz7C,SAAU,CACpD,GAAIy7C,EAAa1vC,cAAgByvC,EAC7B,OAGJ,GAAa,IADAC,EAAatrC,iBAEtB,OAEJ,GAAIorC,GAAiBE,EAAalrC,UAAW,CACzC,MAAM54E,EAAQ8jH,EAAa7/C,cAAc,GACzC,GAAc,IAAV3oE,EACA0E,EAAMuzC,KAAOquE,GAA4B15C,EAAWloE,EAAMuzC,KAAMj4C,GAAO,QAEtE,GAAIA,EAAQ,GAAKA,EAAQ4sE,EAAUzpE,OAAQ,CAC5C,MAAMslH,EAAe77C,EAAU5sE,EAAQ,GACvC,GAAIgoE,EAAYygD,GACZ,GAAIA,EAAa17C,SACbroE,EAAMuzC,KAAOwwE,EAAa9/C,cAAc,GAAG1wB,SAE1C,CACD,MAAMwtD,EAAWgjB,EAAavrC,iBAC9Bx4E,EAAMuzC,KAAOquE,GAA4B15C,EAAW64B,EAAUzlG,GAAO,EACzE,CAER,CACAwoH,EAAazlB,WAAW,EAAGr+F,EAAMuzC,KACrC,CACJ,IAER,CACArxC,WAAAA,CAAYsS,GACRjT,KAAKyiH,iBAAmBvnH,OAAOK,OAAO,CAAEmnH,eAAe,EAAOxe,cAAe9qC,EAAO+F,eAAgBwjD,cAAe,GAAK1vG,GACxHjT,KAAK4iH,aAAe,EACpB5iH,KAAKwhH,UAAY,EACjBxhH,KAAKwlE,WAAa,EAClBxlE,KAAK6iH,cAAgB,CAAC,EACtB7iH,KAAK8iH,cAAgB,EACrB9iH,KAAK+iH,kBAAmB,EACxB/iH,KAAKgjH,aAAe,CAChBnpH,IAAK,CAAC,EACNoQ,MAAO,GACPg5G,KAAM,GACNnf,qBAAsB,GAE1B9jG,KAAKkjH,iBAAmB,GACxBljH,KAAKqhH,YAAc,CACfv/B,MAAO,EACPw/B,KAAM,IAEVthH,KAAK+lE,OAAS,GACd/lE,KAAKmjH,YAAc,EACvB,CACAvB,UAAAA,CAAW77C,EAAQs8C,GACf,IAAKt8C,IAAWA,EAAO7oE,OACnB,MAAM,IAAIk0C,EAAa,cAAe,6BAE1C20B,EAAO7pE,SAASgqE,GAAUkgC,GAAUgc,kBAAkBl8C,EAAME,eAAgBi8C,IAChF,CACAe,yBAAAA,CAA0Br9C,GACtB,MAAMs9C,EAAmBvuE,EAAQxjC,IAAI,8BACrC,IAAIgyG,EAAoB,EACpBC,EAAO,EACPC,EAAO,EACX,MAAMvpC,EAAS,GACTlqB,EAAY,GAClB,GAAI/vD,KAAK+iH,iBACL,OAAO/iH,KAAK8iH,cAChB,IAAK/8C,EACD,MAAM,IAAI30B,EAAa,cAAe,sDAE1CpxC,KAAKyjH,mBAAmB19C,GACxB,MAAQk9C,KAAMS,EAAa7pH,IAAK8pH,GAAe3jH,KAAKgjH,aACpDhjH,KAAK8iH,cAAgB,EACrBY,EAAYxnH,SAAS4mF,IACjB,MAAM7iF,EAAU0jH,EAAW7gC,GAC3B7iF,EAAQyzE,YACJzzE,EAAQmmE,eAAelpE,OAAS6oE,EAAO7oE,SACvComH,GAAqB,GAEzBrjH,EAAQmmE,eAAelqE,SAAS8C,IAC5BukH,GAAQvkH,EAAEupD,aAAaxvD,MACvByqH,GAAQxkH,EAAEunE,WAAWjsE,QACrB2/E,EAAOp4E,KAAK7C,EAAEupD,aAAaxvD,OAC3Bg3D,EAAUluD,KAAK7C,EAAEunE,WAAWjsE,YAEhC,MAAMvB,EAAQkH,EAAQ4kD,WACtB7kD,KAAK8iH,eAAiB/pH,KAE1BiH,KAAK+iH,kBAAmB,EACxB,MAAMa,EAAOL,EAAO,EAAIA,EAAOtpC,EAAO/8E,OAAS,EAAI+8E,EAAO/8E,OACpD2mH,EAAOvxE,EAAS2nC,EAAOpgF,KAAK2yC,GAAOvkC,KAAKm9F,IAAI54D,EAAKo3E,EAAM,MACvDE,EAAQ77G,KAAKm9F,IAAIye,EAAO5pC,EAAO/8E,OAAQ,IAAO0mH,EAC9CG,EAAOP,EAAOzzD,EAAU7yD,OACxB8mH,EAAO1xE,EAASyd,EAAUl2D,KAAK2yC,GAAOvkC,KAAKm9F,IAAI54D,EAAKu3E,EAAM,MAC1DE,EAAQh8G,KAAKm9F,IAAI4e,EAAOj0D,EAAU7yD,OAAQ,IAAO6mH,EACjDG,EAASj8G,KAAK2yC,IAAIqpE,EAAOH,GAASJ,EAAYxmH,OAASmmH,EACvDc,EAAed,EAAmBC,EACxC,OAAOtjH,KAAK8iH,cAAgB76G,KAAK2yC,IAAIupE,EAAcD,EACvD,CACA5d,gBAAAA,GACI,IAAKtmG,KAAK+iH,iBACN,MAAM,IAAI3xE,EAAa,kBAAmB,qFAE9C,OAAOpxC,KAAK8iH,aAChB,CACA,8BAAOre,CAAwB1+B,GAC3B,IAAKA,IAAWA,EAAO7oE,OACnB,MAAM,IAAIk0C,EAAa,cAAe,uBAE1C,MAAM8rC,EAAanX,EAAO,GAAGoX,gBAU7B,OAT6BpX,EAAOvzB,QAAO,CAAC0uE,EAAah7C,KACrD,IAAKA,EAAMiX,gBAAgBvpC,OAAOspC,GAC9B,MAAM,IAAI9rC,EAAa,eAAgB,yDAE3C,GAAI80B,EAAMq+B,YAAc7J,GAAMkJ,KAAKG,SAAW79B,EAAM4+B,aAChD,MAAM,IAAI1zD,EAAa,kBAAmB,qCAE9C,OAAOnpC,KAAK2yC,IAAIsmE,EAAazuE,EAASI,IAAIquE,EAAah7C,EAAMu+B,8BAC9D,EAEP,CACA2f,sBAAAA,CAAuBr+C,GACnB,GAAsB,IAAlBA,EAAO7oE,OACP,OACJ,MAAM4mG,EAAuBsC,GAAU3B,wBAAwB1+B,GACzDs+C,EAAmB,IAAI3lG,IACvBuvE,EAAW,GACjBloB,EAAO7pE,SAASgqE,IACZ,MAAM89B,EAAY,IAAIvxD,EAAS,EAAGqxD,GAClC59B,EAAME,eAAelqE,SAASwzF,IAC1B,MAAM40B,EAAetgB,EAAUjxD,UAC/B,IAAIwxE,EAAwBF,EAAiB/yG,IAAIo+E,EAASjnC,YAK1D,GAJK87D,IACDF,EAAiB9zG,IAAIm/E,EAASjnC,WAAY,CAAC,GAC3C87D,EAAwBF,EAAiB/yG,IAAIo+E,EAASjnC,eAEpD87D,EAAwBA,EAAsBD,QAAgBznH,GAAY,CAC5E,MAAM2nH,EAAa,IAAIpU,GACvBniB,EAASpsF,KAAK2iH,GACdD,EAAsBD,GAAgBE,CAC1C,CACA90B,EAASnc,qBAAqBgxC,EAAsBD,IACpDtgB,EAAU92F,IAAIwiF,EAASnpB,kBAG/BvmE,KAAKkjH,iBAAiBrhH,KAAK,CACvBhI,IAAKwqH,EACLp6G,MAAOgkF,EACP6V,wBAER,CACA2f,kBAAAA,CAAmB19C,GACf,MACMkoB,EA5Rd,SAAwBloB,EAAQ0+C,EAAaC,GACzC,GAAsB,IAAlB3+C,EAAO7oE,OACP,MAAO,CACHrD,IAAK,CAAC,EACNoQ,MAAO,GACPg5G,KAAM,GACNnf,qBAAsB,GAE9B,MAAMugB,EAAmB,CAAC,EACpBM,EAAW,GACX12B,EAAW,GACX6V,EAAuBsC,GAAU3B,wBAAwB1+B,GAe/D,OAdAA,EAAO7pE,SAAQ,CAACgqE,EAAOqpB,KACnB,MAAMyU,EAAY,IAAIvxD,EAAS,EAAGqxD,GAClC59B,EAAME,eAAelqE,SAASwzF,IAC1B,MAAM40B,EAAetgB,EAAUjxD,UAC/B,IAAKsxE,EAAiBC,GAAe,CACjC,MAAME,EAAaC,EAAY,CAAEt2B,OAAQm2B,IACzCr2B,EAASpsF,KAAK2iH,GACdH,EAAiBC,GAAgBE,EACjCG,EAAS9iH,KAAKyiH,EAClB,CACAI,EAAah1B,EAAU20B,EAAiBC,GAAe/0B,GACvDyU,EAAU92F,IAAIwiF,EAASnpB,kBAGxB,CACH1sE,IAAKwqH,EACLp6G,MAAOgkF,EACPg1B,KAAM0B,EAASxhD,MAAK,CAACllE,EAAGE,IAAMF,EAAIE,IAClC2lG,uBAER,CA4PyB8gB,CAAe7+C,GAAS+c,GAAS,IAAIgL,GAAYhL,KADvDl2B,CAAC8iC,EAAUzvF,EAASsvF,IAAetvF,EAAQ4vF,YAAYH,EAAUH,KAE5EvvF,KAAKgjH,aAAe/0B,EACpB,MAAM42B,EAAe7kH,KAAKgjH,aAAa/4G,MAIvC,OAHA46G,EAAa3oH,SAAS+D,IAClBA,EAAQiuF,UAAY22B,KAEjB52B,CACX,CACA62B,eAAAA,GACI,OAAO9kH,KAAKgjH,YAChB,CACAtvC,SAAAA,GAAkE,IAAxDkvC,EAAY3lH,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,EAAqB8nH,EAAW9nH,UAAAC,OAAA,EAAAD,UAAA,QAAAJ,EAAE2rD,EAAKvrD,UAAAC,OAAA,EAAAD,UAAA,QAAAJ,EAC5D,MAAMoxF,EAAWjuF,KAAKgjH,aACtB,IAAK/0B,EACD,MAAM,IAAI78C,EAAa,iBAAkB,mCAE7C,MAAQ6xE,KAAMS,EAAa7pH,IAAK8pH,GAAe11B,EAC/CjuF,KAAKmjH,YAAc,GACf4B,GAAev8D,GACfu8D,EAAY7oH,SAASgqE,GAAUA,EAAMnd,SAASP,GAAOkrB,cAEzD,IAAIt0E,EAAI,EACJ2gB,EAAQ,EACZ/f,KAAK8iH,cAAgB,EACrB,IAAI5lC,EAAa,EACjBwmC,EAAYxnH,SAAS4mF,IACjB,MAAM7iF,EAAU0jH,EAAW7gC,GAC3B7iF,EAAQyzE,YACR,MAAM36E,EAAQkH,EAAQ4kD,WACtB7kD,KAAK8iH,eAAiB/pH,EACtB,MAAMs1F,EAAWpuF,EAAQivF,cAAc50F,QACvC4iF,GAAcmR,EACd,MAAM/lC,EAAUroD,EAAQsoD,aACxBnpD,EAAIA,EAAI2gB,EAAQuoC,EAAQsmC,YACxB3uF,EAAQi6C,KAAK96C,GACb2gB,EAAQhnB,EAAQuvD,EAAQsmC,eAE5B,MAAM,cAAE8zB,EAAa,cAAExe,EAAa,cAAEye,GAAkB3iH,KAAKyiH,iBAEvDvd,EAAe5yD,EAASoxE,EAAY7pH,KAD7BipF,GAAS76E,KAAKm9F,IAAIlB,EAAgByf,EAAW7gC,GAAMoM,cAAc50F,QAAU4iF,MAIxF,GAFAl9E,KAAK8iH,cAAgB1jH,EAAI2gB,EACzB/f,KAAK+iH,kBAAmB,EACpBH,GAAgB,EAChB,OAAO5iH,KAAKglH,WAChB,MAAMltF,EAAe6rF,EAAWD,EAAY,IACtCjY,EAAckY,EAAWD,EAAYA,EAAYxmH,OAAS,IAChE,SAAS+nH,EAAwBC,GAmD7B,OAlDkBxB,EAAY7pH,KAAI,CAACipF,EAAMlnF,KACrC,MAAMqE,EAAU0jH,EAAW7gC,GACrB/c,EAAS9lE,EAAQuvF,sBACvB,IAAI21B,EACJ,GAAIvpH,EAAI,EAAG,CACP,MAAMwpH,EAAczB,EAAWD,EAAY9nH,EAAI,IAC/C,IAAK,IAAIwoF,EAAIxoF,EAAI,EAAGwoF,GAAK,EAAGA,IAAK,CAC7B,MACMihC,EADW1B,EAAWD,EAAYt/B,IACZoL,sBACtB81B,EAAiB,GAMvB,GALApqH,OAAOkB,KAAK2pE,GAAQ7pE,SAASgD,IACrBmmH,EAAWnmH,IACXomH,EAAezjH,KAAK3C,MAGxBomH,EAAepoH,OAAS,EAAG,CAC3B,IAAImxF,EAAW,EACXk3B,EAAqB/8E,IACrBg9E,EAAmB,EAevB,GAdAF,EAAeppH,SAASgD,IACpB,MAAMk8D,EAAQiqD,EAAWnmH,GAAGqnE,WAAWjsE,QACnC8gE,EAAQizB,IACR82B,EAAeE,EAAWnmH,GAC1BmvF,EAAWjzB,GAEf,MAAMqqD,EAAe1/C,EAAO7mE,GACtBwmH,EAAiBD,EAAa3rE,QAC/B2rE,EAAal9D,aAAaI,UAAY88D,EAAal9D,aAAaisB,qBAC/DmxC,EAAcN,EAAWnmH,GAAGqpD,aAC5Bq9D,EAAkBP,EAAWnmH,GAAG46C,OAAS6rE,EAAY/wC,OAAS+wC,EAAY/8D,WAAa+8D,EAAY7wC,qBACzGywC,EAAqBt9G,KAAKykB,IAAI64F,EAAoBG,EAAiBE,MAEvEL,EAAqBt9G,KAAKykB,IAAI64F,EAAoBtlH,EAAQ65C,QAAUsrE,EAAYtrE,OAAgC,IAAvBorE,IACrFxC,EAAe,CACf,MAAM1jH,EAAIk+E,EACVsoC,EAAoBv9G,KAAKm9F,IAAIlB,EAAgB7V,EAAWrvF,GAAMkmG,EAAgBggB,CAClF,KACiC,qBAAjBC,IACZK,EAAmBL,EAAaxyC,WAAW0yB,QAAQhX,GAAY62B,GAEnE,MAAO,CACHM,mBACAD,qBACAM,aAAcV,EAEtB,CACJ,CACJ,CACA,MAAO,CAAEK,iBAAkB,EAAGM,eAAgB,EAAGP,mBAAoB,KAG7E,CACA,SAASQ,EAAsBC,GAC3B,MAAM7iB,EAAU+hB,EAAuB,EACvC,IAAIe,EAAa,EAqBjB,OApBAvC,EAAYxnH,SAAQ,CAAC4mF,EAAM/oF,KACvB,MAAMkG,EAAU0jH,EAAW7gC,GAC3B,GAAI/oF,EAAQ,EAAG,CACX,MAAMmsH,EAAWjmH,EAAQ65C,OACnBqsE,EAAQH,EAAejsH,GACvBqsH,EAAUz0E,EAAQw0E,EAAMN,cAAc/rE,OAASqsE,EAAMX,kBAAoBU,EAAWD,GAC1F,IAAII,EAAkB,EAClBD,EAAU,EACVH,GAAcG,EAETA,EAAU,IACfC,EAAkBp+G,KAAKykB,IAAIy5F,EAAMZ,mBAAoBt9G,KAAKwsC,IAAI2xE,IAC9DH,IAAeI,GAEnBpmH,EAAQi6C,KAAKgsE,EAAWD,EAC5B,CACAhmH,EAAQwvF,4BAA4BvzF,SAASwzF,IACzCA,EAASjd,gBAAgB0wB,EAAUljG,EAAQ65C,cAG5C2xD,EAAY3xD,OAAShiB,EAAagiB,MAC7C,CACA,MAAMorE,EAAuBtC,EACzBnX,EAAYljD,aAAaqsB,OACzB62B,EAAYljD,aAAasmC,aACzB/2D,EAAaywB,aAAaqmC,YACxB03B,EAAmBxxE,EAAQxjC,IAAI,uBAC/Bi1G,EAAmBzxE,EAAQxjC,IAAI,uBAC/BqlC,EAAc7B,EAAQxjC,IAAI,iBAChC,IAAIk1G,EAActB,EAClB,MAAMuB,EAAYxB,EAAwBuB,GAC1C,IAAIE,EAAcX,EAAsBU,GACxC,GAA2B,IAAvB/C,EAAYxmH,OACZ,OAAO,EACX,MASMypH,EATkBC,EAACJ,EAAaC,KAClC,IAAII,EAASL,EAAc,EAC3B,GAAIC,EAAUvpH,OAAS,EACnB,IAAK,IAAI2/B,EAAK,EAAGA,EAAK4pF,EAAUvpH,SAAU2/B,EACtCgqF,EAAS5+G,KAAKykB,IAAI+5F,EAAU5pF,GAAI2oF,iBAAmB,EAAGqB,GAG9D,OAAOA,GAESD,CAAgBJ,EAAaC,GAC3CK,EAAkBC,IACpB,IAAIC,EAAsB,EAC1B,MAAMC,EAAexb,GAAeA,EAAYrc,iBAChD,GAAI63B,EAAc,CACd,MAAM/gD,EAAQ+gD,EAAat0C,WAC3B,GAAIzM,EAAMk+B,eAAe9pG,QAAU4rE,EAAMiX,gBAAgB7iF,QACrD,OAA0B,EAAnBisH,EAAuBI,EAAcA,EAAcJ,EAE9D,MAAMW,EAAYD,EAAapiE,WAC/BmiE,EACI9gD,EAAMm/B,QAAQoG,EAAYvc,cAAc50F,SAAWysH,GAAkBG,EAAYvwE,EACzF,CACA,OAA0B,EAAnB4vE,EAAuBS,EAAsBA,EAAsBT,GAE9E,IAAIY,EAAaL,EAAeN,GAC5BY,EAAaD,GAAcZ,EAAmBD,GAClD,MAAMvI,EAAOmH,EAAuBkC,EACpC,IAAIt1C,EAAa6wC,EACjB,KAAQ+D,EAAc3I,GAAQjsC,EAAa,GAAO40C,EAAcS,EAAapJ,GAAQjsC,EAAa,GAC9F00C,GAAeE,EAAc3I,EAC7BoJ,EAAaL,EAAeN,GAC5BY,EAAaD,GAAcZ,EAAmBD,GAC9CI,EAAcX,EAAsBd,EAAwBuB,IAC5D10C,IAGJ,OADA9xE,KAAK4iH,aAAeA,EACb5iH,KAAKglH,UAChB,CACAA,QAAAA,GACI,MAAM/2B,EAAWjuF,KAAKgjH,aAChBJ,EAAe5iH,KAAK4iH,aAC1B5iH,KAAKqhH,YAAc,CAAEv/B,MAAO,EAAGw/B,KAAM,IACrCrzB,EAASg1B,KAAK/mH,SAAQ,CAAC4mF,EAAM/oF,KACzB,GAAc,IAAVA,EACA,OACJ,MAAM8oF,EAAWoL,EAASg1B,KAAKlpH,EAAQ,GACjCqrH,EAAcn3B,EAASp0F,IAAIgpF,GAC3B5iF,EAAUguF,EAASp0F,IAAIipF,GACvBukC,EAAcjC,EAAY78D,aAC1B++D,EAAcrnH,EAAQsoD,aACtBq9D,EAAkBR,EAAYtrE,OAASutE,EAAYzyC,OAASyyC,EAAYx4B,aACxE62B,EAAiBzlH,EAAQ65C,OAASwtE,EAAY14B,YAC9C2yB,EAAMmE,EAAiBE,EAC7B5lH,KAAKqhH,YAAYv/B,OAASy/B,EAC1BvhH,KAAKqhH,YAAYC,KAAKz/G,KAAK,CAAEozE,GAAI2wC,EAAiB1wC,GAAIwwC,IACtDzlH,EAAQqyE,sBAAsBT,QAAQrkD,KAAO+zF,EAC7C6D,EAAY9yC,sBAAsBT,QAAQ/qB,MAAQy6D,KAEtDvhH,KAAK6iH,cAAgB,CAAC,EACtB,MAAMA,EAAgB7iH,KAAK6iH,cAY3B7iH,KAAK+lE,OAAO7pE,SAASgqE,IACjBA,EAAME,eAAelqE,SAAQ,CAAC6N,EAAMnO,EAAGg/D,KACnC,MAAMjB,EAAW5vD,EAAKw8D,WAAWnyB,QAAQnB,WAAWvxC,WAC9C4mD,EAAUv+C,EAAKw+C,aACfqpB,EAAmB7nE,EAAKuoE,sBACxBi1C,EAAex9G,EAAK+vC,OAASwO,EAAQssB,OAAStsB,EAAQM,WAAaN,EAAQwsB,qBACjF,IAAI/C,EAAQ,EACZ,GAAIn2E,EAAIg/D,EAAM19D,OAAS,EAAG,CACtB,MAAMsqH,EAAY5sD,EAAMh/D,EAAI,GACtB6rH,EAAeD,EAAUj/D,aAE/BwpB,EADsBy1C,EAAU1tE,OAAS2tE,EAAa9+D,UAAY8+D,EAAajzC,oBACvD+yC,EACxB31C,EAAiBG,MAAMC,KAAOw1C,EAAU1tE,OAAS/vC,EAAK+vC,OACtD0tE,EAAUl1C,sBAAsBT,QAAQrkD,KAAOukD,CACnD,MAEIA,EAAQ6wC,EAAe2E,EACvB31C,EAAiBG,MAAMC,KAAO4wC,EAAe74G,EAAK+vC,OAEtD83B,EAAiBC,QAAQ/qB,MAAQirB,EA9BzC,SAAqBpY,EAAUoY,GAC3B,MAAM21C,EAAQ7E,EAAclpD,QACd98D,IAAV6qH,EACA7E,EAAclpD,GAAY,CAAEsY,KAAMF,EAAO/uE,MAAO,EAAG8+E,MAAO/P,IAG1D21C,EAAM1kH,OAAS,EACf0kH,EAAM5lC,OAAS/P,EACf21C,EAAMz1C,KAAOy1C,EAAM5lC,MAAQ4lC,EAAM1kH,MAEzC,CAqBQ2kH,CAAYhuD,EAAUiY,EAAiBG,MAAMC,YAGrD,IAAI41C,EAAiB,EAcrB,OAbA5nH,KAAK+lE,OAAO7pE,SAASgqE,IACjBA,EAAME,eAAelqE,SAAS6N,IAC1B,MAAM4vD,EAAW5vD,EAAKw8D,WAAWnyB,QAAQnB,WAAWvxC,WAC9C4mD,EAAUv+C,EAAKuoE,sBACrBhqB,EAAQypB,MAAME,KAAO4wC,EAAclpD,GAAUsY,KAC7C3pB,EAAQqR,SAAWA,EACnBrR,EAAQwpB,YAAc,EACtBxpB,EAAQypB,MAAMG,UAAY5pB,EAAQypB,MAAMC,KAAO1pB,EAAQypB,MAAME,KAC7D21C,GAAkB3/G,KAAKm9F,IAAI98C,EAAQypB,MAAMG,UAAW,SAG5DlyE,KAAKwhH,UAAYv5G,KAAK2/E,KAAKggC,GAC3B5nH,KAAKmjH,YAAYthH,KAAK7B,KAAKwhH,WACpBxhH,KAAKwhH,SAChB,CACAqG,IAAAA,CAAK50G,GACD,IAAI6iC,EACJ,MAAMm4C,EAAWjuF,KAAKgjH,aACtB,IAAK/0B,EACD,OAAO,EAEX,MAAM65B,EAAmF,QAA1EhyE,EAAiB,OAAZ7iC,QAAgC,IAAZA,OAAqB,EAASA,EAAQ60G,aAA0B,IAAPhyE,EAAgBA,EAAK,GACtH,IAAI/1B,EAAQ,EAsBZ,OArBA/f,KAAKwlE,WAAa,EAClByoB,EAASg1B,KAAK/mH,SAAQ,CAAC4mF,EAAM/oF,EAAOkpH,KAChC,MAAMhjH,EAAUguF,EAASp0F,IAAIipF,GACvBsiC,EAAcrrH,EAAQ,EAAIk0F,EAASp0F,IAAIopH,EAAKlpH,EAAQ,SAAM8C,EAC1D2zF,EAAcz2F,EAAQkpH,EAAK/lH,OAAS,EAAI+wF,EAASp0F,IAAIopH,EAAKlpH,EAAQ,SAAM8C,EAC9EoD,EAAQq6C,KAAKv6B,EAAOqlG,EAAa50B,GACjC,MAAM5O,GAAQ3hF,EAAQ6vF,mBAClBlO,EAAO,EACP7hE,GAAS9X,KAAKykB,IAAIzsB,EAAQqyE,sBAAsBT,QAAQ/qB,MAAO7+C,KAAKwsC,IAAImtC,IAEnEA,EAAO,IAER7hE,EADAywE,EACQvoF,KAAKykB,IAAI8jE,EAAYle,sBAAsBT,QAAQ/qB,MAAO7+C,KAAKwsC,IAAImtC,IAGnE,GAGhB7hE,GAAS+nG,EACT9nH,KAAKwlE,YAAczlD,KAEhB/f,KAAKglH,UAChB,CACApxC,UAAAA,GAOI,OANA5zE,KAAKkjH,iBAAiBhnH,SAASgnH,IAC3BA,EAAiBj5G,MAAM/N,SAAS+uC,GAAOA,EAAG2oC,kBAE9C5zE,KAAKgjH,aAAaC,KAAK/mH,SAAS4mF,IAC5B9iF,KAAKgjH,aAAanpH,IAAIipF,GAAMlP,gBAEzB5zE,IACX,CACAqmG,UAAAA,CAAWtgC,GAGP,OAFA/lE,KAAKokH,uBAAuBr+C,GAC5B/lE,KAAK+iH,kBAAmB,EACjB/iH,IACX,CACAmiE,MAAAA,CAAO4D,EAAQ68C,EAAc3vG,GACzB,MAAMgvG,EAAO/mH,OAAOK,OAAO,CAAEqmH,YAAY,GAAS3uG,GAClDjT,KAAK+lE,OAASA,EACd,MAAMm+B,EAAgBlkG,KAAKyiH,iBAAiBve,cAS5C,OARIA,GACAlkG,KAAK+lE,OAAO7pE,SAASgD,GAAMA,EAAE8lG,iBAAiBd,KAElDlkG,KAAK4hH,WAAW77C,EAAQk8C,EAAKL,YAC7B5hH,KAAKyjH,mBAAmB19C,GACxB/lE,KAAK0zE,UAAUkvC,EAAcX,EAAKhiH,QAAS8lE,EAAQk8C,EAAKz5D,OACpDy5D,EAAKz5D,OACLxoD,KAAK4zE,aACF5zE,IACX,CACA6hH,aAAAA,CAAc97C,EAAQvd,EAAOu/D,GACzB,MAAM90G,EAAU/X,OAAOK,OAAO,CAAE0E,QAASuoD,EAAMxE,cAAgB+jE,GACzDnF,EAAep6D,EAAMqyD,cAAgBryD,EAAM0vB,gBAAkBngC,GAAM2hE,eAEzE,OAhjBR,WAAoB,QAAA7nE,EAAA50C,UAAAC,OAAN40C,EAAI,IAAAhxC,MAAA+wC,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA90C,UAAA80C,GACVq0D,GAAUlkC,OACVtlD,EAAI,oBAAqBk1B,EACjC,CA4iBQ5wC,CAAE,+BAAgC0hH,GAC3B5iH,KAAKmiE,OAAO4D,EAAQ68C,EAAc3vG,EAC7C,CACAo1C,cAAAA,CAAey6B,GACX,IAAIhtC,EACJ,OAAoC,QAA5BA,EAAK91C,KAAKgjH,oBAAiC,IAAPltE,OAAgB,EAASA,EAAGj8C,IAAIipF,EAChF,EAEJsjB,GAAUlkC,OAAQ,EChmBlB,MAAM8lD,GAAY,uEACX,MAAM9tB,WAAkBoB,GAC3B,mBAAW5oD,GACP,MAAO,WACX,CACA/xC,WAAAA,CAAYsnH,GACR,IAAKA,EACD,MAAM,IAAI72E,EAAa,eAAgB42E,IAE3C,IAAIpyC,EACJ,GAAyB,kBAAdqyC,EACPryC,EAAa,CAAEjc,SAAUsuD,OAExB,IAAyB,kBAAdA,EAIZ,MAAM,IAAI72E,EAAa,eAAgB42E,IAHvCpyC,EAAaqyC,CAIjB,CACA52E,MAAMukC,GACN51E,KAAK+kD,SAAS,EAClB,CACA+hB,MAAAA,GACI,OAAO,CACX,CACA/d,QAAAA,CAASP,GAEL,OADAnX,MAAM0X,SAASP,GACRxoD,IACX,CACAuzE,oBAAAA,CAAqBtoC,GACjB,OAAOjrC,IACX,CACA0zE,SAAAA,GAEI,OADA1zE,KAAK2zE,cAAe,EACb3zE,IACX,CACAmjD,IAAAA,GACInjD,KAAKyjD,cACL,IAAK,IAAI7nD,EAAI,EAAGA,EAAIoE,KAAKuxE,UAAUr0E,SAAUtB,EAAG,CAC5C,MAAM0rE,EAAWtnE,KAAKuxE,UAAU31E,GrDtBPkjE,EqDuBRwI,ErDvBwB,gBqDwBrCA,EAASrjB,WAAWjkD,KAAKgkD,cACzBsjB,EAASvkB,gBAEjB,CACJ,EC/CG,MAAMmlE,WAAkB/zC,GAC3B,mBAAWzhC,GACP,MAAO,WACX,CACA/xC,WAAAA,CAAY63C,EAAOo9B,EAAY3iE,GAC3Bo+B,MAAMukC,GACN51E,KAAKiT,QAAU/X,OAAOK,OAAO,CAAEo2E,aAAa,EAAO3/B,KAAM,GAAK/+B,GAC9DjT,KAAK2xE,YAAc3xE,KAAKiT,QAAQ0+D,YAChC3xE,KAAKmoH,SAAS3vE,EAClB,CACA2vE,QAAAA,CAAS3vE,GAEL,OADAx4C,KAAKupB,KAAOivB,EACLx4C,IACX,CACA0zE,SAAAA,GAKI,OAJK1zE,KAAK2zE,cAAgB3zE,KAAK0nD,iBAC3B1nD,KAAK0nD,gBAAgBgsB,YAEzB1zE,KAAK2zE,cAAe,EACb3zE,IACX,CACAo7F,aAAAA,GACI,MAAMp4C,EAAMhjD,KAAKijD,eACjB,IAAK,IAAIrnD,EAAI,EAAGA,EAAIoE,KAAKuxE,UAAUr0E,OAAQtB,IAAK,CAC5C,MAAM0rE,EAAWtnE,KAAKuxE,UAAU31E,GAChC0rE,EAASrjB,WAAWjB,GACpBskB,EAASvkB,eACb,CACJ,CACAI,IAAAA,GACI,MAAMqF,EAAQxoD,KAAK0tE,aACb1qB,EAAMwF,EAAMvF,eAClBjjD,KAAKyjD,cACLT,EAAI0nB,UAAU,YAAa1qE,KAAKw/C,aAAa,OAC7Cx/C,KAAKZ,EAAIY,KAAKwyE,kBAAoBxyE,KAAKk0E,eAAiBl0E,KAAK6kD,WAAa,EAAI7kD,KAAKk0E,eACnFl0E,KAAKX,EAAImpD,EAAMsa,YAAY9iE,KAAKiT,QAAQ++B,MACxChyC,KAAKslD,WAAWtC,EAAK,EAAG,GACxBhjD,KAAKo7F,gBACLp4C,EAAI8nB,YACR,ECpCG,MAAMzzB,WAAkB8iD,GAC3B,mBAAWznD,GACP,MAAO,WACX,CACA,6BAAWsqD,GACP,OAAO,CACX,CACAr8F,WAAAA,CAAYi1E,GACRvkC,MAAMn2C,OAAOK,OAAO,CAAEi7E,SAAUn/B,GAAU2lD,oBAAsBpnB,IAChE51E,KAAKooH,MAAQxyC,EAAWwyC,QAAS,EACjCpoH,KAAKimG,MAAO,EACZjmG,KAAK0+F,iBACL1+F,KAAKjH,MAAQ,CACjB,CACAgjG,gBAAAA,GACI,GAAI/7F,KAAKq8F,sBACL,OAAOr8F,KAAKq8F,sBAEhB,IAAIgsB,EAAMh3E,MAAM0qD,mBAEhB,OADAssB,EAAM1vE,EAAKmvB,OAAS9nE,KAAK0kD,eAAiB/L,EAAKmvB,OAASugD,EACjDA,CACX,CACAllE,IAAAA,GACI9R,MAAM8R,OACNnjD,KAAKyjD,cACL,MAAMgc,EAAOz/D,KAAKy/D,KAClB,GAAIz/D,KAAKooH,OAAS3oD,EAAM,CACpB,MAAMhQ,EAAQzvD,KAAK0kD,eACnB,IAAI4jE,EACJ,MAAMhxC,EAAOt3E,KAAKs3E,KAClB,GAAIA,EACKA,EAAKzD,eACNyD,EAAK1D,aAET00C,EAAYtoH,KAAKuoH,yBAAyB,EAAI94D,EAAO,EAAIA,EAAO,CAC5DgQ,KAAM,EAAIhQ,EACV6nB,KAAM,EAAI7nB,QAGb,CACD,MAAMoZ,EAAgB7oE,KAAK6rE,mBACrB28C,EAAiBxoH,KAAKg/F,oBACtBypB,EAAgBzoH,KAAKigG,UAAU,GAAGp7C,WAClCzlD,EAAIypE,IAAkBlwB,EAAKivB,KAAO5nE,KAAKk0E,eAAiBl0E,KAAKk0E,eAAiBu0C,EAC9EC,EAAkBtvD,EAAOiG,YAAc5P,EAAS,EAChDpwD,EAAIwpE,IAAkBlwB,EAAKivB,KAAO4gD,EAAe7/C,QAAU+/C,EAAiBF,EAAe9/C,KAAOggD,EAEpGJ,EADAz/C,IAAkBlwB,EAAKivB,KACX,CACRqN,GAAI71E,EAAIqpH,EACRze,GAAI3qG,EAAIopH,EACRvzC,GAAI91E,EAAIqpH,EACRxe,GAAI5qG,EAAIopH,GAIA,CACRxzC,GAAI71E,EAAIqpH,EACRze,GAAI3qG,EAAIopH,EACRvzC,GAAI91E,EAAIqpH,EACRxe,GAAI5qG,EAAIopH,EAGpB,CACA,MAAMzlE,EAAMhjD,KAAKijD,eACjBD,EAAIH,aAAa,EAAI4M,GACrBzM,EAAI2nB,YACJ3nB,EAAI4nB,OAAO09C,EAAUrzC,GAAIqzC,EAAUte,IACnChnD,EAAI6nB,OAAOy9C,EAAUpzC,GAAIozC,EAAUre,IACnCjnD,EAAIqyB,YACJryB,EAAIz5C,QACR,CACJ,CACAg/G,wBAAAA,CAAyBI,EAAiBC,EAAiBC,GACvD,MAAMvxC,EAAOt3E,KAAKs3E,KAClB,IAAKA,EACD,MAAM,IAAIlmC,EAAa,SAAU,mCACrC,MAAM03E,EAAYxxC,EAAK+H,MAEjB2pB,EADgB1xB,EAAK1c,MAAM0c,EAAK1c,MAAM19D,OAAS,KAAO8C,MAC5B,EAAI,EAC9B+oH,EAAY9gH,KAAK+gH,KAAKF,EAAY9f,GAClCigB,EACEhhH,KAAKkiG,IAAI4e,GAAaH,EADxBK,EAEEhhH,KAAKoiG,IAAI0e,GAAaH,EAE9BD,GAAmB3oH,KAAK6rE,mBACxB,MAAMq9C,EAAajhH,KAAK+gH,MAAMC,EAAkBN,GAAmBM,GAC7DE,EAAuBlhH,KAAKkiG,IAAI+e,GAAcL,EAAYppD,KAAOupC,EACjEogB,EAAuBnhH,KAAKoiG,IAAI6e,GAAcL,EAAYppD,KAC1D4pD,EAAuBphH,KAAKkiG,IAAI+e,GAAcL,EAAYvxC,KAAO0xB,EACjEsgB,EAAuBrhH,KAAKoiG,IAAI6e,GAAcL,EAAYvxC,KAC1DhN,EAAQtqE,KAAKwtE,WACb+7C,EAASjyC,EAAK1c,MAAM,GAAG4S,WACvBjD,EAAQ+M,EAAK8K,kBAAoB9X,EAAQi/C,GAAUT,EAOzD,MANY,CACR7zC,GAAI3K,EAAQ6+C,EACZnf,GAAIz/B,EAAQo+C,EAAkBS,EAC9Bl0C,GAAI5K,EAAQ2+C,EAAkBjgB,EAASqgB,EACvCpf,GAAI1/B,EAAQ0+C,EAAkBK,EAGtC,ECtGG,MAAME,WAAmBr1C,GAC5B,mBAAWzhC,GACP,MAAO,YACX,CACA/xC,WAAAA,CAAYg6D,EAAS+1C,EAAeC,GAChCt/D,MAAM,CAAEsoB,SAAU,MAClB35D,KAAKqvD,aAAe,IAAIohD,GAAa91C,EAAS+1C,EAAeC,GAC7D3wG,KAAK2xE,aAAc,CACvB,CACA4B,oBAAAA,CAAqBtoC,GACjB,OAAOjrC,IACX,CACA0zE,SAAAA,GAII,OAHA1zE,KAAK2zE,cAAe,EACpB3zE,KAAKqvD,aAAatG,SAAS/oD,KAAK0tE,cAChC1tE,KAAK+kD,SAAS/kD,KAAKqvD,aAAaxK,YACzB7kD,IACX,CACAmjD,IAAAA,GACI,MAAMH,EAAMhjD,KAAK0tE,aAAazqB,eAC9BjjD,KAAKyjD,cACLzjD,KAAKqvD,aAAanV,KAAKl6C,KAAKk0E,gBAC5Bl0E,KAAKqvD,aAAapL,WAAWjB,GAC7BhjD,KAAKqvD,aAAatM,eACtB,ECnBG,MAAM0mE,WAAyBppE,EAClC,mBAAW3N,GACP,MAAO,kBACX,CACA/xC,WAAAA,CAAY+oH,EAAkBz2G,GAC1B,IAAI6iC,EACJzE,QACArxC,KAAK2pH,GAAK,CAAEn8F,KAAMs7E,IAAKhiD,MAAOgiD,KAC9B9oG,KAAK4pH,gBAAiB,EACtB5pH,KAAK6pH,iBAAkB,EACvB7pH,KAAK8pH,kBAAmB,EACxB9pH,KAAK+pH,kBAAmB,EACxB,MAAMpgH,EAA+C,QAAnCmsC,EAAK7iC,EAAQ+2G,wBAAqC,IAAPl0E,EAAgBA,EAAKhB,EAAQxjC,IAAI,6BAC9FtR,KAAKq8C,SAASrX,KAAOr7B,EACrB3J,KAAK0pH,iBAAmBA,EACxB1pH,KAAKupB,KAAO,GACZ,MAAMvqB,EAAI,GAAHkK,OAAMlJ,KAAK0pH,kBAClB,IAAK,MAAMO,KAASjrH,EAChBgB,KAAKupB,MAAQ9tB,OAAOmgG,cAAc,MAAShpD,OAAOq3E,IAEtDjqH,KAAK4pH,eAAgD,kBAAxB32G,EAAQqnE,YACrCt6E,KAAK6pH,gBAAkD,kBAAzB52G,EAAQsnE,aACtCv6E,KAAK8pH,iBAAoD,kBAA1B72G,EAAQi3G,cACvClqH,KAAK+pH,iBAAoD,kBAA1B92G,EAAQk3G,cACvCnqH,KAAK+rE,cAAgB7wE,OAAOK,OAAO,CAAE6uH,YAAY,EAAOC,YAAY,EAAMC,YAAa,GAAKN,iBAAkBrgH,EAAUqoC,KAAM,EAAGgoE,sBAAuB5gD,EAAOiH,oBAAqBkqD,eAAgB,EAAGC,wBAAyB11E,EAAQxjC,IAAI,YAAagpE,YAAa,EAAGC,aAAc,EAAG2vC,cAAe,EAAGC,cAAe,GAAKl3G,EACpU,CACAw3G,KAAAA,GACI,OAAOzqH,KAAK2pH,EAChB,CACA5gE,QAAAA,CAASP,GAEL,OADAxoD,KAAKwoD,MAAQA,EACNxoD,IACX,CACAyoD,QAAAA,GACI,OAAOzoD,KAAKwoD,KAChB,CACAklB,UAAAA,GACI,OAAO/7B,EAAQ3xC,KAAKwoD,MAAO,UAAW,iCAC1C,CACAkiE,QAAAA,CAASliE,EAAOxF,EAAKx1B,EAAMs5B,GACvB,MAAM7zC,EAAUjT,KAAK+rE,cACf1sE,EAAImpD,EAAMsa,YAAY7vD,EAAQ++B,MAC9BgG,EAA2B,IAAhB8O,EAAQt5B,GACzBA,GAAQwqB,EACR8O,GAAS9O,EACT,IAAI4yD,EAAM,SACV,MAAM7+D,EAAK,IAAIsU,EACftU,EAAGqZ,QAAQwlD,GACX,MAAM+f,EAAU5+E,EAAG8Y,WACnB,IAAK8lE,EACD,MAAM,IAAIv5E,EAAa,iCAE3B,IAAK,IAAIx1C,EAAI,GAAIA,EAAI,GAAK+uH,EAAUn9F,GAAQs5B,EAAOlrD,IAC/CgvG,GAAO,SAEXA,GAAO,SACP7+D,EAAGqZ,QAAQwlD,GACX7+D,EAAGuZ,WAAWtC,EAAKx1B,EAAwB,IAAhBs5B,EAAQt5B,GAA8B,GAAhBue,EAAG8Y,WAAkBxlD,EAC1E,CACAurH,WAAAA,CAAYpiE,EAAOxF,EAAKx1B,EAAMs5B,GAC1B,MAAM+jE,EAAK5iH,KAAKC,MAAMlI,KAAK0pH,iBAAmB,GACxC5tH,EAAIkE,KAAK0pH,iBAAmB,EAC5BoB,EAAK7iH,KAAKC,MAAMpM,EAAI,GACpBivH,EAAKjvH,EAAI,EACTmX,EAAUjT,KAAK+rE,cACfi/C,EAAW,IAAI3qE,EACrB,IAAIuqD,EAAM,GACV,IAAK,IAAIhvG,EAAI,EAAGA,EAAIivH,IAAMjvH,EACtBgvG,GAAOzkD,EAAO8kE,UAAY,IAE9B,IAAK,IAAIrvH,EAAI,EAAGA,EAAIkvH,IAAMlvH,EACtBgvG,GAAOzkD,EAAO0X,gBAAkB,IAEpCmtD,EAAS5lE,QAAQwlD,GACjB,MAAMsgB,EAAQ,IAAI7qE,EAClBuqD,EAAM,GACN,IAAK,IAAIhvG,EAAI,EAAGA,EAAImvH,IAAMnvH,EACtBgvG,GAAOzkD,EAAO2X,UAAY,IAE9BotD,EAAM9lE,QAAQwlD,GAEd,IAAIxrG,EAAIouB,EAAwB,IAAhBs5B,EAAQt5B,GAAsB,IADhCw9F,EAASnmE,WAAaqmE,EAAMrmE,YAE1C,MAAM7S,EAAO/+B,EAAQ++B,KACf02B,EAAOlgB,EAAMsa,YAAY9wB,EAAO,GAChCm5E,EAAU3iE,EAAMsa,YAAY9wB,GAClCg5E,EAAS1lE,WAAWtC,EAAK5jD,EAAG+rH,GAC5B/rH,GAAK4rH,EAASnmE,WACdqmE,EAAM5lE,WAAWtC,EAAK5jD,EAAGspE,GACzBtpE,GAAK8rH,EAAMrmE,UACf,CACA1B,IAAAA,GACI,MAAMH,EAAMhjD,KAAKijD,eACjBjjD,KAAKyjD,cACL,MAAM+E,EAAQxoD,KAAK0tE,aACnB,IAAIlgD,EAAOg7B,EAAM0vB,gBACbpxB,EAAQ0B,EAAMqyD,cAClB,MAAMkC,EAAev0D,EAAM6e,aAAamR,GAAsBgC,OAClC,IAAxBuiC,EAAa7/G,QAAgB0kE,EAAUm7C,EAAa,MACpDvvF,GAAQuvF,EAAa,GAAGl4D,YAE5B,MAAM5xC,EAAUjT,KAAK+rE,cACjB/rE,KAAK4pH,iBACLp8F,EAAOg7B,EAAM1O,OAAS7mC,EAAQqnE,aAE9Bt6E,KAAK6pH,kBACL/iE,EAAQ0B,EAAM1O,OAAS0O,EAAM3D,WAAa5xC,EAAQsnE,cAEtDv6E,KAAK2pH,GAAGn8F,KAAOA,EACfxtB,KAAK2pH,GAAG7iE,MAAQA,EACZ7zC,EAAQm3G,WACRpqH,KAAK4qH,YAAYpiE,EAAOxF,EAAKx1B,EAAMs5B,GAGnC9mD,KAAK0qH,SAASliE,EAAOxF,EAAKx1B,EAAMs5B,GAEhC7zC,EAAQo3G,YACRrqH,KAAKslD,WAAWtC,EAAKx1B,EAAwB,IAAhBs5B,EAAQt5B,GAA2B,GAAbxtB,KAAKjH,MAAayvD,EAAMsa,YAAY7vD,EAAQq3G,YAA4B,GAAdtqH,KAAK4mB,OAE1H,ECrHG,MAAM6wB,WAAqB4I,EAC9B,mBAAW3N,GACP,MAAO,cACX,CACA,oBAAO04E,CAAcxwD,GAEjB,OADc,IAAInjB,GAAamjB,EAEnC,CACA,sBAAOywD,CAAgBzwD,GACnB,MAAM0wD,EAAQ,IAAI7zE,GAAamjB,GAG/B,OAFA0wD,EAAM7wC,QAAQhjC,GAAaj5C,KAAK+sH,OAChCD,EAAME,cAAc,cACbF,CACX,CACA,qBAAOG,CAAe7wD,GAClB,MAAM0wD,EAAQ,IAAI7zE,GAAamjB,GAG/B,OAFA0wD,EAAM7wC,QAAQhjC,GAAaj5C,KAAKktH,MAChCJ,EAAME,cAAc,YAAa,aAC1BF,CACX,CACA3qH,WAAAA,CAAYi6D,GACRvpB,QACArxC,KAAK46D,MAAQA,EACb56D,KAAKxB,KAAOi5C,GAAaj5C,KAAKktH,KAC9B1rH,KAAKgyC,KAAO,EACZhyC,KAAK2rH,YAAcl0E,GAAam+D,OAAOgW,aACvC5rH,KAAK6rH,YAAcp0E,GAAam+D,OAAOkW,aACvC9rH,KAAK+rE,cAAgB,CACjBggD,cAAe,GACfC,gBAAiB,EACjBC,iBAAkB,EAClBnjG,MAAO,QAEf,CACA2xD,OAAAA,CAAQj8E,GAKJ,OAJAA,EAAuB,kBAATA,EAAoBi5C,GAAawhC,WAAWz6E,GAAQA,IACtDi5C,GAAaj5C,KAAKktH,MAAQltH,GAAQi5C,GAAaj5C,KAAK+sH,QAC5DvrH,KAAKxB,KAAOA,GAETwB,IACX,CACAwrH,aAAAA,CAAcU,EAASC,GAInB,OAHAnsH,KAAK2rH,YAAcO,GAAW,GAC9BlsH,KAAK6rH,YAAcM,GAAW,GAC9BnsH,KAAKkkD,QAAQpP,EAAQI,YAAY,sBAC1Bl1C,IACX,CACAowF,OAAAA,CAAQp+C,GAEJ,OADAhyC,KAAKgyC,KAAOA,EACLhyC,IACX,CACAosH,aAAAA,GACI,MAAMppE,EAAMhjD,KAAKijD,eACjB,IACIopE,EACAC,EAFAC,GAAmB,EAGnBnyD,EAAY,EAChBp6D,KAAK46D,MAAM1+D,SAAQ,CAAC6N,EAAMhQ,EAAO6gE,KAC7B,IAAI9kB,EAAI6J,EAAIooB,EAAIC,EAChBukD,GAAoBA,EACpB,MAAMntH,EAAI2K,EAAKmqE,eACT70E,EAAI0K,EAAK2jE,aAAaK,kBAAkB/tE,KAAKgyC,KAAO,GAC1D,GAAI5yC,EAAIitH,EACJ,MAAM,IAAIj7E,EAAa,uBAAwB,gEAEnD,MAAMo7E,EAAiB5xD,EAAM7gE,EAAQ,KAAOgQ,EACtC0iH,EAAiB7xD,EAAM7gE,EAAQ,KAAOgQ,EAC5C,IAAI+3C,EAAS,EACb,GAAIyqE,EACAzqE,EAAS2qE,EAAiB,EAAI,EAC1BzsH,KAAKxB,OAASi5C,GAAaj5C,KAAK+sH,OAAUkB,GAM1CzpE,EAAI2nB,YACJ3nB,EAAI4nB,OAAOxrE,EAAGC,EAAIW,KAAK+rE,cAAcggD,eACrC/oE,EAAI6nB,OAAOzrE,EAAI0iD,EAAQziD,GACvB2jD,EAAIz5C,SACJy5C,EAAIqyB,cATJjb,EAAYpX,EAAI8B,YAAY9kD,KAAK2rH,aAAa5yH,MAC9CiqD,EAAIyC,SAASzlD,KAAK2rH,YAAavsH,EAAGC,GAClCyiD,EAASsY,EAAYp6D,KAAK+rE,cAAcigD,qBAU3C,CACD,MAAMU,EAAU3iH,EAAK4oE,WAAWvM,eAAejsE,QAAQ4P,GAEjD4iH,EAAWD,EAAU,EADR3iH,EAAK4oE,WAAWvM,eAAelpE,OAG1C6M,EAAK4oE,WAAWvM,eAAesmD,EAAU,GAAGx4C,gBAEsC,QAAhFv0B,EAAgC,QAA1B7J,EAAK/rC,EAAK0+C,kBAA+B,IAAP3S,OAAgB,EAASA,EAAGgE,cAA2B,IAAP6F,EAAgBA,EAAK,IAA2F,QAApFqoB,EAAgC,QAA1BD,EAAKh+D,EAAK0+C,kBAA+B,IAAPsf,OAAgB,EAASA,EAAGljB,kBAA+B,IAAPmjB,EAAgBA,EAAK,GAC/OhlB,EAAI2nB,YACJ3nB,EAAI4nB,OAAOyhD,EAAOC,GAClBtpE,EAAI6nB,OAAO2hD,EAAiBptH,EAAI,EAAIutH,EAAW,EAAGttH,GAClD2jD,EAAI6nB,OAAO2hD,EAAiBptH,EAAIutH,EAAW,EAAGttH,EAAIW,KAAK+rE,cAAcggD,eACrE/oE,EAAIz5C,SACJy5C,EAAIqyB,WACR,CACAg3C,EAAQjtH,EAAI0iD,EACZwqE,EAAQjtH,IAEhB,CACAutH,QAAAA,GACI,MAAM5pE,EAAMhjD,KAAKijD,eACjB,IAAIspE,GAAmB,EACnBnyD,EAAY,EAChBp6D,KAAK46D,MAAM1+D,SAAS6N,IAChB,IAAI+rC,EAAI6J,EAAIooB,EAAIC,EAChBukD,GAAoBA,EACpB,MAAM/jE,EAAQz+C,EAAK2jE,aACbtuE,EAAI2K,EAAKmqE,eACT70E,EAAImpD,EAAMulB,kBAAkB/tE,KAAKgyC,KAAO,GAC9C,GAAIu6E,EACAnyD,EAAYpX,EAAI8B,YAAY9kD,KAAK2rH,aAAa5yH,MAC9CiqD,EAAIyC,SAASzlD,KAAK2rH,YAAavsH,EAAGC,OAEjC,CACD,MAAMqtH,EAAU3iH,EAAK4oE,WAAWvM,eAAejsE,QAAQ4P,GAEjD4iH,EAAWD,EAAU,EADR3iH,EAAK4oE,WAAWvM,eAAelpE,OAG1C6M,EAAK4oE,WAAWvM,eAAesmD,EAAU,GAAGx4C,gBAEsC,QAAhFv0B,EAAgC,QAA1B7J,EAAK/rC,EAAK0+C,kBAA+B,IAAP3S,OAAgB,EAASA,EAAGgE,cAA2B,IAAP6F,EAAgBA,EAAK,IAA2F,QAApFqoB,EAAgC,QAA1BD,EAAKh+D,EAAK0+C,kBAA+B,IAAPsf,OAAgB,EAASA,EAAGljB,kBAA+B,IAAPmjB,EAAgBA,EAAK,GAC/O5N,EAAYpX,EAAI8B,YAAY9kD,KAAK6rH,aAAa9yH,MAC9CiqD,EAAIyC,SAASzlD,KAAK6rH,YAAac,EAAWvyD,EAAW/6D,EACzD,IAER,CACA8jD,IAAAA,GACI,MAAMH,EAAMhjD,KAAKijD,eACjBjjD,KAAKyjD,cACLT,EAAIJ,eAAe5iD,KAAK+rE,cAAcjjD,OACtCk6B,EAAIL,aAAa3iD,KAAK+rE,cAAcjjD,OACpCk6B,EAAIkB,QAAQlkD,KAAKm1C,MA1IzB,WAAoB,QAAAtD,EAAA50C,UAAAC,OAAN40C,EAAI,IAAAhxC,MAAA+wC,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA90C,UAAA80C,GACV0F,GAAayqB,OACbtlD,EAAI,uBAAwBk1B,EACpC,CAwIQ5wC,CAAE,2BACElB,KAAKxB,OAASi5C,GAAaj5C,KAAK0hH,SAAWlgH,KAAKxB,OAASi5C,GAAaj5C,KAAK+sH,OAC3EvoE,EAAIH,aAAa7iD,KAAK+rE,cAAckgD,kBACpCjsH,KAAKosH,iBAEApsH,KAAKxB,OAASi5C,GAAaj5C,KAAKktH,MACrC1rH,KAAK4sH,UAEb,EAEJn1E,GAAayqB,OAAQ,EACrBzqB,GAAam+D,OAAS,CAClBgW,aAAczlE,EAAOkwD,iBACrByV,aAAc3lE,EAAOowD,iBAEzB9+D,GAAaj5C,KAAO,CAChBktH,KAAM,EACNxL,QAAS,EACTqL,MAAO,GAEX9zE,GAAawhC,WAAa,CACtB1vD,KAAMkuB,GAAaj5C,KAAKktH,KACxB9K,QAASnpE,GAAaj5C,KAAK0hH,QAC3B2M,MAAOp1E,GAAaj5C,KAAK+sH,OCpK7B,MAAMuB,GAAQ,CACV,EAAK3mE,EAAO4mE,WACZ,EAAK5mE,EAAO6mE,YACZ,EAAK7mE,EAAO8mE,YACZ7E,MAAOjiE,EAAO+mE,gBAEX,MAAMC,WAAmBjF,GAC5B,mBAAWx1E,GACP,MAAO,YACX,CACA/xC,WAAAA,CAAYnC,EAAMo3E,EAAY3iE,GAE1Bo+B,MADkBy7E,GAAMtuH,IAAS,SAChBtD,OAAOK,OAAO,CAAEo+D,SAAU,IAAK8X,YAAsB,UAATjzE,GAAoBo3E,GAAa3iE,EAClG,ECXJ,SAASm6G,GAAcpqE,EAAKknD,EAAIE,EAAIn1B,EAAI+0B,EAAI90B,EAAI+0B,GAC5CjnD,EAAI2nB,YACJ3nB,EAAI4nB,OAAOs/B,EAAIE,GACfpnD,EAAI6nB,OAAOoK,EAAI+0B,GACfhnD,EAAI6nB,OAAOqK,EAAI+0B,GACfjnD,EAAI6nB,OAAOq/B,EAAIE,GACfpnD,EAAIqyB,YACJryB,EAAIp5C,MACR,CACO,MAAMyuC,WAAkBgI,EAC3B,mBAAW3N,GACP,MAAO,WACX,CACA/xC,WAAAA,CAAYi6D,GACRvpB,QACArxC,KAAKuxF,SAAS32B,GACd56D,KAAKupB,KAAO,GACZvpB,KAAK+rE,cAAgB,CACjBuO,YAAa,EACbC,aAAc,EACd7kC,UAAW,EACXC,cAAU94C,EACVwwH,YAAY,EACZvkG,WAAOjsB,EACPywH,gBAAgB,EAChBC,cAAc,EACdC,gBAAiB,GACjBC,eAAgBxlH,KAAKoqC,GAAK,EAC1Bq7E,qBAAsBr1E,GAAUs1E,qBAAqBrhD,IACrDshD,kBAAmBv1E,GAAU4yD,kBAAkBzkD,OAEvD,CACApB,OAAAA,CAAQ77B,GAEJ,OADAvpB,KAAKupB,KAAOA,EACLvpB,IACX,CACAuxF,QAAAA,CAAS32B,GACL,IAAKA,EAAMkmB,YAAclmB,EAAMomB,SAC3B,MAAM,IAAI5vC,EAAa,eAAgB,yDAM3C,GAJKwpB,EAAM+nC,eACP/nC,EAAM+nC,aAAe,CAAC,IACrB/nC,EAAMgoC,cACPhoC,EAAMgoC,YAAc,CAAC,IACrBhoC,EAAM+nC,aAAazlG,SAAW09D,EAAMgoC,YAAY1lG,OAChD,MAAM,IAAIk0C,EAAa,eAAgB,qDAO3C,OALApxC,KAAK46D,MAAQA,EACb56D,KAAK8gF,UAAYlmB,EAAMkmB,UACvB9gF,KAAK2iG,aAAe/nC,EAAM+nC,aAC1B3iG,KAAKghF,SAAWpmB,EAAMomB,SACtBhhF,KAAK4iG,YAAchoC,EAAMgoC,YAClB5iG,IACX,CACA6tH,cAAAA,GACI,MAAM7qE,EAAMhjD,KAAKijD,eACX8oB,EAAgB/rE,KAAK+rE,cACvBA,EAAcp2B,UACdqN,EAAIF,YAAYipB,EAAcp2B,UAE9Bo2B,EAAcr2B,WACdsN,EAAIH,aAAakpB,EAAcr2B,WAE/Bq2B,EAAcshD,WACdrqE,EAAI6kC,WAAW,SAGf7kC,EAAI6kC,WAAW,SAEvB,CACAimC,aAAAA,CAAc9qE,EAAK+qE,EAAKC,GACpB,MAAMC,EAAajuH,KAAK+rE,cAAcuhD,gBAAkBttH,KAAK+rE,cAAcwhD,aACrEt4C,EAAK84C,EAAI3uH,EACT4qG,EAAK+jB,EAAI1uH,EACT61E,EAAK84C,EAAI5uH,EACT6qG,EAAK+jB,EAAI3uH,EACT6uH,EAAWjmH,KAAK2/E,MAAM1S,EAAKD,IAAOC,EAAKD,IAAOg1B,EAAKD,IAAOC,EAAKD,IAC/DmkB,GAASD,EAAWluH,KAAK+rE,cAAcyhD,gBAAkB,GAAKU,EACpE,IAAIx9B,EACA09B,EACAnmB,EACAomB,EACAruH,KAAK+rE,cAAcwhD,cAAgBU,GACnCv9B,EAAOzoF,KAAK+6D,MAAMiS,GAAMC,EAAKD,GAAMk5C,GACnCC,EAAOnmH,KAAK+6D,MAAMgnC,GAAMC,EAAKD,GAAMmkB,KAGnCz9B,EAAOxb,EACPk5C,EAAOnkB,GAEPjqG,KAAK+rE,cAAcuhD,gBAAkBW,GACrChmB,EAAShzB,GAAMC,EAAKD,IAAO,EAAIk5C,GAC/BE,EAASrkB,GAAMC,EAAKD,IAAO,EAAImkB,KAG/BlmB,EAAShzB,EACTo5C,EAASrkB,GAEThqG,KAAK+rE,cAAcjjD,QACnBk6B,EAAIJ,eAAe5iD,KAAK+rE,cAAcjjD,OACtCk6B,EAAIL,aAAa3iD,KAAK+rE,cAAcjjD,QAExCk6B,EAAI2nB,YACJ3nB,EAAI4nB,OAAOq9B,EAAQomB,GACnBrrE,EAAI6nB,OAAO6lB,EAAM09B,GACjBprE,EAAIz5C,SACJy5C,EAAIqyB,YACJ,MAAMi5C,EAAYrmH,KAAKukG,MAAMvC,EAAKD,EAAI90B,EAAKD,GACrC32E,EAAI2J,KAAKwsC,IAAIz0C,KAAK+rE,cAAcyhD,gBAAkBvlH,KAAKkiG,IAAInqG,KAAK+rE,cAAc0hD,iBACpF,IAAIc,EACAC,EACAvQ,EACAl0C,EACA0kD,EACAC,GACA1uH,KAAK+rE,cAAcwhD,cAAgBU,KACnCM,EAASD,EAAYrmH,KAAKoqC,GAAKryC,KAAK+rE,cAAc0hD,eAClDxP,EAAO/oC,EAAKjtE,KAAKkiG,IAAIokB,GAAUjwH,EAC/ByrE,EAAOkgC,EAAKhiG,KAAKoiG,IAAIkkB,GAAUjwH,EAC/BkwH,EAASF,EAAYrmH,KAAKoqC,GAAKryC,KAAK+rE,cAAc0hD,eAClDgB,EAAUv5C,EAAKjtE,KAAKkiG,IAAIqkB,GAAUlwH,EAClCowH,EAAUzkB,EAAKhiG,KAAKoiG,IAAImkB,GAAUlwH,EAClC8uH,GAAcpqE,EAAKi7D,EAAMl0C,EAAMmL,EAAI+0B,EAAIwkB,EAASC,KAEhD1uH,KAAK+rE,cAAcuhD,gBAAkBW,KACrCM,EAASD,EAAYtuH,KAAK+rE,cAAc0hD,eACxCxP,EAAOhpC,EAAKhtE,KAAKkiG,IAAIokB,GAAUjwH,EAC/ByrE,EAAOigC,EAAK/hG,KAAKoiG,IAAIkkB,GAAUjwH,EAC/BkwH,EAASF,EAAYtuH,KAAK+rE,cAAc0hD,eACxCgB,EAAUx5C,EAAKhtE,KAAKkiG,IAAIqkB,GAAUlwH,EAClCowH,EAAU1kB,EAAK/hG,KAAKoiG,IAAImkB,GAAUlwH,EAClC8uH,GAAcpqE,EAAKi7D,EAAMl0C,EAAMkL,EAAI+0B,EAAIykB,EAASC,GAExD,CACAvrE,IAAAA,GACI,MAAMH,EAAMhjD,KAAKijD,eACjBjjD,KAAKyjD,cACL,MAAMq9B,EAAY9gF,KAAK8gF,UACjBE,EAAWhhF,KAAKghF,SAChBjV,EAAgB/rE,KAAK+rE,cAC3B/rE,KAAK6tH,iBACL,IAAIc,EAAgB,CAAEvvH,EAAG,EAAGC,EAAG,GAC3BuvH,EAAc,CAAExvH,EAAG,EAAGC,EAAG,GAC7BW,KAAK2iG,aAAazmG,SAAQ,CAAC2yH,EAAYjzH,KACnC,MAAMkzH,EAAY9uH,KAAK4iG,YAAYhnG,GACnC+yH,EAAgB7tC,EAAUpZ,mBAAmB,EAAGmnD,GAChDD,EAAc5tC,EAAStZ,mBAAmB,EAAGonD,GAC7C,MAAMC,EAAeJ,EAActvH,EAAIuvH,EAAYvvH,EACnDsvH,EAAcvvH,GAAK0hF,EAAUv4B,aAAaK,WAAamjB,EAAcuO,YACrEs0C,EAAYxvH,GAAK4hF,EAASz4B,aAAaI,UAAYojB,EAAcwO,aACjE,MAAMy0C,EAAgBluC,EAAUpV,gBACToV,EAAUpe,cAAcmsD,GAAY50D,WACJ,IAAjC6mB,EAAUjV,qBAC5B8iD,EAAcvvH,GAAK4vH,EAAgBjjD,EAAcuO,aAE/B0G,EAASte,cAAcosD,GAAW70D,YACF,IAAjC+mB,EAASnV,qBAC1B+iD,EAAYxvH,GAAK4vH,EAAgBjjD,EAAcwO,cAEnDo0C,EAActvH,GAAK0vH,GAAgB,EAAI,EACvCH,EAAYvvH,GAAK0vH,EAAe,EAAI,EACpC/uH,KAAK8tH,cAAc9qE,EAAK2rE,EAAeC,MAE3C,MAAMx0D,EAAYp6D,KAAKjH,MACjBk+G,EAAgBlrC,EAAc6hD,kBACpC,IAAIxuH,EAAI,EACR,GAAI63G,IAAkB5+D,GAAU4yD,kBAAkBpkD,KAC9CznD,EAAIuvH,EAAcvvH,OAEjB,GAAI63G,IAAkB5+D,GAAU4yD,kBAAkBzkD,OAAQ,CAG3DpnD,GAFewvH,EAAYxvH,EAAIuvH,EAAcvvH,GACpB,EAAIuvH,EAAcvvH,EAC7Bg7D,EAAY,CAC9B,MACS68C,IAAkB5+D,GAAU4yD,kBAAkBlkD,QACnD3nD,EAAIwvH,EAAYxvH,EAAIg7D,GAExB,IAAI/6D,EAAI,EACR,MAAM4vH,EAAmBljD,EAAc2hD,qBACnCuB,IAAqB52E,GAAUs1E,qBAAqBrhD,IACpDjtE,EAAIyhF,EAAUpT,aAAaI,iBAEtBmhD,IAAqB52E,GAAUs1E,qBAAqBhhD,SACzDttE,EAAIyhF,EAAUpT,aAAaK,kBAAkB3U,EAAOkH,0BAExD,MAAMx3C,EAAQijD,EAAcjjD,MAC5B9oB,KAAKwiD,WAAWQ,EAAK,CAAExN,UAAW1sB,EAAO2sB,YAAa3sB,IACtD9oB,KAAKslD,WAAWtC,EAAK5jD,EAAGC,EAC5B,EAEJg5C,GAAUs1E,qBAAuB,CAC7BrhD,IAAK,EACLK,OAAQ,GAEZt0B,GAAU4yD,kBAAoBA,GChMvB,MAAMikB,WAAe7uE,EACxB,mBAAW3N,GACP,MAAO,QACX,CACA/xC,WAAAA,GAAyB,IAAb84D,EAAMx8D,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,CAAC,EAClBo0C,QACArxC,KAAKkpE,WAAWzP,GAChBz5D,KAAKmvH,WAAa,GAClBnvH,KAAKovH,eAAiB,GACtBpvH,KAAKqvH,WAAa,EACtB,CACAnmD,UAAAA,GAAyB,IAAdj2D,EAAOhW,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,CAAC,EAClB,IAAKgW,EAAQomF,QACT,MAAM,IAAIjoD,EAAa,YAAa,kDAExCpxC,KAAKq5F,QAAUpmF,EAAQomF,QACvBr5F,KAAKiT,QAAU/X,OAAOK,OAAOL,OAAOK,OAAO,CAAE89F,QAASr5F,KAAKq5F,QAASj6F,EAAG,GAAIC,EAAG,GAAItG,MAAO,IAAKu2H,mBAAoB,GAAIC,WAAW,EAAOC,iBAAiB,EAAOC,gBAAgB,EAAOC,iBAAkB,EAAGC,WAAW,GAAS18G,GAAU,CAAE28G,QAAS10H,OAAOK,OAAO,CAAEusH,MAAO,IAAO70G,EAAQ28G,SAAUC,cAAe30H,OAAOK,OAAO,CAAC,EAAG0X,EAAQ48G,kBACzS,IAAjC7vH,KAAKiT,QAAQu8G,iBAAsD,qBAAlBv8G,EAAQla,QACzDiH,KAAKiT,QAAQs8G,WAAY,EAEjC,CACAz1E,IAAAA,GACI,OAAO95C,KAAKiT,QAAQ7T,CACxB,CACA86C,IAAAA,CAAK96C,GAKD,OAJAY,KAAKiT,QAAQ7T,EAAIA,EACjBY,KAAKmvH,WAAWjzH,SAASc,IACrBA,EAAEk9C,KAAK96C,MAEJY,IACX,CACA+5C,IAAAA,GACI,OAAO/5C,KAAKiT,QAAQ5T,CACxB,CACA86C,IAAAA,CAAK96C,GAKD,OAJAW,KAAKiT,QAAQ5T,EAAIA,EACjBW,KAAKmvH,WAAWjzH,SAASc,IACrBA,EAAEm9C,KAAK96C,MAEJW,IACX,CACA8vH,SAAAA,GACI,OAAO9vH,KAAKmvH,UAChB,CACAY,SAAAA,GACI,OAAO/vH,KAAKqvH,UAChB,CACAprE,UAAAA,CAAWhkD,GAGP,OAFAoxC,MAAM4S,WAAWhkD,GACjBD,KAAKq5F,QAAQp1C,WAAWhkD,GACjBD,IACX,CACAgwH,YAAAA,GAA8B,IAAjBxxH,EAAIvB,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,SAMhB,OALA+C,KAAKiwH,UAAYjwH,KAAKq5F,QAAQjhD,eAAe,CACzCimE,SAAUr+G,KAAKmvH,WAAW,GAC1B7Q,YAAat+G,KAAKmvH,WAAWnvH,KAAKmvH,WAAWjyH,OAAS,GACtDsB,SAEGwB,KAAKiwH,SAChB,CACAC,QAAAA,CAASz2D,GACL,IAAI3jB,EACJ,MAAMq6E,EAAej1H,OAAOK,OAAO,CAAEu+G,SAAS,GAASrgD,EAAOxmD,SACxDu1C,EAAgC,QAAvB1S,EAAK2jB,EAAOjR,aAA0B,IAAP1S,EAAgBA,EAAK91C,KAAKq5F,QAAQthD,MAAM,CAAE34C,EAAGY,KAAKiT,QAAQ7T,EAAGC,EAAGW,KAAKiT,QAAQ5T,EAAGtG,MAAOiH,KAAKiT,QAAQla,MAAOka,QAASk9G,IAC5JxyH,EAAIzC,OAAOK,OAAOL,OAAOK,OAAO,CAAE60H,WAAY,EAAGC,WAAY,EAAGC,kBAAkB,EAAOd,iBAAiB,GAAS/1D,GAAS,CAAExmD,QAASk9G,IACvIntE,EAAMhjD,KAAKgkD,aAWjB,OAVArmD,EAAEooE,OAAO7pE,SAASgqE,IACdA,EACKjiB,WAAWjB,GACX+F,SAASP,GACT4d,eACAlqE,SAASwzF,GAAaA,EAAS3mC,SAASP,KAC7CxoD,KAAKqvH,WAAWxtH,KAAKqkE,MAEzBlmE,KAAKmvH,WAAWttH,KAAK2mD,GACrBxoD,KAAKovH,eAAevtH,KAAKlE,GAClB6qD,CACX,CACA+nE,SAAAA,CAAUxqD,GACN,MAAM/iB,EAAMhjD,KAAKgkD,aACjB+hB,EAAO7pE,SAASgqE,IACZA,EAAMjiB,WAAWjB,GACjBhjD,KAAKqvH,WAAWxtH,KAAKqkE,KAE7B,CACA/D,MAAAA,GACI,MAAMquD,EAAiBxwH,KAAKiT,QAAQ28G,QACpC,IAAIhN,EAAe,EACnB,MAAMzc,EAAY,IAAIC,GAAUoqB,GAChCxwH,KAAKmmG,UAAYA,EACjB,IAAI9mG,EAAIW,KAAKiT,QAAQ5T,EACjB4oG,EAAS,EACb,MAAMwoB,EAAqB,GAC3BzwH,KAAKmvH,WAAWjzH,SAAQ,CAACw0H,EAAM32H,KAC3BsF,GAAQqxH,EAAK3+C,MAAM/xE,KAAKovH,eAAer1H,GAAOq2H,YAC9CM,EAAKv2E,KAAK96C,GACVA,GAAQqxH,EAAK3+C,MAAM/xE,KAAKovH,eAAer1H,GAAOs2H,YAC9ChxH,GAAQqxH,EAAK3+C,MAAM/xE,KAAKiT,QAAQq8G,oBAC5BtvH,KAAKovH,eAAer1H,GAAOu2H,mBAC3BG,EAAmB5uH,KAAK,CAAExC,IAAGmpD,MAAOkoE,IACpCrxH,GAAK,IAET4oG,EAAShgG,KAAK2yC,IAAIqtD,EAAQyoB,EAAKx4C,oBAEnCl4E,KAAKqvH,WAAWnzH,SAASgqE,IACrBA,EAAME,eAAelqE,SAASwzF,IAC1B,MAAMlnC,EAAQknC,EAASjnC,WACnBD,GACAknC,EAAS3mC,SAASP,SAG9B29C,EAAUE,WAAWrmG,KAAKqvH,YAC1BrvH,KAAKmvH,WAAWjzH,SAASw0H,GAASA,EAAK9V,cAAc3S,KACjDjoG,KAAKiT,QAAQs8G,WAAavvH,KAAKqvH,WAAWnyH,OAAS,GACnD0lH,EAAezc,EAAUid,0BAA0BpjH,KAAKqvH,YACxDrvH,KAAKiT,QAAQla,MAAQ6pH,EAAe7qE,GAAMgB,cAAgBkvD,EAASjoG,KAAKiT,QAAQ7T,GAChFY,KAAKmvH,WAAWjzH,SAASw0H,IACrBA,EAAK3rE,SAAS/kD,KAAKiT,QAAQla,WAI/B6pH,EAAe5iH,KAAKiT,QAAQ08G,UACtB3vH,KAAKiT,QAAQla,OAASkvG,EAASjoG,KAAKiT,QAAQ7T,GAC5CY,KAAKiT,QAAQla,OAASkvG,EAASjoG,KAAKiT,QAAQ7T,GAAK24C,GAAM2hE,eAE7D15G,KAAKqvH,WAAWnyH,OAAS,GACzBipG,EAAUhkC,OAAOniE,KAAKqvH,WAAYrvH,KAAKiT,QAAQu8G,gBAAkB,EAAI5M,EAAc5iH,KAAKiT,QAAQ48G,eAEpG1pB,EAAUvyB,aACV,IAAK,IAAIh4E,EAAI,EAAGA,EAAIoE,KAAKiT,QAAQy8G,iBAAkB9zH,IAC/CuqG,EAAU0hB,KAAK2I,GAEnBxwH,KAAKioG,OAASA,EACdjoG,KAAKywH,mBAAqBA,EAC1BzwH,KAAK2xF,MAAQtyF,EACb04C,GAAMylE,mBAAmBx9G,KAAKmvH,WAClC,CACArrE,cAAAA,GACI,IAAIhO,EACJ,OAAO,IAAI8D,EAAY55C,KAAKiT,QAAQ7T,EAAGY,KAAKiT,QAAQ5T,EAAGW,KAAKiT,QAAQla,OAA8B,QAArB+8C,EAAK91C,KAAK2xF,aAA0B,IAAP77C,EAAgBA,EAAK,GAAK91C,KAAKiT,QAAQ5T,EACrJ,CACA8jD,IAAAA,GACI,MAAMH,EAAMhjD,KAAKijD,eACjB,IAAKjjD,KAAKmmG,YAAcnmG,KAAKioG,SAAWjoG,KAAK2xF,QAAU3xF,KAAKywH,mBACxD,MAAM,IAAIr/E,EAAa,cAAe,yCAE1CpxC,KAAKyjD,cACDzjD,KAAKiT,QAAQw8G,gBACbrpB,GAAU+a,cAAcn+D,EAAKhjD,KAAKmmG,UAAWnmG,KAAKioG,OAAQjoG,KAAKiT,QAAQ5T,EAAGW,KAAK2xF,OAEnF3xF,KAAKywH,mBAAmBv0H,SAASkC,IAC7B4B,KAAKqvH,WAAWnzH,SAASgqE,IACrBA,EAAME,eAAelqE,SAASwzF,IACtBA,EAASjnC,aAAerqD,EAAEoqD,OAC1B2rB,GAAKG,YAAYtxB,EAAK0sC,EAAUtxF,EAAEiB,WAItD,ECrGG,MAAM45C,WAAgBqiD,GACzB,mBAAW5oD,GACP,MAAO,SACX,CACA/xC,WAAAA,CAAYi1E,GAA8B,IAAlB5J,EAAQ/uE,UAAAC,OAAA,QAAAL,IAAAI,UAAA,IAAAA,UAAA,GAC5Bo0C,MAAMukC,GACN51E,KAAK2wH,YAAc,GACnB3wH,KAAK4sE,eAAiB,IACX5sE,KAAKmM,UAAUtS,KAAKuF,GAAMA,EAAEy1C,MAAKrC,QAAO,CAACv0C,EAAGE,IAAOF,EAAIE,EAAIF,EAAIE,IAE1E6B,KAAKysE,YAAc,IACRzsE,KAAKmM,UAAUtS,KAAKuF,GAAMA,EAAEy1C,MAAKrC,QAAO,CAACv0C,EAAGE,IAAOF,EAAIE,EAAIF,EAAIE,IAE1E6B,KAAK4wH,OAAQ,EACb5wH,KAAKmM,UAAYypE,EAAWzpE,WAAa,GACzCnM,KAAK+rE,cAAgB7wE,OAAOK,OAAOL,OAAOK,OAAO,CAAC,EAAGyE,KAAK+rE,eAAgB,CAAEC,WAAU6kD,SAAU7kD,EAAU8kD,sBAAsB,EAAO/uE,OAAQ,IAC/I/hD,KAAKo2E,WAAajC,GAAKC,cAAcp0E,KAAK25D,SAAU35D,KAAKk2E,UACzDvkC,EAAQ3xC,KAAKo2E,WAAY,eAAgB,gCAAFltE,OAAkClJ,KAAK25D,SAAQ,gBAAAzwD,OAAelJ,KAAKk2E,SAAQ,MAClHl2E,KAAKw7F,YACD5lB,EAAW/M,cACX7oE,KAAKm+E,iBAAiBvI,EAAW/M,eAGjC7oE,KAAKm+E,iBAAiBxlC,EAAKgvB,IAE/B3nE,KAAK4wH,OAAQ,EACb5wH,KAAKolF,aACT,CACAl+B,KAAAA,GAII,OAHA7V,MAAM6V,QACFlnD,KAAKwoD,OACLxoD,KAAK+oD,SAAS/oD,KAAKwoD,OAChBxoD,IACX,CACA+wH,QAAAA,CAASH,GAGL,OAFA5wH,KAAK4wH,MAAQA,EACb5wH,KAAKolF,cACEplF,IACX,CACA4rE,OAAAA,GACI,QAAI5rE,KAAK+rE,cAAcC,QAG3B,CACA+vB,gBAAAA,GACI,YAAmCl/F,IAA/BmD,KAAKq8F,sBACEr8F,KAAKq8F,sBAETr8F,KAAKoyE,KAAKvsB,YAAclN,EAAKmvB,OAAS9nE,KAAKoyE,KAAKvsB,YAAclN,EAAKmvB,OAAS,CACvF,CACA,mBAAOkpD,CAAav2H,GAChB,IAAIsxC,EAUJ,MAT2B,MAAvBtxC,EAAK2T,eACL29B,EAAK,IAAIsU,EAAQ,WACjBtU,EAAGqZ,QAAQe,EAAO2M,yBAGlB/mB,EAAK,IAAIsU,EAAQ,gBACjBtU,EAAGqZ,QAAQ3qD,GACXsxC,EAAGiZ,UAAUjZ,EAAG8Z,YAAc,IAE3B9Z,CACX,CACAq5C,WAAAA,GACIplF,KAAK2wH,YAAc,GACnB3wH,KAAKjH,MAAQ,EACb,IAAK,IAAI6C,EAAI,EAAGA,EAAIoE,KAAKmM,UAAUjP,SAAUtB,EAAG,CAC5C,IAAInB,EAAOuF,KAAKmM,UAAUvQ,GAAGnB,KACzBuF,KAAK4wH,QACLn2H,EAAO,IAAMA,EAAO,KACxB,MAAMsxC,EAAKkN,GAAQ+3E,aAAav2H,EAAKiH,YACrC1B,KAAK2wH,YAAY9uH,KAAKkqC,GACtB/rC,KAAKjH,MAAQkP,KAAK2yC,IAAI7O,EAAG8Y,WAAY7kD,KAAKjH,MAC9C,CACJ,CACAgwD,QAAAA,CAASP,GACLnX,MAAM0X,SAASP,GACf,MAAMxF,EAAMwF,EAAMxE,aAClBhkD,KAAKikD,WAAWjB,GAChB,MAAM2mB,EAAK3pE,KAAKmM,UAAUtS,KAAInB,IAAA,IAAGm8C,IAAK7C,GAAMt5C,EAAA,OAAK8vD,EAAMsa,YAAYlwB,OAAOZ,GAAQ,MAKlF,OAJAhyC,KAAK42E,MAAMjN,GACP3pE,KAAKy/D,MACLz/D,KAAKy/D,KAAK+J,WAAWxpE,KAAKixH,WAAYjxH,KAAKixH,YAExCjxH,IACX,CACAquG,YAAAA,GACI,OAAOruG,KAAKmM,SAChB,CACAu7D,kBAAAA,CAAmBrtE,EAAUN,GACzB,IAAKiG,KAAK2zE,aACN,MAAM,IAAIviC,EAAa,kBAAmB,wDAE9C,GAAuB,IAAnBpxC,KAAK2pE,GAAGzsE,OACR,MAAM,IAAIk0C,EAAa,YAAa,yCAExC,IAAIhyC,EAAI,EACR,GAAI/E,IAAa+rD,EAASC,SAASQ,KAC/BznD,GAAI,OAEH,GAAI/E,IAAa+rD,EAASC,SAASU,MACpC3nD,EAAIY,KAAKjH,MAAQ,OAEhB,GAAIsB,IAAa+rD,EAASC,SAASO,OAASvsD,IAAa+rD,EAASC,SAASK,MAAO,CAEnFtnD,EADuBY,KAAKjH,MACP,CACzB,CACA,MAAO,CACHqG,EAAGY,KAAKk0E,eAAiB90E,EACzBC,EAAGW,KAAK2pE,GAAG5vE,GAEnB,CACAk9E,cAAAA,GACI,OAAOrkC,OAAO5yC,KAAKmM,UAAU,GAAG0oC,IACpC,CACA6+B,SAAAA,GACQ1zE,KAAK2zE,eAEL3zE,KAAK0nD,iBACL1nD,KAAK0nD,gBAAgBgsB,YACzB1zE,KAAK2zE,cAAe,EACxB,CACAnG,QAAAA,GACI,OAAOxtE,KAAKm8F,iBAChB,CACA80B,QAAAA,GACI,MAEMC,EAFWlxH,KAAK0tE,aAAavB,cAEH,GAC1BglD,EAAgBx4E,EAAKgvB,KAAO3nE,KAAK6oE,eAFnB,GAEgDqoD,EACpE,OAAOlxH,KAAK0tE,aAAa5K,YAAYquD,EACzC,CACAjjD,cAAAA,GACI,OAAOluE,KAAK2tE,YAAYlE,YAC5B,CACA+3B,QAAAA,GACI,MAAM,KAAElqB,EAAI,WAAElB,EAAYrK,eAAe,SAAEC,IAAgBhsE,KACrDC,EAAUD,KAAKijD,eACfm9C,OAA0BvjG,IAATy6E,GAAsBtL,EAC7C,GAAIoK,EAAWxW,YAAcwgC,EAAgB,CACzC,MAAMqB,EAAQzhG,KAAKwtE,WACbk0B,EAAQ1hG,KAAK6rE,qBAAuBlzB,EAAKivB,KAEvC5nE,KAAKixH,WAAajxH,KAAK2tE,YAAY9nB,YAAc7lD,KAAK+7F,mBAEtD/7F,KAAKixH,WAAajxH,KAAK2tE,YAAY9nB,YAAc7lD,KAAK+7F,mBAC9D/7F,KAAKoyE,KAAKnuB,WAAWhkD,GAASi6C,KAAKunD,GAAOtnD,KAAKunD,GAAO3+C,eAC1D,CACJ,CACAq4C,aAAAA,GACIp7F,KAAKuxE,UAAUr1E,SAASorE,I9D/LFxI,E8DgMRwI,E9DhMwB,S8DgMVtnE,KAAK+rE,cAAc8kD,WAG3CvpD,EAASrjB,WAAWjkD,KAAKgkD,cACzBsjB,EAASvkB,mBAEjB,CACAquE,eAAAA,GACI,MAAM9mD,EAAQtqE,KAAKwtE,WACbjD,EAAQvqE,KAAKixH,WACbjuE,EAAMhjD,KAAKijD,eACX+oB,EAAWhsE,KAAK+rE,cAAcC,SAC9BqlD,EAAcrxH,KAAK+rE,cAAc+kD,qBACvC,GAAI9kD,GAAYqlD,EAAa,CACzB,MAEMC,EA9NlB,SAA+B1qB,EAAU2qB,GACrC,MAAMF,EAAc,GACpB,IAAIl1C,EAAQ,GACZ,IAAK,IAAIzhF,EAAS,EAAGA,GAAUksG,EAAUlsG,IACtB62H,EAAYp3H,QAAQO,IAAW,GAK1C22H,EAAYxvH,KAAKs6E,GACjBA,EAAQ,IAJRA,EAAMt6E,KAAKnH,GASnB,OAFIyhF,EAAMj/E,OAAS,GACfm0H,EAAYxvH,KAAKs6E,GACdk1C,CACX,CA8MkCG,CAFLxxH,KAAK0tE,aAAavB,cACfnsE,KAAKmM,UAAUtS,KAAKQ,GAAau4C,OAAOv4C,EAASw6C,QAE/D48E,EA9MlB,SAA6BlnD,EAAO+mD,EAAe9oE,EAAOqgB,GACtD,MAAM6oD,EAA2B,IAAlB7oD,EACT8oD,GAA8B,IAAnB9oD,EACXm1B,EAAcx1C,EAAMqa,yBACpB+uD,EAAappE,EAAM2jB,cACnBslD,EAAY,GA+BlB,OA9BAH,EAAcp1H,SAAS3C,IACnB,MAAMs4H,EAAqBt4H,EAAQY,QAAQy3H,IAAe,EACpDE,EAAsBv4H,EAAQY,QAAQ,IAAM,EAClD,GAAKu3H,GAAUI,GAAyBH,GAAYE,EAChD,OAEmB,IAAnBt4H,EAAQ2D,QACR3D,EAAQsI,KAAKtI,EAAQ,IAEzB,MAAMw4H,EAAS,GACfx4H,EAAQ2C,SAAQ,CAACxB,EAAQX,EAAOR,KAC5B,MAAMy4H,EAAwB,IAAXt3H,EACbu3H,EAAgBv3H,IAAWk3H,EACjC,IAAIvyH,EAAImpD,EAAMsa,YAAYpoE,EAAS,GACrB,IAAVX,GAAgBi4H,EAGXj4H,IAAUR,EAAQ2D,OAAS,GAAM+0H,IACtC5yH,GAAK2+F,EAAc,EAAI,GAHvB3+F,GAAK2+F,EAAc,EAAI,EAK3B+zB,EAAOlwH,KAAKxC,GACU,IAAlBwpE,GAAuBmpD,EACvBD,EAAOlwH,KAAK0oE,EAAQ,IAEI,IAAnB1B,GAAwBopD,GAC7BF,EAAOlwH,KAAK0oE,EAAQ,MAG5BknD,EAAU5vH,KAAKkwH,EAAO5uD,MAAK,CAACllE,EAAGE,IAAMF,EAAIE,QAEtCszH,CACX,CAyK8BS,CAAoB3nD,EAAO+mD,EAAetxH,KAAK0tE,aAAc1tE,KAAK6rE,oBACpF7oB,EAAIH,aAAalK,EAAKkvB,OACtB4pD,EAAUv1H,SAASo+G,IACO,IAAlBA,EAAOp9G,SAEX8lD,EAAI2nB,YACJ3nB,EAAI4nB,OAAON,EAAOgwC,EAAO,IACzBt3D,EAAI6nB,OAAOP,EAAOgwC,EAAOA,EAAOp9G,OAAS,IACzC8lD,EAAIz5C,SACJy5C,EAAIqyB,eAEZ,CACJ,CACA88C,aAAAA,GACI,MAAMnvE,EAAMhjD,KAAKijD,eACX7jD,EAAIY,KAAKk0E,eACTvK,EAAK3pE,KAAK2pE,GAChB,IAAK,IAAI/tE,EAAI,EAAGA,EAAIoE,KAAKmM,UAAUjP,SAAUtB,EAAG,CAC5C,MAAMyD,EAAIsqE,EAAG/tE,GAAKoE,KAAK+rE,cAAchqB,OAC/BhW,EAAK/rC,KAAK2wH,YAAY/0H,GACtBw2H,EAAOhzH,EAAI2sC,EAAG8Y,WAAa,EACjC7B,EAAIkkC,UAAUkrC,EAAO,EAAG/yH,EAAI,EAAG0sC,EAAG8Y,WAAa,EAAG,GAClD9Y,EAAGuZ,WAAWtC,EAAKovE,EAAM/yH,EAC7B,CACJ,CACA8jD,IAAAA,GACI,MAAMH,EAAMhjD,KAAKijD,eACjB,GAAuB,IAAnBjjD,KAAK2pE,GAAGzsE,OACR,MAAM,IAAIk0C,EAAa,YAAa,qCAExCpxC,KAAKyjD,cACL,MAAM4uE,OAA2Bx1H,IAAdmD,KAAKs3E,MAAsBt3E,KAAK+rE,cAAcC,SAIjE,GAHAhpB,EAAI0nB,UAAU,UAAW1qE,KAAKw/C,aAAa,OAC3Cx/C,KAAKmyH,gBACLnyH,KAAKoxH,kBACDpxH,KAAKy/D,MAAQ4yD,EAAY,CACzB,MAAM/nD,EAAQtqE,KAAKwtE,WACnBxtE,KAAKy/D,KAAK0J,mBAAmBmB,EAAOA,GACpCtqE,KAAKy/D,KAAKxb,WAAWjB,GAAKD,eAC9B,CACA/iD,KAAKwhG,WACLxhG,KAAKo7F,gBACLp4C,EAAI8nB,YACR,ECjRG,MAAM3xB,WAAiBpB,GAC1B,mBAAWrF,GACP,MAAO,UACX,CACA/xC,WAAAA,CAAYvB,EAAGC,EAAGtG,EAAOka,GAErBo+B,MAAMjyC,EAAGC,EAAGtG,EADOmC,OAAOK,OAAO,CAAEy+G,sBAAuB,GAAIpT,SAAU,EAAGuT,gBAAiB,GAAKlnG,GAErG,CACAwoG,aAAAA,GACI,OAAOz7G,KAAK8iE,YAAY,IAC5B,CACAwvD,WAAAA,GAEI,OADAtyH,KAAK87G,QAAQ,OACN97G,IACX,ECNG,IAAIuyH,IACX,SAAWA,GACPA,EAAoBA,EAAyB,IAAI,GAAK,MACtDA,EAAoBA,EAA4B,QAAK,GAAK,QAC7D,CAHD,CAGGA,KAAwBA,GAAsB,CAAC,IAC3C,MAAMl5E,WAAoBgH,EAC7B,mBAAW3N,GACP,MAAO,aACX,CACA,mBAAW2T,GACP,OAAOksE,EACX,CACA,yBAAWjsE,GACP,MAAO,CACH54B,IAAK6kG,GAAoBjmD,IACzBgC,OAAQikD,GAAoB5lD,OAEpC,CACAhsE,WAAAA,CAAWjI,GAAmF,IAAlF,MAAE4zB,EAAK,KAAEkmG,EAAI,KAAEjpG,EAAO,GAAE,YAAEutF,EAAc,GAAE,SAAEz8G,EAAWk4H,GAAoBjmD,KAAK5zE,EACxF24C,QACArxC,KAAKssB,MAAQA,EACbtsB,KAAKwyH,KAAOA,EACZxyH,KAAK0+G,YAAc,IAAIr+D,EAAQ,eAC/BrgD,KAAK0+G,YAAYt5D,QAAQ77B,GACzBvpB,KAAKyyH,mBAAqB,IAAIpyE,EAAQ,eACtCrgD,KAAKyyH,mBAAmBrtE,QAAQ0xD,GAChC,MAAMpsB,EAAkBjvC,EAAKgB,UAAUz8C,KAAKq8C,SAASrX,KAAM,SAC3DhlC,KAAKyyH,mBAAmBjuE,YAAYkmC,GACpC1qF,KAAK3F,SAA+B,kBAAbA,EAAwBg/C,GAAYiN,eAAejsD,GAAYA,EACtF2F,KAAKgyC,KAAO,EACZhyC,KAAK+rE,cAAgB,CACjB0hC,QAAQ,EACRzlB,KAAM,CAAC,GACPl/D,MAAO,QACP4sB,UAAW,EACXg9E,aAAa,EACb3G,cAAe,EACf4G,sBAAsB,EAE9B,CACAnwE,UAAAA,CAAWQ,GACPhjD,KAAK0+G,YAAYx6D,QAAQlkD,KAAKq8C,UAC9B,MAAM,OAAEjH,EAAM,KAAEpQ,EAAI,OAAEqQ,EAAM,MAAE59B,GAAUzX,KAAKq8C,SACvCquC,EAAkBjvC,EAAKgB,UAAUzX,EAAM,SAC7ChlC,KAAKyyH,mBAAmBvuE,QAAQ9O,EAAQs1C,EAAiBr1C,EAAQ59B,GACjE,MAAMxE,EAAUjT,KAAK+rE,cAIrB,OAHA/oB,EAAIJ,eAAe3vC,EAAQ6V,OAC3Bk6B,EAAIL,aAAa1vC,EAAQ6V,OACzBk6B,EAAIH,aAAa5vC,EAAQyiC,WAClB11C,IACX,CACA+tG,SAAAA,CAAUN,EAAQzlB,GAId,OAHAhoF,KAAK+rE,cAAc0hC,OAASA,EACxBzlB,IACAhoF,KAAK+rE,cAAcic,KAAOA,GACvBhoF,IACX,CACAowF,OAAAA,CAAQp+C,GAEJ,OADAhyC,KAAKgyC,KAAOA,EACLhyC,IACX,CACAmjD,IAAAA,GACI,MAAMH,EAAMhjD,KAAKijD,eACjBjjD,KAAKyjD,cACL,IAAIpkD,EAAI,EACR,OAAQW,KAAK3F,UACT,KAAKk4H,GAAoBjmD,IACrBjtE,EAAIW,KAAKssB,MAAMohD,aAAaI,eAAe9tE,KAAKgyC,MAChD,MACJ,KAAKugF,GAAoB5lD,OACrBttE,EAAIW,KAAKssB,MAAMohD,aAAaK,kBAAkB/tE,KAAKgyC,KAAOonB,EAAOkH,yBACjE,MACJ,QACI,MAAM,IAAIlvB,EAAa,kBAAmB,gBAAFloC,OAAkBlJ,KAAK3F,SAAQ,iBAE/E,MAAMiyB,EAAQ,CAAEltB,EAAGY,KAAKssB,MAAM4nD,eAAgB70E,KACxCmzH,EAAO,CAAEpzH,EAAGY,KAAKwyH,KAAKt+C,eAAgB70E,MAhFpD,WAAoB,QAAAwyC,EAAA50C,UAAAC,OAAN40C,EAAI,IAAAhxC,MAAA+wC,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA90C,UAAA80C,GACVsH,GAAY6oB,OACZtlD,EAAI,sBAAuBk1B,EACnC,CA8EQ5wC,CAAE,gCAAiCorB,EAAO,QAASkmG,EAAM,KAAMnzH,GAC/D,MAAM0sH,EAAgB/rH,KAAK+rE,cAAcggD,cAAgB/rH,KAAK3F,SAC9D2F,KAAK0+G,YAAYp5D,WAAWtC,EAAK12B,EAAMltB,EAAGktB,EAAMjtB,GAChD,MAAMuzH,EAAY5yH,KAAK0+G,YAAY75D,WAC7BguE,EAAa7yH,KAAK0+G,YAAY74D,YAC9BitE,EAASxmG,EAAMjtB,EAAIwzH,EAAa,IACtC7yH,KAAKyyH,mBAAmBntE,WAAWtC,EAAK12B,EAAMltB,EAAIwzH,EAAY,EAAGE,GACjE,MAAMC,EAAa/yH,KAAKyyH,mBAAmB5tE,WACrCmuE,EAAchzH,KAAKyyH,mBAAmB5sE,YAC5C,IAAIoiD,EAAS37E,EAAMltB,EACf6zH,EAAQH,EACZ,MAAMpiC,EAAO8hC,EAAKpzH,EAAIY,KAAKwyH,KAAK9mD,gBAC5B1rE,KAAK3F,WAAak4H,GAAoBjmD,KACtC27B,GAAU2qB,EAAYG,EAAa,EACnCE,GAASD,EAAc,KAElBhzH,KAAK3F,WAAak4H,GAAoB5lD,SAC3CsmD,GAASD,EAAc,IACvB/qB,GAAU2qB,EAAY,EACjB5yH,KAAK+rE,cAAc4mD,uBACpB1qB,GAAU8qB,IAGd/yH,KAAK+rE,cAAc0hC,QACnBtC,GAASY,eAAe/oD,EAAKilD,EAAQgrB,EAAOviC,EAAMuiC,EAAOjzH,KAAK+rE,cAAcic,MACxEhoF,KAAK+rE,cAAc2mD,aACnBvnB,GAASY,eAAe/oD,EAAK0tC,EAAMuiC,EAAQ,EAAIjzH,KAAK3F,SAAUq2F,EAAMuiC,EAAQlH,EAAe/rH,KAAK+rE,cAAcic,QAIlHhlC,EAAI2nB,YACJ3nB,EAAI4nB,OAAOq9B,EAAQgrB,GACnBjwE,EAAI6nB,OAAO6lB,EAAMuiC,GACbjzH,KAAK+rE,cAAc2mD,aACnB1vE,EAAI6nB,OAAO6lB,EAAMuiC,EAAQlH,GAE7B/oE,EAAIz5C,SACJy5C,EAAIqyB,YAEZ,EC1HJ,SAASn0E,KAAW,QAAA2wC,EAAA50C,UAAAC,OAAN40C,EAAI,IAAAhxC,MAAA+wC,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA90C,UAAA80C,GACVmhF,GAAahxD,OACbtlD,EAAI,uBAAwBk1B,EACpC,CDyHAuH,GAAY6oB,OAAQ,ECxHb,MAAMgxD,WAAqB/+C,GAC9B,mBAAWzhC,GACP,MAAO,cACX,CACA,iBAAWkjE,GACP,MAAO,CACHx7G,EAAG+rD,EAAO4vD,aACVp4G,EAAGwoD,EAAO6vD,aACVx4G,EAAG2oD,EAAO8vD,aACVj5G,EAAGmpD,EAAO+vD,iBACV52G,EAAG6mD,EAAOgwD,SACVp3G,EAAGonD,EAAOgtE,mBAElB,CACAxyH,WAAAA,CAAYi1E,GACR,IAAI9/B,EAAI6J,EACRtO,MAAMukC,GACN51E,KAAKozH,UAAuC,QAA1Bt9E,EAAK8/B,EAAWrsD,YAAyB,IAAPusB,EAAgBA,EAAK,IAAI7nC,cAC7EjO,KAAKgyC,KAAkC,QAA1B2N,EAAKi2B,EAAW5jC,YAAyB,IAAP2N,EAAgBA,EAAK,EACpE3/C,KAAKupB,KAAO,GACZroB,GAAE,sBAAuBlB,KAAKozH,SAClC,CACAhjC,OAAAA,CAAQp+C,GAEJ,OADAhyC,KAAKgyC,KAAOA,EACLhyC,IACX,CACA0zE,SAAAA,GASI,OARA1zE,KAAKupB,KAAO,GACZvpB,KAAKozH,SAASn3H,MAAM,IAAIC,SAASC,IAC7B,MAAMq8C,EAAQ06E,GAAatd,OAAOz5G,GAClC,IAAKq8C,EACD,MAAM,IAAIpH,EAAa,+BAAiCj1C,GAC5D6D,KAAKupB,MAAQivB,KAEjBx4C,KAAK2zE,cAAe,EACb3zE,IACX,CACAmjD,IAAAA,GACInjD,KAAKyjD,cACL,MAAMrkD,EAAIY,KAAKk0E,eACT70E,EAAIW,KAAK0tE,aAAa5K,YAAY9iE,KAAKgyC,MAAQ,GACrD9wC,GAAE,uBAAwBlB,KAAKozH,UAC/BpzH,KAAKslD,WAAWtlD,KAAKijD,eAAgB7jD,EAAGC,EAC5C,EAEJ6zH,GAAahxD,OAAQ,EClDd,MAAMmxD,WAAoBl/C,GAC7B,mBAAWzhC,GACP,MAAO,aACX,CACA/xC,WAAAA,CAAY62G,EAAUC,GAClBpmE,MAAM,CAAEsoB,SAAU,MAClB35D,KAAKi8E,QAAU,IAAIs7B,GAAcC,EAAUC,GAC3Cz3G,KAAK+kD,SAAS/kD,KAAKi8E,QAAQp3B,YAC3B7kD,KAAK2xE,aAAc,CACvB,CACA4B,oBAAAA,CAAqBtoC,GACjB,OAAOjrC,IACX,CACA0zE,SAAAA,GAEI,OADA1zE,KAAK2zE,cAAe,EACb3zE,IACX,CACAmjD,IAAAA,GACI,MAAMqF,EAAQxoD,KAAK0tE,aACb1qB,EAAMhjD,KAAKijD,eACjBjjD,KAAKyjD,cACLT,EAAI0nB,UAAU,cAAe1qE,KAAKw/C,aAAa,OAC/Cx/C,KAAKi8E,QAAQs9B,OAAOv2D,EAAKwF,EAAOxoD,KAAKk0E,gBACrClxB,EAAI8nB,YACR,ECnBG,MAAMtxB,WAAe6G,EACxB,mBAAW3N,GACP,MAAO,QACX,CACA,uBAAW4gF,GACP,OAAO,CACX,CACA,0BAAWC,GACP,OAAQ,CACZ,CACA,yBAAWC,GACP,OAAO,EACX,CACA7yH,WAAAA,CAAYi6D,GAAqB,IAAd3nD,EAAOhW,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,CAAC,EAE1B,GADAo0C,SACKupB,IAAUA,EAAM19D,OACjB,MAAM,IAAIk0C,EAAa,eAAgB,iCAE3CpxC,KAAK46D,MAAQA,EACb,MAAM64D,OAAgC52H,IAArBoW,EAAQwgH,SAAyBxgH,EAAQwgH,SAAW74D,EAAM19D,OACrEg2E,EAAgBjgE,EAAQigE,eAAiB,EACzCgM,OAAkCriF,IAAtBoW,EAAQisE,UAA0BjsE,EAAQisE,UAAYtkB,EAAM84D,MAAM3pH,IAAUA,EAAKytE,YAC7Fm8C,OAA8B92H,IAApBoW,EAAQ0gH,QAAwB1gH,EAAQ0gH,QAAU1rH,KAAKwsC,IAAIy+B,EAAgBugD,GAAY,EACjG3oH,EAAWmI,EAAQnI,UAAY0uC,GAAO85E,aACtC75E,EAAUxmC,EAAQwmC,SAAW3E,EAAQxjC,IAAI,kBACzCooC,EAAczmC,EAAQymC,aAAe5E,EAAQxjC,IAAI,sBACvDtR,KAAKiT,QAAU,CACXisE,YACAp0E,WACAooE,gBACAugD,WACAE,UACAl6E,UACAC,eAEJ15C,KAAK0+G,YAAc,IAAIr+D,EAAQ,UAC/BrgD,KAAKi/E,kBAAkBn0E,GAAY0uC,GAAO85E,cAC1CltB,GAAUgc,kBAAkBxnD,GAAO,GAAM,GACzC56D,KAAK4zH,gBACL5zH,KAAK6zH,QACT,CACAA,MAAAA,GACI,IAAK,IAAIj4H,EAAI,EAAGA,EAAIoE,KAAK46D,MAAM19D,OAAQtB,IAAK,CAC3BoE,KAAK46D,MAAMh/D,GACnB03E,UAAUtzE,KACnB,CACJ,CACA8zH,MAAAA,GACI,IAAK,IAAIl4H,EAAI,EAAGA,EAAIoE,KAAK46D,MAAM19D,OAAQtB,IAAK,CAC3BoE,KAAK46D,MAAMh/D,GACnBo3E,YAAYhzE,KACrB,CACJ,CACAm/E,YAAAA,CAAaD,GAET,OADAl/E,KAAKiT,QAAQisE,UAAYA,EAClBl/E,IACX,CACA+zH,UAAAA,CAAWJ,GAEP,OADA3zH,KAAKiT,QAAQ0gH,QAAUA,EAChB3zH,IACX,CACAi/E,iBAAAA,CAAkBn0E,GAMd,OALIA,IAAa0uC,GAAO85E,cAAgBxoH,IAAa0uC,GAAO+5E,kBACxDxrH,QAAQ29C,KAAK,4BAADx8C,OAA6B4B,EAAQ,kCACjDA,EAAW0uC,GAAO85E,cAEtBtzH,KAAKiT,QAAQnI,SAAWA,EACjB9K,IACX,CACAogF,QAAAA,GACI,OAAOpgF,KAAK46D,KAChB,CACAuY,YAAAA,GACI,OAAOnzE,KAAKiT,QAAQwgH,QACxB,CACArgD,gBAAAA,GACI,OAAOpzE,KAAKiT,QAAQigE,aACxB,CACA8gD,gBAAAA,CAAiBp5D,GACb56D,KAAK8zH,SACL9zH,KAAKiT,QAAQigE,cAAgBtY,EAC7B56D,KAAK4zH,gBACL5zH,KAAK6zH,QACT,CACAD,aAAAA,GACI,IAAI7gF,EAAY,GACZC,EAAc,GACdl3C,EAAIkE,KAAKiT,QAAQwgH,SACrB,KAAO33H,GAAK,GACRi3C,EAAYt3C,OAAOI,aAAa,MAAUC,EAAI,IAAOi3C,EACrDj3C,EAAImM,KAAKC,MAAMpM,EAAI,IAEvB,GAAIkE,KAAKiT,QAAQ0gH,QAAS,CAEtB,IADA73H,EAAIkE,KAAKiT,QAAQigE,cACVp3E,GAAK,GACRk3C,EAAcv3C,OAAOI,aAAa,MAAUC,EAAI,IAAOk3C,EACvDl3C,EAAImM,KAAKC,MAAMpM,EAAI,IAEvBk3C,EAAcmT,EAAO8tE,YAAcjhF,CACvC,CACAhzC,KAAK0+G,YAAYt5D,QAAQrS,EAAYC,EACzC,CACAkhF,oBAAAA,GACI,MAAM,SAAEppH,GAAa9K,KAAKiT,QACpB6tE,EAAY9gF,KAAK46D,MAAM,GAC7B,IAAIu5D,EAAiBC,EAAatzC,EAAWh2E,GACzCupH,EAAiBD,EAAatzC,EAAWh2E,GAC7C,SAASspH,EAAarqH,EAAMe,GACxB,OAAOf,EAAKgpE,iBAAiBx4E,QAAQu4E,GAAWA,EAAO7/D,QAAQnI,WAAaA,IAAU5N,MAC1F,CAMA,OALA8C,KAAK46D,MAAM1+D,SAAS6N,IAChB,MAAMuqH,EAAcF,EAAarqH,EAAMe,GACvCqpH,EAAiBG,EAAcH,EAAiBG,EAAcH,EAC9DE,EAAiBC,EAAcD,EAAiBC,EAAcD,KAE3DF,EAAiBE,CAC5B,CACAE,YAAAA,GACI,IAAIz+E,EACJ,MAAM0+E,EAAsBx0H,KAAKk0H,uBAAyB16E,GAAOg6E,gBAAkBxzH,KAAKiT,QAAQnI,SAC1F2uC,EAA0C,QAA/B3D,EAAK91C,KAAKiT,QAAQwmC,eAA4B,IAAP3D,EAAgBA,EAAK,EACvEgrC,EAAY9gF,KAAK46D,MAAM,GAC7B,IAAI65D,EACJ,GAAIz0H,KAAKiT,QAAQnI,WAAa0uC,GAAO85E,aAAc,CAC/CmB,EAAY3zC,EAAUpT,aAAa5K,YAAY,GAAK,IAAM1J,EAAOiH,oBACjE,IAAK,IAAIzkE,EAAI,EAAGA,EAAIoE,KAAK46D,MAAM19D,SAAUtB,EAAG,CACxC,MAAMmO,EAAO/J,KAAK46D,MAAMh/D,GACxB,IAAI84H,EAAW,EACf,MAAMzpF,EAAKlhC,EAAK09C,qBACZxc,IACAypF,EAAWzsH,KAAK2yC,IAAI85E,EAAUzpF,EAAG+sC,WAAWtL,cAEhD,MAAMioD,EAAO5qH,EAAK+jE,eAAe4mD,GAAY,EAAIt7D,EAAOiH,oBACxD,GAAIt2D,EAAK6hE,WAAa7hE,EAAK+8D,SAAU,CACjC,MAAMiD,EAAOhgE,EAAK8hE,qBAAuBlzB,EAAKgvB,GACxC59D,EAAKmkE,iBAAiBnE,KAAO3Q,EAAOiH,oBACpCt2D,EAAKmkE,iBAAiBlE,MAAQ,EAAI5Q,EAAOiH,oBAC/Co0D,EAAYxsH,KAAKykB,IAAIq9C,EAAM0qD,GACvBC,EAAW,IACXD,EAAYxsH,KAAKykB,IAAIioG,EAAMF,GAEnC,CACJ,CACJ,KACK,CACD,IAAIG,EAAY,EAChB50H,KAAK46D,MAAM1+D,SAAS24H,IAChB,MAAM5pF,EAAK4pF,EAAGptE,qBACVxc,IACA2pF,EAAY3sH,KAAK2yC,IAAIg6E,EAAW3pF,EAAG+sC,WAAWhxB,SAAW,OAGjEytE,EAAY3zC,EAAUpT,aAAa5K,YAAY8xD,GAAa,EAAIx7D,EAAOiH,oBACvE,IAAK,IAAIzkE,EAAI,EAAGA,EAAIoE,KAAK46D,MAAM19D,SAAUtB,EACrC,GAAIoE,KAAK46D,MAAMh/D,GAAGgwE,WAAa5rE,KAAK46D,MAAMh/D,GAAGkrE,SAAU,CACnD,MAAM4nD,EAAU1uH,KAAK46D,MAAMh/D,GAAGiwE,qBAAuBlzB,EAAKgvB,GACpD3nE,KAAK46D,MAAMh/D,GAAGsyE,iBAAiBlE,MAAQ,EAAI5Q,EAAOiH,oBAClDrgE,KAAK46D,MAAMh/D,GAAGsyE,iBAAiBnE,KAAO3Q,EAAOiH,oBAC/CquD,EAAU+F,IACVA,EAAY/F,EAEpB,CAER,CACA,OAAO+F,EAAYD,EAAsB/6E,CAC7C,CACA0J,IAAAA,GACI,MAAM,SAAEr4C,EAAQ,UAAEo0E,EAAS,YAAExlC,GAAgB15C,KAAKiT,QAC5C+vC,EAAMhjD,KAAKijD,eACjB,IAAIsC,EAAO,EACPC,EAAO,EACX,MAAMs7B,EAAY9gF,KAAK46D,MAAM,GACvBomB,EAAWhhF,KAAK46D,MAAM56D,KAAK46D,MAAM19D,OAAS,GAC3CgiF,GAKD35B,EAAOu7B,EAAUzI,cAAgB,EACjCr4E,KAAKjH,MAAQioF,EAAS7I,eAAiB5yB,EAAO,IAL9CA,EAAOu7B,EAAUtT,WACjBxtE,KAAKjH,MAAQioF,EAASxT,WAAajoB,GAMvCC,EAAOxlD,KAAKu0H,eACZ,MACMO,EADkBvvE,EAAOvlD,KAAKjH,MAAQ,EACHiH,KAAK0+G,YAAY75D,WAAa,EAEvE,GADA7B,EAAI0nB,UAAU,SAAU1qE,KAAKw/C,aAAa,OACtC0/B,EAAW,CACX,MAAMxpC,EAAY11C,KAAKjH,MAAQ,EAAIiH,KAAK0+G,YAAY75D,WAAa,EAAI,EACjEnP,EAAY,IACZsN,EAAIk4B,SAAS31B,EAAMC,EAAM9P,EAAW,GACpCsN,EAAIk4B,SAAS31B,EAAOvlD,KAAKjH,MAAQ,EAAIiH,KAAK0+G,YAAY75D,WAAa,EAAI,EAAGW,EAAM9P,EAAW,GAC3FsN,EAAIk4B,SAAS31B,EAAMC,GAAQ16C,IAAa0uC,GAAO+5E,gBAAkB,EAAI,GAAI,EAAc,GAAXzoH,GAC5Ek4C,EAAIk4B,SAAS31B,EAAOvlD,KAAKjH,MAAOysD,GAAQ16C,IAAa0uC,GAAO+5E,gBAAkB,EAAI,GAAI,EAAc,GAAXzoH,GAEjG,CACA9K,KAAK0+G,YAAYp5D,WAAWtC,EAAK8xE,EAAgBtvE,EAAOxlD,KAAK0+G,YAAY74D,YAAc,GAAK/6C,IAAa0uC,GAAO85E,cAAgB,EAAI,GAAK55E,GACzI,MAAM/mC,EAAK3S,KAAK8jD,iBAChBd,EAAIqlC,YAAY11E,EAAGmnC,OAAQnnC,EAAGonC,OAAQpnC,EAAGqnC,OAAQrnC,EAAGsnC,QACpD+I,EAAI8nB,aACJ9qE,KAAKyjD,aACT,ECvMG,MAAMsxE,WAAuB10E,EAChC,mBAAW3N,GACP,MAAO,gBACX,CACA/xC,WAAAA,CAAYq0H,GACR3jF,QACArxC,KAAK6vG,QAAU,IAAIF,GACfqlB,EAAY1oG,QACZtsB,KAAKssB,MAAQ0oG,EAAY1oG,OACzB0oG,EAAYxC,OACZxyH,KAAKwyH,KAAOwC,EAAYxC,MAC5BxyH,KAAKgyC,KAAO,CAChB,CACAo+C,OAAAA,CAAQp+C,GAEJ,OADAhyC,KAAKgyC,KAAOA,EACLhyC,IACX,CACAiwG,cAAAA,CAAe3pF,GAEX,OADAtmB,KAAK6vG,QAAQI,eAAe3pF,GACrBtmB,IACX,CACAmjD,IAAAA,GACI,MAAMH,EAAMhjD,KAAKijD,eACjBjjD,KAAKyjD,cACL,MAAMpkD,EAAKW,KAAKssB,OAAStsB,KAAKssB,MAAMohD,aAAaI,eAAe9tE,KAAKgyC,OAChEhyC,KAAKwyH,MAAQxyH,KAAKwyH,KAAK9kD,aAAaI,eAAe9tE,KAAKgyC,OACzD,EACEi2D,EAAUjoG,KAAKssB,OAAStsB,KAAKssB,MAAM4nD,gBAAoBl0E,KAAKwyH,MAAQxyH,KAAKwyH,KAAK9kD,aAAaukB,gBAAmB,EAC9GgjC,EAASj1H,KAAKwyH,MAAQxyH,KAAKwyH,KAAKt+C,eAAiBl0E,KAAKwyH,KAAK3tE,WAAa,GACzE7kD,KAAKssB,OAAStsB,KAAKssB,MAAMohD,aAAawkB,aAAe,IACtD,EACJlyF,KAAK6vG,QAAQC,gBAAgBmlB,EAAQhtB,GAnC7C,WAAoB,QAAAp2D,EAAA50C,UAAAC,OAAN40C,EAAI,IAAAhxC,MAAA+wC,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA90C,UAAA80C,GACVgjF,GAAe7yD,OACftlD,EAAI,yBAA0Bk1B,EACtC,CAiCQ5wC,CAAE,oCAAqC+mG,EAAQ,SAAUgtB,EAAO,KAAM51H,GACtEW,KAAK6vG,QAAQvqD,WAAWtC,EAAKilD,EAAQ5oG,EACzC,ECCJ,SAAS6B,KAAW,QAAA2wC,EAAA50C,UAAAC,OAAN40C,EAAI,IAAAhxC,MAAA+wC,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA90C,UAAA80C,GACVmjF,GAAQhzD,OACRtlD,EAAI,kBAAmBk1B,EAC/B,CDFAijF,GAAe7yD,OAAQ,ECGhB,MAAMgzD,GACT,uBAAOC,CAAiB9pB,GACpB,OAAO,IAAI6pB,GAAQ,CAAE1pB,SAAU,CAAEH,YAAWtyG,MADRkE,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,IACY2pB,OADD3pB,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,MAEzD,CACA0D,WAAAA,GAA0B,IAAdsS,EAAOhW,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,CAAC,EACnBiE,GAAE,gBAAiB+R,GACnBjT,KAAKiT,QAAU,CACXu1C,MAAO,CACHupB,MAAO,IAEXy5B,SAAU,CACNH,UAAW,GACXtyG,MAAO,IACP6tB,OAAQ,IACR2kF,WAAY,SAGpBvrG,KAAKkpE,WAAWj2D,EACpB,CACAi0C,KAAAA,GACIlnD,KAAKo1H,QAAU,GACfp1H,KAAKq1H,QAAU,GACfr1H,KAAKy9G,OAAS,GACdz9G,KAAK+lE,OAAS,GACd/lE,KAAKwoD,WAAQ3rD,CACjB,CACAqsE,UAAAA,CAAWj2D,GACPjT,KAAKiT,QAAU/X,OAAOK,OAAOL,OAAOK,OAAO,CAAC,EAAGyE,KAAKiT,SAAUA,GAC9DjT,KAAKs1H,eACLt1H,KAAKknD,OACT,CACAouE,YAAAA,GACI,MAAM,UAAEjqB,EAAS,MAAEtyG,EAAK,OAAE6tB,EAAM,WAAE2kF,GAAevrG,KAAKiT,QAAQu4F,SAC9D,GAAkB,OAAdH,EACA,OAEJ,GAAkB,KAAdA,EAEA,MADAnqG,GAAElB,MACI,IAAIoxC,EAAa,gDAE3B,IAAIk6D,EAAUtrG,KAAKiT,QAAQu4F,SAASF,QACpC,QAAgBzuG,IAAZyuG,EAAuB,CAGnBA,EADA9kB,GADSn5E,SAASkyC,eAAe8rD,IAEvBF,GAASQ,SAASC,OAGlBT,GAASQ,SAASG,GAEpC,CACA9rG,KAAKC,QAAUkrG,GAASC,aAAaC,EAAWC,EAASvyG,EAAO6tB,EAAQ2kF,EAC5E,CACAvnD,UAAAA,GACI,OAAOhkD,KAAKC,OAChB,CACAgkD,UAAAA,CAAWhkD,GAEP,OADAD,KAAKC,QAAUA,EACRD,IACX,CACAyoD,QAAAA,GACI,OAAOzoD,KAAKwoD,KAChB,CACAunE,SAAAA,GACI,OAAO/vH,KAAK+lE,MAChB,CACAhuB,KAAAA,CAAM0hB,GACF,MAAM87D,EAAav1H,KAAKiT,QAAQu1C,MAAMupB,MAChCp0E,EAAIzC,OAAOK,OAAO,CAAE6D,EAAG,EAAGC,EAAG,EAAGtG,MAAOiH,KAAKiT,QAAQu4F,SAASzyG,MAAqB,EAAbw8H,EAAkBtiH,QAAS,CAAE+mG,sBAAoC,EAAbub,IAAsB97D,GAC/IjR,EAAQ,IAAIzQ,GAAMp6C,EAAEyB,EAAGzB,EAAE0B,EAAG1B,EAAE5E,MAAO4E,EAAEsV,SAI7C,OAHAjT,KAAKy9G,OAAO57G,KAAK2mD,GACjBA,EAAMvE,WAAWjkD,KAAKC,SACtBD,KAAKwoD,MAAQA,EACNA,CACX,CACArP,QAAAA,CAASsgB,GACL,MAAM87D,EAAav1H,KAAKiT,QAAQu1C,MAAMupB,MAChCp0E,EAAIzC,OAAOK,OAAO,CAAE6D,EAAG,EAAGC,EAAG,EAAGtG,MAAOiH,KAAKiT,QAAQu4F,SAASzyG,MAAqB,EAAbw8H,EAAkBtiH,QAAS,CAAE+mG,sBAAoC,IAAbub,IAAsB97D,GAC/IjR,EAAQ,IAAIrP,GAASx7C,EAAEyB,EAAGzB,EAAE0B,EAAG1B,EAAE5E,MAAO4E,EAAEsV,SAIhD,OAHAjT,KAAKy9G,OAAO57G,KAAK2mD,GACjBA,EAAMvE,WAAWjkD,KAAKC,SACtBD,KAAKwoD,MAAQA,EACNA,CACX,CACA2xC,SAAAA,CAAUvkB,GACN,MAAM7rE,EAAO,IAAIowF,GAAUvkB,GAK3B,OAJI51E,KAAKwoD,OACLz+C,EAAKg/C,SAAS/oD,KAAKwoD,OACvBz+C,EAAKk6C,WAAWjkD,KAAKC,SACrBD,KAAKo1H,QAAQvzH,KAAKkI,GACXA,CACX,CACAm+G,SAAAA,CAAU1vE,EAAOo9B,EAAY3iE,GACzB,MAAMlJ,EAAO,IAAIm+G,GAAU1vE,EAAOo9B,EAAY3iE,GAK9C,OAJIjT,KAAKwoD,OACLz+C,EAAKg/C,SAAS/oD,KAAKwoD,OACvBz+C,EAAKk6C,WAAWjkD,KAAKC,SACrBD,KAAKo1H,QAAQvzH,KAAKkI,GACXA,CACX,CACAojH,UAAAA,CAAW3uH,EAAMo3E,EAAY3iE,GACzB,MAAMlJ,EAAO,IAAIojH,GAAW3uH,EAAMo3E,EAAY3iE,GAK9C,OAJIjT,KAAKwoD,OACLz+C,EAAKg/C,SAAS/oD,KAAKwoD,OACvBz+C,EAAKk6C,WAAWjkD,KAAKC,SACrBD,KAAKo1H,QAAQvzH,KAAKkI,GACXA,CACX,CACAmwF,SAAAA,CAAUtkB,GACN,MAAM4/C,EAAY,IAAIt7B,GAAUtkB,GAKhC,OAJI51E,KAAKwoD,OACLgtE,EAAUzsE,SAAS/oD,KAAKwoD,OAC5BgtE,EAAUvxE,WAAWjkD,KAAKC,SAC1BD,KAAKo1H,QAAQvzH,KAAK2zH,GACXA,CACX,CACAl8E,QAAAA,CAASs8B,GACL,MAAM6/C,EAAW,IAAIn8E,GAASs8B,GAK9B,OAJI51E,KAAKwoD,OACLitE,EAAS1sE,SAAS/oD,KAAKwoD,OAC3BitE,EAASxxE,WAAWjkD,KAAKC,SACzBD,KAAKo1H,QAAQvzH,KAAK4zH,GACXA,CACX,CACAl6C,OAAAA,GACI,MAAMm6C,EAAU,IAAIn6C,IADVt+E,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,CAAC,GACqBuB,MAKnC,OAJIwB,KAAKwoD,OACLktE,EAAQ3sE,SAAS/oD,KAAKwoD,OAC1BktE,EAAQzxE,WAAWjkD,KAAKC,SACxBD,KAAKo1H,QAAQvzH,KAAK6zH,GACXA,CACX,CACA9nC,QAAAA,CAASn0B,GACL,MAAM97D,EAAIzC,OAAOK,OAAO,CAAEiD,KAAM,SAAUyU,QAAS,CAC3C+xB,KAAM,UACNumC,gBAAY1uE,IACX48D,GACHk8D,EAAW,IAAI/nC,GAASjwF,EAAEa,KAAMb,EAAEsV,QAAQ+xB,KAAMrnC,EAAEsV,QAAQs4D,YAKhE,OAJIvrE,KAAKwoD,OACLmtE,EAAS5sE,SAAS/oD,KAAKwoD,OAC3BmtE,EAAS1xE,WAAWjkD,KAAKC,SACzBD,KAAKo1H,QAAQvzH,KAAK8zH,GACXA,CACX,CACAtC,WAAAA,CAAY55D,GACR,MAAM97D,EAAIzC,OAAOK,OAAO,CAAEiuB,KAAM,OAASiwC,GACnCm8D,EAAc,IAAIvC,GAAY11H,EAAE6rB,MAKtC,OAJIxpB,KAAKwoD,OACLotE,EAAY7sE,SAAS/oD,KAAKwoD,OAC9BotE,EAAY3xE,WAAWjkD,KAAKC,SAC5BD,KAAKo1H,QAAQvzH,KAAK+zH,GACXA,CACX,CACApM,UAAAA,CAAW/vD,GACP,MAAMo8D,EAAa,IAAIrM,GAAW/vD,EAAOz/D,IAAKy/D,EAAO83C,UAAW93C,EAAOw4C,UAKvE,OAJIjyG,KAAKwoD,OACLqtE,EAAW9sE,SAAS/oD,KAAKwoD,OAC7BqtE,EAAW5xE,WAAWjkD,KAAKC,SAC3BD,KAAKo1H,QAAQvzH,KAAKg0H,GACXA,CACX,CACA58E,OAAAA,CAAQ28B,GACJ,MAAM7rE,EAAO,IAAIkvC,GAAQ28B,GAKzB,OAJI51E,KAAKwoD,OACLz+C,EAAKg/C,SAAS/oD,KAAKwoD,OACvBz+C,EAAKk6C,WAAWjkD,KAAKC,SACrBD,KAAKo1H,QAAQvzH,KAAKkI,GACXA,CACX,CACAstC,SAAAA,CAAUu+B,GACN,MAAM7rE,EAAO,IAAIstC,GAAUu+B,GAI3B,OAHI51E,KAAKwoD,OACLz+C,EAAKg/C,SAAS/oD,KAAKwoD,OACvBz+C,EAAKk6C,WAAWjkD,KAAKC,SACd8J,CACX,CACAy7F,cAAAA,CAAe/rC,GACX,MAAM0iB,EAAQ,IAAIqpB,GAAe/rC,EAAOmB,MAAOnB,EAAOwsC,MAEtD,OADA9pB,EAAMl4B,WAAWjkD,KAAKC,SACfk8E,CACX,CACA5lC,UAAAA,CAAWkjB,GACP,MAAMsgC,EAAQ,IAAIxjD,EAAWkjB,EAAOj7D,MAEpC,OADAu7F,EAAM91C,WAAWjkD,KAAKC,SACf85F,CACX,CACAljD,UAAAA,CAAW4iB,GACP,MAAM97D,EAAIzC,OAAOK,OAAO,CAAEguB,KAAM,IAAKusG,SAAU/qD,EAA4BvkB,OAAQuvE,SAAU/qD,EAA0B2B,QAAUlT,GAC3H8R,EAAa,IAAI10B,EAAWl5C,EAAE4rB,MAKpC,OAJAgiD,EAAW8B,iBAAiB1vE,EAAEm4H,UAC9BvqD,EAAW0B,yBAAyBtvE,EAAEo4H,UACtCxqD,EAAWrnB,QAAQvmD,EAAEw3C,MACrBo2B,EAAWtnB,WAAWjkD,KAAKC,SACpBsrE,CACX,CACAx0B,WAAAA,CAAY0iB,GACR,MAAM97D,EAAIzC,OAAOK,OAAO,CAAEw6H,SAAU,MAAOD,SAAU,UAAYr8D,GAC3Du8D,EAAc,IAAIj/E,GAaxB,OAZAi/E,EAAY1qC,cAAc3tF,EAAEm4H,UAC5BE,EAAY3qC,YAAY1tF,EAAEo4H,UACE,kBAAjBp4H,EAAEkM,YAAiD,kBAAflM,EAAEgM,SACjB,kBAAjBhM,EAAE0Y,WACT2/G,EAAY9xE,QAAQvmD,EAAEkM,WAAYlM,EAAEgM,SAAUhM,EAAE0Y,YAEhD2/G,EAAY9xE,QAAQvmD,EAAEkM,WAAYlM,EAAEgM,SAAU,IAEvB,kBAAfhM,EAAEgM,UACdqsH,EAAYxxE,YAAY7mD,EAAEgM,UAE9BqsH,EAAY/xE,WAAWjkD,KAAKC,SACrB+1H,CACX,CACA9mD,YAAAA,CAAazV,GACT,IAAI3jB,EACJ,MAAMu5B,EAAe,IAAIH,GAAoF,QAAtEp5B,EAAgB,OAAX2jB,QAA8B,IAAXA,OAAoB,EAASA,EAAOj7D,YAAyB,IAAPs3C,EAAgBA,EAAK,MAM1I,YAL0Ej5C,KAA1D,OAAX48D,QAA8B,IAAXA,OAAoB,EAASA,EAAOp/D,WACxDg1E,EAAavnB,YAAY2R,EAAOp/D,eAC0CwC,KAA9D,OAAX48D,QAA8B,IAAXA,OAAoB,EAASA,EAAOnF,eACxD+a,EAAaiB,gBAAgB7W,EAAOnF,cACxC+a,EAAaprB,WAAWjkD,KAAKC,SACtBovE,CACX,CACAs3B,QAAAA,CAASnoG,EAAMi7D,GACX,MAAMxmD,EAAU/X,OAAOK,OAAO,CAAEiD,OAAMkrD,WAAY,IAAM+P,GAClDgB,EAAW,IAAIksC,GAASnoG,GAc9B,YAb0E3B,KAA1D,OAAX48D,QAA8B,IAAXA,OAAoB,EAASA,EAAOp/D,WACxDogE,EAAS3S,YAAY2R,EAAOp/D,UAE5B4Y,EAAQgjH,iBACRx7D,EAASitC,mBAAmBz0F,EAAQgjH,iBAEpChjH,EAAQijH,iBACRz7D,EAASmtC,mBAAmB30F,EAAQijH,iBAET,qBAApBjjH,EAAQo0F,SACf5sC,EAASgtC,WAAWx0F,EAAQo0F,SAEhC5sC,EAASxW,WAAWjkD,KAAKC,SAClBw6D,CACX,CACAy4D,YAAAA,CAAaz5D,GACT,MAAM97D,EAAIzC,OAAOK,OAAO,CAAEguB,KAAM,IAAKowC,SAAU,IAAK+b,KAAM,EAAG1jC,KAAM,GAAKynB,GAClElwC,EAAO,IAAI2pG,GAAa,CAC1B3pG,KAAM5rB,EAAE4rB,KACRyoB,KAAMr0C,EAAEq0C,KACR2nB,SAAUh8D,EAAEg8D,SACZ+b,KAAM/3E,EAAE+3E,OAMZ,OAJI11E,KAAKwoD,OACLj/B,EAAKw/B,SAAS/oD,KAAKwoD,OACvBj/B,EAAK06B,WAAWjkD,KAAKC,SACrBD,KAAKo1H,QAAQvzH,KAAK0nB,GACXA,CACX,CACAwqE,SAAAA,CAAUt6B,GACN,MAAM97D,EAAIzC,OAAOK,OAAO,CAAE2O,OAAQ,IAAK7P,SAAU,QAAUo/D,GACrDu6B,EAAY,IAAI58C,GAAez5C,EAAEuM,QAGvC,OAFA8pF,EAAUlsC,YAAYnqD,EAAEtD,UACxB25F,EAAU/vC,WAAWjkD,KAAKC,SACnB+zF,CACX,CACAp7C,YAAAA,CAAa6gB,GAA2B,IAAnBk0C,IAAU1wG,UAAAC,OAAA,QAAAL,IAAAI,UAAA,KAAAA,UAAA,GAC3B,MAAMswG,EAAe,IAAI30D,GAAa6gB,EAAOvvD,QAI7C,OAHAqjG,EAAazlD,YAAY2R,EAAOp/D,UAChCkzG,EAAatpD,WAAWjkD,KAAKC,SAC7BstG,EAAaS,cAAcL,GACpBJ,CACX,CACAzf,WAAAA,GACI,OAAO,IAAIA,EACf,CACAsiB,eAAAA,GACI,OAAO,IAAIA,EACf,CACAqZ,gBAAAA,CAAiBhwD,GACb,MAAM08D,EAAcxkF,EAAQ8nB,EAAOiwD,iBAAkB,sBAC/C0M,EAAmB,IAAI3M,GAAiB0M,EAAa18D,GAG3D,OAFA28D,EAAiBnyE,WAAWjkD,KAAKC,SACjCD,KAAKo1H,QAAQvzH,KAAKu0H,GACXA,CACX,CACA17B,KAAAA,CAAMjhC,GACF,MAAM97D,EAAIzC,OAAOK,OAAO,CAAEiuB,KAAM,OAASiwC,GACnCyM,EAAQ,IAAIw0B,GAAM/8F,EAAE6rB,MAE1B,OADAxpB,KAAK+lE,OAAOlkE,KAAKqkE,GACVA,CACX,CACA9tB,cAAAA,CAAeqhB,GACX,MAAMw2D,EAAY,IAAI73E,GAAeqhB,EAAO4kD,SAAU5kD,EAAO6kD,aAG7D,OAFA2R,EAAUx1C,QAAQhhB,EAAOj7D,MAAMylD,WAAWjkD,KAAKC,SAC/CD,KAAKo1H,QAAQvzH,KAAKouH,GACXA,CACX,CACA7pB,SAAAA,CAAUnzF,GACN,OAAO,IAAImzF,GAAUnzF,EACzB,CACAumC,MAAAA,CAAOigB,GACH,MAAM97D,EAAIzC,OAAOK,OAAO,CAAEq/D,MAAO,GAAI3nD,QAAS,CAAC,GAAKwmD,GAC9CqZ,EAAS,IAAIt5B,GAAO77C,EAAEi9D,MAAOj9D,EAAEsV,SAASgxC,WAAWjkD,KAAKC,SAE9D,OADAD,KAAKo1H,QAAQvzH,KAAKixE,GACXA,CACX,CACAgJ,IAAAA,CAAKriB,GACD,IAAI3jB,EAAI6J,EAAIooB,EAAIC,EAAIC,EACpB,MAAMqP,EAAO,IAAIwE,GAAKriB,EAAOmB,MAAiC,QAAzB9kB,EAAK2jB,EAAOxmD,eAA4B,IAAP6iC,OAAgB,EAASA,EAAGspC,UAAUn7B,WAAWjkD,KAAKC,SAQ5H,OAPAq3E,EAAK+I,iBAA8G,QAA5FtY,EAA+B,QAAzBpoB,EAAK8Z,EAAOxmD,eAA4B,IAAP0sC,OAAgB,EAASA,EAAG02E,2BAAwC,IAAPtuD,EAAgBA,EAAK,KAClH,QAAzBC,EAAKvO,EAAOxmD,eAA4B,IAAP+0D,OAAgB,EAASA,EAAGsuD,wBAC9Dp7H,OAAOq7H,QAAkC,QAAzBtuD,EAAKxO,EAAOxmD,eAA4B,IAAPg1D,OAAgB,EAASA,EAAGquD,uBAAuBp6H,SAAQxD,IAA4B,IAA1B6nF,EAAWlyB,GAAU31D,EAC/H4+E,EAAKgJ,qBAAqB1tC,OAAO2tC,GAAYlyB,MAGrDruD,KAAKo1H,QAAQvzH,KAAKy1E,GACXA,CACX,CACAwZ,KAAAA,CAAMr3B,GACF,MAAM+8D,EAAQ,IAAI1lC,GAAMr3B,EAAOh9D,KAAMg9D,EAAO98D,GAAI88D,EAAOxmD,SAASgxC,WAAWjkD,KAAKC,SAEhF,OADAD,KAAKo1H,QAAQvzH,KAAK20H,GACXA,CACX,CACA99E,QAAAA,CAAS+gB,GACL,IAAI3jB,EACJ,MAAM2gF,EAAM,IAAI/9E,GAAS,CACrBooC,UAAWrnB,EAAOh9D,KAClBukF,SAAUvnB,EAAO98D,GACjBgmG,aAAclpC,EAAOkpC,aACrBC,YAAanpC,EAAOmpC,aACrBnpC,EAAOlwC,MAKV,OAJ8B,QAAzBusB,EAAK2jB,EAAOxmD,eAA4B,IAAP6iC,OAAgB,EAASA,EAAGuY,YAC9DooE,EAAIrtD,aAAa3P,EAAOxmD,QAAQo7C,WACpCooE,EAAIxyE,WAAWjkD,KAAKC,SACpBD,KAAKo1H,QAAQvzH,KAAK40H,GACXA,CACX,CACAp+E,SAAAA,CAAUohB,GACN,IAAI3jB,EAAI6J,EACR,MAAM3N,EAAO,IAAIqG,GAAU,CACvByoC,UAAWrnB,EAAOh9D,KAClBukF,SAAUvnB,EAAO98D,GACjBgmG,aAAclpC,EAAOkpC,aACrBC,YAAanpC,EAAOmpC,cAQxB,OAN8B,QAAzB9sD,EAAK2jB,EAAOxmD,eAA4B,IAAP6iC,OAAgB,EAASA,EAAGvsB,OAC9DyoB,EAAKoT,QAAQqU,EAAOxmD,QAAQsW,OACF,QAAzBo2B,EAAK8Z,EAAOxmD,eAA4B,IAAP0sC,OAAgB,EAASA,EAAGxK,OAC9DnD,EAAKkS,QAAQuV,EAAOxmD,QAAQkiC,MAChCnD,EAAKiS,WAAWjkD,KAAKC,SACrBD,KAAKo1H,QAAQvzH,KAAKmwC,GACXA,CACX,CACA+iF,cAAAA,CAAet7D,GACX,MAAMi9D,EAAiB,IAAI3B,GAAe,CACtCzoG,MAAOmtC,EAAOh9D,KACd+1H,KAAM/4D,EAAO98D,KAQjB,OANI88D,EAAOxmD,QAAQ++B,MACf0kF,EAAetmC,QAAQ32B,EAAOxmD,QAAQ++B,MACtCynB,EAAOxmD,QAAQqT,MACfowG,EAAezmB,eAAex2C,EAAOxmD,QAAQqT,MACjDowG,EAAezyE,WAAWjkD,KAAKC,SAC/BD,KAAKo1H,QAAQvzH,KAAK60H,GACXA,CACX,CACAr9E,WAAAA,CAAYogB,GACR,MAAMk9D,EAAc,IAAIt9E,GAAY,CAChC/sB,MAAOmtC,EAAOh9D,KACd+1H,KAAM/4D,EAAO98D,GACb4sB,KAAMkwC,EAAOlwC,KACbutF,YAAar9C,EAAOxmD,QAAQ6jG,YAC5Bz8G,SAAUo/D,EAAOxmD,QAAQ5Y,WAQ7B,OANIo/D,EAAOxmD,QAAQ++B,MACf2kF,EAAYvmC,QAAQ32B,EAAOxmD,QAAQ++B,MACnCynB,EAAOxmD,QAAQkiC,MACfwhF,EAAYzyE,QAAQuV,EAAOxmD,QAAQkiC,MACvCwhF,EAAY1yE,WAAWjkD,KAAKC,SAC5BD,KAAKo1H,QAAQvzH,KAAK80H,GACXA,CACX,CACAzH,MAAAA,GAAoB,IAAbz1D,EAAMx8D,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,CAAC,EACbw8D,EAAO4/B,QAAUr5F,KACjB,MAAM42H,EAAS,IAAI1H,GAAOz1D,GAAQxV,WAAWjkD,KAAKC,SAElD,OADAD,KAAKq1H,QAAQxzH,KAAK+0H,GACXA,CACX,CACArgC,SAAAA,GAAwB,IAAdtjF,EAAOhW,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,CAAC,EAEjB,OADAgW,EAAQomF,QAAUr5F,KACX,IAAIu2F,GAAUtjF,EACzB,CACAwkC,YAAAA,CAAagiB,GACT,MAAM97D,EAAIzC,OAAOK,OAAO,CAAEq/D,MAAO,GAAI3nD,QAAS,CACtCwE,MAAO,UACNgiD,GACH6xD,EAAQ,IAAI7zE,GAAa95C,EAAEi9D,OAIjC,OAHA0wD,EAAM7wC,QAAQhjC,GAAawhC,WAAWt7E,EAAEsV,QAAQwE,QAChD6zG,EAAMrnE,WAAWjkD,KAAKC,SACtBD,KAAKo1H,QAAQvzH,KAAKypH,GACXA,CACX,CACA5kB,YAAAA,CAAajtC,GACT,MAAM97D,EAAIzC,OAAOK,OAAO,CAAEq/D,MAAO,IAAMnB,GACjC0iB,EAAQ,IAAIuqB,GAAa/oG,EAAEi9D,OAEjC,OADAuhB,EAAMl4B,WAAWjkD,KAAKC,SACfk8E,CACX,CACAh5B,IAAAA,GACI,MAAMH,EAAMhjD,KAAKC,QACjBD,KAAKq1H,QAAQn5H,SAASc,GAAMA,EAAEinD,WAAWjB,GAAKmf,WAC9CniE,KAAKy9G,OAAOvhH,SAASc,GAAMA,EAAEinD,WAAWjB,GAAKD,kBAC7C/iD,KAAK+lE,OAAO7pE,SAASgD,GAAMA,EAAE+kD,WAAWjB,GAAKD,kBAC7C/iD,KAAKo1H,QAAQl5H,SAASmC,IACbA,EAAEmlD,cACHnlD,EAAE4lD,WAAWjB,GAAKD,mBAE1B/iD,KAAKq1H,QAAQn5H,SAASc,GAAMA,EAAEinD,WAAWjB,GAAKD,kBAC9C/iD,KAAKknD,OACT,EAEJguE,GAAQhzD,OAAQ,EC3cT,MAAM20D,WAAqBx2E,EAC9B,mBAAW3N,GACP,MAAO,cACX,CACA,2BAAOokF,CAAqB9zE,EAAKmjD,EAAWvrC,EAAOp8D,EAAMnE,EAAU4Y,GAC/D,IAAI6iC,EAAI6J,EACR,MAAMo3E,EAAM5wB,EAAU6wB,cACtB,GAAY,OAARD,EACA,MAAM,IAAI3lF,EAAa,eAAgB,+DAE3C,MAAM6lF,EAAcF,GAAyC,QAAjCjhF,EAAK7iC,EAAQikH,sBAAmC,IAAPphF,EAAgBA,EAAK,GACpFqhF,EAAeJ,GAA0C,QAAlCp3E,EAAK1sC,EAAQmkH,uBAAoC,IAAPz3E,EAAgBA,EAAK,GACtF03E,EAAiB,CACnBzwG,OAAQ3T,EAAQ2T,OAChBm7B,OAAQ9uC,EAAQ8uC,OAChBk1E,cACAE,eACAC,gBAAiB,EACjBF,eAAgB,GAEpB,IAAIL,GAAa,CACb/1C,UAAWlmB,EAAMkmB,UACjBE,SAAUpmB,EAAMomB,UACjBxiF,GACEylD,WAAWjB,GACXs0E,iBAAiBD,GACjBvvE,YAAYztD,GACZ0oD,eACT,CACApiD,WAAAA,CAAYi6D,EAAOp8D,GACf6yC,QACArxC,KAAKuxF,SAAS32B,GACd56D,KAAKu3H,QAAU/4H,EACfwB,KAAK3F,SAAW+rD,EAASC,SAASO,MAClC5mD,KAAK+rE,cAAgB,CACjBnlD,OAAQ,GACRm7B,OAAQ,EACRk1E,YAAa,EACbE,aAAc,EACdC,gBAAiB,EACjBF,eAAgB,EAExB,CACApvE,WAAAA,CAAYztD,GAIR,OAHIA,IAAa+rD,EAASC,SAASK,OAASrsD,IAAa+rD,EAASC,SAASO,QACvE5mD,KAAK3F,SAAWA,GAEb2F,IACX,CACAs3H,gBAAAA,CAAiBrkH,GAEb,OADAjT,KAAK+rE,cAAgB94D,EACdjT,IACX,CACAuxF,QAAAA,CAAS32B,GACL,IAAKA,EAAMkmB,YAAclmB,EAAMomB,SAC3B,MAAM,IAAI5vC,EAAa,eAAgB,2DAK3C,OAHApxC,KAAK46D,MAAQA,EACb56D,KAAK8gF,UAAYlmB,EAAMkmB,UACvB9gF,KAAKghF,SAAWpmB,EAAMomB,SACfhhF,IACX,CACA6wF,aAAAA,CAAcp3B,GACV,MAAMzW,EAAMhjD,KAAKijD,eACjB,IAAIu0E,EAAMx3H,KAAK+rE,cAAchqB,OAAS,GAClCA,EAAS0X,EAAOmnB,OAChB5gF,KAAK3F,WAAa+rD,EAASC,SAASK,QACpC8wE,EAAa,GAANA,EACPz1E,EAAS0X,EAAOmnB,OAASnnB,EAAOg+D,aAEpC,MAAMR,EAAcj3H,KAAK+rE,cAAckrD,YACjCE,EAAen3H,KAAK+rE,cAAcorD,aAExC,OADAn0E,EAAI2nB,YACI3qE,KAAKu3H,SACT,KAAKV,GAAar4H,KAAKk5H,MACnB10E,EAAI4nB,OAAOnR,EAAOi4B,MAAQylC,EAAcp1E,EAASy1E,GACjDx0E,EAAI6nB,OAAOpR,EAAOknB,OAASs2C,EAAal1E,EAAS/hD,KAAK+rE,cAAcnlD,OAAS,EAAI4wG,GACjFx0E,EAAI6nB,OAAOpR,EAAOi4B,MAAQylC,EAAcp1E,EAAS/hD,KAAK+rE,cAAcnlD,OAAS4wG,GAC7E,MACJ,KAAKX,GAAar4H,KAAKm5H,QACnB30E,EAAI4nB,OAAOnR,EAAOknB,OAASs2C,EAAal1E,EAASy1E,GACjDx0E,EAAI6nB,OAAOpR,EAAOi4B,MAAQylC,EAAcp1E,EAAS/hD,KAAK+rE,cAAcnlD,OAAS,EAAI4wG,GACjFx0E,EAAI6nB,OAAOpR,EAAOknB,OAASs2C,EAAal1E,EAAS/hD,KAAK+rE,cAAcnlD,OAAS4wG,GAKrFx0E,EAAIz5C,SACJy5C,EAAIqyB,WACR,CACAlyB,IAAAA,GACInjD,KAAKijD,eACLjjD,KAAKyjD,cACL,MAAMq9B,EAAY9gF,KAAK8gF,UACjBE,EAAWhhF,KAAKghF,SACtB,IAAKF,IAAcE,EACf,MAAM,IAAI5vC,EAAa,SAAU,0BACrC,MAAM9kB,EAAQw0D,EAAUpZ,mBAAmB1nE,KAAK3F,SAAU,GACpDkyB,EAAMy0D,EAAStZ,mBAAmB1nE,KAAK3F,SAAU,GACvD2F,KAAK6wF,cAAc,CACflQ,OAAQr0D,EAAMltB,EACdsyF,MAAOnlE,EAAIntB,EACXwhF,OAAQE,EAAUpT,aAAa3zB,OAAS+mC,EAAUpT,aAAa7nB,YAC/D8rC,MAAO3Q,EAAStT,aAAa3zB,OAASinC,EAAStT,aAAa7nB,YAC5D4xE,YAAa32C,EAAUpT,aAAa7nB,aAE5C,EAEJgxE,GAAar4H,KAAO,CAChBk5H,MAAO,EACPC,QAAS,GC/GN,MAAMz+E,WAAiBE,GAC1B,mBAAW1G,GACP,MAAO,UACX,CACA,mBAAWklF,GACP,OAAO,CACX,CACA,qBAAWC,GACP,OAAQ,CACZ,CACA,oBAAOC,CAAcl9D,GACjB,OAAO,IAAI1hB,GAAS0hB,EAAO1hB,GAAS0+E,SACxC,CACA,sBAAOG,CAAgBn9D,GACnB,OAAO,IAAI1hB,GAAS0hB,EAAO1hB,GAAS2+E,WACxC,CACAl3H,WAAAA,CAAYi6D,EAAOvM,GAEf,GADAhd,MAAMupB,EAAO,QACRvM,EAAW,CACZ,IAAI2pE,EAAYp9D,EAAMkmB,UAAUutB,eAAe,GAAG5zG,KACzB,kBAAdu9H,IACPA,EAAY9lF,SAAS8lF,EAAW,KAEpC,IAAIC,EAAWr9D,EAAMomB,SAASqtB,eAAe,GAAG5zG,KACxB,kBAAbw9H,IACPA,EAAW/lF,SAAS+lF,EAAU,KAG9B5pE,EADA9/C,MAAMypH,IAAczpH,MAAM0pH,GACd/+E,GAAS0+E,SAGTI,EAAYC,EAAW/+E,GAAS2+E,WAAa3+E,GAAS0+E,QAE1E,CACA53H,KAAKquD,UAAYA,EACjBruD,KAAK+rE,cAAck2B,IAAM,GACzBjiG,KAAK+rE,cAAcm2B,IAAM,GACzBliG,KAAK+rE,cAAchqB,OAAS,EAChC,CACA8gD,SAAAA,CAAUppC,GACN,GAA8B,IAA1BA,EAAOqpC,QAAQ5lG,QAAyC,IAAzBu8D,EAAOspC,OAAO7lG,OAC7C,MAAM,IAAIk0C,EAAa,eAAgB,yBAE3C,MAAM4R,EAAMhjD,KAAKijD,eACX09B,EAASlnB,EAAOknB,OAChBmiB,EAAUrpC,EAAOqpC,QACjBpR,EAAQj4B,EAAOi4B,MACfrjC,EAAYoL,EAAOpL,UACzB,GAAIA,IAAcnV,GAAS0+E,UAAYvpE,IAAcnV,GAAS2+E,WAC1D,MAAM,IAAIzmF,EAAa,WAAY,2BAEvC,MAAMuxD,EAAe3iG,KAAK46D,MAAM+nC,aAChC,IAAK,IAAI/mG,EAAI,EAAGA,EAAI+mG,EAAazlG,SAAUtB,EAAG,CAC1C,MAAMs8H,EAASp1B,EAAQH,EAAa/mG,IAAMoE,KAAK+rE,cAAchqB,OAC7D,GAAIxzC,MAAM2pH,GACN,MAAM,IAAI9mF,EAAa,eAAgB,oCAE3C4R,EAAI2nB,YACJ3nB,EAAI4nB,OAAO+V,EAAQu3C,EAAS,EAAI7pE,GAChCrL,EAAI6nB,OAAO6mB,EAAOwmC,EAAS,EAAI7pE,GAC/BrL,EAAIqyB,YACJryB,EAAIz5C,QACR,CACAvJ,KAAKyjD,aACT,EChEG,MAAM00E,GACT,gBAAWC,GACP,MAAO,CACH9+H,SAAU,0BACV++H,OAAQ,0BACRC,MAAO,0BACPvlH,GAAI,gCACJwlH,cAAe,sBAEvB,CACA53H,WAAAA,GAA8D,IAAlD63H,EAAYv7H,UAAAC,OAAA,QAAAL,IAAAI,UAAA,GAAAA,UAAA,GAAG,kCACvB+C,KAAKy4H,aAAe,GACpBz4H,KAAK04H,UAAUF,EACnB,CACAG,aAAAA,CAAcnrE,GACV,IAAI1X,EACJ,OAA4D,QAApDA,EAAKsjB,EAAOG,cAAc/L,GAAYsM,gBAA6B,IAAPhkB,EAAgBA,GAAM,CAC9F,CACA4iF,SAAAA,CAAUF,GACFL,GAAOC,MAAMI,KACbA,EAAeL,GAAOC,MAAMI,IAEhCx4H,KAAKy4H,aAAe,GACpB,MAAMr8H,EAAOo8H,EAAav8H,MAAM,WAChC,GAAoB,IAAhBG,EAAKc,OACL,MAAM,IAAIk0C,EAAa,eAAgB,0BAAFloC,OAA4BsvH,IAErE,IAAK,IAAI58H,EAAI,EAAGA,EAAIQ,EAAKc,SAAUtB,EAC/BoE,KAAKy4H,aAAa78H,GAAKoE,KAAK24H,cAAcv8H,EAAKR,GAEvD,CACAg9H,iBAAAA,CAAkBC,GACd,MAAM77H,EAAI41C,OAAOimF,GACjB,GAAI77H,EAAI,GAAKA,EAAIgD,KAAKy4H,aAAav7H,OAC/B,MAAM,IAAIk0C,EAAa,eAAgB,uCAAFloC,OAAyClJ,KAAKy4H,aAAav7H,OAAM,KAAAgM,OAAI2vH,IAE9G,OAAO74H,KAAKy4H,aAAaz7H,EAAI,EACjC,CACA87H,eAAAA,CAAgBC,EAASF,GACrB,MAAMG,EAAch5H,KAAK44H,kBAAkBC,GACrCz+H,EAAIw4C,OAAOmmF,GACjB,GAAI3+H,EAAI,EACJ,MAAM,IAAIg3C,EAAa,eAAgB,oCAAFloC,OAAsC6vH,IAE/E,OAAOC,EAAc5+H,CACzB,CACA6+H,cAAAA,CAAeF,EAASF,GACpB,MAAM5qE,EAAYjuD,KAAK84H,gBAAgBC,EAASF,GAC1CvuE,EAASriD,KAAKC,MAAM+lD,EAAY,IAChC3zD,EAAQ2zD,EAAY,GAC1B,MAAO,GAAP/kD,OAAUkwD,EAAOc,cAAc5/D,GAAM,KAAA4O,OAAIohD,EAC7C,ECrDJ,IAAItP,GAAwC,SAAUC,EAASC,EAAY55C,EAAG65C,GAE1E,OAAO,IAAK75C,IAAMA,EAAIwwB,WAAU,SAAUG,EAASmpB,GAC/C,SAASC,EAAU/gD,GAAS,IAAMghD,EAAKH,EAAUp5C,KAAKzH,GAAS,CAAE,MAAO+D,GAAK+8C,EAAO/8C,EAAI,CAAE,CAC1F,SAASk9C,EAASjhD,GAAS,IAAMghD,EAAKH,EAAiB,MAAE7gD,GAAS,CAAE,MAAO+D,GAAK+8C,EAAO/8C,EAAI,CAAE,CAC7F,SAASi9C,EAAKpL,GAJlB,IAAe51C,EAIa41C,EAAOluC,KAAOiwB,EAAQie,EAAO51C,QAJ1CA,EAIyD41C,EAAO51C,MAJhDA,aAAiBgH,EAAIhH,EAAQ,IAAIgH,GAAE,SAAU2wB,GAAWA,EAAQ33B,EAAQ,KAIjB+H,KAAKg5C,EAAWE,EAAW,CAC7GD,GAAMH,EAAYA,EAAUp4C,MAAMk4C,EAASC,GAAc,KAAKn5C,OAClE,GACJ,EAmFO,MAAMm3H,GACT,gBAAOC,GAAwB,QAAAtnF,EAAA50C,UAAAC,OAAXk8H,EAAS,IAAAt4H,MAAA+wC,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAATqnF,EAASrnF,GAAA90C,UAAA80C,GACzB,OAAOiJ,GAAUh7C,UAAM,OAAQ,GAAQ,YAC9Bo5H,IACDA,EAAYl+H,OAAOkB,KAAKq/C,EAAK2B,QAEjC,MAAMi8E,EAAmB,GACzB,IAAK,MAAMr8E,KAAYo8E,EACnBC,EAAiBx3H,KAAK45C,EAAKsB,KAAKC,UAE9BlrB,QAAQugE,IAAIgnC,EACtB,GACJ,CACA,eAAOC,GAAuB,QAAA30D,EAAA1nE,UAAAC,OAAXk8H,EAAS,IAAAt4H,MAAA6jE,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAATu0D,EAASv0D,GAAA5nE,UAAA4nE,GACxB3uB,EAAgBrsC,WAAauvH,EAAUr9H,KAAK,KAC5C+4C,EAAQC,OACZ,CACA,eAAOwkF,GACH,OAAOzkF,EAAQxjC,IAAI,cAAcrV,MAAM,IAC3C,CACA,kCAAWsjE,GACP,OAAOnG,EAAOmG,uBAClB,CACA,kCAAWA,CAAwBkpC,GAC/BrvC,EAAOmG,wBAA0BkpC,CACrC,CACA,yBAAWtpC,GACP,OAAO/F,EAAO+F,cAClB,CACA,yBAAWA,CAAe8lC,GACtB7rC,EAAO+F,eAAiB8lC,CAC5B,CACA,iBAAW/lC,GACP,OAAO9F,EAAO8F,MAClB,CACA,iBAAWA,CAAOzV,GACd2P,EAAO8F,OAASzV,CACpB,CACA,8BAAWyW,GACP,OAAO9G,EAAO8G,mBAClB,CACA,8BAAWA,CAAoB5lE,GAC3B8+D,EAAO8G,oBAAsB5lE,CACjC,CACA,+BAAW6lE,GACP,OAAO/G,EAAO+G,oBAClB,CACA,+BAAWA,CAAqB7lE,GAC5B8+D,EAAO+G,qBAAuB7lE,CAClC,CACA,qBAAWw1D,GACP,OAAOsJ,EAAOtJ,UAClB,CACA,qBAAWA,CAAWx1D,GAClB8+D,EAAOtJ,WAAax1D,CACxB,CACA,+BAAW8lE,GACP,OAAOhH,EAAOgH,oBAClB,CACA,+BAAWA,CAAqB9lE,GAC5B8+D,EAAOgH,qBAAuB9lE,CAClC,CACA,8BAAW+lE,GACP,OAAOjH,EAAOiH,mBAClB,CACA,8BAAWA,CAAoB/lE,GAC3B8+D,EAAOiH,oBAAsB/lE,CACjC,CACA,+BAAWglE,GACP,OAAOppB,EAAgB6B,MAAMrC,SACjC,CACA,+BAAW4pB,CAAqBhlE,GAC5B47C,EAAgB6B,MAAMrC,UAAYp7C,EAClC47C,EAAgBiD,SAASzD,UAAYp7C,EACrCw6C,EAAQC,MAAM,SACdD,EAAQC,MAAM,WAClB,CACA,sBAAWsqB,GACP,OAAOjG,EAAOiG,WAClB,CACA,sBAAWA,CAAY/kE,GACnB8+D,EAAOiG,YAAc/kE,CACzB,CACA,qBAAW8kE,GACP,OAAOhG,EAAOgG,UAClB,CACA,qBAAWA,CAAW9kE,GAClB8+D,EAAOgG,WAAa9kE,CACxB,CACA,kBAAWknE,GACP,OAAOpI,EAAOoI,OAClB,CACA,kBAAWV,GACP,OAAO1H,EAAO0H,OAClB,CACA,mBAAOzR,CAAaqL,GAChB,OAAOtB,EAAO/J,aAAaqL,EAC/B,CACA,sBAAOK,CAAgBL,GACnB,OAAOtB,EAAO2B,gBAAgBL,EAClC,CACA,uBAAOI,GACH,OAAO1B,EAAO0B,kBAClB,CACA,qBAAOzB,CAAeC,GAClB,OAAOF,EAAOC,eAAeC,EACjC,CACA,oBAAOC,CAAcv/D,EAAKs/D,EAAMG,GAC5B,OAAOL,EAAOG,cAAcv/D,EAAKs/D,EAAMG,EAC3C,CACA,sBAAO0B,CAAgBxB,GACnB,OAAOP,EAAO+B,gBAAgBxB,EAClC,EAEJu/D,GAAQM,MAAQ,CACZC,QC9MmB,QD+MnBl5E,GC9Mc,2CD+Mdm5E,KC9MgB,2BD+MhBC,KAAM,IAEVT,GAAQ3iF,WAAaA,EACrB2iF,GAAQriF,WAAaA,EACrBqiF,GAAQhqD,aAAeA,GACvBgqD,GAAQlgD,QAAUA,GAClBkgD,GAAQ39C,QAAUA,GAClB29C,GAAQp9C,KAAOA,GACfo9C,GAAQpiF,KAAOA,GACfoiF,GAAQt/E,YAAcA,EACtBs/E,GAAQvyC,cAAgBA,GACxBuyC,GAAQniF,YAAcA,GACtBmiF,GAAQnsC,KAAOA,GACfmsC,GAAQtrC,SAAWA,GACnBsrC,GAAQlpC,UAAYA,GACpBkpC,GAAQpoC,MAAQA,GAChBooC,GAAQ3sH,IAAMA,GACd2sH,GAAQ3iC,UAAYA,GACpB2iC,GAAQ74E,QAAUA,EAClB64E,GAAQhE,QAAUA,GAClBgE,GAAQz9E,KAAOA,EACfy9E,GAAQ9yB,UAAYA,GACpB8yB,GAAQzmF,SAAWA,EACnBymF,GAAQ9hF,eAAiBA,GACzB8hF,GAAQh/B,UAAYA,GACpBg/B,GAAQhR,UAAYA,GACpBgR,GAAQ7hF,UAAYA,GACpB6hF,GAAQ1zB,eAAiBA,GACzB0zB,GAAQ5hF,aE5OD,cAA2B2B,GAC9B,mBAAWvG,GACP,MAAO,cACX,CACA/xC,WAAAA,CAAYi1E,GACRvkC,MAAMukC,GAAY,GAClB51E,KAAK+rE,cAAgB7wE,OAAOK,OAAOL,OAAOK,OAAO,CAAC,EAAGyE,KAAK+rE,eAAgB,CAAEhqB,OAAQ,KACpF/hD,KAAKolF,aACT,GFqOJ8zC,GAAQU,WG5OD,MACHj5H,WAAAA,CAAY3G,GACRgG,KAAKwmE,MAAQ,IAAIvd,EACjBjpD,KAAK65H,OAAO7/H,EAChB,CACA6/H,MAAAA,CAAO7/H,GAGH,OAFAgG,KAAKhG,IAAMA,EACXgG,KAAKknD,QACElnD,IACX,CACA85H,MAAAA,GACI,OAAO95H,KAAKhG,GAChB,CACAktD,KAAAA,GACIlnD,KAAK+1C,SAAW/1C,KAAKwmE,MAAM7Y,YAAY3tD,KAAKhG,KAC5CgG,KAAK4tD,UAAY5tD,KAAK+1C,SAAS2X,KAC3B1tD,KAAK+1C,SAAS2T,aACd1pD,KAAK4tD,WAAa5tD,KAAK+1C,SAAS2T,YAEpC,IADwBT,EAAMgD,WAAWjsD,KAAK+1C,SAASv3C,MAEnD,MAAM,IAAI4yC,EAAa,eAAgB,yBAAFloC,OAA2BlJ,KAAKhG,MAEzEgG,KAAKyvD,MAAQzvD,KAAKwmE,MAAM3X,cAAc7uD,KAAKwmE,MAAM3Y,aAAa7tD,KAAK4tD,WAAY3E,EAAMgD,WAAWjsD,KAAK+1C,SAASv3C,OAC9GwB,KAAK2vD,SAAW,CAAC,EACjB3vD,KAAK+5H,gBAAkB,CAAC,EACxB/5H,KAAKg6H,wBAA0B,CAAC,EAChC,MAAMtqE,EAAezG,EAAMK,YAAYtpD,KAAK+1C,SAAS2X,MACrD,IAAK,IAAI9xD,EAAI,EAAGA,EAAIqtD,EAAMG,MAAMlsD,SAAUtB,EAAG,CACzC,MAAM7B,GAAS21D,EAAe9zD,GAAKqtD,EAAMG,MAAMlsD,OACzC0yD,EAAW3G,EAAMG,MAAMrvD,GACvB81D,EAAW7vD,KAAKwmE,MAAMjY,oBAAoBqB,EAAU5vD,KAAKyvD,MAAM7zD,IACrEoE,KAAK2vD,SAASC,GAAYC,EAC1B7vD,KAAK+5H,gBAAgB/5H,KAAKyvD,MAAM7zD,IAAMi0D,EACtC7vD,KAAKg6H,wBAAwBh6H,KAAKyvD,MAAM7zD,IAAMi0D,CAClD,CACA,OAAO7vD,IACX,CACAi6H,aAAAA,CAAcjgI,GACV,MAAM0zD,EAAO1tD,KAAKwmE,MAAM7Y,YAAY3zD,GAAK0zD,KACnCc,EAAQxuD,KAAKwmE,MAAMjZ,aAAavtD,KAAK2vD,SAASjC,IACpD,MAAO,CACH3jD,KAAM/J,KAAK2vD,SAASjC,GACpBhE,WAAY8E,EAAM9E,WAE1B,CACAwwE,UAAAA,CAAWnwH,GACPA,EAAOA,EAAKkE,cACZ,MAAMugD,EAAQxuD,KAAKwmE,MAAMjZ,aAAaxjD,GAChCowH,EAAYn6H,KAAK2vD,SAASnB,EAAMd,MAChC0sE,EAAWp6H,KAAKwmE,MAAMjZ,aAAa4sE,GACzC,GAAIA,IAAcpwH,EACd,MAAO,CACHA,KAAMowH,EACNzwE,WAAY8E,EAAM9E,WAClB2wE,QAAQ,GAGhB,MAAMC,EAAYt6H,KAAK+5H,gBAAgB/5H,KAAKwmE,MAAM3Y,aAAa9jD,IAC/D,QAAkBlN,IAAdy9H,EACA,MAAO,CACHvwH,KAAMuwH,EACN5wE,WAAY1pD,KAAKwmE,MAAMjZ,aAAa+sE,GAAW5wE,WAC/C2wE,QAAQ,GAGhB,MAAME,EAAoBv6H,KAAKg6H,wBAAwBh6H,KAAKwmE,MAAM3Y,aAAa9jD,IAC/E,YAA0BlN,IAAtB09H,GACAv6H,KAAK2vD,SAASyqE,EAAS1sE,MAAQ6sE,SACxBv6H,KAAK+5H,gBAAgB/5H,KAAKwmE,MAAM3Y,aAAassE,IACpDn6H,KAAK+5H,gBAAgB/5H,KAAKwmE,MAAM3Y,aAAa9jD,IAASwwH,EAC/C,CACHxwH,KAAMwwH,EACN7wE,WAAY1pD,KAAKwmE,MAAMjZ,aAAagtE,GAAmB7wE,WACvD2wE,QAAQ,IAGZD,EAAS1sE,OAAS3jD,UACX/J,KAAK+5H,gBAAgB/5H,KAAKwmE,MAAM3Y,aAAa7tD,KAAK2vD,SAASnB,EAAMd,QACxE1tD,KAAK+5H,gBAAgB/5H,KAAKwmE,MAAM3Y,aAAausE,EAAS1sE,OAAS0sE,EAAS1sE,KACxE1tD,KAAK2vD,SAASyqE,EAAS1sE,MAAQ0sE,EAAS1sE,KACjC,CACH3jD,KAAMqwH,EAAS1sE,KACfhE,gBAAY7sD,EACZw9H,QAAQ,YAGTr6H,KAAK+5H,gBAAgB/5H,KAAKwmE,MAAM3Y,aAAa7tD,KAAK2vD,SAASnB,EAAMd,QACxE1tD,KAAK+5H,gBAAgB/5H,KAAKwmE,MAAM3Y,aAAa9jD,IAASA,SAC/C/J,KAAK2vD,SAASyqE,EAAS1sE,MAC9B1tD,KAAK2vD,SAASyqE,EAAS1sE,MAAQ3jD,EACxB,CACHA,OACA2/C,WAAY8E,EAAM9E,WAClB2wE,QAAQ,GAEhB,GH8IJnB,GAAQzoB,aAAeA,GACvByoB,GAAQ1P,WAAaA,GACrB0P,GAAQ9yE,SAAWA,EACnB8yE,GAAQ9oB,gBAAkBA,GAC1B8oB,GAAQzP,iBAAmBA,GAC3ByP,GAAQjwE,MAAQA,EAChBiwE,GAAQ/kD,KAAOA,GACf+kD,GAAQ3hF,SAAWA,GACnB2hF,GAAQxyB,aAAeA,GACvBwyB,GAAQvyB,SAAWA,GACnBuyB,GAAQ/wB,YAAcA,GACtB+wB,GAAQ7kC,OAASA,GACjB6kC,GAAQzhF,aAAeA,GACvByhF,GAAQr6E,SAAWA,EACnBq6E,GAAQjoD,cAAgBA,GACxBioD,GAAQ/tB,SAAWA,GACnB+tB,GAAQ/L,WAAaA,GACrB+L,GAAQxhF,WAAaA,GACrBwhF,GAAQnhF,MAAQA,GAChBmhF,GAAQ9gF,eAAiBA,GACzB8gF,GAAQrC,aAAeA,GACvBqC,GAAQ7gF,UAAYA,GACpB6gF,GAAQxgD,cAAgBA,GACxBwgD,GAAQ/+B,UAAYA,GACpB++B,GAAQ3gF,WAAaA,GACrB2gF,GAAQzgF,UAAYA,GACpBygF,GAAQxgF,SAAWA,GACnBwgF,GAAQvgF,KAAOA,EACfugF,GAAQtgF,aAAeA,GACvBsgF,GAAQlgF,OAASA,GACjBkgF,GAAQ1wB,WAAaA,GACrB0wB,GAAQhK,OAASA,GACjBgK,GAAQjgF,QAAUA,GAClBigF,GAAQhgF,SAAWA,GACnBggF,GAAQ//E,SAAWA,GACnB+/E,GAAQ9/E,OAASA,GACjB8/E,GAAQ7/E,YAAcA,GACtB6/E,GAAQhG,aAAeA,GACvBgG,GAAQ5/E,SAAWA,GACnB4/E,GAAQprC,YAAcA,GACtBorC,GAAQ3hB,cAAgBA,GACxB2hB,GAAQ7F,YAAcA,GACtB6F,GAAQ3/E,QIrRD,cAAsB6M,EACzB,mBAAW1T,GACP,MAAO,SACX,CACA/xC,WAAAA,CAAYuvD,GACR7e,QACArxC,KAAKkwD,IAAMA,EACXlwD,KAAK3F,SAAW+rD,EAASC,SAASG,OAClCxmD,KAAKupB,KAAO48B,EAAOq0E,QACvB,CACAr3E,IAAAA,GACI,MAAMH,EAAMhjD,KAAKijD,eACXl5C,EAAO/J,KAAKonD,oBAClBpnD,KAAKyjD,cACL,MAAMolB,EAAgB9+D,EAAK8hE,mBACrBpc,EAAQ1lD,EAAK26C,eACb+1E,EAAW3lF,EAAQxjC,IAAI,mBAAqBu3D,EAAgBpZ,EAC5DrwD,EAAI2K,EAAKmqE,gBAAkBrL,IAAkBlwB,EAAKgvB,GAAK59D,EAAK2hE,gBAAkB/yB,EAAKkvB,MAAQ,EAAIlvB,EAAKkvB,MAAQ,GAClH,IAAIxoE,EAAI0K,EAAKmkE,iBAAiBnE,MAAQ/pE,KAAKkwD,KAAO,EAAIuqE,EAAW,GACjEz6H,KAAKq8C,SAASrX,KAAO8P,EAAQxjC,IAAI,oBAAsBm+C,EACvD,IAAK,IAAI7zD,EAAI,EAAGA,EAAIoE,KAAKkwD,MAAOt0D,EAC5BoE,KAAKslD,WAAWtC,EAAK5jD,EAAGC,GACxBA,GAAKo7H,CAEb,GJ8PJvB,GAAQf,OAASA,GACjBe,GAAQ1/E,OAASA,GACjB0/E,GAAQvpB,QAAUA,GAClBupB,GAAQnE,eAAiBA,GACzBmE,GAAQx+B,MAAQA,GAChBw+B,GAAQv/E,MAAQA,GAChBu/E,GAAQ9nF,aAAeA,EACvB8nF,GAAQwB,UAAO79H,EACfq8H,GAAQnuD,4BAA8BA,EACtCmuD,GAAQluD,0BAA4BA,EACpCkuD,GAAQ1vC,6BAA+BA,GACvC0vC,GAAQzvC,2BAA6BA,GACrCyvC,GAAQ9vC,gBAAkBA,GAC1B8vC,GAAQxvC,cAAgBA,GACxBwvC,GAAQp+E,WAAaA,EACrBo+E,GAAQn+E,UAAYA,EACpBm+E,GAAQ/yE,OAASA,EACjB+yE,GAAQhzE,iBAAmBA,EAC3BgzE,GAAQnuB,iBAAmBA,GAC3BmuB,GAAQluB,oBAAsBA,GAC9BkuB,GAAQzgD,YAAcA,GACtBygD,GAAQ1gD,sBAAwBA,GAChC0gD,GAAQhuB,UAAYA,GACpBguB,GAAQ3G,oBAAsBA,GAC9B2G,GAAQjuB,kBAAoBA,GAC5BiuB,GAAQv1B,UAAYA,GKnTb,MCQD/xD,GAAQ,CAAExK,QAAS,SACnBuzF,GAAO,CAAEvzF,QAAS,QAQlBiyF,GAAmB,CANL59E,EAAKsB,KAAK,UCXP,w6jUDW2BnL,IAC5B6J,EAAKsB,KAAK,YDZP,wm7BCY+B49E,IAC9Bl/E,EAAKsB,KAAK,YEbP,wo9BFUZ,CAAE3V,QAAS,OAAQiO,OAAQ,SAIvBoG,EAAKsB,KAAK,WGdP,g47BHc6BnL,IAChC6J,EAAKsB,KAAK,WIfP,o/qSJe6BnL,IAC1B6J,EAAKsB,KAAK,kBKhBP,o6mELgB0C49E,KASxEzB,GAAQM,MAAMG,KAAO,UACrBT,GAAQI,SAAS,UAAW,aAC5BxnG,QAAQ8oG,WAAWvB,IAAkBh3H,MAAK,uBMlB1C,MAqCA,GArCwC3J,IAAoC,IAAnC,YAAEmiI,EAAW,aAAExrE,GAAc32D,EACpE,MAAMoiI,GAAen1H,EAAAA,EAAAA,QAA8B,MAiCnD,OA/BAP,EAAAA,EAAAA,YAAU,KACR,IAAK01H,EAAan8H,QAAS,OAC3Bm8H,EAAan8H,QAAQqV,UAAY,GAEjC,MAAMw3F,EAAW,IAAIL,GAAS2vB,EAAan8H,QAASwsG,GAASQ,SAASG,KACtEN,EAASvjB,OAAO,IAAK,KACrB,MAAMhoF,EAAUurG,EAASxnD,aAEnBwE,EAAQ,IAAIzQ,GAAM,EAAG,EAAG,KAQ9B,GAPIsX,EACF7G,EAAMszD,QAAQ,UAAUG,gBAAgB5sD,GAExC7G,EAAMszD,QAAQ,UAEhBtzD,EAAMvE,WAAWhkD,GAASkjD,OAEtB03E,EAAY39H,OAAS,EAAG,CAC1B,MAAM09D,EAAQigE,EAAYhhI,KAAKkQ,IAC7B,MAAO,CAAE5N,EAAQutD,EAAa,GAAIY,GAAUvgD,EAAKoG,MAAM,4BAA8B,GAC/EnW,EAAG,GAAAkP,OAAM/M,EAAO8R,eAAa/E,OAAGwgD,EAAU,KAAAxgD,OAAIohD,GAC9Cyc,EAAY,IAAIozB,GAAU,CAAE/9F,KAAM,CAACpC,GAAM2/D,SAAU,MAIzD,OAHIjQ,GACFqd,EAAUQ,YAAY,IAAIhxB,EAAWmT,GAAa,GAE7Cqd,KAGTq/B,GAAUsb,cAAczhH,EAASuoD,EAAOoS,EAC1C,IACC,CAACigE,EAAaxrE,KAEV0rE,EAAAA,GAAAA,KAAA,OAAK76E,UAAU,kBAAkBtiD,IAAKk9H,KCVzCE,GAAoB,CACxBC,MAAO,eACPC,OAAQ,UACRlhI,IAAK,IACLmhI,IAAK,MACL5lB,IAAK,MACLtjG,KAAM,GACNmpH,KAAM,UAGFC,IAAe33H,EAAAA,EAAAA,eAAiC,CACpD43H,aAAc,SACdC,gBAAiBA,OACjBC,aAAcR,GACdS,gBAAiBA,OACjBC,aAAc,KACdC,gBAAiBA,SAINC,GAAWA,KAAM32H,EAAAA,EAAAA,YAAWo2H,IAM5BQ,GAAyDnjI,IAAmB,IAAlB,SAAE0I,GAAU1I,EACjF,MAAO4iI,EAAcC,IAAmB31H,EAAAA,EAAAA,UAAS,WAC1C41H,EAAcC,IAAmB71H,EAAAA,EAAAA,UAAeo1H,KAChDU,EAAcC,IAAmB/1H,EAAAA,EAAAA,UAA8B,MAMtE,OAJAR,EAAAA,EAAAA,YAAU,KACR2C,QAAQ6U,IAAI,yCAA0C4+G,KACrD,CAACA,KAGFT,EAAAA,GAAAA,KAACM,GAAav3H,SAAQ,CACpBxJ,MAAO,CACLghI,eACAC,kBACAC,eACAC,kBACAC,eACAC,mBACAv6H,SAEDA,KC1ED06H,GAAyC,CAE/C,EAEM1/H,GAAO,CACX,CAAEovD,MAAO,IAAKC,MAAO,MACrB,CAAED,MAAO,IAAKC,MAAO,MACrB,CAAED,MAAO,IAAKC,MAAO,MACrB,CAAED,MAAO,IAAKC,MAAO,OACrB,CAAED,MAAO,IAAKC,MAAO,OACrB,CAAED,MAAO,IAAKC,MAAO,OACrB,CAAED,MAAO,KAAMC,MAAO,OACtB,CAAED,MAAO,KAAMC,MAAO,OACtB,CAAED,MAAO,KAAMC,MAAO,MACtB,CAAED,MAAO,KAAMC,MAAO,MACtB,CAAED,MAAO,KAAMC,MAAO,MACtB,CAAED,MAAO,IAAKC,MAAO,OAIjBswE,GAQD,CACHj6H,EAAG,CAAEk6H,MAAO,IAAKC,YAAa,IAAKC,SAAU,IAAKC,WAAY,KAAMC,WAAY,MAAOC,QAAS,MAAOC,SAAU,SACjH/iH,GAAI,CAAEyiH,MAAO,KAAMC,YAAa,KAAMC,SAAU,KAAMC,WAAY,MAAOC,WAAY,KAAMC,QAAS,KAAMC,SAAU,QACpHnsE,GAAI,CAAE6rE,MAAO,KAAMC,YAAa,KAAMC,SAAU,KAAMC,WAAY,OAAQC,WAAY,IAAKC,QAAS,IAAKC,SAAU,KACnH98H,EAAG,CAAEw8H,MAAO,IAAKC,YAAa,IAAKC,SAAU,KAAMC,WAAY,MAAOC,WAAY,MAAOC,QAAS,MAAOC,SAAU,SACnH9iH,GAAI,CAAEwiH,MAAO,KAAMC,YAAa,KAAMC,SAAU,IAAKC,WAAY,KAAMC,WAAY,KAAMC,QAAS,KAAMC,SAAU,QAClH9rE,IAAK,CAAEwrE,MAAO,MAAOC,YAAa,MAAOC,SAAU,KAAMC,WAAY,OAAQC,WAAY,KAAMC,QAAS,KAAMC,SAAU,MACxH1rE,GAAI,CAAEorE,MAAO,KAAMC,YAAa,KAAMC,SAAU,MAAOC,WAAY,QAASC,WAAY,IAAKC,QAAS,IAAKC,SAAU,KACrHz8H,EAAG,CAAEm8H,MAAO,IAAKC,YAAa,IAAKC,SAAU,IAAKC,WAAY,KAAMC,WAAY,KAAMC,QAAS,KAAMC,SAAU,QAC/G,MAAO,CAAEN,MAAO,MAAOC,YAAa,MAAOC,SAAU,MAAOC,WAAY,QAASC,WAAY,IAAKC,QAAS,IAAKC,SAAU,KAC1HhsE,GAAI,CAAE0rE,MAAO,KAAMC,YAAa,KAAMC,SAAU,KAAMC,WAAY,OAAQC,WAAY,KAAMC,QAAS,KAAMC,SAAU,MACrHx8H,EAAG,CAAEk8H,MAAO,IAAKC,YAAa,IAAKC,SAAU,IAAKC,WAAY,KAAMC,WAAY,KAAMC,QAAS,MAAOC,SAAU,SAChH,MAAO,CAAEN,MAAO,MAAOC,YAAa,MAAOC,SAAU,MAAOC,WAAY,OAAQC,WAAY,IAAKC,QAAS,KAAMC,SAAU,MAC1H3iH,GAAI,CAAEqiH,MAAO,KAAMC,YAAa,KAAMC,SAAU,KAAMC,WAAY,MAAOC,WAAY,MAAOC,QAAS,KAAMC,SAAU,QACrHlsE,GAAI,CAAE4rE,MAAO,KAAMC,YAAa,KAAMC,SAAU,KAAMC,WAAY,OAAQC,WAAY,KAAMC,QAAS,IAAKC,SAAU,KACpHv8H,EAAG,CAAEi8H,MAAO,IAAKC,YAAa,IAAKC,SAAU,IAAKC,WAAY,MAAOC,WAAY,MAAOC,QAAS,MAAOC,SAAU,SAClH1iH,GAAI,CAAEoiH,MAAO,KAAMC,YAAa,KAAMC,SAAU,KAAMC,WAAY,KAAMC,WAAY,KAAMC,QAAS,KAAMC,SAAU,QACnH3rE,GAAI,CAAEqrE,MAAO,KAAMC,YAAa,KAAMC,SAAU,KAAMC,WAAY,QAASC,WAAY,IAAKC,QAAS,IAAKC,SAAU,KACpHl8H,EAAG,CAAE47H,MAAO,IAAKC,YAAa,KAAMC,SAAU,IAAKC,WAAY,KAAMC,WAAY,KAAMC,QAAS,KAAMC,SAAU,QAChH,KAAM,CAAEN,MAAO,KAAMC,YAAa,IAAKC,SAAU,KAAMC,WAAY,MAAOC,WAAY,MAAOC,QAAS,MAAOC,SAAU,QACvH,MAAO,CAAEN,MAAO,MAAOC,YAAa,KAAMC,SAAU,MAAOC,WAAY,QAASC,WAAY,IAAKC,QAAS,IAAKC,SAAU,KACzH/rE,GAAI,CAAEyrE,MAAO,KAAMC,YAAa,MAAOC,SAAU,KAAMC,WAAY,OAAQC,WAAY,KAAMC,QAAS,KAAMC,SAAU,MACtHj8H,EAAG,CAAE27H,MAAO,IAAKC,YAAa,IAAKC,SAAU,IAAKC,WAAY,KAAMC,WAAY,KAAMC,QAAS,KAAMC,SAAU,SAC/G,MAAO,CAAEN,MAAO,MAAOC,YAAa,MAAOC,SAAU,MAAOC,WAAY,QAASC,WAAY,IAAKC,QAAS,IAAKC,SAAU,MAC1HjsE,GAAI,CAAE2rE,MAAO,KAAMC,YAAa,KAAMC,SAAU,KAAMC,WAAY,OAAQC,WAAY,KAAMC,QAAS,KAAMC,SAAU,MASxG,SAASC,GAAG7jI,GAA+B,IAA9B,cAAE8jI,GAAyB9jI,EACrD,MAAM,gBAAEijI,GAAoBC,MACrBa,EAAmBC,IAAwB92H,EAAAA,EAAAA,UAAS,MACpD+2H,EAASC,IAAch3H,EAAAA,EAAAA,UAAS,IAChCi3H,EAAcC,IAAmBl3H,EAAAA,EAAAA,UAAS,GAG3Cw6C,EAAO27E,GADSD,GAAeW,IAAsBA,GAIrDM,EAAkBpkI,GACtBA,EACG6I,QAAQ,UAAM,KACdA,QAAQ,UAAM,KACdA,QAAQ,QAAM,OACdyM,cAGC+uH,EAAgB,CACpBhB,MAAO57E,EAAK47E,MACZC,YAAa77E,EAAK67E,YAClBC,SAAU97E,EAAK87E,SACfC,WAAY/7E,EAAK+7E,WACjBC,WAAYh8E,EAAKg8E,WACjBC,QAASj8E,EAAKi8E,QACdC,SAAUl8E,EAAKk8E,UAGXW,EAAgBtkI,IACpB,MAAMwX,EAAS5T,GACbwgI,EAAepkI,KAAWokI,EAAexgI,GAE3C,OAAI4T,EAAM6sH,EAAchB,OAAe,QACnC7rH,EAAM6sH,EAAcf,aAAqB,OACzC9rH,EAAM6sH,EAAcd,UAAkB,MACtC/rH,EAAM6sH,EAAcb,YAAoB,OACxChsH,EAAM6sH,EAAcZ,YAAoB,YACxCjsH,EAAM6sH,EAAcX,SAAiB,SACrClsH,EAAM6sH,EAAcV,UAAkB,cACnC,QAGHY,EAAevkI,IACnB,MAAMwkI,EAAaxkI,EAAMsV,cAEnBmvH,EAAehhI,GAAKihI,WACvBrjI,GACCA,EAAIwxD,MAAMv9C,gBAAkBkvH,GAC5BnjI,EAAIyxD,MAAMx9C,gBAAkBkvH,IAMhC,IAAsB,IAAlBC,EAEF,YADAr1H,QAAQ29C,KAAK,oBAADx8C,OAAqBvQ,IAKnC,MACM2kI,EADelhI,GAAKghI,GAAc3xE,MAAMx9C,gBAAkBkvH,EAE5D/gI,GAAKihI,WAAWrjI,GAAQA,EAAIwxD,QAAUpvD,GAAKghI,GAAc5xE,QACzD4xE,EAEEG,EAAYnhI,GAAKc,OACjBsgI,EAAe,IAAMD,EAU3B,IAAIE,EAAaH,EARIlhI,GAAKihI,WACvBrjI,GACCA,EAAIwxD,MAAMv9C,gBAAkBwuH,EAAkBxuH,eAC9CjU,EAAIyxD,MAAMx9C,gBAAkBwuH,EAAkBxuH,gBAM9ChG,KAAKwsC,IAAIgpF,GAAcF,EAAY,IACrCE,EAAaA,EAAa,EAAIA,EAAaF,EAAYE,EAAaF,GAItE,MAAMG,EAAeD,EAAaD,EAIlC,MAAMG,GADYF,EACgBD,EAGlCd,EAAqB/jI,GACrBikI,GAAY5yC,IAAUA,EAAO0zC,GAAgB,MAC7CZ,GAAiB9yC,IAAUA,EAAO2zC,GAAgB,MAClDnB,EAAc7jI,IAIhB,OAGEilI,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,YAAW9+C,SAAA,EACxB25H,EAAAA,GAAAA,KAAA,OAAK76E,UAAU,aAAY9+C,SAAC,kCAI3B,MACC,MAAMy8H,EAAapB,EAAkBqB,SAAS,KAExCC,EAAQ,CACZ/B,MAAO6B,EAAa,IAAM,IAC1B5B,YAAa4B,EAAa,KAAO,KACjC3B,SAAU,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAKvrH,SAASyvC,EAAK87E,UAAY,IAAM,KAI1E8B,EAAcj0H,IAClByyH,EAAczyH,IAIhB,OACE6zH,EAAAA,GAAAA,MAAA,OAAAx8H,SAAA,EAEEw8H,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,qBAAoB9+C,SAAA,EACjCw8H,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,aAAY9+C,SAAA,EACzB25H,EAAAA,GAAAA,KAAA,QAAA35H,SAAM,gBAAiB25H,EAAAA,GAAAA,KAAA,UACvBA,EAAAA,GAAAA,KAAA,UAAQj2F,QAASA,IAAMk5F,EAAW59E,EAAKg8E,YAAYh7H,SAAEg/C,EAAKg8E,cAC1DrB,EAAAA,GAAAA,KAAA,QAAM76E,UAAU,YAAW9+C,SAAEq7H,EAAkBqB,SAAS,KAAO,KAAO,WAExEF,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,aAAY9+C,SAAA,EACzB25H,EAAAA,GAAAA,KAAA,QAAA35H,SAAM,gBAAiB25H,EAAAA,GAAAA,KAAA,UACvBA,EAAAA,GAAAA,KAAA,UAAQj2F,QAASA,IAAMk5F,EAAW59E,EAAK+7E,YAAY/6H,SAAEg/C,EAAK+7E,cAC1DpB,EAAAA,GAAAA,KAAA,QAAM76E,UAAU,YAAW9+C,SAAC,WAE9Bw8H,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,UAAS9+C,SAAA,EACtB25H,EAAAA,GAAAA,KAAA,QAAA35H,SAAM,aAAc25H,EAAAA,GAAAA,KAAA,UACpBA,EAAAA,GAAAA,KAAA,UAAQj2F,QAASA,IAAMk5F,EAAW59E,EAAKi8E,SAASj7H,SAAEg/C,EAAKi8E,WACvDtB,EAAAA,GAAAA,KAAA,QAAM76E,UAAU,YAAW9+C,SAAC,eAGhCw8H,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,qBAAoB9+C,SAAA,EACjCw8H,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,cAAa9+C,SAAA,EAAC25H,EAAAA,GAAAA,KAAA,QAAA35H,SAAM,iBAAkB25H,EAAAA,GAAAA,KAAA,UACnDA,EAAAA,GAAAA,KAAA,UAAQj2F,QAASA,IAAMk5F,EAAW59E,EAAK67E,aAAa76H,SAAEg/C,EAAK67E,eAC3DlB,EAAAA,GAAAA,KAAA,QAAM76E,UAAU,YAAW9+C,SAAE28H,EAAM9B,kBACrC2B,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,QAAO9+C,SAAA,EAAC25H,EAAAA,GAAAA,KAAA,QAAA35H,SAAM,WAAY25H,EAAAA,GAAAA,KAAA,UACvCA,EAAAA,GAAAA,KAAA,UAAQj2F,QAASA,IAAMk5F,EAAW59E,EAAK47E,OAAO56H,SAAEg/C,EAAK47E,SACrDjB,EAAAA,GAAAA,KAAA,QAAM76E,UAAU,YAAW9+C,SAAE28H,EAAM/B,YACrC4B,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,WAAU9+C,SAAA,EAAC25H,EAAAA,GAAAA,KAAA,QAAA35H,SAAM,cAAe25H,EAAAA,GAAAA,KAAA,UAC7CA,EAAAA,GAAAA,KAAA,UAAQj2F,QAASA,IAAMk5F,EAAW59E,EAAK87E,UAAU96H,SAAEg/C,EAAK87E,YACxDnB,EAAAA,GAAAA,KAAA,QAAM76E,UAAU,YAAW9+C,SAAE28H,EAAM7B,kBAEvC0B,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,qBAAoB9+C,SAAA,EAEjCw8H,EAAAA,GAAAA,MAAA,OAAAx8H,SAAA,EACEw8H,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,SAAQ9+C,SAAA,CAAC,WACtB25H,EAAAA,GAAAA,KAAA,KAAA35H,SAAIq7H,QAEN1B,EAAAA,GAAAA,KAAA,OAAK76E,UAAU,QAAO9+C,UACpB25H,EAAAA,GAAAA,KAACkD,GAAO,CAAC5uE,aAAcotE,EAAmB5B,YAAa,WAI3D+C,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,WAAU9+C,SAAA,EACvB25H,EAAAA,GAAAA,KAAA,QAAA35H,SAAM,cAAe25H,EAAAA,GAAAA,KAAA,UACrBA,EAAAA,GAAAA,KAAA,UAAQj2F,QAASA,IAAMk5F,EAAW59E,EAAKk8E,UAAUl7H,SAAEg/C,EAAKk8E,YACxDvB,EAAAA,GAAAA,KAAA,QAAM76E,UAAU,YAAW9+C,SAAC,kBAE9Bw8H,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,sBAAqB9+C,SAAA,EAClC25H,EAAAA,GAAAA,KAAA,QAAM76E,UAAU,WAAU9+C,SAAC,yBAC3B25H,EAAAA,GAAAA,KAAA,MAAA35H,SACG,MACC,MAAM88H,EAAkD,GAqClDC,EA3BiB,CACrBt+H,EAAG,CAAC,KAAM,KAAM,IAAK,IAAK,MAC1BQ,EAAG,CAAC,KAAM,KAAM,IAAK,IAAK,MAC1BP,EAAG,CAAC,KAAM,MAAO,IAAK,IAAK,MAC3BgC,EAAG,CAAC,KAAM,MAAO,IAAK,IAAK,OAC3B/B,EAAG,CAAC,MAAO,MAAO,IAAK,IAAK,OAC5BP,EAAG,CAAC,MAAO,MAAO,IAAK,KAAM,OAC7B,KAAM,CAAC,MAAO,MAAO,IAAK,KAAM,OAChCma,GAAI,CAAC,MAAO,KAAM,KAAM,KAAM,OAC9BJ,GAAI,CAAC,MAAO,KAAM,KAAM,KAAM,MAC9BK,GAAI,CAAC,KAAM,KAAM,KAAM,KAAM,MAC7BJ,GAAI,CAAC,KAAM,KAAM,KAAM,IAAK,MAC5BpZ,EAAG,CAAC,KAAM,KAAM,KAAM,IAAK,MAC3B+vD,GAAI,CAAC,KAAM,KAAM,IAAK,IAAK,KAC3BQ,GAAI,CAAC,KAAM,KAAM,IAAK,IAAK,KAC3BC,GAAI,CAAC,KAAM,MAAO,IAAK,IAAK,KAC5B,MAAO,CAAC,KAAM,MAAO,IAAK,IAAK,KAC/B,MAAO,CAAC,MAAO,MAAO,IAAK,IAAK,KAChC,MAAO,CAAC,MAAO,MAAO,IAAK,KAAM,KACjC,MAAO,CAAC,MAAO,MAAO,IAAK,KAAM,MACjCJ,IAAK,CAAC,MAAO,KAAM,KAAM,KAAM,MAC/BD,GAAI,CAAC,MAAO,KAAM,KAAM,KAAM,MAC9BD,GAAI,CAAC,KAAM,KAAM,KAAM,KAAM,MAC7BD,GAAI,CAAC,KAAM,KAAM,KAAM,IAAK,MAC5BD,GAAI,CAAC,KAAM,KAAM,KAAM,IAAK,MAGFqsE,GAS5B,OARI0B,GACF,CAAC,KAAM,MAAO,KAAM,IAAK,MAAMjiI,SAAQ,CAAC6hI,EAAOniI,KAC7C,MAAMW,EAAS4hI,EAAKviI,GACpB,IAAKW,EAAQ,OACb,MAAM6hI,EAzCSC,EAACt0H,EAAcu0H,KAChC,MAAMC,EAAY,CAAC,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,KACzExkI,EAAQwkI,EAAUpkI,QAAQ4P,EAAKvI,QAAQ,IAAK,IAAIA,QAAQ,IAAK,KACnE,OAAe,IAAXzH,EAAqB,IAClBwkI,GAAWxkI,EAAQukI,GAAS,KAqCnBD,CAAW9hI,EAAO,GAAI,GACpC2hI,EAAYr8H,KAAK,CAAEu1G,MAAM,KAADluG,OAAO60H,GAASplI,MAAOylI,OAG5CF,EAAYrkI,KAAK2kI,IACtBZ,EAAAA,GAAAA,MAAA,MAAAx8H,SAAA,EACE25H,EAAAA,GAAAA,KAAA,UAAA35H,SAASo9H,EAAMpnB,QAAe,KAAGonB,EAAM7lI,QADhC6lI,EAAMpnB,QAIlB,EApDA,aA6DZ,EA9HA,IAgID2jB,EAAAA,GAAAA,KAAA,OAAK76E,UAAU,QAAO9+C,UACpBw8H,EAAAA,GAAAA,MAAA,OAAK1kI,QAAQ,cAAcgnD,UAAU,aAAY9+C,SAAA,EAC/C25H,EAAAA,GAAAA,KAAA,KAAG76E,UAAU,aAAazoC,MAAO,CAAEte,UAAU,UAAD+P,QAAayzH,EAAO,SAASv7H,SACtEhF,GAAKvC,KAAI,CAACG,EAAKD,KACd,MAAMwyG,EAASxyG,EAAQqC,GAAKc,OAAU,EAAI+K,KAAKoqC,GAAKpqC,KAAKoqC,GAAK,EACxDjzC,EAAI,IAAM,IAAM6I,KAAKkiG,IAAIoC,GACzBltG,EAAI,IAAM,IAAM4I,KAAKoiG,IAAIkC,GACzBkyB,EAAoB,IAARlyB,EAAetkG,KAAKoqC,GAAK,GAC3C,OACEurF,EAAAA,GAAAA,MAAA,KAEE94F,QAASA,IAAMo4F,EAAYljI,EAAIwxD,OAC/B/zC,MAAO,CAAEinH,OAAQ,WAAYt9H,SAAA,EAE7B25H,EAAAA,GAAAA,KAAA,UACEvuH,GAAIpN,EACJqN,GAAIpN,EACJN,EAAG,GACH6K,KAAMqzH,EAAajjI,EAAIwxD,OACvBjiD,OAAO,uBAETwxH,EAAAA,GAAAA,KAAA,QACE37H,EAAGA,EACHC,EAAGA,EACH2K,WAAW,SACX20H,iBAAiB,SACjBh1H,SAAS,KACTC,KAAK,QACLzQ,UAAS,UAAA+P,OAAYu1H,EAAQ,KAAAv1H,OAAI9J,EAAC,KAAA8J,OAAI7J,EAAC,KAAI+B,SAE1CpH,EAAIwxD,UACA,SAAAtiD,OArBOnP,UA0BtBghI,EAAAA,GAAAA,KAAA,KAAG76E,UAAU,aAAazoC,MAAO,CAAEte,UAAU,UAAD+P,OAAY2zH,EAAY,SAASz7H,SAC1EhF,GAAKvC,KAAI,CAACG,EAAKD,KACd,MAAMwyG,EAASxyG,EAAQqC,GAAKc,OAAU,EAAI+K,KAAKoqC,GAAKpqC,KAAKoqC,GAAK,EACxDjzC,EAAI,IAAM,IAAM6I,KAAKkiG,IAAIoC,GACzBltG,EAAI,IAAM,IAAM4I,KAAKoiG,IAAIkC,GACzBkyB,EAAoB,IAARlyB,EAAetkG,KAAKoqC,GAAK,GAC3C,OACEurF,EAAAA,GAAAA,MAAA,KAEE94F,QAASA,IAAMo4F,EAAYljI,EAAIyxD,OAC/Bh0C,MAAO,CAAEinH,OAAQ,WAAYt9H,SAAA,EAE7B25H,EAAAA,GAAAA,KAAA,UACEvuH,GAAIpN,EACJqN,GAAIpN,EACJN,EAAG,GACH6K,KAAMqzH,EAAajjI,EAAIyxD,OACvBliD,OAAO,uBAETwxH,EAAAA,GAAAA,KAAA,QACE37H,EAAGA,EACHC,EAAGA,EACH2K,WAAW,SACX20H,iBAAiB,SACjBh1H,SAAS,KACTC,KAAK,QACLzQ,UAAS,UAAA+P,OAAYu1H,EAAQ,KAAAv1H,OAAI9J,EAAC,KAAA8J,OAAI7J,EAAC,KAAI+B,SAE1CpH,EAAIyxD,UACA,SAAAviD,OArBOnP,SA0BrB,MAEC,MAAM4E,EAAUvC,GAAKwiI,MAClB5kI,GAAQA,EAAIwxD,QAAUixE,GAAqBziI,EAAIyxD,QAAUgxE,IAMtDoC,EAAWlgI,GAJsB,CACrCkB,EAAG,QAAMQ,EAAG,SAAOP,EAAG,SAAOgC,EAAG,SAAO/B,EAAG,SAAOP,EAAG,SACpD,KAAM,QAAMma,GAAI,QAAMJ,GAAI,QAAMK,GAAI,QAAMJ,GAAI,QAAMpZ,EAAG,SAEtBzB,EAAQ6sD,QAAgB,GAC3D,OACEoyE,EAAAA,GAAAA,MAAA,KACE94F,QAASA,KACH+5F,GAAUrC,EAAcqC,EAASr9H,QAAQ,OAAK,SAEpDiW,MAAO,CAAEinH,OAAQ,WACjBx+E,UAAU,qBAAoB9+C,SAAA,EAE9B25H,EAAAA,GAAAA,KAAA,UACEvuH,GAAG,MACHC,GAAG,MACH1N,EAAE,KACF6K,KAAMqzH,EAAa4B,EAASr9H,QAAQ,OAAK,QACzC+H,OAAO,uBAETwxH,EAAAA,GAAAA,KAAA,QACE37H,EAAE,MACFC,EAAE,MACF2K,WAAW,SACX20H,iBAAiB,SACjBh1H,SAAS,KACTC,KAAK,QAAOxI,SAEXy9H,MAIR,EArCA,SA2CL9D,EAAAA,GAAAA,KAAA,OAAK76E,UAAU,eAAc9+C,UAC3Bw8H,EAAAA,GAAAA,MAAA,YAAAx8H,SAAA,EACEw8H,EAAAA,GAAAA,MAAA,UAAAx8H,SAAA,CAAQ,4BAA0Bq7H,MAClC1B,EAAAA,GAAAA,KAAA,OAAA35H,SAAK,yDAGJ,MACC,MAAMm9H,EAAY,CAAC,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,KACzEO,EAAUrC,EAAkBqB,SAAS,KACrCpwE,EAAO+uE,EAAkBj7H,QAAQ,IAAK,IACtCu9H,EAAaR,EAAUpkI,QAAQuzD,GACrC,IAAoB,IAAhBqxE,EAAmB,OAAO,KAE9B,IAAI7C,EACA8C,EACAr9D,EAEJ,GAAIm9D,EAAS,CAEX,MAAMG,GAAUF,EAAa,GAAK,GAC5BG,EAASX,EAAUU,GACnBE,GAAcF,EAAS,GAAK,GAClC/C,EAAWqC,EAAUY,GAAc,IACnCH,EAAaT,GAAWY,EAAa,GAAK,IAAM,IAChDx9D,EAAau9D,EAAS,GACxB,KAAO,CACL,MAAME,GAAiBL,EAAa,GAAK,GACzC7C,EAAWqC,EAAUa,GAAiB,IACtCJ,EAAaT,GAAWa,EAAgB,GAAK,IAAM,IACnDz9D,EAAajU,EAAO,MACtB,CAEA,OACEkwE,EAAAA,GAAAA,MAAAyB,GAAAA,SAAA,CAAAj+H,SAAA,EACEw8H,EAAAA,GAAAA,MAAA,OAAAx8H,SAAA,EACE25H,EAAAA,GAAAA,KAAA,UACEj2F,QAASA,KACP03F,EAAcN,GACdP,EAAgB,CAAEn9H,KAAM,UAAW7F,MAAOujI,EAAUoD,WAAY39D,KAChEvgE,SAED86H,IACM,UAETnB,EAAAA,GAAAA,KAAA,UACEj2F,QAASA,KACP03F,EAAcwC,GACdrD,EAAgB,CAAEn9H,KAAM,UAAW7F,MAAOqmI,EAAYM,WAAY39D,KAClEvgE,SAED49H,IACM,UAETjE,EAAAA,GAAAA,KAAA,UACEj2F,QAASA,KACP03F,EAAc76D,GACdg6D,EAAgB,OAChBv6H,SAEDugE,QAILo5D,EAAAA,GAAAA,KAAA,QAAM76E,UAAU,YAAW9+C,SAAE09H,EAAU,OAAS,OAAY,WAC5D/D,EAAAA,GAAAA,KAAA,QAAM76E,UAAU,YAAW9+C,SAAC,cAAW,WACvC25H,EAAAA,GAAAA,KAAA,QAAM76E,UAAU,YAAW9+C,SAAE09H,EAAU,IAAM,QAGlD,EA9DA,SAmEL/D,EAAAA,GAAAA,KAAA,OAAK76E,UAAU,eAAc9+C,UAC3Bw8H,EAAAA,GAAAA,MAAA,YAAAx8H,SAAA,EACEw8H,EAAAA,GAAAA,MAAA,UAAAx8H,SAAA,CAAQ,0BAAwBq7H,MAChC1B,EAAAA,GAAAA,KAAA,OAAA35H,SAAK,4CAGL25H,EAAAA,GAAAA,KAAA,OAAKtjH,MAAO,CAAE2vB,QAAS,OAAQm4F,cAAe,SAAUhe,IAAK,UAAWngH,SACrE,MACC,MAAMm9H,EAAY,CAAC,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,KACzEL,EAAkE,GAkClEC,EA3BiB,CACrBt+H,EAAG,CAAC,KAAM,KAAM,IAAK,IAAK,MAC1BQ,EAAG,CAAC,KAAM,KAAM,IAAK,IAAK,MAC1BP,EAAG,CAAC,KAAM,MAAO,IAAK,IAAK,MAC3BgC,EAAG,CAAC,KAAM,MAAO,IAAK,IAAK,OAC3B/B,EAAG,CAAC,MAAO,MAAO,IAAK,IAAK,OAC5BP,EAAG,CAAC,MAAO,MAAO,IAAK,KAAM,OAC7B,KAAM,CAAC,MAAO,MAAO,IAAK,KAAM,OAChCma,GAAI,CAAC,MAAO,KAAM,KAAM,KAAM,OAC9BJ,GAAI,CAAC,MAAO,KAAM,KAAM,KAAM,MAC9BK,GAAI,CAAC,KAAM,KAAM,KAAM,KAAM,MAC7BJ,GAAI,CAAC,KAAM,KAAM,KAAM,IAAK,MAC5BpZ,EAAG,CAAC,KAAM,KAAM,KAAM,IAAK,MAC3B+vD,GAAI,CAAC,KAAM,KAAM,IAAK,IAAK,KAC3BQ,GAAI,CAAC,KAAM,KAAM,IAAK,IAAK,KAC3BC,GAAI,CAAC,KAAM,MAAO,IAAK,IAAK,KAC5B,MAAO,CAAC,KAAM,MAAO,IAAK,IAAK,KAC/B,MAAO,CAAC,MAAO,MAAO,IAAK,IAAK,KAChC,MAAO,CAAC,MAAO,MAAO,IAAK,KAAM,KACjC,MAAO,CAAC,MAAO,MAAO,IAAK,KAAM,MACjCJ,IAAK,CAAC,MAAO,KAAM,KAAM,KAAM,MAC/BD,GAAI,CAAC,MAAO,KAAM,KAAM,KAAM,MAC9BD,GAAI,CAAC,KAAM,KAAM,KAAM,KAAM,MAC7BD,GAAI,CAAC,KAAM,KAAM,KAAM,IAAK,MAC5BD,GAAI,CAAC,KAAM,KAAM,KAAM,IAAK,MAGFqsE,GAC5B,OAAK0B,GAEL,CAAC,KAAM,MAAO,KAAM,IAAK,MAAMjiI,SAAQ,CAAC6hI,EAAOniI,KAC7C,MAAMW,EAAS4hI,EAAKviI,GACpB,IAAKW,EAAQ,OACb,MAAM6hI,EAvCWC,EAACt0H,EAAcu0H,KAChC,MAAMvkI,EAAQwkI,EAAUpkI,QAAQ4P,EAAKvI,QAAQ,IAAK,IAAIA,QAAQ,IAAK,KACnE,OAAe,IAAXzH,EAAqB,IAClBwkI,GAAWxkI,EAAQukI,GAAS,KAoCrBD,CAAW9hI,EAAO,GAAI,GACpC2hI,EAAYr8H,KAAK,CAAEu1G,MAAM,MAADluG,OAAQ60H,GAASplI,MAAOylI,EAAQ,IAAK7hI,cAGxD2hI,EAAYrkI,KAAK2kI,IACtBZ,EAAAA,GAAAA,MAAA,OAAAx8H,SAAA,EACE25H,EAAAA,GAAAA,KAAA,UACEj2F,QAASA,KACP03F,EAAcgC,EAAM7lI,OACpBgjI,EAAgB,CACdn9H,KAAM,YACN7F,MAAO6lI,EAAM7lI,MACb2mI,WAAYd,EAAMjiI,OAClBwhI,MAAOS,EAAMpnB,MACb76G,OAAQiiI,EAAMjiI,UAEhB6E,SAEDo9H,EAAM7lI,QACA,UAEToiI,EAAAA,GAAAA,KAAA,UACEj2F,QAASA,KACP03F,EAAcgC,EAAMjiI,QACpBo/H,EAAgB,OAChBv6H,SAEDo9H,EAAMjiI,UAETw+H,EAAAA,GAAAA,KAAA,QAAM76E,UAAU,YAAW9+C,SAAEo9H,EAAMpnB,UAxB3BonB,EAAMpnB,UAVA,IAqCnB,EA1EA,YAkFb,CCrjBA,MAoJA,GApJoC1+G,IAAwB,IAAvB,cAAE8jI,GAAe9jI,EACpD,MAAO8mI,EAAUC,IAAe75H,EAAAA,EAAAA,UAAS,KA4DnCo4H,EAAcj0H,IAClB01H,EAAY11H,GACZyyH,EAAczyH,IAGhB,OACE6zH,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,cAAa9+C,SAAA,EAC1B25H,EAAAA,GAAAA,KAAA,OAAK76E,UAAU,aAAY9+C,SAAC,8BAE5Bw8H,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,eAAc9+C,SAAA,EAC3B25H,EAAAA,GAAAA,KAAA,OAAK76E,UAAU,cACf09E,EAAAA,GAAAA,MAAA,UACE19E,UAAS,cAAAh3C,OAA6B,OAAbs2H,EAAoB,gBAAkB,IAC/D16F,QAASA,IAAMk5F,EAAW,MAAM58H,SAAA,EAEhC25H,EAAAA,GAAAA,KAAA,KAAA35H,SAAG,OAAM,YAEXw8H,EAAAA,GAAAA,MAAA,UAAQ19E,UAAS,cAAAh3C,OAA6B,OAAbs2H,EAAoB,gBAAkB,IAAM16F,QAASA,IAAMk5F,EAAW,MAAM58H,SAAA,EAC3G25H,EAAAA,GAAAA,KAAA,KAAA35H,SAAG,OAAM,YAEX25H,EAAAA,GAAAA,KAAA,OAAK76E,UAAU,cACf09E,EAAAA,GAAAA,MAAA,UAAQ19E,UAAS,cAAAh3C,OAA6B,OAAbs2H,EAAoB,gBAAkB,IAAM16F,QAASA,IAAMk5F,EAAW,MAAM58H,SAAA,EAC3G25H,EAAAA,GAAAA,KAAA,KAAA35H,SAAG,OAAM,YAEXw8H,EAAAA,GAAAA,MAAA,UAAQ19E,UAAS,cAAAh3C,OAA6B,OAAbs2H,EAAoB,gBAAkB,IAAM16F,QAASA,IAAMk5F,EAAW,MAAM58H,SAAA,EAC3G25H,EAAAA,GAAAA,KAAA,KAAA35H,SAAG,OAAM,YAEXw8H,EAAAA,GAAAA,MAAA,UAAQ19E,UAAS,cAAAh3C,OAA6B,OAAbs2H,EAAoB,gBAAkB,IAAM16F,QAASA,IAAMk5F,EAAW,MAAM58H,SAAA,EAC3G25H,EAAAA,GAAAA,KAAA,KAAA35H,SAAG,OAAM,YAEX25H,EAAAA,GAAAA,KAAA,OAAK76E,UAAU,iBAIjB09E,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,eAAc9+C,SAAA,EAC3B25H,EAAAA,GAAAA,KAAA,UACE76E,UAAS,cAAAh3C,OAA6B,MAAbs2H,EAAmB,gBAAkB,IAC9D16F,QAASA,IAAMk5F,EAAW,KAAK58H,SAChC,OAGD25H,EAAAA,GAAAA,KAAA,UAAQ76E,UAAS,cAAAh3C,OAA6B,MAAbs2H,EAAmB,gBAAkB,IAAM16F,QAASA,IAAMk5F,EAAW,KAAK58H,SAAC,OAG5G25H,EAAAA,GAAAA,KAAA,UAAQ76E,UAAS,cAAAh3C,OAA6B,MAAbs2H,EAAmB,gBAAkB,IAAM16F,QAASA,IAAMk5F,EAAW,KAAK58H,SAAC,OAG5G25H,EAAAA,GAAAA,KAAA,UAAQ76E,UAAS,cAAAh3C,OAA6B,MAAbs2H,EAAmB,gBAAkB,IAAM16F,QAASA,IAAMk5F,EAAW,KAAK58H,SAAC,OAG5G25H,EAAAA,GAAAA,KAAA,UAAQ76E,UAAS,cAAAh3C,OAA6B,MAAbs2H,EAAmB,gBAAkB,IAAM16F,QAASA,IAAMk5F,EAAW,KAAK58H,SAAC,OAG5G25H,EAAAA,GAAAA,KAAA,UAAQ76E,UAAS,cAAAh3C,OAA6B,MAAbs2H,EAAmB,gBAAkB,IAAM16F,QAASA,IAAMk5F,EAAW,KAAK58H,SAAC,OAG5G25H,EAAAA,GAAAA,KAAA,UAAQ76E,UAAS,cAAAh3C,OAA6B,MAAbs2H,EAAmB,gBAAkB,IAAM16F,QAASA,IAAMk5F,EAAW,KAAK58H,SAAC,UAM9G25H,EAAAA,GAAAA,KAAA,OAAK76E,UAAU,cAAa9+C,SAvH+D,CAC7F,CACE+6E,MAAO,eACPujD,OAAQ,CACN,CAAEtoB,MAAO,GAAIxzD,OAAQ,IACrB,CAAEwzD,MAAO,IAAKxzD,OAAQ,KACtB,CAAEwzD,MAAO,aAAWxzD,OAAQ,OAC5B,CAAEwzD,MAAO,UAAWxzD,OAAQ,SAGhC,CACEu4B,MAAO,YACPujD,OAAQ,CACN,CAAEtoB,MAAO,OAAQxzD,OAAQ,QACzB,CAAEwzD,MAAO,OAAQxzD,OAAQ,UAG7B,CACEu4B,MAAO,WACPujD,OAAQ,CACN,CAAEtoB,MAAO,IAAKxzD,OAAQ,KACtB,CAAEwzD,MAAO,OAAQxzD,OAAQ,QACzB,CAAEwzD,MAAO,KAAMxzD,OAAQ,MACvB,CAAEwzD,MAAO,mBAAYxzD,OAAQ,QAC7B,CAAEwzD,MAAO,QAAMxzD,OAAQ,UAG3B,CACEu4B,MAAO,aACPujD,OAAQ,CACN,CAAEtoB,MAAO,IAAKxzD,OAAQ,KACtB,CAAEwzD,MAAO,OAAQxzD,OAAQ,QACzB,CAAEwzD,MAAO,KAAMxzD,OAAQ,MACvB,CAAEwzD,MAAO,KAAMxzD,OAAQ,MACvB,CAAEwzD,MAAO,KAAMxzD,OAAQ,MACvB,CAAEwzD,MAAO,QAASxzD,OAAQ,SAC1B,CAAEwzD,MAAO,MAAOxzD,OAAQ,SAG5B,CACEu4B,MAAO,oBACPujD,OAAQ,CACN,CAAEtoB,MAAO,kBAAcxzD,OAAQ,QAC/B,CAAEwzD,MAAO,WAAOxzD,OAAQ,OACxB,CAAEwzD,MAAO,WAAOxzD,OAAQ,OACxB,CAAEwzD,MAAO,WAAOxzD,OAAQ,SAG5B,CACEu4B,MAAO,aACPujD,OAAQ,CACN,CAAEtoB,MAAO,OAAQxzD,OAAQ,QACzB,CAAEwzD,MAAO,IAAKxzD,OAAQ,QAoEA/pD,KAAIq2E,IAAA,IAAC,MAAEiM,EAAK,OAAEujD,GAAQxvD,EAAA,OAC1C0tD,EAAAA,GAAAA,MAAA,YAAsB19E,UAAU,cAAa9+C,SAAA,EAC3C25H,EAAAA,GAAAA,KAAA,UAAQ76E,UAAU,oBAAmB9+C,SAAE+6E,KACvC4+C,EAAAA,GAAAA,KAAA,OAAK76E,UAAU,sBAAqB9+C,SACjCs+H,EAAO7lI,KAAI8lI,IAAwB,IAAvB,MAAEvoB,EAAK,OAAExzD,GAAQ+7E,EAC5B,MAAMC,EAAYJ,EAAW57E,EAC7B,OACEg6E,EAAAA,GAAAA,MAAA,UAEE19E,UAAU,aACVpb,QAASA,IAAM03F,EAAcoD,GAAWx+H,SAAA,CAEvCo+H,EAAUpoB,IAJNxzD,UAPAu4B,YC3HzB,GAJkCzjF,IAAwB,IAAvB,cAAE8jI,GAAe9jI,EAClD,OAAO,MCsDT,GA/CoCA,IAU7B,IAV8B,cACnCmnI,EAAa,eACbC,EAAc,cACdC,EAAa,UAEbC,EAAS,WACTC,EAAU,UACVC,GAGDxnI,EACC,OAEEklI,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,kBAAiB9+C,SAAA,EAE9B25H,EAAAA,GAAAA,KAAA,UACEj2F,QAASg7F,EACT5/E,UAAW+/E,EAAa,WAAa,GAAG7+H,SACzC,kBAID25H,EAAAA,GAAAA,KAAA,UACEj2F,QAAS+6F,EACT3/E,UAAW8/E,EAAY,WAAa,GAAG5+H,SACxC,kBAID25H,EAAAA,GAAAA,KAAA,UACEj2F,QAASi7F,EACT7/E,UAAWggF,EAAY,WAAa,GAAG9+H,SACxC,qBChCD++H,GAAe,IAAK/yH,OAAOgzH,cAAiBhzH,OAAeizH,oBAC3DC,GAA6C,CAAC,EAyHpD,GAjHwC5nI,IAA2B,IAA1B,YAAEmiI,EAAc,IAAIniI,EAE3D,MAAO6nI,EAAcC,IAAmB56H,EAAAA,EAAAA,WAAS,GAE3C66H,GAAiB96H,EAAAA,EAAAA,SAAO,GAQxBi1D,GAAQn1D,EAAAA,EAAAA,UAAQ,IAAM,CAC1B,KAAM,MAAO,KAAM,MAAO,KAAM,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KACvE,KAAM,MAAO,KAAM,MAAO,KAAM,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,OACtE,IASGi7H,GAAgB17H,EAAAA,EAAAA,cAAa+E,IAEjC,IAAKw2H,IAAiBE,EAAe9hI,QAAS,OAC9C,MAAMgiI,EAASL,GAAUv2H,GACzB,GAAI42H,EAAQ,CACV,MAAMnkI,EAAS2jI,GAAaS,qBAC5BpkI,EAAOmkI,OAASA,EAChBnkI,EAAOqkI,QAAQV,GAAaW,aAC5BtkI,EAAO8vB,MAAM,EACf,IACC,CAACi0G,IA2CJ,OApCAn7H,EAAAA,EAAAA,YAAU,KAER,IAAI27H,EAAcnmE,EAAM19D,OAExB09D,EAAM1+D,SAAS6N,IACRu2H,GAAUv2H,IACbi3H,MAAM,UAAD93H,OAAW0D,mBAAmB7C,GAAK,SACrC1H,MAAM4+H,GAAaA,EAASC,gBAC5B7+H,MAAM6+H,GAAgBf,GAAagB,gBAAgBD,KACnD7+H,MAAM++H,IACLd,GAAUv2H,GAAQq3H,EAElBL,IACoB,IAAhBA,IACFN,EAAe9hI,SAAU,MAG5BuzB,OAAO71B,IACN0L,QAAQ29C,KAAK,sCAADx8C,OAAuCa,EAAI,KAAK1N,WAInE,CAACu+D,KAOJx1D,EAAAA,EAAAA,YAAU,KAEJq7H,EAAe9hI,SACjBk8H,EAAY3+H,SAAS6N,GAAS22H,EAAc32H,OAE7C,CAAC8wH,EAAa6F,EAAe9lE,KAG9BgjE,EAAAA,GAAAA,MAAAyB,GAAAA,SAAA,CAAAj+H,SAAA,EACEw8H,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,WAAU9+C,SAAA,EACvB25H,EAAAA,GAAAA,KAAA,QAAA35H,UAAM25H,EAAAA,GAAAA,KAAA,KAAA35H,SAAG,oBACTw8H,EAAAA,GAAAA,MAAA,SAAO19E,UAAU,SAAQ9+C,SAAA,EACvB25H,EAAAA,GAAAA,KAAA,SACEv8H,KAAK,WACLsT,QAASyuH,EACTc,SAAUA,IAAMb,GAAiBD,MAEnCxF,EAAAA,GAAAA,KAAA,QAAM76E,UAAU,eAElB66E,EAAAA,GAAAA,KAAA,QAAMtjH,MAAO,CAAE6pH,WAAY,QAASlgI,SAAEm/H,EAAe,eAAO,eAG9DxF,EAAAA,GAAAA,KAAA,OAAK76E,UAAU,kBAAiB9+C,UAC9B25H,EAAAA,GAAAA,KAAA,OAAK76E,UAAU,WAAU9+C,SACtBw5D,EAAM/gE,KAAKkQ,IACV,MAAMw3H,EAAUx3H,EAAK4G,SAAS,KACxB6wH,EAAW3G,EAAYlqH,SAAS5G,GACtC,OACEgxH,EAAAA,GAAAA,KAAA,OAEE76E,UAAS,OAAAh3C,OAASq4H,EAAU,QAAU,QAAO,KAAAr4H,OAAIs4H,EAAW,SAAW,IACvE18F,QAASA,IAAM47F,EAAc32H,GAAM3I,SAElCogI,IAAYzG,EAAAA,GAAAA,KAAA,OAAK76E,UAAU,gBAJvBn2C,qxgXC3Gf03H,GAAmC,CAAC,EAE1CvmI,OAAOq7H,QAAQmL,GAAAA,IAAqBxlI,SAAQxD,IAAyC,IAAvCsB,EAAK2nI,GAA4BjpI,EAC7EipI,EAAWzlI,SAASvD,IAAW,IAADipI,EAC5B,MAAMh+E,EAASjrD,EAAMirD,OAmDfu5E,EAA8B,QAApByE,EAlD0B,CACxCp2E,MAAO,GACPC,MAAO,IACPigC,IAAK,MACLm2C,KAAM,OACNC,IAAK,MACLC,KAAM,OACNC,KAAM,OACNC,SAAU,WACV,QAAS,QACT,MAAO,MACPC,IAAK,MACLC,IAAK,MACL,EAAK,IACL,EAAK,IACL,GAAM,KACN,EAAK,IACL,MAAO,MACPC,KAAM,OACN,EAAK,IACL,MAAO,MACPC,KAAM,OACN,MAAO,MACP,MAAO,MACP,GAAM,KACN,OAAQ,OACR,GAAM,KACN/2E,KAAM,OACNg3E,OAAQ,SACR,SAAU,SACVC,SAAU,WACVC,KAAM,OACNC,MAAO,QACPC,MAAO,QACPx4E,GAAI,KACJy4E,IAAK,MACLx3E,GAAI,KACJy3E,KAAM,OACNC,GAAI,KACJC,IAAK,MACLC,MAAO,QACPC,QAAS,UACTC,MAAO,QACPC,OAAQ,SACRC,KAAM,OACNC,MAAO,QACPC,MAAO,QACPh5E,GAAI,QAGuBzG,UAAO,IAAAg+E,EAAAA,EAAIh+E,EAClCg8E,EAAS,GAAA12H,OAAMlP,GAAGkP,OAAGi0H,GACrB9iI,EAAW1B,EAAMwT,UAAU,GAEjCs1H,GAAY7B,GAAa,CACvBpmI,MAAOa,EAASb,MAChBU,QAASG,EAASH,QAClBN,OAAQS,EAAST,OACjBH,KAAMY,EAASZ,OAAQ,EACvBE,SAAUU,EAASV,gBAKzB,MAAMf,GAAa,CACjBW,QAAS,EACTG,aAAc,EACduR,KAAM,SACN7O,KAAM,GACN/C,QAAS,CACPC,SAAU,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,OAiHxC,GAxG0C42E,IAA0B,IAADozD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAxB,gBAAEC,GAAiB1zD,EAC9D,MAAO2zD,IAAaj+H,EAAAA,EAAAA,WAAS,GACvB85H,EAASgC,GAAAA,GAeToC,EAAgBF,EAAgBzzH,MAAM,eACtCqvH,EAAWsE,EAAgBA,EAAc,GAAK,GAC9ClgF,EAASggF,EAAgB95H,MAAM01H,EAAStiI,SAAW,QAEnD6mI,EAAgBrE,EAjBsB,CAC1C,KAAM,SACN,KAAM,KACN,KAAM,SACN,KAAM,KACN,KAAM,KACN,GAAM,SACN,GAAM,KACN,GAAM,SACN,GAAM,KACN,GAAM,MAOiCF,IAAaA,IAAa,GAU7DwE,EANoC,CACxCxmI,EAAG,QACHymI,IAAK,QACL55E,GAAI,QAG6BzG,IAAWA,EAExCsgF,EAAmBH,EAAcxpI,QACpC5B,GAAeA,EAAMirD,SAAWogF,KAI1BG,EAAcC,IAAmBx+H,EAAAA,EAAAA,UAAS,GAG3CuG,GAA+B,QAAnBm3H,EAAAY,EAAiB,UAAE,IAAAZ,GAAW,QAAXC,EAAnBD,EAAqBn3H,iBAAS,IAAAo3H,OAAX,EAAnBA,EAAgCz5H,MAAMq6H,EAAcA,EAAe,KAAM,GAE3F,OACEvG,EAAAA,GAAAA,MAAAyB,GAAAA,SAAA,CAAAj+H,SAAA,EAEE25H,EAAAA,GAAAA,KAAA,OAAK76E,UAAS,oBAAAh3C,OAAsB26H,EAAY,aAAe,gBAAiBziI,SAE7E+K,EAAUtS,KAAI,CAACQ,EAAeN,KAC7B6jI,EAAAA,GAAAA,MAAA,OAAiB19E,UAAU,oBAAmB9+C,SAAA,EAE5Cw8H,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,WAAU9+C,SAAA,CAAC,QAAM/G,EAASV,aAEzCohI,EAAAA,GAAAA,KAACtiI,GAAAA,EAAK,CACJE,MAAO,CACLa,MAAOa,EAASb,MAChBU,QAASG,EAASH,QAClBN,OAAQS,EAAST,OACjBH,KAAMY,EAASZ,OAAQ,EACvBE,SAAUU,EAASV,UAErBf,WAAYA,GACZC,MAAM,KAERkiI,EAAAA,GAAAA,KAAA,OAAK76E,UAAU,gBAAe9+C,UAC1ByiI,EAAYxpI,EAASgqI,KAAOhqI,EAASH,SAASL,KAAI,CAAC+C,EAAUhB,KAC7Dm/H,SAAAA,GAAAA,KAAA,QAAc76E,UAAU,eAAc9+C,SAC3B,IAARxE,QAAqBC,IAARD,EACV,GACAinI,GA1EFQ,EA2EaznI,EA1Eb,CAAC,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,KAC9DynI,EAAO,KA0EJznI,GALKhB,GAvEPyoI,aAsDAtqI,QA8Bd6jI,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,qBAAoB9+C,SAAA,EACjC25H,EAAAA,GAAAA,KAAA,UACEj2F,QAASA,IAAMs/F,GAAiBxoI,GAAMqM,KAAK2yC,IAAI,EAAGh/C,EAAI,KACtDwX,SAA2B,IAAjB+wH,EAAmB/iI,SAC9B,YAGD25H,EAAAA,GAAAA,KAAA,SACGoJ,EAAe,EAAE,MAAIA,EAAe,EAAE,QAAwB,QAAnBX,EAAAU,EAAiB,UAAE,IAAAV,GAAW,QAAXC,EAAnBD,EAAqBr3H,iBAAS,IAAAs3H,OAAX,EAAnBA,EAAgCvmI,SAAU,GACxF69H,EAAAA,GAAAA,KAAA,UACAA,EAAAA,GAAAA,KAAA,UACEj2F,QAASA,IACPs/F,GAAiBxoI,IAAC,IAAA0oI,EAAAC,EAAA,OAChBt8H,KAAKykB,MAAwB,QAAnB43G,EAAAJ,EAAiB,UAAE,IAAAI,GAAW,QAAXC,EAAnBD,EAAqBn4H,iBAAS,IAAAo4H,OAAX,EAAnBA,EAAgCrnI,SAAU,GAAK,EAAGtB,EAAI,MAGpEwX,SAAU+wH,KAAoC,QAAnBT,EAAAQ,EAAiB,UAAE,IAAAR,GAAW,QAAXC,EAAnBD,EAAqBv3H,iBAAS,IAAAw3H,OAAX,EAAnBA,EAAgCzmI,SAAU,GAAK,EAAEkE,SAC7E,kBC1JT,GAhC4C1I,IAKrC,IALsC,UAC3C8rI,EAAS,cACTC,EAAa,UACbC,EAAS,aACTC,GACDjsI,EACC,MAAMksI,EACU,IAAdF,EAAkB,QACF,IAAdA,EAAkB,WACJ,IAAdA,EAAkB,WACJ,IAAdA,EAAkB,WACJ,IAAdA,EAAkB,WACJ,IAAdA,EAAkB,WAAU,aAAAx7H,OACfw7H,GAEjB,OACE9G,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,YAAW9+C,SAAA,CACvBN,MAAMrE,KAAK,CAAES,OAAQsnI,EAAUtnI,SAAU,CAAC8L,EAAGpN,KAC5Cm/H,EAAAA,GAAAA,KAAA,UAAgBj2F,QAASA,IAAM6/F,EAAa/oI,GAAGwF,SACtC,IAANxF,EAAU,IAAG,GAAAsN,OAAMtN,IADTA,MAIfgiI,EAAAA,GAAAA,MAAA,OAAAx8H,SAAA,CACGwjI,EACAH,EAAcvnI,OAAS,IACtB0gI,EAAAA,GAAAA,MAAA,QAAAx8H,SAAA,CAAM,KAAGqjI,EAAc1oI,KAAK,KAAK,cCVrCw7F,GAAQ,CAAC,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,KAErEstC,GAAwC,CAC5CtrH,GAAI,KAAMC,GAAI,KAAMG,GAAI,KAAMC,GAAI,KAAME,GAAI,MAuO9C,GAlHoCphB,IAAgB,IAAf,MAAEC,GAAOD,EAC5C,MAAO8rI,EAAWM,IAAgBl/H,EAAAA,EAAAA,UAAmB,KAC9C6+H,EAAeM,IAAoBn/H,EAAAA,EAAAA,UAAmB,KACtD8+H,EAAWC,IAAgB/+H,EAAAA,EAAAA,UAAS,IAEpCs6H,EAAW8E,IAAgBp/H,EAAAA,EAAAA,WAAS,IACpCo6H,EAAWiF,IAAgBr/H,EAAAA,EAAAA,WAAS,IACpCq6H,EAAYiF,IAAiBt/H,EAAAA,EAAAA,WAAS,IACtCu/H,EAAWC,IAAgBx/H,EAAAA,EAAAA,WAAS,GAyC3C,OAvCAR,EAAAA,EAAAA,YAAU,KACR,MAAMigI,EA7HU1sI,KAClB,MAAMwX,EAAQxX,EAAMwX,MAAM,kPAC1B,IAAKA,EAAO,MAAO,CAAEu9C,KAAM,IAAKlvD,KAAM,SACtC,IAAK,CAAEkvD,EAAM9J,GAAUzzC,EAEvB,OADAu9C,EAAOm3E,GAAcn3E,IAASA,EACtB9J,GAEN,IAAK,OAGL,IAAK,KAAM,MAAO,CAAE8J,OAAMlvD,KAAM,QAIhC,IAAK,QAAS,MAAO,CAAEkvD,OAAMlvD,KAAM,SACnC,IAAK,QAAS,MAAO,CAAEkvD,OAAMlvD,KAAM,SACnC,IAAK,OAAQ,MAAO,CAAEkvD,OAAMlvD,KAAM,QAClC,IAAK,SAAU,MAAO,CAAEkvD,OAAMlvD,KAAM,UACpC,IAAK,SAAU,MAAO,CAAEkvD,OAAMlvD,KAAM,UACpC,IAAK,WAAY,MAAO,CAAEkvD,OAAMlvD,KAAM,YACtC,IAAK,OAAQ,MAAO,CAAEkvD,OAAMlvD,KAAM,QAClC,IAAK,SAAU,MAAO,CAAEkvD,OAAMlvD,KAAM,UACpC,IAAK,QAAS,MAAO,CAAEkvD,OAAMlvD,KAAM,SACnC,IAAK,UAAW,MAAO,CAAEkvD,OAAMlvD,KAAM,WACrC,IAAK,QAAS,MAAO,CAAEkvD,OAAMlvD,KAAM,SACnC,IAAK,MAAO,MAAO,CAAEkvD,OAAMlvD,KAAM,OACjC,IAAK,MAAO,MAAO,CAAEkvD,OAAMlvD,KAAM,OACjC,IAAK,KAAM,MAAO,CAAEkvD,OAAMlvD,KAAM,MAChC,IAAK,OAAQ,MAAO,CAAEkvD,OAAMlvD,KAAM,QAClC,IAAK,KAAM,MAAO,CAAEkvD,OAAMlvD,KAAM,MAChC,IAAK,MAAO,MAAO,CAAEkvD,OAAMlvD,KAAM,OACjC,IAAK,KAAM,MAAO,CAAEkvD,OAAMlvD,KAAM,MAChC,IAAK,IAAK,MAAO,CAAEkvD,OAAMlvD,KAAM,SAC/B,IAAK,KAAM,MAAO,CAAEkvD,OAAMlvD,KAAM,MAChC,IAAK,KAAM,MAAO,CAAEkvD,OAAMlvD,KAAM,MAChC,IAAK,MAAO,MAAO,CAAEkvD,OAAMlvD,KAAM,OACjC,IAAK,IAAK,MAAO,CAAEkvD,OAAMlvD,KAAM,KAC/B,IAAK,QAAS,MAAO,CAAEkvD,OAAMlvD,KAAM,SACnC,IAAK,OAAQ,MAAO,CAAEkvD,OAAMlvD,KAAM,QAClC,IAAK,MAAO,MAAO,CAAEkvD,OAAMlvD,KAAM,OACjC,IAAK,OAAQ,MAAO,CAAEkvD,OAAMlvD,KAAM,QAClC,IAAK,MAAO,MAAO,CAAEkvD,OAAMlvD,KAAM,OACjC,IAAK,MAAO,MAAO,CAAEkvD,OAAMlvD,KAAM,OACjC,IAAK,QAAS,MAAO,CAAEkvD,OAAMlvD,KAAM,SACnC,IAAK,IAAK,MAAO,CAAEkvD,OAAMlvD,KAAM,KAC/B,IAAK,WAAY,MAAO,CAAEkvD,OAAMlvD,KAAM,YACtC,IAAK,OAAQ,MAAO,CAAEkvD,OAAMlvD,KAAM,QAClC,IAAK,OAAQ,MAAO,CAAEkvD,OAAMlvD,KAAM,QAClC,IAAK,MAAO,MAAO,CAAEkvD,OAAMlvD,KAAM,OACjC,IAAK,OAAQ,MAAO,CAAEkvD,OAAMlvD,KAAM,QAClC,IAAK,MAAO,MAAO,CAAEkvD,OAAMlvD,KAAM,OACjC,IAAK,MAAO,MAAO,CAAEkvD,OAAMlvD,KAAM,OACjC,IAAK,IAAK,MAAO,CAAEkvD,OAAMlvD,KAAM,KAC/B,IAAK,IAAK,MAAO,CAAEkvD,OAAMlvD,KAAM,KAC/B,IAAK,KAAM,MAAO,CAAEkvD,OAAMlvD,KAAM,MAChC,IAAK,MAAO,MAAO,CAAEkvD,OAAMlvD,KAAM,OACjC,IAAK,IAAK,MAAO,CAAEkvD,OAAMlvD,KAAM,KAC/B,IAAK,OAAK,MAAO,CAAEkvD,OAAMlvD,KAAM,QAC/B,IAAK,OAAK,MAAO,CAAEkvD,OAAMlvD,KAAM,QAC/B,QAAS,MAAO,CAAEkvD,OAAMlvD,KAAM,WAkEf8mI,CAAW3sI,GAGpB4sI,EAhEWC,EAAC93E,EAAclvD,KAClC,MAAM4tD,EAAYmrC,GAAMp9F,QAAQuzD,EAAKt/C,eACrC,OAAmB,IAAfg+C,EAAyB,IAElB,UAAT5tD,EAAmB,CAAC,EAAG,EAAG,GACf,UAATA,EAAmB,CAAC,EAAG,EAAG,GACjB,MAATA,EAAe,CAAC,EAAG,EAAG,EAAG,IAChB,QAATA,GAA2B,SAATA,EAAe,CAAC,EAAG,EAAG,GAC/B,SAATA,EAAkB,CAAC,EAAG,EAAG,EAAG,GACnB,QAATA,GAA2B,MAATA,EAAe,CAAC,EAAG,EAAG,GAC/B,QAATA,EAAiB,CAAC,EAAG,EAAG,GACf,SAATA,EAAkB,CAAC,EAAG,EAAG,GAChB,SAATA,EAAkB,CAAC,EAAG,EAAG,GAChB,aAATA,EAAsB,CAAC,EAAG,EAAG,EAAG,GACvB,UAATA,EAAmB,CAAC,EAAG,EAAG,EAAG,IACpB,SAATA,EAAkB,CAAC,EAAG,EAAG,EAAG,IACnB,UAATA,EAAmB,CAAC,EAAG,EAAG,EAAG,IACpB,MAATA,EAAe,CAAC,EAAG,EAAG,EAAG,GAChB,OAATA,EAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,IACpB,MAATA,EAAe,CAAC,EAAG,GACV,MAATA,EAAe,CAAC,EAAG,EAAG,EAAG,GAAI,IACpB,QAATA,EAAiB,CAAC,EAAG,EAAG,EAAG,GAAI,IACtB,OAATA,EAAgB,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,IACzB,OAATA,EAAgB,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,IACzB,SAATA,GAA4B,SAATA,GAA4B,OAATA,EAAgB,CAAC,EAAG,EAAG,EAAG,IACvD,WAATA,EAAoB,CAAC,EAAG,EAAG,EAAG,IACrB,WAATA,EAAoB,CAAC,EAAG,EAAG,EAAG,IACrB,aAATA,EAAsB,CAAC,EAAG,EAAG,EAAG,IACvB,SAATA,EAAkB,CAAC,EAAG,EAAG,EAAG,GAAI,IACvB,UAATA,EAAmB,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,IAC5B,UAATA,EAAmB,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,IAC5B,OAATA,EAAgB,CAAC,EAAG,EAAG,EAAG,GACjB,QAATA,EAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,IACrB,OAATA,EAAgB,CAAC,EAAG,EAAG,EAAG,IACjB,SAATA,GAA4B,SAATA,EAAe,CAAC,EAAG,EAAG,EAAG,IACnC,OAATA,EAAgB,CAAC,EAAG,EAAG,EAAG,GAAI,IACrB,QAATA,EAAiB,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,IAC1B,QAATA,EAAiB,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,IAC1B,UAATA,EAAmB,CAAC,EAAG,EAAG,EAAG,IACpB,YAATA,EAAqB,CAAC,EAAG,EAAG,EAAG,IACtB,UAATA,EAAmB,CAAC,EAAG,EAAG,EAAG,GAAI,IACxB,WAATA,EAAoB,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,IAC7B,QAATA,EAAiB,CAAC,EAAG,EAAG,EAAG,IAClB,QAATA,EAAiB,CAAC,EAAG,EAAG,EAAG,GAAI,IACtB,QAATA,EAAiB,CAAC,EAAG,EAAG,EAAG,GAAI,IACtB,SAATA,EAAkB,CAAC,EAAG,EAAG,EAAG,IAC5B,CAAC,EAAG,EAAG,IACM3E,KAAI+B,GAAK27F,IAAOnrC,EAAYxwD,GAAK,OAelC4pI,CAAaH,EAAO33E,KAAM23E,EAAO7mI,MAEnBg0C,QAAiB,CAACu+D,EAAKhnG,EAAM0iG,KACvD,IAAIniD,EAAS,EACb,GAAImiD,EAAM,EAAG,CACX,MAAMjqC,EAAWuuC,EAAItE,EAAM,GAAG3iG,MAAM,GAAI,GAClC27H,EAAUvzF,SAAS6+D,EAAItE,EAAM,GAAG3iG,OAAO,IACvC47H,EAAYnuC,GAAMp9F,QAAQqoE,GAEhClY,EADkBitC,GAAMp9F,QAAQ4P,IACV27H,EAAYD,EAAU,EAAIA,CAClD,CAEA,OADA10B,EAAIlvG,KAAK,GAADqH,OAAIa,GAAIb,OAAGohD,IACZymD,IACN,IAGH+zB,EAAaS,GACbZ,EAAa,GACbI,EAAiBQ,KAChB,CAAC5sI,KAGJyM,EAAAA,EAAAA,YAAU,KACR,GAAyB,IAArBo/H,EAAUtnI,OAAc,OAC5B,MACMyoI,EADU,IAAInB,EAAU16H,MAAM46H,MAAeF,EAAU16H,MAAM,EAAG46H,IACvC7qI,KAAI,CAACkQ,EAAMnO,KACxC,MAAMoc,EAAOjO,EAAKD,MAAM,GAAI,GAC5B,IAAIwgD,EAASpY,SAASnoC,EAAKD,OAAO,IAClC,OAAOlO,EAAI4oI,EAAUtnI,OAASwnI,EAAS,GAAAx7H,OAChC8O,GAAI9O,OAAGohD,GAAM,GAAAphD,OACb8O,GAAI9O,OAAGohD,EAAS,MAGzBy6E,EAAiBY,KAChB,CAACjB,EAAWF,KAIb5G,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,kBAAiB9+C,SAAA,EAE9B25H,EAAAA,GAAAA,KAAC6K,GAAK,CACJ7F,cAAeA,KAAQiF,GAAa,GAAOC,GAAa,GAAQC,GAAc,GAAQE,GAAa,IACnGvF,cAAeA,KAAQoF,GAAa,GAAOD,GAAa,GAAQE,GAAc,GAAQE,GAAa,IACnGtF,eAAgBA,KAAQoF,GAAc,GAAOF,GAAa,GAAQC,GAAa,GAAQG,GAAa,IACpGS,cAAeA,KAAQT,GAAa,GAAOJ,GAAa,GAAQC,GAAa,GAAQC,GAAc,IACnGhF,UAAWA,EACXF,UAAWA,EACXC,WAAYA,EACZkF,UAAWA,KAIbvH,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,aAAY9+C,SAAA,CACxBzI,EACA6rI,EAAUtnI,OAAS,IAClB69H,EAAAA,GAAAA,KAAAsE,GAAAA,SAAA,CAAAj+H,UACEw8H,EAAAA,GAAAA,MAAA,QAAM19E,UAAU,cAAa9+C,SAAA,CAAC,KAAGojI,EAAUzoI,KAAK,KAAK,SAIxDikI,GAAaC,GAAcC,GAAaiF,IACvCpK,EAAAA,GAAAA,KAAAsE,GAAAA,SAAA,CAAAj+H,UACE25H,EAAAA,GAAAA,KAAC+K,GAAQ,CAAClC,gBAAiBjrI,SAMhCqnI,IAAcC,IAAeC,IAAciF,IAAcvH,EAAAA,GAAAA,MAAAyB,GAAAA,SAAA,CAAAj+H,SAAA,EACxD25H,EAAAA,GAAAA,KAACgL,GAAS,CACJvB,UAAWA,EACXC,cAAeA,EACfC,UAAWA,EACXC,aAAcA,KAEpB5J,EAAAA,GAAAA,KAACiL,GAAO,CAACnL,YAAa4J,OAIvBxE,IAAeD,IAAcE,IAAciF,IAC5CpK,EAAAA,GAAAA,KAAC+K,GAAQ,CAAClC,gBAAiBjrI,IAE1BunI,IAAcF,IAAcC,IAAekF,IAAcvH,EAAAA,GAAAA,MAAAyB,GAAAA,SAAA,CAAAj+H,SAAA,EAC1D25H,EAAAA,GAAAA,KAACgL,GAAS,CACFvB,UAAWA,EACXC,cAAeA,EACfC,UAAWA,EACXC,aAAcA,KAEpB5J,EAAAA,GAAAA,KAACkD,GAAO,CAACpD,YAAa4J,WC/J9B,GA/EkD/rI,IAAwB,IAAvB,cAAE8jI,GAAe9jI,EAClE,MAKOutI,EAAeC,GAAoBC,EAAAA,SAAe,IAClDC,EAAaC,GAAkBF,EAAAA,SAAe,KAI/CG,EAAuC,CAC3CzmI,EAAG,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAClCC,EAAG,CAAC,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,MACnCC,EAAG,CAAC,IAAK,KAAM,KAAM,IAAK,IAAK,KAAM,MACrCK,EAAG,CAAC,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,KACnCC,EAAG,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAClCyB,EAAG,CAAC,IAAK,IAAK,KAAM,IAAK,IAAK,KAAM,MACpCtC,EAAG,CAAC,IAAK,KAAM,KAAM,IAAK,KAAM,KAAM,OAGlC+mI,EAAe,CACnB,CAAEnvB,MAAO,cAAe2mB,MAAO,CAAC,IAAK,IAAK,KAAM,MAAO58D,QAAS,CAAC,EAAG,EAAG,EAAG,IAC1E,CAAEi2C,MAAO,mBAAoB2mB,MAAO,CAAC,KAAM,KAAM,IAAK,KAAM58D,QAAS,CAAC,EAAG,EAAG,EAAG,IAC/E,CAAEi2C,MAAO,eAAgB2mB,MAAO,CAAC,IAAK,KAAM,IAAK,MAAO58D,QAAS,CAAC,EAAG,EAAG,EAAG,IAC3E,CAAEi2C,MAAO,gBAAiB2mB,MAAO,CAAC,KAAM,IAAK,KAAM58D,QAAS,CAAC,EAAG,EAAG,IACnE,CAAEi2C,MAAO,kBAAmB2mB,MAAO,CAAC,IAAK,KAAM,KAAM,KAAM58D,QAAS,CAAC,EAAG,EAAG,EAAG,IAC9E,CAAEi2C,MAAO,sBAAuB2mB,MAAO,CAAC,IAAK,KAAM,KAAM,KAAM58D,QAAS,CAAC,EAAG,EAAG,EAAG,IAClF,CAAEi2C,MAAO,eAAgB2mB,MAAO,CAAC,IAAK,YAAQ,WAAO,aAAS58D,QAAS,CAAC,EAAG,EAAG,EAAG,IACjF,CAAEi2C,MAAO,kBAAmB2mB,MAAO,CAAC,IAAK,YAAQ,MAAO58D,QAAS,CAAC,EAAG,EAAG,IACxE,CAAEi2C,MAAO,WAAY2mB,MAAO,CAAC,IAAK,KAAM,KAAM,KAAM58D,QAAS,CAAC,EAAG,EAAG,EAAG,IACvE,CAAEi2C,MAAO,iBAAkB2mB,MAAO,CAAC,IAAK,KAAM,KAAM,MAAO58D,QAAS,CAAC,EAAG,EAAG,EAAG,IAC9E,CAAEi2C,MAAO,gBAAiB2mB,MAAO,CAAC,IAAK,MAAO,KAAM,MAAO58D,QAAS,CAAC,EAAG,EAAG,EAAG,IAC9E,CAAEi2C,MAAO,oBAAqB2mB,MAAO,CAAC,IAAK,WAAO,YAAQ,KAAM58D,QAAS,CAAC,EAAG,EAAG,EAAG,IACnF,CAAEi2C,MAAO,uBAAwB2mB,MAAO,CAAC,KAAM,KAAM,IAAK,KAAM58D,QAAS,CAAC,EAAG,EAAG,EAAG,IACnF,CAAEi2C,MAAO,kBAAmB2mB,MAAO,CAAC,IAAK,KAAM,MAAO,OAAQ58D,QAAS,CAAC,EAAG,EAAG,EAAG,KAGnF,OACEy8D,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,eAAc9+C,SAAA,EAC3B25H,EAAAA,GAAAA,KAAA,OAAK76E,UAAU,aAAY9+C,SAAC,qCAE5Bw8H,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,qBAAoB9+C,SAAA,EACjC25H,EAAAA,GAAAA,KAAA,SAAA35H,SAAO,iBACP25H,EAAAA,GAAAA,KAAA,UAAQzgI,MAAO8rI,EAAa/E,SAAWhjI,GAAMgoI,EAAehoI,EAAE9B,OAAOjC,OAAO8G,SAlCrE,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAmC9BvH,KAAKuD,IAAM29H,EAAAA,GAAAA,KAAA,UAAgBzgI,MAAO8C,EAAEgE,SAAEhE,GAAdA,WAIlC29H,EAAAA,GAAAA,KAAA,OAAK76E,UAAU,mBAAkB9+C,SAC9BmlI,EAAa1sI,KAAI,CAAC2sI,EAAM5qI,KACvBgiI,EAAAA,GAAAA,MAAA,OAEE19E,UAAS,mBAAAh3C,OAAqBtN,IAAMqqI,EAAgB,WAAa,IACjEnhG,QAASA,IAAMohG,EAAiBtqI,GAAGwF,SAAA,EAEnC25H,EAAAA,GAAAA,KAAA,OAAK76E,UAAU,aAAY9+C,SAAEolI,EAAKzI,MAAMhiI,KAAK,eAC7Cg/H,EAAAA,GAAAA,KAAA,OAAK76E,UAAU,cAAa9+C,SACzBolI,EAAKrlE,QAAQtnE,KAAI,CAAC4sI,EAAQriD,KACzB,MAAMzrF,EAAQ2tI,EAAQF,GAAaK,GACnC,OACE1L,EAAAA,GAAAA,KAAA,UAAgB76E,UAAU,oBAAoBpb,QAASA,IA5DnDnsC,KAClB6jI,EAAc7jI,IA2D6DqlI,CAAWrlI,GAAOyI,SAC5EolI,EAAKzI,MAAM35C,GAAGn2E,gBAAkBu4H,EAAKzI,MAAM35C,GAAKzrF,EAAQ,IAAMA,GADpDyrF,QAMlBxoF,IAAMqqI,IACLlL,EAAAA,GAAAA,KAAA,OAAK76E,UAAU,0BAAyB9+C,SACrCmlI,EAAaN,GAAe7uB,UAjB5Bx7G,WCtDX8qI,GAA4C,CAChDC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC3BC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC3BC,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC7BC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC3BC,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC/BC,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC5BC,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAGxBC,GAAY,CAAC,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,KAEzEC,GAAgBp9H,GACbm9H,GAAU/sI,QAAQ4P,GAGrBq9H,GAAoBrtI,GACjBmtI,IAAWntI,EAAQ,IAAM,IAG5BstI,GAAmB98E,IACvB,MAAO+8E,EAAIC,EAAIC,GAAM,EAClBj9E,EAAU,GAAKA,EAAU,GAAK,IAAM,IACpCA,EAAU,GAAKA,EAAU,GAAK,IAAM,IACpCA,EAAU,GAAKA,EAAU,GAAK,IAAM,IAEvC,OAAW,IAAP+8E,GAAmB,IAAPC,GAAmB,IAAPC,EAAiB,KAClC,IAAPF,GAAmB,IAAPC,GAAmB,IAAPC,EAAiB,IAClC,IAAPF,GAAmB,IAAPC,GAAmB,IAAPC,EAAiB,OAClC,IAAPF,GAAmB,IAAPC,GAAmB,IAAPC,EAAiB,OAClC,IAAPF,GAAmB,IAAPC,GAAmB,IAAPC,EAAiB,OAClC,IAAPF,GAAmB,IAAPC,EAAiB,IACtB,IAAPD,GAAmB,IAAPC,EAAiB,GACtB,IAAPD,GAAmB,IAAPC,EAAiB,MAC1B,KAGHE,GAAgB,SAAC/5E,EAAc53B,GAAuD,IAAzC4xG,EAAiBzqI,UAAAC,OAAA,QAAAL,IAAAI,UAAA,IAAAA,UAAA,GAClE,MAAMmvD,EAAY+6E,GAAaz5E,GACzBnD,EAAYm8E,GAAa5wG,GAC/B,IAAKy0B,EAAW,MAAO,GAEvB,MAAMkF,EAAQlF,EAAU1wD,KAAI8tI,GAAYP,GAAiBh7E,EAAYu7E,KAC/DjI,EAAmB,GAEzB,IAAK,IAAI9jI,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAM4jI,EAAW/vE,EAAM7zD,GACjBgsI,EAAQn4E,GAAO7zD,EAAI,GAAK,GACxBwiI,EAAQ3uE,GAAO7zD,EAAI,GAAK,GAE9B,GAAI8rI,EAAU,CACZ,MAAMG,EAAUp4E,GAAO7zD,EAAI,GAAK,GAC1BksI,EAAUX,GAAa3H,GACvBuI,EAAWZ,GAAaS,GACxBI,EAAWb,GAAa/I,GACxB6J,EAAad,GAAaU,GAEhC,IAAIK,EAAYb,GAAgB,CAACS,EAASC,EAAUC,EAAUC,IAC9D,OAAQnyG,GAEN,IAAK,SACO,IAANl6B,EAASssI,EAAY,OACV,IAANtsI,GAAiB,IAANA,GAAiB,IAANA,EAASssI,EAAY,KACrC,IAANtsI,EAASssI,EAAY,OACf,IAANtsI,EAASssI,EAAY,IACf,IAANtsI,IAASssI,EAAY,QAC9B,MAEF,IAAK,SACO,IAANtsI,GAAiB,IAANA,GAAiB,IAANA,EAASssI,EAAY,KAChC,IAANtsI,EAASssI,EAAY,OACf,IAANtsI,EAASssI,EAAY,IACf,IAANtsI,EAASssI,EAAY,OACf,IAANtsI,IAASssI,EAAY,QAC9B,MAEF,IAAK,WACO,IAANtsI,GAAiB,IAANA,EAASssI,EAAY,KACrB,IAANtsI,GAAiB,IAANA,EAASssI,EAAY,OAC1B,IAANtsI,EAASssI,EAAY,IACf,IAANtsI,IAASssI,EAAY,QAC9B,MAEF,IAAK,SACO,IAANtsI,GAAiB,IAANA,EAASssI,EAAY,OACrB,IAANtsI,EAASssI,EAAY,IACf,IAANtsI,EAASssI,EAAY,OACf,IAANtsI,IAASssI,EAAY,MAC9B,MAEF,IAAK,aACO,IAANtsI,EAASssI,EAAY,IACV,IAANtsI,GAAiB,IAANA,EAASssI,EAAY,OAC1B,IAANtsI,IAASssI,EAAY,QAC9B,MAEF,IAAK,UACO,IAANtsI,GAAiB,IAANA,GAAiB,IAANA,EAASssI,EAAY,KAChC,IAANtsI,EAASssI,EAAY,OACf,IAANtsI,GAAiB,IAANA,EAASssI,EAAY,OAC1B,IAANtsI,IAASssI,EAAY,KAC9B,MAEF,IAAK,UACO,IAANtsI,GAAiB,IAANA,GAAiB,IAANA,EAASssI,EAAY,KAChC,IAANtsI,GAAiB,IAANA,EAASssI,EAAY,OAC1B,IAANtsI,EAASssI,EAAY,OACf,IAANtsI,IAASssI,EAAY,KAGlCxI,EAAO79H,KAAK,GAADqH,OAAIs2H,GAAQt2H,OAAGg/H,GAC5B,KAAO,CACL,MAAMJ,EAAUX,GAAa3H,GACvBuI,EAAWZ,GAAaS,GACxBI,EAAWb,GAAa/I,GAExB8J,EAAYb,GAAgB,CAACS,EAASC,EAAUC,IACtDtI,EAAO79H,KAAK,GAADqH,OAAIs2H,GAAQt2H,OAAGg/H,GAC5B,CACF,CAEA,OAAOxI,CACT,EAEMyI,GAAkBA,CAACpuI,EAAe+7B,EAAcsyG,KAmDpD,MAAMC,EAAgE,CACpE1B,OAAQ,CACN,EAAGyB,EAAe,QAAU,IAC5B,EAAGA,EAAe,OAAS,KAC3B,EAAGA,EAAe,QAAU,MAC5B,EAAGA,EAAe,SAAW,KAC7B,EAAGA,EAAe,KAAO,IACzB,EAAGA,EAAe,OAAS,KAC3B,EAAGA,EAAe,UAAY,OAEhCxB,OAAQ,CACN,EAAGwB,EAAe,MAAQ,IAC1B,EAAGA,EAAe,OAAS,KAC3B,EAAGA,EAAe,UAAY,MAC9B,EAAGA,EAAe,KAAO,IACzB,EAAGA,EAAe,OAAS,KAC3B,EAAGA,EAAe,UAAY,MAC9B,EAAGA,EAAe,UAAY,OAEhCvB,SAAU,CACR,EAAGuB,EAAe,MAAQ,IAC1B,EAAGA,EAAe,SAAW,KAC7B,EAAGA,EAAe,KAAO,IACzB,EAAGA,EAAe,OAAS,KAC3B,EAAGA,EAAe,UAAY,MAC9B,EAAGA,EAAe,SAAW,KAC7B,EAAGA,EAAe,KAAO,KAE3BtB,OAAQ,CACN,EAAGsB,EAAe,QAAU,IAC5B,EAAGA,EAAe,KAAO,IACzB,EAAGA,EAAe,SAAW,MAC7B,EAAGA,EAAe,QAAU,MAC5B,EAAGA,EAAe,SAAW,KAC7B,EAAGA,EAAe,KAAO,IACzB,EAAGA,EAAe,OAAS,MAE7BrB,WAAY,CACV,EAAGqB,EAAe,KAAO,IACzB,EAAGA,EAAe,OAAS,KAC3B,EAAGA,EAAe,SAAW,MAC7B,EAAGA,EAAe,SAAW,KAC7B,EAAGA,EAAe,OAAS,KAC3B,EAAGA,EAAe,KAAO,IACzB,EAAGA,EAAe,SAAW,MAE/BpB,QAAS,CACP,EAAGoB,EAAe,MAAQ,IAC1B,EAAGA,EAAe,SAAW,MAC7B,EAAGA,EAAe,UAAY,MAC9B,EAAGA,EAAe,MAAQ,KAC1B,EAAGA,EAAe,KAAO,IACzB,EAAGA,EAAe,SAAW,KAC7B,EAAGA,EAAe,OAAS,OAE7BnB,QAAS,CACP,EAAGmB,EAAe,SAAW,MAC7B,EAAGA,EAAe,SAAW,KAC7B,EAAGA,EAAe,MAAQ,KAC1B,EAAGA,EAAe,KAAO,IACzB,EAAGA,EAAe,SAAW,KAC7B,EAAGA,EAAe,OAAS,MAC3B,EAAGA,EAAe,MAAQ,MAK9B,GAAIC,EAAYvyG,SAAsCj5B,IAA7BwrI,EAAYvyG,GAAM/7B,GACzC,OAAOsuI,EAAYvyG,GAAM/7B,GAI3B,IAAKquI,EAAc,CAEjB,MADsB,CAAC,IAAK,KAAM,MAAO,KAAM,IAAK,KAAM,OACrCruI,IAAU,GACjC,CAEA,MAAO,KA0RT,GAnRoCrB,IAAwB,IAAD4vI,EAAA,IAAtB,cAAE9L,GAAe9jI,EACpD,MAAO8mI,EAAUC,IAAe75H,EAAAA,EAAAA,UAAS,MAClCwiI,EAAcG,IAAmB3iI,EAAAA,EAAAA,WAAS,IACzC21H,gBAAiBiN,EAAqB,gBAAE7M,GAAoBC,KAE9D6M,EAAW,CACf,CAAErxB,MAAO,SAAUhrG,OAAQ,GAC3B,CAAEgrG,MAAO,SAAUhrG,QAAS,GAC5B,CAAEgrG,MAAO,WAAYhrG,QAAS,GAC9B,CAAEgrG,MAAO,SAAUhrG,QAAS,GAC5B,CAAEgrG,MAAO,aAAchrG,QAAS,GAChC,CAAEgrG,MAAO,UAAWhrG,QAAS,GAC7B,CAAEgrG,MAAO,UAAWhrG,QAAS,KAGzBs8H,EAAyB3+H,IACqB,CAChD,KAAM,KACN,KAAM,KACN,KAAM,KACN,KAAM,KACN,KAAM,KACN,EAAK,KACL,KAAM,IACN,KAAM,KAEaA,IAASA,IAGzBuxH,EAAcC,IAAmB31H,EAAAA,EAAAA,UAAS,UAE3C+iI,GAAiE,QAA5CL,EAAAG,EAAS7J,MAAKphI,GAAKA,EAAE45G,QAAUkkB,WAAa,IAAAgN,OAAA,EAA5CA,EAA8Cl8H,SAAU,EAC7EggD,EAAY+6E,GAAa3H,GAOzBoJ,EAAYxB,GALC,YAAjB9L,GACKlvE,EAAY,GAAK,GACD,WAAjBkvE,EACElvE,GACCA,EAAYu8E,EAAqB,IAAM,IAG1C3K,EAAcj0H,IAClB01H,EAAY11H,GACZyyH,EAAczyH,IAUV21H,EAASyG,EAAAA,SACb,IAAMsB,GAAcjI,EAAUlE,EAAc8M,IAC5C,CAAC5I,EAAUlE,EAAc8M,IAIrBS,EAAkF,CAAC,EACnFC,EAAwB,CAAC,SAAU,WAAY,aAAc,SAAU,WAAWvuI,QAAOu7B,GAAQA,IAASwlG,IAOhH,OANAwN,EAAsB5sI,SAAQ45B,IAC5B,MAAMizG,EAAatB,GAAcjI,EAAU1pG,EAAMsyG,GAC9C7tI,QAAO5B,IAAU+mI,EAAO/uH,SAAShY,KACpCkwI,EAAyB/yG,GAAQizG,EAAWlvI,KAAIlB,IAAK,CAAOA,QAAOm9B,eAInE8nG,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,cAAa9+C,SAAA,EAC1B25H,EAAAA,GAAAA,KAAA,OAAK76E,UAAU,aAAY9+C,SAAC,wBAG5Bw8H,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,eAAc9+C,SAAA,EAC3B25H,EAAAA,GAAAA,KAAA,OAAK76E,UAAU,cACf09E,EAAAA,GAAAA,MAAA,UACE19E,UAAS,cAAAh3C,OAA6B,OAAbs2H,EAAoB,gBAAkB,IAC/D16F,QAASA,IAAMk5F,EAAW,MAAM58H,SAAA,EAEhC25H,EAAAA,GAAAA,KAAA,KAAA35H,SAAG,OAAM,YAEXw8H,EAAAA,GAAAA,MAAA,UAAQ19E,UAAS,cAAAh3C,OAA6B,OAAbs2H,EAAoB,gBAAkB,IAAM16F,QAASA,IAAMk5F,EAAW,MAAM58H,SAAA,EAC3G25H,EAAAA,GAAAA,KAAA,KAAA35H,SAAG,OAAM,YAEX25H,EAAAA,GAAAA,KAAA,OAAK76E,UAAU,cACf09E,EAAAA,GAAAA,MAAA,UAAQ19E,UAAS,cAAAh3C,OAA6B,OAAbs2H,EAAoB,gBAAkB,IAAM16F,QAASA,IAAMk5F,EAAW,MAAM58H,SAAA,EAC3G25H,EAAAA,GAAAA,KAAA,KAAA35H,SAAG,OAAM,YAEXw8H,EAAAA,GAAAA,MAAA,UAAQ19E,UAAS,cAAAh3C,OAA6B,OAAbs2H,EAAoB,gBAAkB,IAAM16F,QAASA,IAAMk5F,EAAW,MAAM58H,SAAA,EAC3G25H,EAAAA,GAAAA,KAAA,KAAA35H,SAAG,OAAM,YAEXw8H,EAAAA,GAAAA,MAAA,UAAQ19E,UAAS,cAAAh3C,OAA6B,OAAbs2H,EAAoB,gBAAkB,IAAM16F,QAASA,IAAMk5F,EAAW,MAAM58H,SAAA,EAC3G25H,EAAAA,GAAAA,KAAA,KAAA35H,SAAG,OAAM,YAEX25H,EAAAA,GAAAA,KAAA,OAAK76E,UAAU,iBAIjB09E,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,eAAc9+C,SAAA,EAC3B25H,EAAAA,GAAAA,KAAA,UACE76E,UAAS,cAAAh3C,OAA6B,MAAbs2H,EAAmB,gBAAkB,IAC9D16F,QAASA,IAAMk5F,EAAW,KAAK58H,SAChC,OAGD25H,EAAAA,GAAAA,KAAA,UAAQ76E,UAAS,cAAAh3C,OAA6B,MAAbs2H,EAAmB,gBAAkB,IAAM16F,QAASA,IAAMk5F,EAAW,KAAK58H,SAAC,OAG5G25H,EAAAA,GAAAA,KAAA,UAAQ76E,UAAS,cAAAh3C,OAA6B,MAAbs2H,EAAmB,gBAAkB,IAAM16F,QAASA,IAAMk5F,EAAW,KAAK58H,SAAC,OAG5G25H,EAAAA,GAAAA,KAAA,UAAQ76E,UAAS,cAAAh3C,OAA6B,MAAbs2H,EAAmB,gBAAkB,IAAM16F,QAASA,IAAMk5F,EAAW,KAAK58H,SAAC,OAG5G25H,EAAAA,GAAAA,KAAA,UAAQ76E,UAAS,cAAAh3C,OAA6B,MAAbs2H,EAAmB,gBAAkB,IAAM16F,QAASA,IAAMk5F,EAAW,KAAK58H,SAAC,OAG5G25H,EAAAA,GAAAA,KAAA,UAAQ76E,UAAS,cAAAh3C,OAA6B,MAAbs2H,EAAmB,gBAAkB,IAAM16F,QAASA,IAAMk5F,EAAW,KAAK58H,SAAC,OAG5G25H,EAAAA,GAAAA,KAAA,UAAQ76E,UAAS,cAAAh3C,OAA6B,MAAbs2H,EAAmB,gBAAkB,IAAM16F,QAASA,IAAMk5F,EAAW,KAAK58H,SAAC,UAK9G25H,EAAAA,GAAAA,KAAA,OAAK76E,UAAU,YAAW9+C,SACvBqnI,EAAS5uI,KAAIq2E,IAAgB,IAAf,MAAEknC,GAAOlnC,EAEtB,OACE6qD,EAAAA,GAAAA,KAAA,UAEE76E,UAAS,aAAAh3C,OAAeoyH,IAAiBlkB,EAAQ,YAAc,IAC/DtyE,QAASA,KAAMkkG,OApFzBzN,EADwBzlG,EAqFkBshF,GAnF1CoxB,EAAsB1yG,QACtB0mG,EAAcgD,GAHU1pG,OAqFyB10B,SACvCg2G,GAHKA,SAQbwmB,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,qBAAoB9+C,SAAA,EACjCw8H,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,aAAY9+C,SAAA,EACzB25H,EAAAA,GAAAA,KAAA,QAAA35H,SAAM,gBAAiB25H,EAAAA,GAAAA,KAAA,UACvBA,EAAAA,GAAAA,KAAA,UAAQ76E,UAAU,YAAYpb,QAASA,IAAM03F,EAAckD,EAAO,IAAIt+H,SAAEs+H,EAAO,MAC/E3E,EAAAA,GAAAA,KAAA,QAAM76E,UAAU,YAAW9+C,SAAE+mI,GAAgB,EAAG7M,EAAc8M,SAEhExK,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,aAAY9+C,SAAA,EACzB25H,EAAAA,GAAAA,KAAA,QAAA35H,SAAM,gBAAiB25H,EAAAA,GAAAA,KAAA,UACvBA,EAAAA,GAAAA,KAAA,UAAQ76E,UAAU,YAAYpb,QAASA,IAAM03F,EAAckD,EAAO,IAAIt+H,SAAEs+H,EAAO,MAC/E3E,EAAAA,GAAAA,KAAA,QAAM76E,UAAU,YAAW9+C,SAAE+mI,GAAgB,EAAG7M,EAAc8M,SAEhExK,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,UAAS9+C,SAAA,EACtB25H,EAAAA,GAAAA,KAAA,QAAA35H,SAAM,aAAc25H,EAAAA,GAAAA,KAAA,UACpBA,EAAAA,GAAAA,KAAA,UAAQ76E,UAAU,YAAYpb,QAASA,IAAM03F,EAAckD,EAAO,IAAIt+H,SAAEs+H,EAAO,MAC/E3E,EAAAA,GAAAA,KAAA,QAAM76E,UAAU,YAAW9+C,SAAE+mI,GAAgB,EAAG7M,EAAc8M,YAIlExK,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,qBAAoB9+C,SAAA,EACjCw8H,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,cAAa9+C,SAAA,EAAC25H,EAAAA,GAAAA,KAAA,QAAA35H,SAAM,iBAAkB25H,EAAAA,GAAAA,KAAA,UACnDA,EAAAA,GAAAA,KAAA,UAAQ76E,UAAU,YAAYpb,QAASA,IAAM03F,EAAckD,EAAO,IAAIt+H,SAAEs+H,EAAO,MAC/E3E,EAAAA,GAAAA,KAAA,QAAM76E,UAAU,YAAW9+C,SAAE+mI,GAAgB,EAAG7M,EAAc8M,SAEhExK,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,QAAO9+C,SAAA,EAAC25H,EAAAA,GAAAA,KAAA,QAAA35H,SAAM,WAAY25H,EAAAA,GAAAA,KAAA,UACvCA,EAAAA,GAAAA,KAAA,UAAQ76E,UAAU,YAAYpb,QAASA,IAAM03F,EAAckD,EAAO,IAAIt+H,SAAEs+H,EAAO,MAC/E3E,EAAAA,GAAAA,KAAA,QAAM76E,UAAU,YAAW9+C,SAAE+mI,GAAgB,EAAG7M,EAAc8M,SAEhExK,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,WAAU9+C,SAAA,EAAC25H,EAAAA,GAAAA,KAAA,QAAA35H,SAAM,cAAe25H,EAAAA,GAAAA,KAAA,UAC7CA,EAAAA,GAAAA,KAAA,UAAQ76E,UAAU,YAAYpb,QAASA,IAAM03F,EAAckD,EAAO,IAAIt+H,SAAEs+H,EAAO,MAC/E3E,EAAAA,GAAAA,KAAA,QAAM76E,UAAU,YAAW9+C,SAAE+mI,GAAgB,EAAG7M,EAAc8M,YAGlExK,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,qBAAoB9+C,SAAA,EAIjC25H,EAAAA,GAAAA,KAAA,OAAA35H,UAEEw8H,EAAAA,GAAAA,MAAA,OAAAx8H,SAAA,EACEw8H,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,SAAQ9+C,SAAA,CAAC,SAAKw8H,EAAAA,GAAAA,MAAA,KAAAx8H,SAAA,CAAIwnI,EAC9BA,IAAcF,EAAsBE,GAAa,IAAKhL,EAAAA,GAAAA,MAAAyB,GAAAA,SAAA,CAAAj+H,SAAA,CAAE,MAAIsnI,EAAsBE,aACrF7N,EAAAA,GAAAA,KAAA,OAAK76E,UAAU,QAAO9+C,UACpB25H,EAAAA,GAAAA,KAACkD,GAAO,CAAC5uE,aAAcq5E,EAAsBE,GAAY/N,YAAa,QAGpF+C,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,YAAW9+C,SAAA,CAAEo+H,EAAS,IAAElE,WAQ/BsC,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,WAAU9+C,SAAA,EACvB25H,EAAAA,GAAAA,KAAA,QAAA35H,SAAM,cAAe25H,EAAAA,GAAAA,KAAA,UACrBA,EAAAA,GAAAA,KAAA,UAAQ76E,UAAU,YAAYpb,QAASA,IAAM03F,EAAckD,EAAO,IAAIt+H,SAAEs+H,EAAO,MAC/E3E,EAAAA,GAAAA,KAAA,QAAM76E,UAAU,YAAW9+C,SAAE+mI,GAAgB,EAAG7M,EAAc8M,SAGhExK,EAAAA,GAAAA,MAAA,SAAO19E,UAAU,eAAc9+C,SAAA,EAC7B25H,EAAAA,GAAAA,KAAA,SACEv8H,KAAK,WACLsT,QAASs2H,EACT/G,SAAUA,IAAMkH,GAAiBH,KACjC,yBAUNrN,EAAAA,GAAAA,KAAA,OAAK76E,UAAU,iBAAgB9+C,UAC7Bw8H,EAAAA,GAAAA,MAAA,YAAU19E,UAAU,cAAa9+C,SAAA,EAC/Bw8H,EAAAA,GAAAA,MAAA,UAAQ19E,UAAU,oBAAmB9+C,SAAA,CACjB,YAAjBk6H,IACCsC,EAAAA,GAAAA,MAAAyB,GAAAA,SAAA,CAAAj+H,SAAA,CAAE,mBAAiBwnI,EAAU,aAEb,WAAjBtN,IACCsC,EAAAA,GAAAA,MAAAyB,GAAAA,SAAA,CAAAj+H,SAAA,CAAE,mBAAiBwnI,EAAU,cAEZ,YAAjBtN,GAA+C,WAAjBA,IAC9BsC,EAAAA,GAAAA,MAAAyB,GAAAA,SAAA,CAAAj+H,SAAA,CAAE,iBAAewnI,EAAU,kBAG/B7N,EAAAA,GAAAA,KAAA,OAAK76E,UAAU,kBAAiB9+C,SAMLqmI,GADFmB,EAHiB,YAAjBtN,EAA6B,SACF,UAGiB8M,GAE3CvuI,KAAI,CAAClB,EAAOoB,KAChCghI,EAAAA,GAAAA,KAAA,UAAQ76E,UAAU,YAAwBpb,QAASA,IAAM03F,EAAc7jI,GAAOyI,SAC3EzI,GADgCoB,YAU5C+uI,EAAsBjvI,KAAKi8B,IAC1BilG,EAAAA,GAAAA,KAAA,OAAK76E,UAAU,iBAAgB9+C,UAC7Bw8H,EAAAA,GAAAA,MAAA,YAAU19E,UAAU,cAAa9+C,SAAA,EAC/Bw8H,EAAAA,GAAAA,MAAA,UAAQ19E,UAAU,oBAAmB9+C,SAAA,CAAC,iBAAeo+H,EAAS,IAAE1pG,MAChEilG,EAAAA,GAAAA,KAAA,OAAK76E,UAAU,kBAAiB9+C,SAC7BynI,EAAyB/yG,GAAMj8B,KAAI,CAAA8lI,EAAY5lI,KAAK,IAAhB,MAAEpB,GAAOgnI,EAAA,OAC5C5E,EAAAA,GAAAA,KAAA,UACE76E,UAAU,YAEVpb,QAASA,KACP62F,EAAgB,CACdn9H,KAAM,WACN7F,MAAOA,EACPswI,SAAUnzG,EACVozG,MAAO1J,EACP4I,aAAcA,IAEhB5L,EAAc7jI,IACdyI,SAEDzI,GAZIoB,YAPsB+7B,SCze7C,GAX8Cp9B,IAAmC,IAAlC,MAAE0+G,EAAK,QAAEtyE,EAAO,SAAE5xB,GAAUxa,EACzE,OACEqiI,EAAAA,GAAAA,KAAA,UACE76E,UAAS,eAAAh3C,OAAiBgK,EAAW,WAAa,IAClD4xB,QAASA,EAAQ1jC,SAEhBg2G,KCQP,GAnB8B+xB,KAC5B,MAAOC,EAAOC,IAAYzjI,EAAAA,EAAAA,UAAS0jI,aAAaC,QAAQ,UAAY,SAEpEnkI,EAAAA,EAAAA,YAAU,KACRiI,SAASgf,gBAAgBzd,aAAa,aAAcw6H,GACpDE,aAAaE,QAAQ,QAASJ,KAC7B,CAACA,IAMJ,OACErO,EAAAA,GAAAA,KAAA,UAAQj2F,QALU2kG,KAClBJ,EAAmB,UAAVD,EAAoB,OAAS,UAIRlpF,UAAU,eAAc9+C,SACzC,UAAVgoI,EAAoB,eAAO,kBCsElC,SA3EA,WAEE,MAAOM,EAAeC,IAAoB/jI,EAAAA,EAAAA,UAAiB,MACpDgkI,EAAYC,IAAiBjkI,EAAAA,EAAAA,UAA8D,QAmBlG,OACEm1H,EAAAA,GAAAA,KAACc,GAAa,CAAAz6H,UACZw8H,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,MAAK9+C,SAAA,EAElBw8H,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,eAAc9+C,SAAA,EAC3B25H,EAAAA,GAAAA,KAAC+O,GAAU,CACT1yB,MAAM,oBACNtyE,QAASA,IAAM+kG,EAAc,QAC7B32H,SAAyB,SAAf02H,KAEZ7O,EAAAA,GAAAA,KAAC+O,GAAU,CACT1yB,MAAM,qBACNtyE,QAASA,IAAM+kG,EAAc,SAC7B32H,SAAyB,UAAf02H,KAEZ7O,EAAAA,GAAAA,KAAC+O,GAAU,CACT1yB,MAAM,mBACNtyE,QAASA,IAAM+kG,EAAc,OAC7B32H,SAAyB,QAAf02H,KAEZ7O,EAAAA,GAAAA,KAAC+O,GAAU,CACT1yB,MAAM,qBACNtyE,QAASA,IAAM+kG,EAAc,SAC7B32H,SAAyB,UAAf02H,KAEZ7O,EAAAA,GAAAA,KAAC+O,GAAU,CACT1yB,MAAM,qBACNtyE,QAASA,IAAM+kG,EAAc,gBAC7B32H,SAAyB,iBAAf02H,QAGdhM,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,eAAc9+C,SAAA,EAC3B25H,EAAAA,GAAAA,KAAA,OAAK76E,UAAU,SAAQ9+C,SAjDZ2oI,MACjB,OAAQH,GACN,IAAK,MACH,OAAO7O,EAAAA,GAAAA,KAACwB,GAAG,CAACC,cAAemN,IAC7B,IAAK,QACH,OAAO5O,EAAAA,GAAAA,KAACiP,GAAK,CAACxN,cAAemN,IAC/B,IAAK,OACH,OAAO5O,EAAAA,GAAAA,KAACkP,GAAI,CAACzN,cAAemN,IAC9B,IAAK,QACH,OAAO5O,EAAAA,GAAAA,KAACmP,GAAK,CAAC1N,cAAemN,IAC/B,IAAK,eACH,OAAO5O,EAAAA,GAAAA,KAACoP,GAAY,CAAC3N,cAAemN,IACtC,QACE,OAAO,OAoCoBI,MAEzBhP,EAAAA,GAAAA,KAAA,OAAK76E,UAAU,SAAQ9+C,UACrB25H,EAAAA,GAAAA,KAACtiI,GAAK,CAACE,MAAO+wI,UAKxB9L,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,YAAW9+C,SAAA,EACxBw8H,EAAAA,GAAAA,MAAA,OAAK19E,UAAU,QAAO9+C,SAAA,CAAC,iBAAQ25H,EAAAA,GAAAA,KAAA,UAAQ76E,UAAU,UAAS9+C,SAAC,gBAC5D25H,EAAAA,GAAAA,KAAA,UAAQ70H,GAAG,UAAS9E,SAAC,kBACpB25H,EAAAA,GAAAA,KAAA,UAAQ70H,GAAG,cAAa9E,SAAC,qBAG3B25H,EAAAA,GAAAA,KAACoO,GAAW,QAKd,EC/EA,MAAMiB,GAAc/8H,SAASkyC,eAAe,QAC5C,GAAI6qF,GAAa,CACFC,EAAAA,WAAoBD,IAC5B7lI,QACHw2H,EAAAA,GAAAA,KAACoL,EAAAA,WAAgB,CAAA/kI,UACf25H,EAAAA,GAAAA,KAACuP,GAAG,MAGV,CCbM,kBAAmBxjI,WACrBsG,OAAOiN,iBAAiB,QAAQ,KAC9BvT,UAAUyjI,cACP9qF,SAAS,UACTp9C,MAAMmoI,IACLziI,QAAQ6U,IAAI,+CAA2C4tH,EAAaC,UAErEv4G,OAAOlqB,IACND,QAAQC,MAAM,6CAAyCA","sources":["../node_modules/react/index.js","../node_modules/@tombatossals/react-chords/lib/Chord/index.js","../node_modules/object-assign/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/prop-types/index.js","../node_modules/react/cjs/react.production.min.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/@tombatossals/react-chords/node_modules/react/index.js","../node_modules/@tombatossals/react-chords/lib/Chord/Neck/index.js","../node_modules/react-dom/client.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/react/jsx-runtime.js","../node_modules/@tombatossals/react-chords/lib/Chord/Dot/index.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/scheduler/index.js","../node_modules/@tombatossals/react-chords/node_modules/react/cjs/react.production.min.js","../node_modules/react-dom/index.js","../node_modules/@tombatossals/react-chords/lib/Chord/Barre/index.js","../node_modules/@tombatossals/react-chords/lib/Chord/propTypes.js","../webpack/bootstrap","../node_modules/vexflow/build/esm/src/util.js","../node_modules/vexflow/build/esm/src/fraction.js","../node_modules/vexflow/build/esm/src/metrics.js","../node_modules/vexflow/build/esm/src/boundingbox.js","../node_modules/vexflow/build/esm/src/font.js","../node_modules/vexflow/build/esm/src/registry.js","../node_modules/vexflow/build/esm/src/element.js","../node_modules/vexflow/build/esm/src/modifier.js","../node_modules/vexflow/build/esm/src/glyphs.js","../node_modules/vexflow/build/esm/src/music.js","../node_modules/vexflow/build/esm/src/tables.js","../node_modules/vexflow/build/esm/src/typeguard.js","../node_modules/vexflow/build/esm/src/accidental.js","../node_modules/vexflow/build/esm/src/stem.js","../node_modules/vexflow/build/esm/src/annotation.js","../node_modules/vexflow/build/esm/src/articulation.js","../node_modules/vexflow/build/esm/src/rendercontext.js","../node_modules/vexflow/build/esm/src/tickable.js","../node_modules/vexflow/build/esm/src/note.js","../node_modules/vexflow/build/esm/src/stavemodifier.js","../node_modules/vexflow/build/esm/src/stavebarline.js","../node_modules/vexflow/build/esm/src/barnote.js","../node_modules/vexflow/build/esm/src/beam.js","../node_modules/vexflow/build/esm/src/bend.js","../node_modules/vexflow/build/esm/src/web.js","../node_modules/vexflow/build/esm/src/canvascontext.js","../node_modules/vexflow/build/esm/src/chordsymbol.js","../node_modules/vexflow/build/esm/src/curve.js","../node_modules/vexflow/build/esm/src/clef.js","../node_modules/vexflow/build/esm/src/clefnote.js","../node_modules/vexflow/build/esm/src/tickcontext.js","../node_modules/vexflow/build/esm/src/crescendo.js","../node_modules/vexflow/build/esm/src/dot.js","../node_modules/vexflow/build/esm/src/frethandfinger.js","../node_modules/vexflow/build/esm/src/parser.js","../node_modules/vexflow/build/esm/src/easyscore.js","../node_modules/vexflow/build/esm/src/notehead.js","../node_modules/vexflow/build/esm/src/flag.js","../node_modules/vexflow/build/esm/src/stemmablenote.js","../node_modules/vexflow/build/esm/src/stavenote.js","../node_modules/vexflow/build/esm/src/stavetie.js","../node_modules/vexflow/build/esm/src/tabtie.js","../node_modules/vexflow/build/esm/src/voice.js","../node_modules/vexflow/build/esm/src/gracenotegroup.js","../node_modules/vexflow/build/esm/src/notesubgroup.js","../node_modules/vexflow/build/esm/src/ornament.js","../node_modules/vexflow/build/esm/src/parenthesis.js","../node_modules/vexflow/build/esm/src/svgcontext.js","../node_modules/vexflow/build/esm/src/renderer.js","../node_modules/vexflow/build/esm/src/textnote.js","../node_modules/vexflow/build/esm/src/stavevolta.js","../node_modules/vexflow/build/esm/src/stringnumber.js","../node_modules/vexflow/build/esm/src/strokes.js","../node_modules/vexflow/build/esm/src/vibrato.js","../node_modules/vexflow/build/esm/src/modifiercontext.js","../node_modules/vexflow/build/esm/src/keysignature.js","../node_modules/vexflow/build/esm/src/staverepetition.js","../node_modules/vexflow/build/esm/src/stavesection.js","../node_modules/vexflow/build/esm/src/stavetempo.js","../node_modules/vexflow/build/esm/src/stavetext.js","../node_modules/vexflow/build/esm/src/timesignature.js","../node_modules/vexflow/build/esm/src/stave.js","../node_modules/vexflow/build/esm/src/staveconnector.js","../node_modules/vexflow/build/esm/src/formatter.js","../node_modules/vexflow/build/esm/src/ghostnote.js","../node_modules/vexflow/build/esm/src/glyphnote.js","../node_modules/vexflow/build/esm/src/gracenote.js","../node_modules/vexflow/build/esm/src/keysignote.js","../node_modules/vexflow/build/esm/src/multimeasurerest.js","../node_modules/vexflow/build/esm/src/pedalmarking.js","../node_modules/vexflow/build/esm/src/repeatnote.js","../node_modules/vexflow/build/esm/src/staveline.js","../node_modules/vexflow/build/esm/src/system.js","../node_modules/vexflow/build/esm/src/tabnote.js","../node_modules/vexflow/build/esm/src/tabstave.js","../node_modules/vexflow/build/esm/src/textbracket.js","../node_modules/vexflow/build/esm/src/textdynamics.js","../node_modules/vexflow/build/esm/src/timesignote.js","../node_modules/vexflow/build/esm/src/tuplet.js","../node_modules/vexflow/build/esm/src/vibratobracket.js","../node_modules/vexflow/build/esm/src/factory.js","../node_modules/vexflow/build/esm/src/stavehairpin.js","../node_modules/vexflow/build/esm/src/tabslide.js","../node_modules/vexflow/build/esm/src/tuning.js","../node_modules/vexflow/build/esm/src/vexflow.js","../node_modules/vexflow/build/esm/src/version.js","../node_modules/vexflow/build/esm/src/gracetabnote.js","../node_modules/vexflow/build/esm/src/keymanager.js","../node_modules/vexflow/build/esm/src/tremolo.js","../node_modules/vexflow/build/esm/src/fonts/academico.js","../node_modules/vexflow/build/esm/entry/vexflow.js","../node_modules/vexflow/build/esm/src/fonts/bravura.js","../node_modules/vexflow/build/esm/src/fonts/academicobold.js","../node_modules/vexflow/build/esm/src/fonts/gonville.js","../node_modules/vexflow/build/esm/src/fonts/petaluma.js","../node_modules/vexflow/build/esm/src/fonts/petalumascript.js","components/In-Stave.tsx","components/LlamaContext.tsx","components/CoF.tsx","components/Chart.tsx","components/Tabs.tsx","components/In-Nav.tsx","components/In-Piano.tsx","components/In-Guitar.tsx","components/Inversion.tsx","components/Chord.tsx","components/Progressions.tsx","components/Modes.tsx","components/ToolButton.tsx","components/ThemeToggle.tsx","App.tsx","index.tsx","serviceWorkerRegistration.ts"],"sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Neck = _interopRequireDefault(require(\"./Neck\"));\n\nvar _Dot = _interopRequireDefault(require(\"./Dot\"));\n\nvar _Barre = _interopRequireDefault(require(\"./Barre\"));\n\nvar _propTypes2 = require(\"./propTypes\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar onlyDots = function onlyDots(chord) {\n  return chord.frets.map(function (f, index) {\n    return {\n      position: index,\n      value: f\n    };\n  }).filter(function (f) {\n    return !chord.barres || chord.barres.indexOf(f.value) === -1;\n  });\n};\n\nvar Chord = function Chord(_ref) {\n  var chord = _ref.chord,\n      instrument = _ref.instrument,\n      lite = _ref.lite;\n  return chord ? _react[\"default\"].createElement(\"svg\", {\n    width: \"100%\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    preserveAspectRatio: \"xMinYMin meet\",\n    viewBox: \"0 0 80 70\"\n  }, _react[\"default\"].createElement(\"g\", {\n    transform: \"translate(13, 13)\"\n  }, _react[\"default\"].createElement(_Neck[\"default\"], {\n    tuning: instrument.tunings.standard,\n    strings: instrument.strings,\n    frets: chord.frets,\n    capo: chord.capo,\n    fretsOnChord: instrument.fretsOnChord,\n    baseFret: chord.baseFret,\n    lite: lite\n  }), chord.barres && chord.barres.map(function (barre, index) {\n    return _react[\"default\"].createElement(_Barre[\"default\"], {\n      key: index,\n      capo: index === 0 && chord.capo,\n      barre: barre,\n      finger: chord.fingers && chord.fingers[chord.frets.indexOf(barre)],\n      frets: chord.frets,\n      lite: lite\n    });\n  }), onlyDots(chord).map(function (fret) {\n    return _react[\"default\"].createElement(_Dot[\"default\"], {\n      key: fret.position,\n      string: instrument.strings - fret.position,\n      fret: fret.value,\n      strings: instrument.strings,\n      finger: chord.fingers && chord.fingers[fret.position],\n      lite: lite\n    });\n  }))) : null;\n};\n\nChord.propTypes = {\n  chord: _propTypes[\"default\"].any,\n  instrument: _propTypes2.instrumentPropTypes,\n  lite: _propTypes[\"default\"].bool\n};\nChord.defaultProps = {\n  lite: false\n};\nvar _default = Chord;\nexports[\"default\"] = _default;","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};function X(){throw Error(\"act(...) is not supported in production builds of React.\");}\nexports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;exports.act=X;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=X;exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};\nexports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};\nexports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};exports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.3.1\";\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar offsets = {\n  4: {\n    x: 10,\n    y: 10,\n    length: 40\n  },\n  6: {\n    x: 0,\n    y: 0,\n    length: 50\n  }\n};\n\nvar getNeckHorizonalLine = function getNeckHorizonalLine(pos, strings) {\n  return \"M \".concat(offsets[strings].x, \" \").concat(12 * pos, \" H \").concat(offsets[strings].length);\n};\n\nvar getNeckVerticalLine = function getNeckVerticalLine(pos, strings) {\n  return \"M \".concat(offsets[strings].y + pos * 10, \" 0 V 48\");\n};\n\nvar getNeckPath = function getNeckPath(strings, fretsOnChord) {\n  return Array.apply(null, Array(fretsOnChord + 1)).map(function (_, pos) {\n    return getNeckHorizonalLine(pos, strings);\n  }).join(' ').concat(Array.apply(null, Array(strings)).map(function (_, pos) {\n    return getNeckVerticalLine(pos, strings);\n  }).join(' '));\n};\n\nvar getBarreOffset = function getBarreOffset(strings, frets, baseFret, capo) {\n  return strings === 6 ? frets[0] === 1 || capo ? baseFret > 9 ? -12 : -11 : baseFret > 9 ? -10 : -7 : frets[0] === 1 || capo ? baseFret > 9 ? -1 : 0 : baseFret > 9 ? 3 : 4;\n};\n\nvar Neck = function Neck(_ref) {\n  var tuning = _ref.tuning,\n      frets = _ref.frets,\n      strings = _ref.strings,\n      fretsOnChord = _ref.fretsOnChord,\n      baseFret = _ref.baseFret,\n      capo = _ref.capo,\n      lite = _ref.lite;\n  return _react[\"default\"].createElement(\"g\", null, _react[\"default\"].createElement(\"path\", {\n    stroke: \"#444\",\n    strokeWidth: \"0.25\",\n    strokeLinecap: \"square\",\n    strokeLinejoin: \"square\",\n    d: getNeckPath(strings, fretsOnChord)\n  }), baseFret === 1 ? _react[\"default\"].createElement(\"path\", {\n    stroke: \"#444\",\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M \".concat(offsets[strings].x, \" 0 H \").concat(offsets[strings].length)\n  }) : _react[\"default\"].createElement(\"text\", {\n    fontSize: \"0.25rem\",\n    fill: \"#444\",\n    fontFamily: \"Verdana\",\n    x: getBarreOffset(strings, frets, baseFret, capo),\n    y: \"8\"\n  }, baseFret, \"fr\"), !lite && _react[\"default\"].createElement(\"g\", null, tuning.slice().map(function (note, index) {\n    return _react[\"default\"].createElement(\"text\", {\n      key: index,\n      fontSize: \"0.3rem\",\n      fill: \"#444\",\n      fontFamily: \"Verdana\",\n      textAnchor: \"middle\",\n      x: offsets[strings].x + index * 10,\n      y: \"53\"\n    }, note);\n  })));\n};\n\nNeck.propTypes = {\n  tuning: _propTypes[\"default\"].array,\n  frets: _propTypes[\"default\"].array,\n  capo: _propTypes[\"default\"].bool,\n  strings: _propTypes[\"default\"].number.isRequired,\n  baseFret: _propTypes[\"default\"].oneOf([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]),\n  fretsOnChord: _propTypes[\"default\"].number.isRequired,\n  lite: _propTypes[\"default\"].bool\n};\nNeck.defaultProps = {\n  baseFret: 1,\n  lite: false\n};\nvar _default = Neck;\nexports[\"default\"] = _default;","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar positions = {\n  string: [50, 40, 30, 20, 10, 0],\n  fret: [-4, 6.5, 18, 30, 42, 54],\n  finger: [-3, 8, 19.5, 31.5, 43.5]\n};\nvar offset = {\n  4: 0,\n  6: -1\n};\n\nvar getStringPosition = function getStringPosition(string, strings) {\n  return positions.string[string + offset[strings]];\n};\n\nvar radius = {\n  open: 2,\n  fret: 4\n};\n\nvar Dot = function Dot(_ref) {\n  var string = _ref.string,\n      fret = _ref.fret,\n      finger = _ref.finger,\n      strings = _ref.strings,\n      lite = _ref.lite;\n  return fret === -1 ? _react[\"default\"].createElement(\"text\", {\n    fontSize: \"0.7rem\",\n    fill: \"#444\",\n    fontFamily: \"Verdana\",\n    textAnchor: \"middle\",\n    x: getStringPosition(string, strings),\n    y: \"-2\"\n  }, \"x\") : _react[\"default\"].createElement(\"g\", null, _react[\"default\"].createElement(\"circle\", {\n    strokeWidth: \"0.25\",\n    stroke: \"#444\",\n    fill: fret === 0 ? 'transparent' : '#444',\n    cx: getStringPosition(string, strings),\n    cy: positions.fret[fret],\n    r: fret === 0 ? radius['open'] : radius['fret']\n  }), !lite && finger > 0 && _react[\"default\"].createElement(\"text\", {\n    fontSize: \"3pt\",\n    fontFamily: \"Verdana\",\n    textAnchor: \"middle\",\n    fill: \"white\",\n    x: getStringPosition(string, strings),\n    y: positions.finger[fret]\n  }, finger));\n};\n\nDot.propTypes = {\n  string: _propTypes[\"default\"].number,\n  fret: _propTypes[\"default\"].number,\n  finger: _propTypes[\"default\"].oneOf([0, 1, 2, 3, 4, 5]),\n  strings: _propTypes[\"default\"].number.isRequired,\n  lite: _propTypes[\"default\"].bool\n};\nDot.defaultProps = {\n  fret: 0,\n  lite: false\n};\nvar _default = Dot;\nexports[\"default\"] = _default;","/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;\nfunction Lg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction Mg(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function Ng(a){var b=a._init;return b(a._payload)}\nfunction Og(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Pg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Qg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&Ng(f)===b.type))return d=e(b,c.props),d.ref=Lg(a,b,c),d.return=a,d;d=Rg(c.type,c.key,c.props,null,a.mode,d);d.ref=Lg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=Sg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Tg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=Qg(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=Rg(b.type,b.key,b.props,null,a.mode,c),\nc.ref=Lg(a,null,b),c.return=a,c;case wa:return b=Sg(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Tg(b,a.mode,c,null),b.return=a,b;Mg(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);Mg(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);Mg(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&Ng(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=Lg(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Tg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Rg(f.type,f.key,f.props,null,a.mode,h),h.ref=Lg(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Sg(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);Mg(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=Qg(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Ug=Og(!0),Vg=Og(!1),Wg=Uf(null),Xg=null,Yg=null,Zg=null;function $g(){Zg=Yg=Xg=null}function ah(a){var b=Wg.current;E(Wg);a._currentValue=b}function bh(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}\nfunction ch(a,b){Xg=a;Zg=Yg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(dh=!0),a.firstContext=null)}function eh(a){var b=a._currentValue;if(Zg!==a)if(a={context:a,memoizedValue:b,next:null},null===Yg){if(null===Xg)throw Error(p(308));Yg=a;Xg.dependencies={lanes:0,firstContext:a}}else Yg=Yg.next=a;return b}var fh=null;function gh(a){null===fh?fh=[a]:fh.push(a)}\nfunction hh(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,gh(b)):(c.next=e.next,e.next=c);b.interleaved=c;return ih(a,d)}function ih(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var jh=!1;function kh(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction lh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function mh(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction nh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return ih(a,c)}e=d.interleaved;null===e?(b.next=b,gh(d)):(b.next=e.next,e.next=b);d.interleaved=b;return ih(a,c)}function oh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction ph(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction qh(a,b,c,d){var e=a.updateQueue;jh=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:jh=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);rh|=g;a.lanes=g;a.memoizedState=q}}\nfunction sh(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var th={},uh=Uf(th),vh=Uf(th),wh=Uf(th);function xh(a){if(a===th)throw Error(p(174));return a}\nfunction yh(a,b){G(wh,b);G(vh,a);G(uh,th);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(uh);G(uh,b)}function zh(){E(uh);E(vh);E(wh)}function Ah(a){xh(wh.current);var b=xh(uh.current);var c=lb(b,a.type);b!==c&&(G(vh,a),G(uh,c))}function Bh(a){vh.current===a&&(E(uh),E(vh))}var L=Uf(0);\nfunction Ch(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Dh=[];\nfunction Eh(){for(var a=0;a<Dh.length;a++)Dh[a]._workInProgressVersionPrimary=null;Dh.length=0}var Fh=ua.ReactCurrentDispatcher,Gh=ua.ReactCurrentBatchConfig,Hh=0,M=null,N=null,O=null,Ih=!1,Jh=!1,Kh=0,Lh=0;function P(){throw Error(p(321));}function Mh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Nh(a,b,c,d,e,f){Hh=f;M=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Fh.current=null===a||null===a.memoizedState?Oh:Ph;a=c(d,e);if(Jh){f=0;do{Jh=!1;Kh=0;if(25<=f)throw Error(p(301));f+=1;O=N=null;b.updateQueue=null;Fh.current=Qh;a=c(d,e)}while(Jh)}Fh.current=Rh;b=null!==N&&null!==N.next;Hh=0;O=N=M=null;Ih=!1;if(b)throw Error(p(300));return a}function Sh(){var a=0!==Kh;Kh=0;return a}\nfunction Th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===O?M.memoizedState=O=a:O=O.next=a;return O}function Uh(){if(null===N){var a=M.alternate;a=null!==a?a.memoizedState:null}else a=N.next;var b=null===O?M.memoizedState:O.next;if(null!==b)O=b,N=a;else{if(null===a)throw Error(p(310));N=a;a={memoizedState:N.memoizedState,baseState:N.baseState,baseQueue:N.baseQueue,queue:N.queue,next:null};null===O?M.memoizedState=O=a:O=O.next=a}return O}\nfunction Vh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Wh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=N,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Hh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;M.lanes|=m;rh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(dh=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,M.lanes|=f,rh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction Xh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(dh=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function Yh(){}\nfunction Zh(a,b){var c=M,d=Uh(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,dh=!0);d=d.queue;$h(ai.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==O&&O.memoizedState.tag&1){c.flags|=2048;bi(9,ci.bind(null,c,d,e,b),void 0,null);if(null===Q)throw Error(p(349));0!==(Hh&30)||di(c,b,e)}return e}function di(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction ci(a,b,c,d){b.value=c;b.getSnapshot=d;ei(b)&&fi(a)}function ai(a,b,c){return c(function(){ei(b)&&fi(a)})}function ei(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function fi(a){var b=ih(a,1);null!==b&&gi(b,a,1,-1)}\nfunction hi(a){var b=Th();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Vh,lastRenderedState:a};b.queue=a;a=a.dispatch=ii.bind(null,M,a);return[b.memoizedState,a]}\nfunction bi(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function ji(){return Uh().memoizedState}function ki(a,b,c,d){var e=Th();M.flags|=a;e.memoizedState=bi(1|b,c,void 0,void 0===d?null:d)}\nfunction li(a,b,c,d){var e=Uh();d=void 0===d?null:d;var f=void 0;if(null!==N){var g=N.memoizedState;f=g.destroy;if(null!==d&&Mh(d,g.deps)){e.memoizedState=bi(b,c,f,d);return}}M.flags|=a;e.memoizedState=bi(1|b,c,f,d)}function mi(a,b){return ki(8390656,8,a,b)}function $h(a,b){return li(2048,8,a,b)}function ni(a,b){return li(4,2,a,b)}function oi(a,b){return li(4,4,a,b)}\nfunction pi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function qi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return li(4,4,pi.bind(null,b,a),c)}function ri(){}function si(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction ti(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function ui(a,b,c){if(0===(Hh&21))return a.baseState&&(a.baseState=!1,dh=!0),a.memoizedState=c;He(c,b)||(c=yc(),M.lanes|=c,rh|=c,a.baseState=!0);return b}function vi(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Gh.transition;Gh.transition={};try{a(!1),b()}finally{C=c,Gh.transition=d}}function wi(){return Uh().memoizedState}\nfunction xi(a,b,c){var d=yi(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,c);else if(c=hh(a,b,c,d),null!==c){var e=R();gi(c,a,d,e);Bi(c,b,d)}}\nfunction ii(a,b,c){var d=yi(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,gh(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=hh(a,b,e,d);null!==c&&(e=R(),gi(c,a,d,e),Bi(c,b,d))}}\nfunction zi(a){var b=a.alternate;return a===M||null!==b&&b===M}function Ai(a,b){Jh=Ih=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Bi(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar Rh={readContext:eh,useCallback:P,useContext:P,useEffect:P,useImperativeHandle:P,useInsertionEffect:P,useLayoutEffect:P,useMemo:P,useReducer:P,useRef:P,useState:P,useDebugValue:P,useDeferredValue:P,useTransition:P,useMutableSource:P,useSyncExternalStore:P,useId:P,unstable_isNewReconciler:!1},Oh={readContext:eh,useCallback:function(a,b){Th().memoizedState=[a,void 0===b?null:b];return a},useContext:eh,useEffect:mi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ki(4194308,\n4,pi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ki(4194308,4,a,b)},useInsertionEffect:function(a,b){return ki(4,2,a,b)},useMemo:function(a,b){var c=Th();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=xi.bind(null,M,a);return[d.memoizedState,a]},useRef:function(a){var b=\nTh();a={current:a};return b.memoizedState=a},useState:hi,useDebugValue:ri,useDeferredValue:function(a){return Th().memoizedState=a},useTransition:function(){var a=hi(!1),b=a[0];a=vi.bind(null,a[1]);Th().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=M,e=Th();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===Q)throw Error(p(349));0!==(Hh&30)||di(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;mi(ai.bind(null,d,\nf,a),[a]);d.flags|=2048;bi(9,ci.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=Th(),b=Q.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Kh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Lh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Ph={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Wh,useRef:ji,useState:function(){return Wh(Vh)},\nuseDebugValue:ri,useDeferredValue:function(a){var b=Uh();return ui(b,N.memoizedState,a)},useTransition:function(){var a=Wh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1},Qh={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Xh,useRef:ji,useState:function(){return Xh(Vh)},useDebugValue:ri,useDeferredValue:function(a){var b=Uh();return null===\nN?b.memoizedState=a:ui(b,N.memoizedState,a)},useTransition:function(){var a=Xh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1};function Ci(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}function Di(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Ei={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=R(),d=\nyi(a),e=mh(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=nh(a,e,d);null!==b&&(gi(b,a,d,c),oh(b,a,d))}};function Fi(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction Gi(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=eh(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Ei;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Hi(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Ei.enqueueReplaceState(b,b.state,null)}\nfunction Ii(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs={};kh(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=eh(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Di(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Ei.enqueueReplaceState(e,e.state,null),qh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}function Ji(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}\nfunction Ki(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}function Li(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Mi=\"function\"===typeof WeakMap?WeakMap:Map;function Ni(a,b,c){c=mh(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Oi||(Oi=!0,Pi=d);Li(a,b)};return c}\nfunction Qi(a,b,c){c=mh(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Li(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Li(a,b);\"function\"!==typeof d&&(null===Ri?Ri=new Set([this]):Ri.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Si(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Mi;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ti.bind(null,a,b,c),b.then(a,a))}function Ui(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Vi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=mh(-1,1),b.tag=2,nh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Wi=ua.ReactCurrentOwner,dh=!1;function Xi(a,b,c,d){b.child=null===a?Vg(b,null,c,d):Ug(b,a.child,c,d)}\nfunction Yi(a,b,c,d,e){c=c.render;var f=b.ref;ch(b,e);d=Nh(a,b,c,d,f,e);c=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&c&&vg(b);b.flags|=1;Xi(a,b,d,e);return b.child}\nfunction $i(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!aj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,bj(a,b,f,d,e);a=Rg(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return Zi(a,b,e)}b.flags|=1;a=Pg(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction bj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(dh=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(dh=!0);else return b.lanes=a.lanes,Zi(a,b,e)}return cj(a,b,c,d,e)}\nfunction dj(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(ej,fj),fj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(ej,fj),fj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(ej,fj);fj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(ej,fj),fj|=d;Xi(a,b,e,c);return b.child}function gj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function cj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);ch(b,e);c=Nh(a,b,c,d,f,e);d=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&d&&vg(b);b.flags|=1;Xi(a,b,c,e);return b.child}\nfunction hj(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;ch(b,e);if(null===b.stateNode)ij(a,b),Gi(b,c,d),Ii(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=eh(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&Hi(b,g,d,l);jh=!1;var r=b.memoizedState;g.state=r;qh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||jh?(\"function\"===typeof m&&(Di(b,c,m,d),k=b.memoizedState),(h=jh||Fi(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;lh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Ci(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=eh(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&Hi(b,g,d,k);jh=!1;r=b.memoizedState;g.state=r;qh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||jh?(\"function\"===typeof y&&(Di(b,c,y,d),n=b.memoizedState),(l=jh||Fi(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return jj(a,b,c,d,f,e)}\nfunction jj(a,b,c,d,e,f){gj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),Zi(a,b,f);d=b.stateNode;Wi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Ug(b,a.child,null,f),b.child=Ug(b,null,h,f)):Xi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function kj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);yh(a,b.containerInfo)}\nfunction lj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Xi(a,b,c,d);return b.child}var mj={dehydrated:null,treeContext:null,retryLane:0};function nj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction oj(a,b,c){var d=b.pendingProps,e=L.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(L,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=pj(g,d,0,null),a=Tg(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=nj(c),b.memoizedState=mj,a):qj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return rj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=Pg(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=Pg(h,f):(f=Tg(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?nj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=mj;return d}f=a.child;a=f.sibling;d=Pg(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction qj(a,b){b=pj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function sj(a,b,c,d){null!==d&&Jg(d);Ug(b,a.child,null,c);a=qj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction rj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Ki(Error(p(422))),sj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=pj({mode:\"visible\",children:d.children},e,0,null);f=Tg(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Ug(b,a.child,null,g);b.child.memoizedState=nj(g);b.memoizedState=mj;return f}if(0===(b.mode&1))return sj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Ki(f,d,void 0);return sj(a,b,g,d)}h=0!==(g&a.childLanes);if(dh||h){d=Q;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,ih(a,e),gi(d,a,e,-1))}tj();d=Ki(Error(p(421)));return sj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=uj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=qj(b,d.children);b.flags|=4096;return b}function vj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);bh(a.return,b,c)}\nfunction wj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction xj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Xi(a,b,d.children,c);d=L.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&vj(a,c,b);else if(19===a.tag)vj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(L,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Ch(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);wj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Ch(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}wj(b,!0,c,null,f);break;case \"together\":wj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction ij(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function Zi(a,b,c){null!==a&&(b.dependencies=a.dependencies);rh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=Pg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Pg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction yj(a,b,c){switch(b.tag){case 3:kj(b);Ig();break;case 5:Ah(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:yh(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Wg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(L,L.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return oj(a,b,c);G(L,L.current&1);a=Zi(a,b,c);return null!==a?a.sibling:null}G(L,L.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return xj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(L,L.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,dj(a,b,c)}return Zi(a,b,c)}var zj,Aj,Bj,Cj;\nzj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Aj=function(){};\nBj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;xh(uh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Cj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Dj(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Ej(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;zh();E(Wf);E(H);Eh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Fj(zg),zg=null));Aj(a,b);S(b);return null;case 5:Bh(b);var e=xh(wh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Bj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;zj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Cj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=xh(wh.current);xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(L);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Fj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(L.current&1)?0===T&&(T=3):tj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return zh(),\nAj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return ah(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(L);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Dj(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Ch(a);if(null!==g){b.flags|=128;Dj(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(L,L.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Gj&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304)}else{if(!d)if(a=Ch(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Dj(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Gj&&1073741824!==c&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=L.current,G(L,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Hj(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(fj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Ij(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return zh(),E(Wf),E(H),Eh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Bh(b),null;case 13:E(L);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(L),null;case 4:return zh(),null;case 10:return ah(b.type._context),null;case 22:case 23:return Hj(),\nnull;case 24:return null;default:return null}}var Jj=!1,U=!1,Kj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Lj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Mj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Nj=!1;\nfunction Oj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Ci(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Nj;Nj=!1;return n}\nfunction Pj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Mj(b,c,f)}e=e.next}while(e!==d)}}function Qj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Rj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Sj(a){var b=a.alternate;null!==b&&(a.alternate=null,Sj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Tj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Uj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Tj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Vj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Vj(a,b,c),a=a.sibling;null!==a;)Vj(a,b,c),a=a.sibling}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}var X=null,Xj=!1;function Yj(a,b,c){for(c=c.child;null!==c;)Zj(a,b,c),c=c.sibling}\nfunction Zj(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Lj(c,b);case 6:var d=X,e=Xj;X=null;Yj(a,b,c);X=d;Xj=e;null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Xj;X=c.stateNode.containerInfo;Xj=!0;\nYj(a,b,c);X=d;Xj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Mj(c,b,g):0!==(f&4)&&Mj(c,b,g));e=e.next}while(e!==d)}Yj(a,b,c);break;case 1:if(!U&&(Lj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Yj(a,b,c);break;case 21:Yj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Yj(a,b,c),U=d):Yj(a,b,c);break;default:Yj(a,b,c)}}function ak(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Kj);b.forEach(function(b){var d=bk.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction ck(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Xj=!1;break a;case 3:X=h.stateNode.containerInfo;Xj=!0;break a;case 4:X=h.stateNode.containerInfo;Xj=!0;break a}h=h.return}if(null===X)throw Error(p(160));Zj(f,g,e);X=null;Xj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)dk(b,a),b=b.sibling}\nfunction dk(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:ck(b,a);ek(a);if(d&4){try{Pj(3,a,a.return),Qj(3,a)}catch(t){W(a,a.return,t)}try{Pj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);break;case 5:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:ck(b,a);ek(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:ck(b,a);ek(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:ck(b,a);ek(a);break;case 13:ck(b,a);ek(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(fk=B()));d&4&&ak(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,ck(b,a),U=l):ck(b,a);ek(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Pj(4,r,r.return);break;case 1:Lj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Lj(r,r.return);break;case 22:if(null!==r.memoizedState){gk(q);continue}}null!==y?(y.return=r,V=y):gk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:ck(b,a);ek(a);d&4&&ak(a);break;case 21:break;default:ck(b,\na),ek(a)}}function ek(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Tj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Uj(a);Wj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Uj(a);Vj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function hk(a,b,c){V=a;ik(a,b,c)}\nfunction ik(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Jj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Jj;var l=U;Jj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?jk(e):null!==k?(k.return=g,V=k):jk(e);for(;null!==f;)V=f,ik(f,b,c),f=f.sibling;V=e;Jj=h;U=l}kk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):kk(a,b,c)}}\nfunction kk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Qj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Ci(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&sh(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}sh(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Rj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function gk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction jk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Qj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Rj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Rj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar lk=Math.ceil,mk=ua.ReactCurrentDispatcher,nk=ua.ReactCurrentOwner,ok=ua.ReactCurrentBatchConfig,K=0,Q=null,Y=null,Z=0,fj=0,ej=Uf(0),T=0,pk=null,rh=0,qk=0,rk=0,sk=null,tk=null,fk=0,Gj=Infinity,uk=null,Oi=!1,Pi=null,Ri=null,vk=!1,wk=null,xk=0,yk=0,zk=null,Ak=-1,Bk=0;function R(){return 0!==(K&6)?B():-1!==Ak?Ak:Ak=B()}\nfunction yi(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Bk&&(Bk=yc()),Bk;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function gi(a,b,c,d){if(50<yk)throw yk=0,zk=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==Q)a===Q&&(0===(K&2)&&(qk|=c),4===T&&Ck(a,Z)),Dk(a,d),1===c&&0===K&&0===(b.mode&1)&&(Gj=B()+500,fg&&jg())}\nfunction Dk(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===Q?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Ek.bind(null,a)):hg(Ek.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Fk(c,Gk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Gk(a,b){Ak=-1;Bk=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Hk()&&a.callbackNode!==c)return null;var d=uc(a,a===Q?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Ik(a,d);else{b=d;var e=K;K|=2;var f=Jk();if(Q!==a||Z!==b)uk=null,Gj=B()+500,Kk(a,b);do try{Lk();break}catch(h){Mk(a,h)}while(1);$g();mk.current=f;K=e;null!==Y?b=0:(Q=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Nk(a,e)));if(1===b)throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;if(6===b)Ck(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Ok(e)&&(b=Ik(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Nk(a,f))),1===b))throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Pk(a,tk,uk);break;case 3:Ck(a,d);if((d&130023424)===d&&(b=fk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){R();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),b);break}Pk(a,tk,uk);break;case 4:Ck(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*lk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),d);break}Pk(a,tk,uk);break;case 5:Pk(a,tk,uk);break;default:throw Error(p(329));}}}Dk(a,B());return a.callbackNode===c?Gk.bind(null,a):null}\nfunction Nk(a,b){var c=sk;a.current.memoizedState.isDehydrated&&(Kk(a,b).flags|=256);a=Ik(a,b);2!==a&&(b=tk,tk=c,null!==b&&Fj(b));return a}function Fj(a){null===tk?tk=a:tk.push.apply(tk,a)}\nfunction Ok(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Ck(a,b){b&=~rk;b&=~qk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Ek(a){if(0!==(K&6))throw Error(p(327));Hk();var b=uc(a,0);if(0===(b&1))return Dk(a,B()),null;var c=Ik(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Nk(a,d))}if(1===c)throw c=pk,Kk(a,0),Ck(a,b),Dk(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Pk(a,tk,uk);Dk(a,B());return null}\nfunction Qk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Gj=B()+500,fg&&jg())}}function Rk(a){null!==wk&&0===wk.tag&&0===(K&6)&&Hk();var b=K;K|=1;var c=ok.transition,d=C;try{if(ok.transition=null,C=1,a)return a()}finally{C=d,ok.transition=c,K=b,0===(K&6)&&jg()}}function Hj(){fj=ej.current;E(ej)}\nfunction Kk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:zh();E(Wf);E(H);Eh();break;case 5:Bh(d);break;case 4:zh();break;case 13:E(L);break;case 19:E(L);break;case 10:ah(d.type._context);break;case 22:case 23:Hj()}c=c.return}Q=a;Y=a=Pg(a.current,null);Z=fj=b;T=0;pk=null;rk=qk=rh=0;tk=sk=null;if(null!==fh){for(b=\n0;b<fh.length;b++)if(c=fh[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}fh=null}return a}\nfunction Mk(a,b){do{var c=Y;try{$g();Fh.current=Rh;if(Ih){for(var d=M.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Ih=!1}Hh=0;O=N=M=null;Jh=!1;Kh=0;nk.current=null;if(null===c||null===c.return){T=1;pk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Ui(g);if(null!==y){y.flags&=-257;Vi(y,g,h,f,b);y.mode&1&&Si(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Si(f,l,b);tj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Ui(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Vi(J,g,h,f,b);Jg(Ji(k,h));break a}}f=k=Ji(k,h);4!==T&&(T=2);null===sk?sk=[f]:sk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Ni(f,k,b);ph(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Ri||!Ri.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Qi(f,h,b);ph(f,F);break a}}f=f.return}while(null!==f)}Sk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Jk(){var a=mk.current;mk.current=Rh;return null===a?Rh:a}\nfunction tj(){if(0===T||3===T||2===T)T=4;null===Q||0===(rh&268435455)&&0===(qk&268435455)||Ck(Q,Z)}function Ik(a,b){var c=K;K|=2;var d=Jk();if(Q!==a||Z!==b)uk=null,Kk(a,b);do try{Tk();break}catch(e){Mk(a,e)}while(1);$g();K=c;mk.current=d;if(null!==Y)throw Error(p(261));Q=null;Z=0;return T}function Tk(){for(;null!==Y;)Uk(Y)}function Lk(){for(;null!==Y&&!cc();)Uk(Y)}function Uk(a){var b=Vk(a.alternate,a,fj);a.memoizedProps=a.pendingProps;null===b?Sk(a):Y=b;nk.current=null}\nfunction Sk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Ej(c,b,fj),null!==c){Y=c;return}}else{c=Ij(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Pk(a,b,c){var d=C,e=ok.transition;try{ok.transition=null,C=1,Wk(a,b,c,d)}finally{ok.transition=e,C=d}return null}\nfunction Wk(a,b,c,d){do Hk();while(null!==wk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===Q&&(Y=Q=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||vk||(vk=!0,Fk(hc,function(){Hk();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=ok.transition;ok.transition=null;\nvar g=C;C=1;var h=K;K|=4;nk.current=null;Oj(a,c);dk(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;hk(c,a,e);dc();K=h;C=g;ok.transition=f}else a.current=c;vk&&(vk=!1,wk=a,xk=e);f=a.pendingLanes;0===f&&(Ri=null);mc(c.stateNode,d);Dk(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Oi)throw Oi=!1,a=Pi,Pi=null,a;0!==(xk&1)&&0!==a.tag&&Hk();f=a.pendingLanes;0!==(f&1)?a===zk?yk++:(yk=0,zk=a):yk=0;jg();return null}\nfunction Hk(){if(null!==wk){var a=Dc(xk),b=ok.transition,c=C;try{ok.transition=null;C=16>a?16:a;if(null===wk)var d=!1;else{a=wk;wk=null;xk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Pj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Sj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Pj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Qj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,ok.transition=b}}return!1}function Xk(a,b,c){b=Ji(c,b);b=Ni(a,b,1);a=nh(a,b,1);b=R();null!==a&&(Ac(a,1,b),Dk(a,b))}\nfunction W(a,b,c){if(3===a.tag)Xk(a,a,c);else for(;null!==b;){if(3===b.tag){Xk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ri||!Ri.has(d))){a=Ji(c,a);a=Qi(b,a,1);b=nh(b,a,1);a=R();null!==b&&(Ac(b,1,a),Dk(b,a));break}}b=b.return}}\nfunction Ti(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=R();a.pingedLanes|=a.suspendedLanes&c;Q===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-fk?Kk(a,0):rk|=c);Dk(a,b)}function Yk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=R();a=ih(a,b);null!==a&&(Ac(a,b,c),Dk(a,c))}function uj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Yk(a,c)}\nfunction bk(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Yk(a,c)}var Vk;\nVk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)dh=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return dh=!1,yj(a,b,c);dh=0!==(a.flags&131072)?!0:!1}else dh=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;ij(a,b);a=b.pendingProps;var e=Yf(b,H.current);ch(b,c);e=Nh(null,b,d,a,e,c);var f=Sh();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,kh(b),e.updater=Ei,b.stateNode=e,e._reactInternals=b,Ii(b,d,a,c),b=jj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Xi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{ij(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=Zk(d);a=Ci(d,a);switch(e){case 0:b=cj(null,b,d,a,c);break a;case 1:b=hj(null,b,d,a,c);break a;case 11:b=Yi(null,b,d,a,c);break a;case 14:b=$i(null,b,d,Ci(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),cj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),hj(a,b,d,e,c);case 3:a:{kj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;lh(a,b);qh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ji(Error(p(423)),b);b=lj(a,b,d,c,e);break a}else if(d!==e){e=Ji(Error(p(424)),b);b=lj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Vg(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=Zi(a,b,c);break a}Xi(a,b,d,c)}b=b.child}return b;case 5:return Ah(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\ngj(a,b),Xi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return oj(a,b,c);case 4:return yh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Ug(b,null,d,c):Xi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),Yi(a,b,d,e,c);case 7:return Xi(a,b,b.pendingProps,c),b.child;case 8:return Xi(a,b,b.pendingProps.children,c),b.child;case 12:return Xi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Wg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=Zi(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=mh(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);bh(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);bh(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Xi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,ch(b,c),e=eh(e),d=d(e),b.flags|=1,Xi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Ci(d,b.pendingProps),e=Ci(d.type,e),$i(a,b,d,e,c);case 15:return bj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),ij(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,ch(b,c),Gi(b,d,e),Ii(b,d,e,c),jj(null,b,d,!0,a,c);case 19:return xj(a,b,c);case 22:return dj(a,b,c)}throw Error(p(156,b.tag));};function Fk(a,b){return ac(a,b)}\nfunction $k(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new $k(a,b,c,d)}function aj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction Zk(a){if(\"function\"===typeof a)return aj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction Pg(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Rg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)aj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Tg(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return pj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Tg(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function pj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function Qg(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction Sg(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction al(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function bl(a,b,c,d,e,f,g,h,k){a=new al(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};kh(f);return a}function cl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction dl(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction el(a,b,c,d,e,f,g,h,k){a=bl(c,d,!0,a,e,f,g,h,k);a.context=dl(null);c=a.current;d=R();e=yi(c);f=mh(d,e);f.callback=void 0!==b&&null!==b?b:null;nh(c,f,e);a.current.lanes=e;Ac(a,e,d);Dk(a,d);return a}function fl(a,b,c,d){var e=b.current,f=R(),g=yi(e);c=dl(c);null===b.context?b.context=c:b.pendingContext=c;b=mh(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=nh(e,b,g);null!==a&&(gi(a,e,g,f),oh(a,e,g));return g}\nfunction gl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function hl(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function il(a,b){hl(a,b);(a=a.alternate)&&hl(a,b)}function jl(){return null}var kl=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ll(a){this._internalRoot=a}\nml.prototype.render=ll.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));fl(a,b,null,null)};ml.prototype.unmount=ll.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Rk(function(){fl(null,a,null,null)});b[uf]=null}};function ml(a){this._internalRoot=a}\nml.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function nl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function pl(){}\nfunction ql(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=gl(g);f.call(a)}}var g=el(b,d,a,0,null,!1,!1,\"\",pl);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Rk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=gl(k);h.call(a)}}var k=bl(a,0,!1,null,null,!1,!1,\"\",pl);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Rk(function(){fl(b,k,c,d)});return k}\nfunction rl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=gl(g);h.call(a)}}fl(b,g,a,e)}else g=ql(c,b,a,e,d);return gl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Dk(b,B()),0===(K&6)&&(Gj=B()+500,jg()))}break;case 13:Rk(function(){var b=ih(a,1);if(null!==b){var c=R();gi(b,a,1,c)}}),il(a,1)}};\nFc=function(a){if(13===a.tag){var b=ih(a,134217728);if(null!==b){var c=R();gi(b,a,134217728,c)}il(a,134217728)}};Gc=function(a){if(13===a.tag){var b=yi(a),c=ih(a,b);if(null!==c){var d=R();gi(c,a,b,d)}il(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Qk;Hb=Rk;\nvar sl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Qk]},tl={findFiberByHostInstance:Wc,bundleType:0,version:\"18.3.1\",rendererPackageName:\"react-dom\"};\nvar ul={bundleType:tl.bundleType,version:tl.version,rendererPackageName:tl.rendererPackageName,rendererConfig:tl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:tl.findFiberByHostInstance||\njl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.3.1-next-f1338f8080-20240426\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var vl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!vl.isDisabled&&vl.supportsFiber)try{kc=vl.inject(ul),lc=vl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=sl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nl(b))throw Error(p(200));return cl(a,b,null,c)};exports.createRoot=function(a,b){if(!nl(a))throw Error(p(299));var c=!1,d=\"\",e=kl;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=bl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ll(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Rk(a)};exports.hydrate=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!nl(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=kl;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=el(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new ml(b)};exports.render=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!ol(a))throw Error(p(40));return a._reactRootContainer?(Rk(function(){rl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Qk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!ol(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return rl(a,b,c,!1,d)};exports.version=\"18.3.1-next-f1338f8080-20240426\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/** @license React v16.14.0\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var l=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.forward_ref\"):60112,y=n?Symbol.for(\"react.suspense\"):60113,z=n?Symbol.for(\"react.memo\"):60115,A=n?Symbol.for(\"react.lazy\"):\n60116,B=\"function\"===typeof Symbol&&Symbol.iterator;function C(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar D={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},E={};function F(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(C(85));this.updater.enqueueSetState(this,a,b,\"setState\")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction G(){}G.prototype=F.prototype;function H(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}var I=H.prototype=new G;I.constructor=H;l(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,c){var e,d={},g=null,k=null;if(null!=b)for(e in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,e)&&!L.hasOwnProperty(e)&&(d[e]=b[e]);var f=arguments.length-2;if(1===f)d.children=c;else if(1<f){for(var h=Array(f),m=0;m<f;m++)h[m]=arguments[m+2];d.children=h}if(a&&a.defaultProps)for(e in f=a.defaultProps,f)void 0===d[e]&&(d[e]=f[e]);return{$$typeof:p,type:a,key:g,ref:k,props:d,_owner:J.current}}\nfunction N(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g,Q=[];function R(a,b,c,e){if(Q.length){var d=Q.pop();d.result=a;d.keyPrefix=b;d.func=c;d.context=e;d.count=0;return d}return{result:a,keyPrefix:b,func:c,context:e,count:0}}\nfunction S(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>Q.length&&Q.push(a)}\nfunction T(a,b,c,e){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return c(e,a,\"\"===b?\".\"+U(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var k=0;k<a.length;k++){d=a[k];var f=b+U(d,k);g+=T(d,f,c,e)}else if(null===a||\"object\"!==typeof a?f=null:(f=B&&a[B]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),k=\n0;!(d=a.next()).done;)d=d.value,f=b+U(d,k++),g+=T(d,f,c,e);else if(\"object\"===d)throw c=\"\"+a,Error(C(31,\"[object Object]\"===c?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":c,\"\"));return g}function V(a,b,c){return null==a?0:T(a,\"\",b,c)}function U(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function W(a,b){a.func.call(a.context,b,a.count++)}\nfunction aa(a,b,c){var e=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?X(a,e,c,function(a){return a}):null!=a&&(O(a)&&(a=N(a,d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(P,\"$&/\")+\"/\")+c)),e.push(a))}function X(a,b,c,e,d){var g=\"\";null!=c&&(g=(\"\"+c).replace(P,\"$&/\")+\"/\");b=R(b,g,e,d);V(a,aa,b);S(b)}var Y={current:null};function Z(){var a=Y.current;if(null===a)throw Error(C(321));return a}\nvar ba={ReactCurrentDispatcher:Y,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:J,IsSomeRendererActing:{current:!1},assign:l};exports.Children={map:function(a,b,c){if(null==a)return a;var e=[];X(a,e,null,b,c);return e},forEach:function(a,b,c){if(null==a)return a;b=R(null,null,b,c);V(a,W,b);S(b)},count:function(a){return V(a,function(){return null},null)},toArray:function(a){var b=[];X(a,b,null,function(a){return a});return b},only:function(a){if(!O(a))throw Error(C(143));return a}};\nexports.Component=F;exports.Fragment=r;exports.Profiler=u;exports.PureComponent=H;exports.StrictMode=t;exports.Suspense=y;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ba;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(C(267,a));var e=l({},a.props),d=a.key,g=a.ref,k=a._owner;if(null!=b){void 0!==b.ref&&(g=b.ref,k=J.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(h in b)K.call(b,h)&&!L.hasOwnProperty(h)&&(e[h]=void 0===b[h]&&void 0!==f?f[h]:b[h])}var h=arguments.length-2;if(1===h)e.children=c;else if(1<h){f=Array(h);for(var m=0;m<h;m++)f[m]=arguments[m+2];e.children=f}return{$$typeof:p,type:a.type,\nkey:d,ref:g,props:e,_owner:k}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:x,render:a}};exports.isValidElement=O;\nexports.lazy=function(a){return{$$typeof:A,_ctor:a,_status:-1,_result:null}};exports.memo=function(a,b){return{$$typeof:z,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return Z().useCallback(a,b)};exports.useContext=function(a,b){return Z().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return Z().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return Z().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return Z().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return Z().useMemo(a,b)};exports.useReducer=function(a,b,c){return Z().useReducer(a,b,c)};exports.useRef=function(a){return Z().useRef(a)};exports.useState=function(a){return Z().useState(a)};exports.version=\"16.14.0\";\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar fretXPosition = {\n  4: [10, 20, 30, 40, 50],\n  6: [0, 10, 20, 30, 40, 50]\n};\nvar fretYPosition = [2.35, 13.9, 26, 38];\nvar offset = {\n  4: 0,\n  6: -1\n};\nvar positions = {\n  string: [50, 40, 30, 20, 10, 0],\n  fret: [-4, 6.5, 18, 30, 42, 54],\n  finger: [-3, 8, 19.5, 31.5, 43.5]\n};\n\nvar getStringPosition = function getStringPosition(string, strings) {\n  return positions.string[string + offset[strings]];\n};\n\nvar onlyBarres = function onlyBarres(frets, barre) {\n  return frets.map(function (f, index) {\n    return {\n      position: index,\n      value: f\n    };\n  }).filter(function (f) {\n    return f.value === barre;\n  });\n};\n\nvar Barre = function Barre(_ref) {\n  var barre = _ref.barre,\n      frets = _ref.frets,\n      capo = _ref.capo,\n      finger = _ref.finger,\n      lite = _ref.lite;\n  var strings = frets.length;\n  var barreFrets = onlyBarres(frets, barre);\n  var string1 = barreFrets[0].position;\n  var string2 = barreFrets[barreFrets.length - 1].position;\n  var width = (string2 - string1) * 10;\n  var y = fretYPosition[barre - 1];\n  return _react[\"default\"].createElement(\"g\", null, capo && _react[\"default\"].createElement(\"g\", null, _react[\"default\"].createElement(\"g\", {\n    transform: \"translate(\".concat(getStringPosition(strings, strings), \", \").concat(positions.fret[barreFrets[0].value], \")\")\n  }, _react[\"default\"].createElement(\"path\", {\n    d: \"\\n            M 0, 0\\n            m -4, 0\\n            a 4,4 0 1,1 8,0\\n          \",\n    fill: \"#555\",\n    fillOpacity: 0.2,\n    transform: \"rotate(-90)\"\n  })), _react[\"default\"].createElement(\"rect\", {\n    fill: \"#555\",\n    x: fretXPosition[strings][0],\n    y: fretYPosition[barre - 1],\n    width: (strings - 1) * 10,\n    fillOpacity: 0.2,\n    height: 8.25\n  }), _react[\"default\"].createElement(\"g\", {\n    transform: \"translate(\".concat(getStringPosition(1, strings), \", \").concat(positions.fret[barreFrets[0].value], \")\")\n  }, _react[\"default\"].createElement(\"path\", {\n    d: \"\\n            M 0, 0\\n            m -4, 0\\n            a 4,4 0 1,1 8,0\\n          \",\n    fill: \"#555\",\n    fillOpacity: 0.2,\n    transform: \"rotate(90)\"\n  }))), barreFrets.map(function (fret) {\n    return _react[\"default\"].createElement(\"circle\", {\n      key: fret.position,\n      strokeWidth: \"0.25\",\n      stroke: \"#444\",\n      fill: \"#444\",\n      cx: getStringPosition(strings - fret.position, strings),\n      cy: positions.fret[fret.value],\n      r: 4\n    });\n  }), _react[\"default\"].createElement(\"rect\", {\n    fill: \"#444\",\n    x: fretXPosition[strings][string1],\n    y: y,\n    width: width,\n    height: 8.25\n  }), !lite && finger && barreFrets.map(function (fret) {\n    return _react[\"default\"].createElement(\"text\", {\n      key: fret.position,\n      fontSize: \"3pt\",\n      fontFamily: \"Verdana\",\n      textAnchor: \"middle\",\n      fill: \"white\",\n      x: getStringPosition(strings - fret.position, strings),\n      y: positions.finger[fret.value]\n    }, finger);\n  }));\n};\n\nBarre.propTypes = {\n  frets: _propTypes[\"default\"].array,\n  barre: _propTypes[\"default\"].number,\n  capo: _propTypes[\"default\"].bool,\n  lite: _propTypes[\"default\"].bool,\n  finger: _propTypes[\"default\"].oneOf([0, 1, 2, 3, 4, 5])\n};\nvar _default = Barre;\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.instrumentPropTypes = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar instrumentPropTypes = _propTypes[\"default\"].shape({\n  strings: _propTypes[\"default\"].number.isRequired,\n  fretsOnChord: _propTypes[\"default\"].number.isRequired,\n  name: _propTypes[\"default\"].string.isRequired,\n  keys: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].oneOf(['A', 'Ab', 'A#', 'B', 'Bb', 'C', 'C#', 'D', 'Db', 'D#', 'E', 'Eb', 'F', 'F#', 'G', 'G#', 'Gb'])),\n  tunings: _propTypes[\"default\"].shape({\n    standard: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].string).isRequired\n  }).isRequired\n});\n\nexports.instrumentPropTypes = instrumentPropTypes;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","export class RuntimeError extends Error {\n    constructor(code, message = '') {\n        super('[RuntimeError] ' + code + ': ' + message);\n        this.code = code;\n    }\n}\nexport function globalObject() {\n    if (typeof globalThis !== 'undefined') {\n        return globalThis;\n    }\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    return Function('return this')();\n}\nexport function defined(x, code = 'undefined', message = '') {\n    if (x === undefined) {\n        throw new RuntimeError(code, message);\n    }\n    return x;\n}\nexport function log(block, ...args) {\n    if (!args)\n        return;\n    const line = Array.prototype.slice.call(args).join(' ');\n    globalObject().console.log(block + ': ' + line);\n}\nexport function warn(...args) {\n    const line = args.join(' ');\n    const err = new Error();\n    globalObject().console.log('Warning: ', line, err.stack);\n}\nfunction roundN(x, n) {\n    return x % n >= n / 2 ? parseInt(`${x / n}`, 10) * n + n : parseInt(`${x / n}`, 10) * n;\n}\nexport function midLine(a, b) {\n    let midLine = b + (a - b) / 2;\n    if (midLine % 2 > 0) {\n        midLine = roundN(midLine * 10, 5) / 10;\n    }\n    return midLine;\n}\nexport function prefix(text) {\n    return `vf-${text}`;\n}\nexport function upperFirst(s = '') {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n}\nexport function normalizeAngle(a) {\n    a = a % (2 * Math.PI);\n    if (a < 0) {\n        a += 2 * Math.PI;\n    }\n    return a;\n}\nexport function sumArray(arr) {\n    return arr.reduce((a, b) => a + b, 0);\n}\n","import { RuntimeError } from './util.js';\nexport class Fraction {\n    static get CATEGORY() {\n        return \"Fraction\";\n    }\n    static GCD(a, b) {\n        if (typeof a !== 'number' || Number.isNaN(a) || typeof b !== 'number' || Number.isNaN(b)) {\n            throw new RuntimeError('BadArgument', `Invalid numbers: ${a}, ${b}`);\n        }\n        let t;\n        while (b !== 0) {\n            t = b;\n            b = a % b;\n            a = t;\n        }\n        return a;\n    }\n    static LCM(a, b) {\n        return (a * b) / Fraction.GCD(a, b);\n    }\n    static LCMM(args) {\n        if (args.length === 0) {\n            return 0;\n        }\n        else if (args.length === 1) {\n            return args[0];\n        }\n        else if (args.length === 2) {\n            return Fraction.LCM(args[0], args[1]);\n        }\n        else {\n            return Fraction.LCM(args.shift(), Fraction.LCMM(args));\n        }\n    }\n    constructor(numerator, denominator) {\n        this.numerator = 1;\n        this.denominator = 1;\n        this.set(numerator, denominator);\n    }\n    set(numerator = 1, denominator = 1) {\n        this.numerator = numerator;\n        this.denominator = denominator;\n        return this;\n    }\n    value() {\n        return this.numerator / this.denominator;\n    }\n    simplify() {\n        let u = this.numerator;\n        let d = this.denominator;\n        const gcd = Fraction.GCD(u, d);\n        u /= gcd;\n        d /= gcd;\n        if (d < 0) {\n            d = -d;\n            u = -u;\n        }\n        return this.set(u, d);\n    }\n    add(param1 = 0, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        const lcm = Fraction.LCM(this.denominator, otherDenominator);\n        const a = lcm / this.denominator;\n        const b = lcm / otherDenominator;\n        const u = this.numerator * a + otherNumerator * b;\n        return this.set(u, lcm);\n    }\n    subtract(param1 = 0, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        const lcm = Fraction.LCM(this.denominator, otherDenominator);\n        const a = lcm / this.denominator;\n        const b = lcm / otherDenominator;\n        const u = this.numerator * a - otherNumerator * b;\n        return this.set(u, lcm);\n    }\n    multiply(param1 = 1, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        return this.set(this.numerator * otherNumerator, this.denominator * otherDenominator);\n    }\n    divide(param1 = 1, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        return this.set(this.numerator * otherDenominator, this.denominator * otherNumerator);\n    }\n    equals(compare) {\n        const a = Fraction.fractionA.copy(compare).simplify();\n        const b = Fraction.fractionB.copy(this).simplify();\n        return a.numerator === b.numerator && a.denominator === b.denominator;\n    }\n    greaterThan(compare) {\n        const a = Fraction.fractionA.copy(this);\n        a.subtract(compare);\n        return a.numerator > 0;\n    }\n    greaterThanEquals(compare) {\n        const a = Fraction.fractionA.copy(this);\n        a.subtract(compare);\n        return a.numerator >= 0;\n    }\n    lessThan(compare) {\n        return !this.greaterThanEquals(compare);\n    }\n    lessThanEquals(compare) {\n        return !this.greaterThan(compare);\n    }\n    clone() {\n        return new Fraction(this.numerator, this.denominator);\n    }\n    copy(other) {\n        if (typeof other === 'number') {\n            return this.set(other);\n        }\n        else {\n            return this.set(other.numerator, other.denominator);\n        }\n    }\n    quotient() {\n        return Math.floor(this.numerator / this.denominator);\n    }\n    remainder() {\n        return this.numerator % this.denominator;\n    }\n    makeAbs() {\n        this.denominator = Math.abs(this.denominator);\n        this.numerator = Math.abs(this.numerator);\n        return this;\n    }\n    toString() {\n        return `${this.numerator}/${this.denominator}`;\n    }\n    toSimplifiedString() {\n        return Fraction.fractionA.copy(this).simplify().toString();\n    }\n    toMixedString() {\n        let s = '';\n        const q = this.quotient();\n        const f = Fraction.fractionA.copy(this);\n        if (q < 0) {\n            f.makeAbs();\n        }\n        if (q !== 0) {\n            s += q;\n            if (f.numerator !== 0) {\n                s += ` ${f.toSimplifiedString()}`;\n            }\n        }\n        else if (f.numerator === 0) {\n            s = '0';\n        }\n        else {\n            s = f.toSimplifiedString();\n        }\n        return s;\n    }\n    parse(str) {\n        const i = str.split('/');\n        const n = parseInt(i[0], 10);\n        const d = i[1] ? parseInt(i[1], 10) : 1;\n        return this.set(n, d);\n    }\n}\nFraction.fractionA = new Fraction();\nFraction.fractionB = new Fraction();\nfunction getNumeratorAndDenominator(n, d = 1) {\n    if (typeof n === 'number') {\n        return [n, d];\n    }\n    else {\n        return [n.numerator, n.denominator];\n    }\n}\n","export class Metrics {\n    static clear(key) {\n        if (key) {\n            this.cacheFont.delete(key);\n            this.cacheStyle.delete(key);\n        }\n        else {\n            this.cacheFont.clear();\n            this.cacheStyle.clear();\n        }\n    }\n    static getFontInfo(key) {\n        let font = this.cacheFont.get(key);\n        if (!font) {\n            font = {\n                family: Metrics.get(`${key}.fontFamily`),\n                size: Metrics.get(`${key}.fontSize`) * Metrics.get(`${key}.fontScale`),\n                weight: Metrics.get(`${key}.fontWeight`),\n                style: Metrics.get(`${key}.fontStyle`),\n            };\n            this.cacheFont.set(key, font);\n        }\n        return structuredClone(font);\n    }\n    static getStyle(key) {\n        let style = this.cacheStyle.get(key);\n        if (!style) {\n            style = {\n                fillStyle: Metrics.get(`${key}.fillStyle`),\n                strokeStyle: Metrics.get(`${key}.strokeStyle`),\n                lineWidth: Metrics.get(`${key}.lineWidth`),\n                lineDash: Metrics.get(`${key}.lineDash`),\n                shadowBlur: Metrics.get(`${key}.shadowBlur`),\n                shadowColor: Metrics.get(`${key}.shadowColor`),\n            };\n            this.cacheStyle.set(key, style);\n        }\n        return structuredClone(style);\n    }\n    static get(key, defaultValue) {\n        var _a;\n        const keyParts = key.split('.');\n        const lastKeyPart = keyParts.pop();\n        let curr = MetricsDefaults;\n        let retVal = defaultValue;\n        while (curr) {\n            retVal = (_a = curr[lastKeyPart]) !== null && _a !== void 0 ? _a : retVal;\n            const keyPart = keyParts.shift();\n            if (keyPart) {\n                curr = curr[keyPart];\n            }\n            else {\n                break;\n            }\n        }\n        return retVal;\n    }\n}\nMetrics.cacheStyle = new Map();\nMetrics.cacheFont = new Map();\nexport const MetricsDefaults = {\n    fontFamily: 'Bravura,Academico',\n    fontSize: 30,\n    fontScale: 1.0,\n    fontWeight: 'normal',\n    fontStyle: 'normal',\n    Accidental: {\n        cautionary: {\n            fontSize: 20,\n        },\n        grace: {\n            fontSize: 20,\n        },\n        noteheadAccidentalPadding: 1,\n        leftPadding: 2,\n        accidentalSpacing: 3,\n    },\n    Annotation: {\n        fontSize: 10,\n    },\n    Bend: {\n        fontSize: 10,\n        line: {\n            strokeStyle: '#777777',\n            lineWidth: 1,\n        },\n    },\n    ChordSymbol: {\n        fontSize: 12,\n        spacing: 0.05,\n        subscriptOffset: 0.2,\n        superscriptOffset: -0.4,\n        superSubRatio: 0.6,\n    },\n    FretHandFinger: {\n        fontSize: 9,\n        fontWeight: 'bold',\n    },\n    GraceNote: {\n        fontScale: 2 / 3,\n    },\n    GraceTabNote: {\n        fontScale: 2 / 3,\n    },\n    NoteHead: {\n        minPadding: 2,\n    },\n    PedalMarking: {\n        text: {\n            fontSize: 12,\n            fontStyle: 'italic',\n        },\n    },\n    Repetition: {\n        text: {\n            fontSize: 12,\n            fontWeight: 'bold',\n            offsetX: 12,\n            offsetY: 25,\n            spacing: 5,\n        },\n        coda: {\n            offsetY: 25,\n        },\n        segno: {\n            offsetY: 10,\n        },\n    },\n    Stave: {\n        strokeStyle: '#999999',\n        fontSize: 8,\n        padding: 12,\n        endPaddingMax: 10,\n        endPaddingMin: 5,\n        unalignedNotePadding: 10,\n    },\n    StaveConnector: {\n        text: {\n            fontSize: 16,\n        },\n    },\n    StaveLine: {\n        fontSize: 10,\n    },\n    StaveSection: {\n        fontSize: 10,\n        fontWeight: 'bold',\n        lineWidth: 2,\n        padding: 2,\n        strokeStyle: 'black',\n    },\n    StaveTempo: {\n        fontSize: 14,\n        glyph: {\n            fontSize: 25,\n        },\n        name: {\n            fontWeight: 'bold',\n        },\n    },\n    StaveText: {\n        fontSize: 16,\n    },\n    StaveTie: {\n        fontSize: 10,\n    },\n    Stem: {\n        strokeStyle: 'black',\n    },\n    StringNumber: {\n        fontSize: 10,\n        fontWeight: 'bold',\n        verticalPadding: 8,\n        stemPadding: 2,\n        leftPadding: 5,\n        rightPadding: 6,\n    },\n    Stroke: {\n        text: {\n            fontSize: 10,\n            fontStyle: 'italic',\n            fontWeight: 'bold',\n        },\n    },\n    TabNote: {\n        text: {\n            fontSize: 9,\n        },\n    },\n    TabSlide: {\n        fontSize: 10,\n        fontStyle: 'italic',\n        fontWeight: 'bold',\n    },\n    TabStave: {\n        strokeStyle: '#999999',\n        fontSize: 8,\n    },\n    TabTie: {\n        fontSize: 10,\n    },\n    TextBracket: {\n        fontSize: 15,\n        fontStyle: 'italic',\n    },\n    TextNote: {\n        text: {\n            fontSize: 12,\n        },\n    },\n    Tremolo: {\n        spacing: 7,\n    },\n    Tuplet: {\n        yOffset: 0,\n        textYOffset: 2,\n    },\n    Volta: {\n        fontSize: 9,\n        fontWeight: 'bold',\n    },\n};\n","export class BoundingBox {\n    static copy(that) {\n        return new BoundingBox(that.x, that.y, that.w, that.h);\n    }\n    constructor(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n    }\n    getX() {\n        return this.x;\n    }\n    getY() {\n        return this.y;\n    }\n    getW() {\n        return this.w;\n    }\n    getH() {\n        return this.h;\n    }\n    setX(x) {\n        this.x = x;\n        return this;\n    }\n    setY(y) {\n        this.y = y;\n        return this;\n    }\n    setW(w) {\n        this.w = w;\n        return this;\n    }\n    setH(h) {\n        this.h = h;\n        return this;\n    }\n    move(x, y) {\n        this.x += x;\n        this.y += y;\n        return this;\n    }\n    clone() {\n        return BoundingBox.copy(this);\n    }\n    mergeWith(boundingBox) {\n        const that = boundingBox;\n        const newX = this.x < that.x ? this.x : that.x;\n        const newY = this.y < that.y ? this.y : that.y;\n        const newW = Math.max(this.x + this.w, that.x + that.w) - newX;\n        const newH = Math.max(this.y + this.h, that.y + that.h) - newY;\n        this.x = newX;\n        this.y = newY;\n        this.w = newW;\n        this.h = newH;\n        return this;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Metrics } from './metrics.js';\nexport var FontWeight;\n(function (FontWeight) {\n    FontWeight[\"NORMAL\"] = \"normal\";\n    FontWeight[\"BOLD\"] = \"bold\";\n})(FontWeight || (FontWeight = {}));\nexport var FontStyle;\n(function (FontStyle) {\n    FontStyle[\"NORMAL\"] = \"normal\";\n    FontStyle[\"ITALIC\"] = \"italic\";\n})(FontStyle || (FontStyle = {}));\nlet fontParser;\nexport class Font {\n    static convertSizeToPixelValue(fontSize) {\n        var _a;\n        if (typeof fontSize === 'number') {\n            return fontSize * Font.scaleToPxFrom.pt;\n        }\n        else {\n            const value = parseFloat(fontSize);\n            if (isNaN(value)) {\n                return 0;\n            }\n            const unit = fontSize.replace(/[\\d.\\s]/g, '').toLowerCase();\n            const conversionFactor = (_a = Font.scaleToPxFrom[unit]) !== null && _a !== void 0 ? _a : 1;\n            return value * conversionFactor;\n        }\n    }\n    static convertSizeToPointValue(fontSize) {\n        var _a;\n        if (typeof fontSize === 'number') {\n            return fontSize;\n        }\n        else {\n            const value = parseFloat(fontSize);\n            if (isNaN(value)) {\n                return 0;\n            }\n            const unit = fontSize.replace(/[\\d.\\s]/g, '').toLowerCase();\n            const conversionFactor = ((_a = Font.scaleToPxFrom[unit]) !== null && _a !== void 0 ? _a : 1) / Font.scaleToPxFrom.pt;\n            return value * conversionFactor;\n        }\n    }\n    static validate(f, size, weight, style) {\n        if (typeof f === 'string' && size === undefined && weight === undefined && style === undefined) {\n            return Font.fromCSSString(f);\n        }\n        let family;\n        if (typeof f === 'object') {\n            family = f.family;\n            size = f.size;\n            weight = f.weight;\n            style = f.style;\n        }\n        else {\n            family = f;\n        }\n        family = family !== null && family !== void 0 ? family : Metrics.get('fontFamily');\n        size = size !== null && size !== void 0 ? size : Metrics.get('fontSize') + 'pt';\n        weight = weight !== null && weight !== void 0 ? weight : FontWeight.NORMAL;\n        style = style !== null && style !== void 0 ? style : FontStyle.NORMAL;\n        if (weight === '') {\n            weight = FontWeight.NORMAL;\n        }\n        if (style === '') {\n            style = FontStyle.NORMAL;\n        }\n        if (typeof size === 'number') {\n            size = `${size}pt`;\n        }\n        if (typeof weight === 'number') {\n            weight = weight.toString();\n        }\n        return { family, size, weight, style };\n    }\n    static fromCSSString(cssFontShorthand) {\n        if (!fontParser) {\n            fontParser = document.createElement('span');\n        }\n        fontParser.style.font = cssFontShorthand;\n        const { fontFamily, fontSize, fontWeight, fontStyle } = fontParser.style;\n        return { family: fontFamily, size: fontSize, weight: fontWeight, style: fontStyle };\n    }\n    static toCSSString(fontInfo) {\n        var _a;\n        if (!fontInfo) {\n            return '';\n        }\n        let style;\n        const st = fontInfo.style;\n        if (st === FontStyle.NORMAL || st === '' || st === undefined) {\n            style = '';\n        }\n        else {\n            style = st.trim() + ' ';\n        }\n        let weight;\n        const wt = fontInfo.weight;\n        if (wt === FontWeight.NORMAL || wt === '' || wt === undefined) {\n            weight = '';\n        }\n        else if (typeof wt === 'number') {\n            weight = wt + ' ';\n        }\n        else {\n            weight = wt.trim() + ' ';\n        }\n        let size;\n        const sz = fontInfo.size;\n        if (sz === undefined) {\n            size = Metrics.get('fontSize') + 'pt';\n        }\n        else if (typeof sz === 'number') {\n            size = sz + 'pt ';\n        }\n        else {\n            size = sz.trim() + ' ';\n        }\n        const family = (_a = fontInfo.family) !== null && _a !== void 0 ? _a : Metrics.get('fontFamily');\n        return `${style}${weight}${size}${family}`;\n    }\n    static scaleSize(fontSize, scaleFactor) {\n        if (typeof fontSize === 'number') {\n            return (fontSize * scaleFactor);\n        }\n        else {\n            const value = parseFloat(fontSize);\n            const unit = fontSize.replace(/[\\d.\\s]/g, '');\n            return `${value * scaleFactor}${unit}`;\n        }\n    }\n    static isBold(weight) {\n        if (!weight) {\n            return false;\n        }\n        else if (typeof weight === 'number') {\n            return weight >= 600;\n        }\n        else {\n            const parsedWeight = parseInt(weight, 10);\n            if (isNaN(parsedWeight)) {\n                return weight.toLowerCase() === 'bold';\n            }\n            else {\n                return parsedWeight >= 600;\n            }\n        }\n    }\n    static isItalic(style) {\n        if (!style) {\n            return false;\n        }\n        else {\n            return style.toLowerCase() === FontStyle.ITALIC;\n        }\n    }\n    static load(fontName, url, descriptors) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof FontFace === 'undefined') {\n                return Promise.reject(new Error('FontFace API is not available in this environment. Cannot load fonts.'));\n            }\n            if (url === undefined) {\n                const files = Font.FILES;\n                if (!(fontName in files)) {\n                    return Promise.reject(new Error(`Font ${fontName} not found in Font.FILES`));\n                }\n                url = Font.HOST_URL + files[fontName];\n            }\n            const fontFace = new FontFace(fontName, `url(${url})`, descriptors);\n            const fontFaceLoadPromise = fontFace.load();\n            let fontFaceSet;\n            if (typeof document !== 'undefined') {\n                fontFaceSet = document.fonts;\n            }\n            else if (typeof self !== 'undefined' && 'fonts' in self) {\n                fontFaceSet = self.fonts;\n            }\n            fontFaceSet === null || fontFaceSet === void 0 ? void 0 : fontFaceSet.add(fontFace);\n            return fontFaceLoadPromise;\n        });\n    }\n    static getURLForFont(fontName) {\n        const files = Font.FILES;\n        if (!(fontName in files)) {\n            return undefined;\n        }\n        return Font.HOST_URL + files[fontName];\n    }\n}\nFont.scaleToPxFrom = {\n    pt: 4 / 3,\n    px: 1,\n    em: 16,\n    '%': 4 / 25,\n    in: 96,\n    mm: 96 / 25.4,\n    cm: 96 / 2.54,\n};\nFont.HOST_URL = 'https://cdn.jsdelivr.net/npm/@vexflow-fonts/';\nFont.FILES = {\n    Academico: 'academico/academico.woff2',\n    Bravura: 'bravura/bravura.woff2',\n    'Bravura Text': 'bravuratext/bravuratext.woff2',\n    Edwin: 'edwin/edwin-roman.woff2',\n    'Finale Ash': 'finaleash/finaleash.woff2',\n    'Finale Ash Text': 'finaleashtext/finaleashtext.woff2',\n    'Finale Broadway': 'finalebroadway/finalebroadway.woff2',\n    'Finale Broadway Text': 'finalebroadwaytext/finalebroadwaytext.woff2',\n    'Finale Jazz': 'finalejazz/finalejazz.woff2',\n    'Finale Jazz Text': 'finalejazztext/finalejazztext.woff2',\n    'Finale Maestro': 'finalemaestro/finalemaestro.woff2',\n    'Finale Maestro Text': 'finalemaestrotext/finalemaestrotext-regular.woff2',\n    Gonville: 'gonville/gonville.woff2',\n    Gootville: 'gootville/gootville.woff2',\n    'Gootville Text': 'gootvilletext/gootvilletext.woff2',\n    Leipzig: 'leipzig/leipzig.woff2',\n    Leland: 'leland/leland.woff2',\n    'Leland Text': 'lelandtext/lelandtext.woff2',\n    MuseJazz: 'musejazz/musejazz.woff2',\n    'MuseJazz Text': 'musejazztext/musejazztext.woff2',\n    Nepomuk: 'nepomuk/nepomuk.woff2',\n    Petaluma: 'petaluma/petaluma.woff2',\n    'Petaluma Script': 'petalumascript/petalumascript.woff2',\n    'Petaluma Text': 'petalumatext/petalumatext.woff2',\n    'Roboto Slab': 'robotoslab/robotoslab-regular-400.woff2',\n    Sebastian: 'sebastian/sebastian.woff2',\n    'Sebastian Text': 'sebastiantext/sebastiantext.woff2',\n};\n","import { RuntimeError } from './util.js';\nclass Index {\n    constructor() {\n        this.id = {};\n        this.type = {};\n        this.class = {};\n    }\n}\nexport class Registry {\n    static getDefaultRegistry() {\n        return Registry.defaultRegistry;\n    }\n    static enableDefaultRegistry(registry) {\n        Registry.defaultRegistry = registry;\n    }\n    static disableDefaultRegistry() {\n        Registry.defaultRegistry = undefined;\n    }\n    constructor() {\n        this.index = new Index();\n    }\n    clear() {\n        this.index = new Index();\n        return this;\n    }\n    setIndexValue(name, value, id, elem) {\n        const index = this.index;\n        if (!index[name][value]) {\n            index[name][value] = {};\n        }\n        index[name][value][id] = elem;\n    }\n    updateIndex({ id, name, value, oldValue }) {\n        const elem = this.getElementById(id);\n        if (oldValue !== undefined && this.index[name][oldValue]) {\n            delete this.index[name][oldValue][id];\n        }\n        if (value && elem) {\n            this.setIndexValue(name, value, elem.getAttribute('id'), elem);\n        }\n    }\n    register(elem, id) {\n        id = id || elem.getAttribute('id');\n        if (!id) {\n            throw new RuntimeError(\"Can't add element without `id` attribute to registry\");\n        }\n        elem.setAttribute('id', id);\n        this.setIndexValue('id', id, id, elem);\n        this.updateIndex({ id, name: 'type', value: elem.getAttribute('type'), oldValue: undefined });\n        elem.onRegister(this);\n        return this;\n    }\n    getElementById(id) {\n        var _a, _b;\n        return (_b = (_a = this.index.id) === null || _a === void 0 ? void 0 : _a[id]) === null || _b === void 0 ? void 0 : _b[id];\n    }\n    getElementsByAttribute(attribute, value) {\n        const indexAttr = this.index[attribute];\n        if (indexAttr) {\n            const indexAttrVal = indexAttr[value];\n            if (indexAttrVal) {\n                const keys = Object.keys(indexAttrVal);\n                return keys.map((k) => indexAttrVal[k]);\n            }\n        }\n        return [];\n    }\n    getElementsByType(type) {\n        return this.getElementsByAttribute('type', type);\n    }\n    getElementsByClass(className) {\n        return this.getElementsByAttribute('class', className);\n    }\n    onUpdate(info) {\n        const allowedNames = ['id', 'type', 'class'];\n        if (allowedNames.includes(info.name)) {\n            this.updateIndex(info);\n        }\n        return this;\n    }\n}\n","import { BoundingBox } from './boundingbox.js';\nimport { Font } from './font.js';\nimport { Metrics } from './metrics.js';\nimport { Registry } from './registry.js';\nimport { defined, prefix, RuntimeError } from './util.js';\nexport class Element {\n    static get CATEGORY() {\n        return \"Element\";\n    }\n    static newID() {\n        return `auto${Element.ID++}`;\n    }\n    static setTextMeasurementCanvas(canvas) {\n        Element.txtCanvas = canvas;\n    }\n    static getTextMeasurementCanvas() {\n        let txtCanvas = Element.txtCanvas;\n        if (!txtCanvas) {\n            if (typeof document !== 'undefined') {\n                txtCanvas = document.createElement('canvas');\n            }\n            else if (typeof OffscreenCanvas !== 'undefined') {\n                txtCanvas = new OffscreenCanvas(300, 150);\n            }\n            Element.txtCanvas = txtCanvas;\n        }\n        return txtCanvas;\n    }\n    constructor(category) {\n        var _a;\n        this.children = [];\n        this.style = {};\n        this._text = '';\n        this.metricsValid = false;\n        this._textMetrics = {\n            fontBoundingBoxAscent: 0,\n            fontBoundingBoxDescent: 0,\n            actualBoundingBoxAscent: 0,\n            actualBoundingBoxDescent: 0,\n            actualBoundingBoxLeft: 0,\n            actualBoundingBoxRight: 0,\n            width: 0,\n            alphabeticBaseline: 0,\n            emHeightAscent: 0,\n            emHeightDescent: 0,\n            hangingBaseline: 0,\n            ideographicBaseline: 0,\n        };\n        this._height = 0;\n        this._width = 0;\n        this.xShift = 0;\n        this.yShift = 0;\n        this.x = 0;\n        this.y = 0;\n        this.attrs = {\n            id: Element.newID(),\n            type: category !== null && category !== void 0 ? category : this.constructor.CATEGORY,\n            class: '',\n        };\n        this.rendered = false;\n        this._fontInfo = Metrics.getFontInfo(this.attrs.type);\n        this.style = Metrics.getStyle(this.attrs.type);\n        this.fontScale = Metrics.get(`${this.attrs.type}.fontScale`);\n        (_a = Registry.getDefaultRegistry()) === null || _a === void 0 ? void 0 : _a.register(this);\n    }\n    addChild(child) {\n        if (child.parent)\n            throw new RuntimeError('Element', 'Parent already defined');\n        child.parent = this;\n        this.children.push(child);\n        return this;\n    }\n    getCategory() {\n        return this.attrs.type;\n    }\n    setStyle(style) {\n        this.style = style;\n        return this;\n    }\n    setGroupStyle(style) {\n        this.style = style;\n        this.children.forEach((child) => child.setGroupStyle(style));\n        return this;\n    }\n    getStyle() {\n        return this.style;\n    }\n    applyStyle(context = this.context, style = this.getStyle()) {\n        if (!context)\n            return this;\n        if (style.shadowColor)\n            context.setShadowColor(style.shadowColor);\n        if (style.shadowBlur)\n            context.setShadowBlur(style.shadowBlur);\n        if (style.fillStyle)\n            context.setFillStyle(style.fillStyle);\n        if (style.strokeStyle)\n            context.setStrokeStyle(style.strokeStyle);\n        if (style.lineWidth)\n            context.setLineWidth(style.lineWidth);\n        if (style.lineDash)\n            context.setLineDash(style.lineDash.split(' ').map(Number));\n        return this;\n    }\n    drawWithStyle() {\n        const ctx = this.checkContext();\n        ctx.save();\n        this.applyStyle(ctx);\n        this.draw();\n        ctx.restore();\n        return this;\n    }\n    draw() {\n        throw new RuntimeError('Element', 'Draw not defined');\n    }\n    hasClass(className) {\n        var _a;\n        if (!this.attrs.class)\n            return false;\n        return ((_a = this.attrs.class) === null || _a === void 0 ? void 0 : _a.split(' ').indexOf(className)) !== -1;\n    }\n    addClass(className) {\n        var _a;\n        if (this.hasClass(className))\n            return this;\n        if (!this.attrs.class)\n            this.attrs.class = `${className}`;\n        else\n            this.attrs.class = `${this.attrs.class} ${className}`;\n        (_a = this.registry) === null || _a === void 0 ? void 0 : _a.onUpdate({\n            id: this.attrs.id,\n            name: 'class',\n            value: className,\n            oldValue: undefined,\n        });\n        return this;\n    }\n    removeClass(className) {\n        var _a, _b;\n        if (!this.hasClass(className))\n            return this;\n        const arr = (_a = this.attrs.class) === null || _a === void 0 ? void 0 : _a.split(' ');\n        if (arr) {\n            arr.splice(arr.indexOf(className));\n            this.attrs.class = arr.join(' ');\n        }\n        (_b = this.registry) === null || _b === void 0 ? void 0 : _b.onUpdate({\n            id: this.attrs.id,\n            name: 'class',\n            value: undefined,\n            oldValue: className,\n        });\n        return this;\n    }\n    onRegister(registry) {\n        this.registry = registry;\n        return this;\n    }\n    isRendered() {\n        return this.rendered;\n    }\n    setRendered(rendered = true) {\n        this.rendered = rendered;\n        return this;\n    }\n    getAttributes() {\n        return this.attrs;\n    }\n    getAttribute(name) {\n        return this.attrs[name];\n    }\n    getSVGElement(suffix = '') {\n        const id = prefix(this.attrs.id + suffix);\n        const element = document.getElementById(id);\n        if (element)\n            return element;\n    }\n    setAttribute(name, value) {\n        var _a;\n        const oldID = this.attrs.id;\n        const oldValue = this.attrs[name];\n        this.attrs[name] = value;\n        (_a = this.registry) === null || _a === void 0 ? void 0 : _a.onUpdate({ id: oldID, name, value, oldValue });\n        return this;\n    }\n    getBoundingBox() {\n        return new BoundingBox(this.x + this.xShift, this.y + this.yShift - this.textMetrics.actualBoundingBoxAscent, this.width, this.height);\n    }\n    getContext() {\n        return this.context;\n    }\n    setContext(context) {\n        this.context = context;\n        return this;\n    }\n    checkContext() {\n        return defined(this.context, 'NoContext', 'No rendering context attached to instance.');\n    }\n    set font(f) {\n        this.setFont(f);\n    }\n    get font() {\n        return Font.toCSSString(this._fontInfo);\n    }\n    setFont(font, size, weight, style) {\n        const defaultTextFont = Metrics.getFontInfo(this.attrs.type);\n        const fontIsObject = typeof font === 'object';\n        const fontIsString = typeof font === 'string';\n        const sizeWeightStyleAreUndefined = size === undefined && weight === undefined && style === undefined;\n        this.metricsValid = false;\n        if (fontIsObject) {\n            this._fontInfo = Object.assign(Object.assign({}, defaultTextFont), font);\n        }\n        else if (fontIsString && sizeWeightStyleAreUndefined) {\n            this._fontInfo = Font.fromCSSString(font);\n        }\n        else {\n            this._fontInfo = Font.validate(font !== null && font !== void 0 ? font : defaultTextFont.family, size !== null && size !== void 0 ? size : defaultTextFont.size, weight !== null && weight !== void 0 ? weight : defaultTextFont.weight, style !== null && style !== void 0 ? style : defaultTextFont.style);\n        }\n        return this;\n    }\n    getFont() {\n        return Font.toCSSString(this._fontInfo);\n    }\n    get fontInfo() {\n        return this._fontInfo;\n    }\n    set fontInfo(fontInfo) {\n        this.setFont(fontInfo);\n    }\n    setFontSize(size) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, size, fontInfo.weight, fontInfo.style);\n        return this;\n    }\n    getFontSize() {\n        return this.fontSize;\n    }\n    getFontScale() {\n        return this.fontScale;\n    }\n    set fontSize(size) {\n        this.setFontSize(size);\n    }\n    get fontSize() {\n        let size = this.fontInfo.size;\n        if (typeof size === 'number') {\n            size = `${size}pt`;\n        }\n        return size;\n    }\n    get fontSizeInPoints() {\n        return Font.convertSizeToPointValue(this.fontSize);\n    }\n    get fontSizeInPixels() {\n        return Font.convertSizeToPixelValue(this.fontSize);\n    }\n    get fontStyle() {\n        return this.fontInfo.style;\n    }\n    set fontStyle(style) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, fontInfo.size, fontInfo.weight, style);\n    }\n    get fontWeight() {\n        return this.fontInfo.weight + '';\n    }\n    set fontWeight(weight) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, fontInfo.size, weight, fontInfo.style);\n    }\n    getWidth() {\n        return this.width;\n    }\n    get width() {\n        if (!this.metricsValid)\n            this.measureText();\n        return this._width;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    set width(width) {\n        if (!this.metricsValid)\n            this.measureText();\n        this._width = width;\n    }\n    setX(x) {\n        this.x = x;\n        return this;\n    }\n    getX() {\n        return this.x;\n    }\n    getY() {\n        return this.y;\n    }\n    setY(y) {\n        this.y = y;\n        return this;\n    }\n    setYShift(yShift) {\n        this.yShift = yShift;\n        return this;\n    }\n    getYShift() {\n        return this.yShift;\n    }\n    setXShift(xShift) {\n        this.xShift = xShift;\n        return this;\n    }\n    getXShift() {\n        return this.xShift;\n    }\n    setText(text) {\n        this.text = text;\n        return this;\n    }\n    set text(text) {\n        this.metricsValid = false;\n        this._text = text;\n    }\n    getText() {\n        return this._text;\n    }\n    get text() {\n        return this._text;\n    }\n    renderText(ctx, xPos, yPos) {\n        ctx.setFont(this._fontInfo);\n        ctx.fillText(this._text, xPos + this.x + this.xShift, yPos + this.y + this.yShift);\n        this.children.forEach((child) => {\n            ctx.setFont(child.fontInfo);\n            ctx.fillText(child.text, xPos + child.x + child.xShift, yPos + child.y + child.yShift);\n        });\n    }\n    measureText() {\n        var _a;\n        const context = (_a = Element.getTextMeasurementCanvas()) === null || _a === void 0 ? void 0 : _a.getContext('2d');\n        if (!context) {\n            console.warn('Element: No context for txtCanvas. Returning empty text metrics.');\n            return this._textMetrics;\n        }\n        context.font = Font.toCSSString(Font.validate(this.fontInfo));\n        this._textMetrics = context.measureText(this.text);\n        this._height = this._textMetrics.actualBoundingBoxAscent + this._textMetrics.actualBoundingBoxDescent;\n        this._width = this._textMetrics.width;\n        this.metricsValid = true;\n        return this._textMetrics;\n    }\n    static measureWidth(text, key = '') {\n        var _a;\n        const context = (_a = Element.getTextMeasurementCanvas()) === null || _a === void 0 ? void 0 : _a.getContext('2d');\n        if (!context) {\n            console.warn('Element: No context for txtCanvas. Returning empty text metrics.');\n            return 0;\n        }\n        context.font = Font.toCSSString(Metrics.getFontInfo(key));\n        return context.measureText(text).width;\n    }\n    getTextMetrics() {\n        return this.textMetrics;\n    }\n    get textMetrics() {\n        if (!this.metricsValid)\n            this.measureText();\n        return this._textMetrics;\n    }\n    getHeight() {\n        return this.height;\n    }\n    get height() {\n        if (!this.metricsValid)\n            this.measureText();\n        return this._height;\n    }\n    set height(height) {\n        if (!this.metricsValid)\n            this.measureText();\n        this._height = height;\n    }\n    setOriginX(x) {\n        const bbox = this.getBoundingBox();\n        const originX = Math.abs((bbox.getX() - this.xShift) / bbox.getW());\n        const xShift = (x - originX) * bbox.getW();\n        this.xShift = -xShift;\n    }\n    setOriginY(y) {\n        const bbox = this.getBoundingBox();\n        const originY = Math.abs((bbox.getY() - this.yShift) / bbox.getH());\n        const yShift = (y - originY) * bbox.getH();\n        this.yShift = -yShift;\n    }\n    setOrigin(x, y) {\n        this.setOriginX(x);\n        this.setOriginY(y);\n    }\n}\nElement.ID = 1000;\n","import { Element } from './element.js';\nimport { defined, RuntimeError } from './util.js';\nexport var ModifierPosition;\n(function (ModifierPosition) {\n    ModifierPosition[ModifierPosition[\"CENTER\"] = 0] = \"CENTER\";\n    ModifierPosition[ModifierPosition[\"LEFT\"] = 1] = \"LEFT\";\n    ModifierPosition[ModifierPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n    ModifierPosition[ModifierPosition[\"ABOVE\"] = 3] = \"ABOVE\";\n    ModifierPosition[ModifierPosition[\"BELOW\"] = 4] = \"BELOW\";\n})(ModifierPosition || (ModifierPosition = {}));\nexport class Modifier extends Element {\n    static get CATEGORY() {\n        return \"Modifier\";\n    }\n    static get Position() {\n        return ModifierPosition;\n    }\n    static get PositionString() {\n        return {\n            center: ModifierPosition.CENTER,\n            above: ModifierPosition.ABOVE,\n            below: ModifierPosition.BELOW,\n            left: ModifierPosition.LEFT,\n            right: ModifierPosition.RIGHT,\n        };\n    }\n    constructor() {\n        super();\n        this.width = 0;\n        this.textLine = 0;\n        this.position = Modifier.Position.LEFT;\n        this.spacingFromNextModifier = 0;\n    }\n    reset() {\n    }\n    getNote() {\n        return defined(this.note, 'NoNote', 'Modifier has no note.');\n    }\n    checkAttachedNote() {\n        const category = this.getCategory();\n        defined(this.index, 'NoIndex', `Can't draw ${category} without an index.`);\n        return defined(this.note, 'NoNote', `Can't draw ${category} without a note.`);\n    }\n    setNote(note) {\n        this.note = note;\n        return this;\n    }\n    getIndex() {\n        return this.index;\n    }\n    checkIndex() {\n        return defined(this.index, 'NoIndex', 'Modifier has an invalid index.');\n    }\n    setIndex(index) {\n        this.index = index;\n        return this;\n    }\n    getModifierContext() {\n        return this.modifierContext;\n    }\n    checkModifierContext() {\n        return defined(this.modifierContext, 'NoModifierContext', 'Modifier Context Required');\n    }\n    setModifierContext(c) {\n        this.modifierContext = c;\n        return this;\n    }\n    getPosition() {\n        return this.position;\n    }\n    setPosition(position) {\n        this.position = typeof position === 'string' ? Modifier.PositionString[position] : position;\n        this.reset();\n        return this;\n    }\n    setTextLine(line) {\n        this.textLine = line;\n        return this;\n    }\n    setYShift(y) {\n        this.yShift = y;\n        return this;\n    }\n    setSpacingFromNextModifier(x) {\n        this.spacingFromNextModifier = x;\n    }\n    getSpacingFromNextModifier() {\n        return this.spacingFromNextModifier;\n    }\n    setXShift(x) {\n        this.xShift = 0;\n        if (this.position === Modifier.Position.LEFT) {\n            this.xShift -= x;\n        }\n        else {\n            this.xShift += x;\n        }\n        return this;\n    }\n    getXShift() {\n        return this.xShift;\n    }\n    draw() {\n        this.checkContext();\n        throw new RuntimeError('NotImplemented', 'draw() not implemented for this modifier.');\n    }\n    alignSubNotesWithNote(subNotes, note, position = Modifier.Position.LEFT) {\n        const tickContext = note.getTickContext();\n        const metrics = tickContext.getMetrics();\n        const stave = note.getStave();\n        const subNoteXOffset = position === Modifier.Position.RIGHT\n            ? tickContext.getX() + this.getSpacingFromNextModifier() * subNotes.length + 10\n            : tickContext.getX() - metrics.modLeftPx - metrics.modRightPx + this.getSpacingFromNextModifier();\n        subNotes.forEach((subNote) => {\n            const subTickContext = subNote.getTickContext();\n            if (stave)\n                subNote.setStave(stave);\n            subTickContext.setXOffset(subNoteXOffset);\n        });\n    }\n}\n","export var Glyphs;\n(function (Glyphs) {\n    Glyphs[\"null\"] = \"\\0\";\n    Glyphs[\"fourStringTabClef\"] = \"\\uE06E\";\n    Glyphs[\"sixStringTabClef\"] = \"\\uE06D\";\n    Glyphs[\"accSagittal11LargeDiesisDown\"] = \"\\uE30D\";\n    Glyphs[\"accSagittal11LargeDiesisUp\"] = \"\\uE30C\";\n    Glyphs[\"accSagittal11MediumDiesisDown\"] = \"\\uE30B\";\n    Glyphs[\"accSagittal11MediumDiesisUp\"] = \"\\uE30A\";\n    Glyphs[\"accSagittal11v19LargeDiesisDown\"] = \"\\uE3AB\";\n    Glyphs[\"accSagittal11v19LargeDiesisUp\"] = \"\\uE3AA\";\n    Glyphs[\"accSagittal11v19MediumDiesisDown\"] = \"\\uE3A3\";\n    Glyphs[\"accSagittal11v19MediumDiesisUp\"] = \"\\uE3A2\";\n    Glyphs[\"accSagittal11v49CommaDown\"] = \"\\uE397\";\n    Glyphs[\"accSagittal11v49CommaUp\"] = \"\\uE396\";\n    Glyphs[\"accSagittal143CommaDown\"] = \"\\uE395\";\n    Glyphs[\"accSagittal143CommaUp\"] = \"\\uE394\";\n    Glyphs[\"accSagittal17CommaDown\"] = \"\\uE343\";\n    Glyphs[\"accSagittal17CommaUp\"] = \"\\uE342\";\n    Glyphs[\"accSagittal17KleismaDown\"] = \"\\uE393\";\n    Glyphs[\"accSagittal17KleismaUp\"] = \"\\uE392\";\n    Glyphs[\"accSagittal19CommaDown\"] = \"\\uE399\";\n    Glyphs[\"accSagittal19CommaUp\"] = \"\\uE398\";\n    Glyphs[\"accSagittal19SchismaDown\"] = \"\\uE391\";\n    Glyphs[\"accSagittal19SchismaUp\"] = \"\\uE390\";\n    Glyphs[\"accSagittal1MinaDown\"] = \"\\uE3F5\";\n    Glyphs[\"accSagittal1MinaUp\"] = \"\\uE3F4\";\n    Glyphs[\"accSagittal1TinaDown\"] = \"\\uE3F9\";\n    Glyphs[\"accSagittal1TinaUp\"] = \"\\uE3F8\";\n    Glyphs[\"accSagittal23CommaDown\"] = \"\\uE371\";\n    Glyphs[\"accSagittal23CommaUp\"] = \"\\uE370\";\n    Glyphs[\"accSagittal23SmallDiesisDown\"] = \"\\uE39F\";\n    Glyphs[\"accSagittal23SmallDiesisUp\"] = \"\\uE39E\";\n    Glyphs[\"accSagittal25SmallDiesisDown\"] = \"\\uE307\";\n    Glyphs[\"accSagittal25SmallDiesisUp\"] = \"\\uE306\";\n    Glyphs[\"accSagittal2MinasDown\"] = \"\\uE3F7\";\n    Glyphs[\"accSagittal2MinasUp\"] = \"\\uE3F6\";\n    Glyphs[\"accSagittal2TinasDown\"] = \"\\uE3FB\";\n    Glyphs[\"accSagittal2TinasUp\"] = \"\\uE3FA\";\n    Glyphs[\"accSagittal35LargeDiesisDown\"] = \"\\uE30F\";\n    Glyphs[\"accSagittal35LargeDiesisUp\"] = \"\\uE30E\";\n    Glyphs[\"accSagittal35MediumDiesisDown\"] = \"\\uE309\";\n    Glyphs[\"accSagittal35MediumDiesisUp\"] = \"\\uE308\";\n    Glyphs[\"accSagittal3TinasDown\"] = \"\\uE3FD\";\n    Glyphs[\"accSagittal3TinasUp\"] = \"\\uE3FC\";\n    Glyphs[\"accSagittal49LargeDiesisDown\"] = \"\\uE3A9\";\n    Glyphs[\"accSagittal49LargeDiesisUp\"] = \"\\uE3A8\";\n    Glyphs[\"accSagittal49MediumDiesisDown\"] = \"\\uE3A5\";\n    Glyphs[\"accSagittal49MediumDiesisUp\"] = \"\\uE3A4\";\n    Glyphs[\"accSagittal49SmallDiesisDown\"] = \"\\uE39D\";\n    Glyphs[\"accSagittal49SmallDiesisUp\"] = \"\\uE39C\";\n    Glyphs[\"accSagittal4TinasDown\"] = \"\\uE3FF\";\n    Glyphs[\"accSagittal4TinasUp\"] = \"\\uE3FE\";\n    Glyphs[\"accSagittal55CommaDown\"] = \"\\uE345\";\n    Glyphs[\"accSagittal55CommaUp\"] = \"\\uE344\";\n    Glyphs[\"accSagittal5CommaDown\"] = \"\\uE303\";\n    Glyphs[\"accSagittal5CommaUp\"] = \"\\uE302\";\n    Glyphs[\"accSagittal5TinasDown\"] = \"\\uE401\";\n    Glyphs[\"accSagittal5TinasUp\"] = \"\\uE400\";\n    Glyphs[\"accSagittal5v11SmallDiesisDown\"] = \"\\uE349\";\n    Glyphs[\"accSagittal5v11SmallDiesisUp\"] = \"\\uE348\";\n    Glyphs[\"accSagittal5v13LargeDiesisDown\"] = \"\\uE3AD\";\n    Glyphs[\"accSagittal5v13LargeDiesisUp\"] = \"\\uE3AC\";\n    Glyphs[\"accSagittal5v13MediumDiesisDown\"] = \"\\uE3A1\";\n    Glyphs[\"accSagittal5v13MediumDiesisUp\"] = \"\\uE3A0\";\n    Glyphs[\"accSagittal5v19CommaDown\"] = \"\\uE373\";\n    Glyphs[\"accSagittal5v19CommaUp\"] = \"\\uE372\";\n    Glyphs[\"accSagittal5v23SmallDiesisDown\"] = \"\\uE375\";\n    Glyphs[\"accSagittal5v23SmallDiesisUp\"] = \"\\uE374\";\n    Glyphs[\"accSagittal5v49MediumDiesisDown\"] = \"\\uE3A7\";\n    Glyphs[\"accSagittal5v49MediumDiesisUp\"] = \"\\uE3A6\";\n    Glyphs[\"accSagittal5v7KleismaDown\"] = \"\\uE301\";\n    Glyphs[\"accSagittal5v7KleismaUp\"] = \"\\uE300\";\n    Glyphs[\"accSagittal6TinasDown\"] = \"\\uE403\";\n    Glyphs[\"accSagittal6TinasUp\"] = \"\\uE402\";\n    Glyphs[\"accSagittal7CommaDown\"] = \"\\uE305\";\n    Glyphs[\"accSagittal7CommaUp\"] = \"\\uE304\";\n    Glyphs[\"accSagittal7TinasDown\"] = \"\\uE405\";\n    Glyphs[\"accSagittal7TinasUp\"] = \"\\uE404\";\n    Glyphs[\"accSagittal7v11CommaDown\"] = \"\\uE347\";\n    Glyphs[\"accSagittal7v11CommaUp\"] = \"\\uE346\";\n    Glyphs[\"accSagittal7v11KleismaDown\"] = \"\\uE341\";\n    Glyphs[\"accSagittal7v11KleismaUp\"] = \"\\uE340\";\n    Glyphs[\"accSagittal7v19CommaDown\"] = \"\\uE39B\";\n    Glyphs[\"accSagittal7v19CommaUp\"] = \"\\uE39A\";\n    Glyphs[\"accSagittal8TinasDown\"] = \"\\uE407\";\n    Glyphs[\"accSagittal8TinasUp\"] = \"\\uE406\";\n    Glyphs[\"accSagittal9TinasDown\"] = \"\\uE409\";\n    Glyphs[\"accSagittal9TinasUp\"] = \"\\uE408\";\n    Glyphs[\"accSagittalAcute\"] = \"\\uE3F2\";\n    Glyphs[\"accSagittalDoubleFlat\"] = \"\\uE335\";\n    Glyphs[\"accSagittalDoubleFlat11v49CUp\"] = \"\\uE3E9\";\n    Glyphs[\"accSagittalDoubleFlat143CUp\"] = \"\\uE3EB\";\n    Glyphs[\"accSagittalDoubleFlat17CUp\"] = \"\\uE365\";\n    Glyphs[\"accSagittalDoubleFlat17kUp\"] = \"\\uE3ED\";\n    Glyphs[\"accSagittalDoubleFlat19CUp\"] = \"\\uE3E7\";\n    Glyphs[\"accSagittalDoubleFlat19sUp\"] = \"\\uE3EF\";\n    Glyphs[\"accSagittalDoubleFlat23CUp\"] = \"\\uE387\";\n    Glyphs[\"accSagittalDoubleFlat23SUp\"] = \"\\uE3E1\";\n    Glyphs[\"accSagittalDoubleFlat25SUp\"] = \"\\uE32D\";\n    Glyphs[\"accSagittalDoubleFlat49SUp\"] = \"\\uE3E3\";\n    Glyphs[\"accSagittalDoubleFlat55CUp\"] = \"\\uE363\";\n    Glyphs[\"accSagittalDoubleFlat5CUp\"] = \"\\uE331\";\n    Glyphs[\"accSagittalDoubleFlat5v11SUp\"] = \"\\uE35F\";\n    Glyphs[\"accSagittalDoubleFlat5v19CUp\"] = \"\\uE385\";\n    Glyphs[\"accSagittalDoubleFlat5v23SUp\"] = \"\\uE383\";\n    Glyphs[\"accSagittalDoubleFlat5v7kUp\"] = \"\\uE333\";\n    Glyphs[\"accSagittalDoubleFlat7CUp\"] = \"\\uE32F\";\n    Glyphs[\"accSagittalDoubleFlat7v11CUp\"] = \"\\uE361\";\n    Glyphs[\"accSagittalDoubleFlat7v11kUp\"] = \"\\uE367\";\n    Glyphs[\"accSagittalDoubleFlat7v19CUp\"] = \"\\uE3E5\";\n    Glyphs[\"accSagittalDoubleSharp\"] = \"\\uE334\";\n    Glyphs[\"accSagittalDoubleSharp11v49CDown\"] = \"\\uE3E8\";\n    Glyphs[\"accSagittalDoubleSharp143CDown\"] = \"\\uE3EA\";\n    Glyphs[\"accSagittalDoubleSharp17CDown\"] = \"\\uE364\";\n    Glyphs[\"accSagittalDoubleSharp17kDown\"] = \"\\uE3EC\";\n    Glyphs[\"accSagittalDoubleSharp19CDown\"] = \"\\uE3E6\";\n    Glyphs[\"accSagittalDoubleSharp19sDown\"] = \"\\uE3EE\";\n    Glyphs[\"accSagittalDoubleSharp23CDown\"] = \"\\uE386\";\n    Glyphs[\"accSagittalDoubleSharp23SDown\"] = \"\\uE3E0\";\n    Glyphs[\"accSagittalDoubleSharp25SDown\"] = \"\\uE32C\";\n    Glyphs[\"accSagittalDoubleSharp49SDown\"] = \"\\uE3E2\";\n    Glyphs[\"accSagittalDoubleSharp55CDown\"] = \"\\uE362\";\n    Glyphs[\"accSagittalDoubleSharp5CDown\"] = \"\\uE330\";\n    Glyphs[\"accSagittalDoubleSharp5v11SDown\"] = \"\\uE35E\";\n    Glyphs[\"accSagittalDoubleSharp5v19CDown\"] = \"\\uE384\";\n    Glyphs[\"accSagittalDoubleSharp5v23SDown\"] = \"\\uE382\";\n    Glyphs[\"accSagittalDoubleSharp5v7kDown\"] = \"\\uE332\";\n    Glyphs[\"accSagittalDoubleSharp7CDown\"] = \"\\uE32E\";\n    Glyphs[\"accSagittalDoubleSharp7v11CDown\"] = \"\\uE360\";\n    Glyphs[\"accSagittalDoubleSharp7v11kDown\"] = \"\\uE366\";\n    Glyphs[\"accSagittalDoubleSharp7v19CDown\"] = \"\\uE3E4\";\n    Glyphs[\"accSagittalFlat\"] = \"\\uE319\";\n    Glyphs[\"accSagittalFlat11LDown\"] = \"\\uE329\";\n    Glyphs[\"accSagittalFlat11MDown\"] = \"\\uE327\";\n    Glyphs[\"accSagittalFlat11v19LDown\"] = \"\\uE3DB\";\n    Glyphs[\"accSagittalFlat11v19MDown\"] = \"\\uE3D3\";\n    Glyphs[\"accSagittalFlat11v49CDown\"] = \"\\uE3C7\";\n    Glyphs[\"accSagittalFlat11v49CUp\"] = \"\\uE3B9\";\n    Glyphs[\"accSagittalFlat143CDown\"] = \"\\uE3C5\";\n    Glyphs[\"accSagittalFlat143CUp\"] = \"\\uE3BB\";\n    Glyphs[\"accSagittalFlat17CDown\"] = \"\\uE357\";\n    Glyphs[\"accSagittalFlat17CUp\"] = \"\\uE351\";\n    Glyphs[\"accSagittalFlat17kDown\"] = \"\\uE3C3\";\n    Glyphs[\"accSagittalFlat17kUp\"] = \"\\uE3BD\";\n    Glyphs[\"accSagittalFlat19CDown\"] = \"\\uE3C9\";\n    Glyphs[\"accSagittalFlat19CUp\"] = \"\\uE3B7\";\n    Glyphs[\"accSagittalFlat19sDown\"] = \"\\uE3C1\";\n    Glyphs[\"accSagittalFlat19sUp\"] = \"\\uE3BF\";\n    Glyphs[\"accSagittalFlat23CDown\"] = \"\\uE37D\";\n    Glyphs[\"accSagittalFlat23CUp\"] = \"\\uE37B\";\n    Glyphs[\"accSagittalFlat23SDown\"] = \"\\uE3CF\";\n    Glyphs[\"accSagittalFlat23SUp\"] = \"\\uE3B1\";\n    Glyphs[\"accSagittalFlat25SDown\"] = \"\\uE323\";\n    Glyphs[\"accSagittalFlat25SUp\"] = \"\\uE311\";\n    Glyphs[\"accSagittalFlat35LDown\"] = \"\\uE32B\";\n    Glyphs[\"accSagittalFlat35MDown\"] = \"\\uE325\";\n    Glyphs[\"accSagittalFlat49LDown\"] = \"\\uE3D9\";\n    Glyphs[\"accSagittalFlat49MDown\"] = \"\\uE3D5\";\n    Glyphs[\"accSagittalFlat49SDown\"] = \"\\uE3CD\";\n    Glyphs[\"accSagittalFlat49SUp\"] = \"\\uE3B3\";\n    Glyphs[\"accSagittalFlat55CDown\"] = \"\\uE359\";\n    Glyphs[\"accSagittalFlat55CUp\"] = \"\\uE34F\";\n    Glyphs[\"accSagittalFlat5CDown\"] = \"\\uE31F\";\n    Glyphs[\"accSagittalFlat5CUp\"] = \"\\uE315\";\n    Glyphs[\"accSagittalFlat5v11SDown\"] = \"\\uE35D\";\n    Glyphs[\"accSagittalFlat5v11SUp\"] = \"\\uE34B\";\n    Glyphs[\"accSagittalFlat5v13LDown\"] = \"\\uE3DD\";\n    Glyphs[\"accSagittalFlat5v13MDown\"] = \"\\uE3D1\";\n    Glyphs[\"accSagittalFlat5v19CDown\"] = \"\\uE37F\";\n    Glyphs[\"accSagittalFlat5v19CUp\"] = \"\\uE379\";\n    Glyphs[\"accSagittalFlat5v23SDown\"] = \"\\uE381\";\n    Glyphs[\"accSagittalFlat5v23SUp\"] = \"\\uE377\";\n    Glyphs[\"accSagittalFlat5v49MDown\"] = \"\\uE3D7\";\n    Glyphs[\"accSagittalFlat5v7kDown\"] = \"\\uE31D\";\n    Glyphs[\"accSagittalFlat5v7kUp\"] = \"\\uE317\";\n    Glyphs[\"accSagittalFlat7CDown\"] = \"\\uE321\";\n    Glyphs[\"accSagittalFlat7CUp\"] = \"\\uE313\";\n    Glyphs[\"accSagittalFlat7v11CDown\"] = \"\\uE35B\";\n    Glyphs[\"accSagittalFlat7v11CUp\"] = \"\\uE34D\";\n    Glyphs[\"accSagittalFlat7v11kDown\"] = \"\\uE355\";\n    Glyphs[\"accSagittalFlat7v11kUp\"] = \"\\uE353\";\n    Glyphs[\"accSagittalFlat7v19CDown\"] = \"\\uE3CB\";\n    Glyphs[\"accSagittalFlat7v19CUp\"] = \"\\uE3B5\";\n    Glyphs[\"accSagittalFractionalTinaDown\"] = \"\\uE40B\";\n    Glyphs[\"accSagittalFractionalTinaUp\"] = \"\\uE40A\";\n    Glyphs[\"accSagittalGrave\"] = \"\\uE3F3\";\n    Glyphs[\"accSagittalShaftDown\"] = \"\\uE3F1\";\n    Glyphs[\"accSagittalShaftUp\"] = \"\\uE3F0\";\n    Glyphs[\"accSagittalSharp\"] = \"\\uE318\";\n    Glyphs[\"accSagittalSharp11LUp\"] = \"\\uE328\";\n    Glyphs[\"accSagittalSharp11MUp\"] = \"\\uE326\";\n    Glyphs[\"accSagittalSharp11v19LUp\"] = \"\\uE3DA\";\n    Glyphs[\"accSagittalSharp11v19MUp\"] = \"\\uE3D2\";\n    Glyphs[\"accSagittalSharp11v49CDown\"] = \"\\uE3B8\";\n    Glyphs[\"accSagittalSharp11v49CUp\"] = \"\\uE3C6\";\n    Glyphs[\"accSagittalSharp143CDown\"] = \"\\uE3BA\";\n    Glyphs[\"accSagittalSharp143CUp\"] = \"\\uE3C4\";\n    Glyphs[\"accSagittalSharp17CDown\"] = \"\\uE350\";\n    Glyphs[\"accSagittalSharp17CUp\"] = \"\\uE356\";\n    Glyphs[\"accSagittalSharp17kDown\"] = \"\\uE3BC\";\n    Glyphs[\"accSagittalSharp17kUp\"] = \"\\uE3C2\";\n    Glyphs[\"accSagittalSharp19CDown\"] = \"\\uE3B6\";\n    Glyphs[\"accSagittalSharp19CUp\"] = \"\\uE3C8\";\n    Glyphs[\"accSagittalSharp19sDown\"] = \"\\uE3BE\";\n    Glyphs[\"accSagittalSharp19sUp\"] = \"\\uE3C0\";\n    Glyphs[\"accSagittalSharp23CDown\"] = \"\\uE37A\";\n    Glyphs[\"accSagittalSharp23CUp\"] = \"\\uE37C\";\n    Glyphs[\"accSagittalSharp23SDown\"] = \"\\uE3B0\";\n    Glyphs[\"accSagittalSharp23SUp\"] = \"\\uE3CE\";\n    Glyphs[\"accSagittalSharp25SDown\"] = \"\\uE310\";\n    Glyphs[\"accSagittalSharp25SUp\"] = \"\\uE322\";\n    Glyphs[\"accSagittalSharp35LUp\"] = \"\\uE32A\";\n    Glyphs[\"accSagittalSharp35MUp\"] = \"\\uE324\";\n    Glyphs[\"accSagittalSharp49LUp\"] = \"\\uE3D8\";\n    Glyphs[\"accSagittalSharp49MUp\"] = \"\\uE3D4\";\n    Glyphs[\"accSagittalSharp49SDown\"] = \"\\uE3B2\";\n    Glyphs[\"accSagittalSharp49SUp\"] = \"\\uE3CC\";\n    Glyphs[\"accSagittalSharp55CDown\"] = \"\\uE34E\";\n    Glyphs[\"accSagittalSharp55CUp\"] = \"\\uE358\";\n    Glyphs[\"accSagittalSharp5CDown\"] = \"\\uE314\";\n    Glyphs[\"accSagittalSharp5CUp\"] = \"\\uE31E\";\n    Glyphs[\"accSagittalSharp5v11SDown\"] = \"\\uE34A\";\n    Glyphs[\"accSagittalSharp5v11SUp\"] = \"\\uE35C\";\n    Glyphs[\"accSagittalSharp5v13LUp\"] = \"\\uE3DC\";\n    Glyphs[\"accSagittalSharp5v13MUp\"] = \"\\uE3D0\";\n    Glyphs[\"accSagittalSharp5v19CDown\"] = \"\\uE378\";\n    Glyphs[\"accSagittalSharp5v19CUp\"] = \"\\uE37E\";\n    Glyphs[\"accSagittalSharp5v23SDown\"] = \"\\uE376\";\n    Glyphs[\"accSagittalSharp5v23SUp\"] = \"\\uE380\";\n    Glyphs[\"accSagittalSharp5v49MUp\"] = \"\\uE3D6\";\n    Glyphs[\"accSagittalSharp5v7kDown\"] = \"\\uE316\";\n    Glyphs[\"accSagittalSharp5v7kUp\"] = \"\\uE31C\";\n    Glyphs[\"accSagittalSharp7CDown\"] = \"\\uE312\";\n    Glyphs[\"accSagittalSharp7CUp\"] = \"\\uE320\";\n    Glyphs[\"accSagittalSharp7v11CDown\"] = \"\\uE34C\";\n    Glyphs[\"accSagittalSharp7v11CUp\"] = \"\\uE35A\";\n    Glyphs[\"accSagittalSharp7v11kDown\"] = \"\\uE352\";\n    Glyphs[\"accSagittalSharp7v11kUp\"] = \"\\uE354\";\n    Glyphs[\"accSagittalSharp7v19CDown\"] = \"\\uE3B4\";\n    Glyphs[\"accSagittalSharp7v19CUp\"] = \"\\uE3CA\";\n    Glyphs[\"accSagittalUnused1\"] = \"\\uE31A\";\n    Glyphs[\"accSagittalUnused2\"] = \"\\uE31B\";\n    Glyphs[\"accSagittalUnused3\"] = \"\\uE3DE\";\n    Glyphs[\"accSagittalUnused4\"] = \"\\uE3DF\";\n    Glyphs[\"accdnCombDot\"] = \"\\uE8CA\";\n    Glyphs[\"accdnCombLH2RanksEmpty\"] = \"\\uE8C8\";\n    Glyphs[\"accdnCombLH3RanksEmptySquare\"] = \"\\uE8C9\";\n    Glyphs[\"accdnCombRH3RanksEmpty\"] = \"\\uE8C6\";\n    Glyphs[\"accdnCombRH4RanksEmpty\"] = \"\\uE8C7\";\n    Glyphs[\"accdnDiatonicClef\"] = \"\\uE079\";\n    Glyphs[\"accdnLH2Ranks16Round\"] = \"\\uE8BC\";\n    Glyphs[\"accdnLH2Ranks8Plus16Round\"] = \"\\uE8BD\";\n    Glyphs[\"accdnLH2Ranks8Round\"] = \"\\uE8BB\";\n    Glyphs[\"accdnLH2RanksFullMasterRound\"] = \"\\uE8C0\";\n    Glyphs[\"accdnLH2RanksMasterPlus16Round\"] = \"\\uE8BF\";\n    Glyphs[\"accdnLH2RanksMasterRound\"] = \"\\uE8BE\";\n    Glyphs[\"accdnLH3Ranks2Plus8Square\"] = \"\\uE8C4\";\n    Glyphs[\"accdnLH3Ranks2Square\"] = \"\\uE8C2\";\n    Glyphs[\"accdnLH3Ranks8Square\"] = \"\\uE8C1\";\n    Glyphs[\"accdnLH3RanksDouble8Square\"] = \"\\uE8C3\";\n    Glyphs[\"accdnLH3RanksTuttiSquare\"] = \"\\uE8C5\";\n    Glyphs[\"accdnPull\"] = \"\\uE8CC\";\n    Glyphs[\"accdnPush\"] = \"\\uE8CB\";\n    Glyphs[\"accdnRH3RanksAccordion\"] = \"\\uE8AC\";\n    Glyphs[\"accdnRH3RanksAuthenticMusette\"] = \"\\uE8A8\";\n    Glyphs[\"accdnRH3RanksBandoneon\"] = \"\\uE8AB\";\n    Glyphs[\"accdnRH3RanksBassoon\"] = \"\\uE8A4\";\n    Glyphs[\"accdnRH3RanksClarinet\"] = \"\\uE8A1\";\n    Glyphs[\"accdnRH3RanksDoubleTremoloLower8ve\"] = \"\\uE8B1\";\n    Glyphs[\"accdnRH3RanksDoubleTremoloUpper8ve\"] = \"\\uE8B2\";\n    Glyphs[\"accdnRH3RanksFullFactory\"] = \"\\uE8B3\";\n    Glyphs[\"accdnRH3RanksHarmonium\"] = \"\\uE8AA\";\n    Glyphs[\"accdnRH3RanksImitationMusette\"] = \"\\uE8A7\";\n    Glyphs[\"accdnRH3RanksLowerTremolo8\"] = \"\\uE8A3\";\n    Glyphs[\"accdnRH3RanksMaster\"] = \"\\uE8AD\";\n    Glyphs[\"accdnRH3RanksOboe\"] = \"\\uE8A5\";\n    Glyphs[\"accdnRH3RanksOrgan\"] = \"\\uE8A9\";\n    Glyphs[\"accdnRH3RanksPiccolo\"] = \"\\uE8A0\";\n    Glyphs[\"accdnRH3RanksTremoloLower8ve\"] = \"\\uE8AF\";\n    Glyphs[\"accdnRH3RanksTremoloUpper8ve\"] = \"\\uE8B0\";\n    Glyphs[\"accdnRH3RanksTwoChoirs\"] = \"\\uE8AE\";\n    Glyphs[\"accdnRH3RanksUpperTremolo8\"] = \"\\uE8A2\";\n    Glyphs[\"accdnRH3RanksViolin\"] = \"\\uE8A6\";\n    Glyphs[\"accdnRH4RanksAlto\"] = \"\\uE8B5\";\n    Glyphs[\"accdnRH4RanksBassAlto\"] = \"\\uE8BA\";\n    Glyphs[\"accdnRH4RanksMaster\"] = \"\\uE8B7\";\n    Glyphs[\"accdnRH4RanksSoftBass\"] = \"\\uE8B8\";\n    Glyphs[\"accdnRH4RanksSoftTenor\"] = \"\\uE8B9\";\n    Glyphs[\"accdnRH4RanksSoprano\"] = \"\\uE8B4\";\n    Glyphs[\"accdnRH4RanksTenor\"] = \"\\uE8B6\";\n    Glyphs[\"accdnRicochet2\"] = \"\\uE8CD\";\n    Glyphs[\"accdnRicochet3\"] = \"\\uE8CE\";\n    Glyphs[\"accdnRicochet4\"] = \"\\uE8CF\";\n    Glyphs[\"accdnRicochet5\"] = \"\\uE8D0\";\n    Glyphs[\"accdnRicochet6\"] = \"\\uE8D1\";\n    Glyphs[\"accdnRicochetStem2\"] = \"\\uE8D2\";\n    Glyphs[\"accdnRicochetStem3\"] = \"\\uE8D3\";\n    Glyphs[\"accdnRicochetStem4\"] = \"\\uE8D4\";\n    Glyphs[\"accdnRicochetStem5\"] = \"\\uE8D5\";\n    Glyphs[\"accdnRicochetStem6\"] = \"\\uE8D6\";\n    Glyphs[\"accidental1CommaFlat\"] = \"\\uE454\";\n    Glyphs[\"accidental1CommaSharp\"] = \"\\uE450\";\n    Glyphs[\"accidental2CommaFlat\"] = \"\\uE455\";\n    Glyphs[\"accidental2CommaSharp\"] = \"\\uE451\";\n    Glyphs[\"accidental3CommaFlat\"] = \"\\uE456\";\n    Glyphs[\"accidental3CommaSharp\"] = \"\\uE452\";\n    Glyphs[\"accidental4CommaFlat\"] = \"\\uE457\";\n    Glyphs[\"accidental5CommaSharp\"] = \"\\uE453\";\n    Glyphs[\"accidentalArrowDown\"] = \"\\uE27B\";\n    Glyphs[\"accidentalArrowUp\"] = \"\\uE27A\";\n    Glyphs[\"accidentalBakiyeFlat\"] = \"\\uE442\";\n    Glyphs[\"accidentalBakiyeSharp\"] = \"\\uE445\";\n    Glyphs[\"accidentalBracketLeft\"] = \"\\uE26C\";\n    Glyphs[\"accidentalBracketRight\"] = \"\\uE26D\";\n    Glyphs[\"accidentalBuyukMucennebFlat\"] = \"\\uE440\";\n    Glyphs[\"accidentalBuyukMucennebSharp\"] = \"\\uE447\";\n    Glyphs[\"accidentalCombiningCloseCurlyBrace\"] = \"\\uE2EF\";\n    Glyphs[\"accidentalCombiningLower17Schisma\"] = \"\\uE2E6\";\n    Glyphs[\"accidentalCombiningLower19Schisma\"] = \"\\uE2E8\";\n    Glyphs[\"accidentalCombiningLower23Limit29LimitComma\"] = \"\\uE2EA\";\n    Glyphs[\"accidentalCombiningLower29LimitComma\"] = \"\\uEE50\";\n    Glyphs[\"accidentalCombiningLower31Schisma\"] = \"\\uE2EC\";\n    Glyphs[\"accidentalCombiningLower37Quartertone\"] = \"\\uEE52\";\n    Glyphs[\"accidentalCombiningLower41Comma\"] = \"\\uEE54\";\n    Glyphs[\"accidentalCombiningLower43Comma\"] = \"\\uEE56\";\n    Glyphs[\"accidentalCombiningLower47Quartertone\"] = \"\\uEE58\";\n    Glyphs[\"accidentalCombiningLower53LimitComma\"] = \"\\uE2F7\";\n    Glyphs[\"accidentalCombiningOpenCurlyBrace\"] = \"\\uE2EE\";\n    Glyphs[\"accidentalCombiningRaise17Schisma\"] = \"\\uE2E7\";\n    Glyphs[\"accidentalCombiningRaise19Schisma\"] = \"\\uE2E9\";\n    Glyphs[\"accidentalCombiningRaise23Limit29LimitComma\"] = \"\\uE2EB\";\n    Glyphs[\"accidentalCombiningRaise29LimitComma\"] = \"\\uEE51\";\n    Glyphs[\"accidentalCombiningRaise31Schisma\"] = \"\\uE2ED\";\n    Glyphs[\"accidentalCombiningRaise37Quartertone\"] = \"\\uEE53\";\n    Glyphs[\"accidentalCombiningRaise41Comma\"] = \"\\uEE55\";\n    Glyphs[\"accidentalCombiningRaise43Comma\"] = \"\\uEE57\";\n    Glyphs[\"accidentalCombiningRaise47Quartertone\"] = \"\\uEE59\";\n    Glyphs[\"accidentalCombiningRaise53LimitComma\"] = \"\\uE2F8\";\n    Glyphs[\"accidentalCommaSlashDown\"] = \"\\uE47A\";\n    Glyphs[\"accidentalCommaSlashUp\"] = \"\\uE479\";\n    Glyphs[\"accidentalDoubleFlat\"] = \"\\uE264\";\n    Glyphs[\"accidentalDoubleFlatArabic\"] = \"\\uED30\";\n    Glyphs[\"accidentalDoubleFlatEqualTempered\"] = \"\\uE2F0\";\n    Glyphs[\"accidentalDoubleFlatOneArrowDown\"] = \"\\uE2C0\";\n    Glyphs[\"accidentalDoubleFlatOneArrowUp\"] = \"\\uE2C5\";\n    Glyphs[\"accidentalDoubleFlatReversed\"] = \"\\uE483\";\n    Glyphs[\"accidentalDoubleFlatThreeArrowsDown\"] = \"\\uE2D4\";\n    Glyphs[\"accidentalDoubleFlatThreeArrowsUp\"] = \"\\uE2D9\";\n    Glyphs[\"accidentalDoubleFlatTurned\"] = \"\\uE485\";\n    Glyphs[\"accidentalDoubleFlatTwoArrowsDown\"] = \"\\uE2CA\";\n    Glyphs[\"accidentalDoubleFlatTwoArrowsUp\"] = \"\\uE2CF\";\n    Glyphs[\"accidentalDoubleSharp\"] = \"\\uE263\";\n    Glyphs[\"accidentalDoubleSharpArabic\"] = \"\\uED38\";\n    Glyphs[\"accidentalDoubleSharpEqualTempered\"] = \"\\uE2F4\";\n    Glyphs[\"accidentalDoubleSharpOneArrowDown\"] = \"\\uE2C4\";\n    Glyphs[\"accidentalDoubleSharpOneArrowUp\"] = \"\\uE2C9\";\n    Glyphs[\"accidentalDoubleSharpThreeArrowsDown\"] = \"\\uE2D8\";\n    Glyphs[\"accidentalDoubleSharpThreeArrowsUp\"] = \"\\uE2DD\";\n    Glyphs[\"accidentalDoubleSharpTwoArrowsDown\"] = \"\\uE2CE\";\n    Glyphs[\"accidentalDoubleSharpTwoArrowsUp\"] = \"\\uE2D3\";\n    Glyphs[\"accidentalEnharmonicAlmostEqualTo\"] = \"\\uE2FA\";\n    Glyphs[\"accidentalEnharmonicEquals\"] = \"\\uE2FB\";\n    Glyphs[\"accidentalEnharmonicTilde\"] = \"\\uE2F9\";\n    Glyphs[\"accidentalFilledReversedFlatAndFlat\"] = \"\\uE296\";\n    Glyphs[\"accidentalFilledReversedFlatAndFlatArrowDown\"] = \"\\uE298\";\n    Glyphs[\"accidentalFilledReversedFlatAndFlatArrowUp\"] = \"\\uE297\";\n    Glyphs[\"accidentalFilledReversedFlatArrowDown\"] = \"\\uE293\";\n    Glyphs[\"accidentalFilledReversedFlatArrowUp\"] = \"\\uE292\";\n    Glyphs[\"accidentalFiveQuarterTonesFlatArrowDown\"] = \"\\uE279\";\n    Glyphs[\"accidentalFiveQuarterTonesSharpArrowUp\"] = \"\\uE276\";\n    Glyphs[\"accidentalFlat\"] = \"\\uE260\";\n    Glyphs[\"accidentalFlatArabic\"] = \"\\uED32\";\n    Glyphs[\"accidentalFlatEqualTempered\"] = \"\\uE2F1\";\n    Glyphs[\"accidentalFlatLoweredStockhausen\"] = \"\\uED53\";\n    Glyphs[\"accidentalFlatOneArrowDown\"] = \"\\uE2C1\";\n    Glyphs[\"accidentalFlatOneArrowUp\"] = \"\\uE2C6\";\n    Glyphs[\"accidentalFlatRaisedStockhausen\"] = \"\\uED52\";\n    Glyphs[\"accidentalFlatRepeatedLineStockhausen\"] = \"\\uED5C\";\n    Glyphs[\"accidentalFlatRepeatedSpaceStockhausen\"] = \"\\uED5B\";\n    Glyphs[\"accidentalFlatThreeArrowsDown\"] = \"\\uE2D5\";\n    Glyphs[\"accidentalFlatThreeArrowsUp\"] = \"\\uE2DA\";\n    Glyphs[\"accidentalFlatTurned\"] = \"\\uE484\";\n    Glyphs[\"accidentalFlatTwoArrowsDown\"] = \"\\uE2CB\";\n    Glyphs[\"accidentalFlatTwoArrowsUp\"] = \"\\uE2D0\";\n    Glyphs[\"accidentalHabaFlatQuarterToneHigher\"] = \"\\uEE65\";\n    Glyphs[\"accidentalHabaFlatThreeQuarterTonesLower\"] = \"\\uEE69\";\n    Glyphs[\"accidentalHabaQuarterToneHigher\"] = \"\\uEE64\";\n    Glyphs[\"accidentalHabaQuarterToneLower\"] = \"\\uEE67\";\n    Glyphs[\"accidentalHabaSharpQuarterToneLower\"] = \"\\uEE68\";\n    Glyphs[\"accidentalHabaSharpThreeQuarterTonesHigher\"] = \"\\uEE66\";\n    Glyphs[\"accidentalHalfSharpArrowDown\"] = \"\\uE29A\";\n    Glyphs[\"accidentalHalfSharpArrowUp\"] = \"\\uE299\";\n    Glyphs[\"accidentalJohnston13\"] = \"\\uE2B6\";\n    Glyphs[\"accidentalJohnston31\"] = \"\\uE2B7\";\n    Glyphs[\"accidentalJohnstonDown\"] = \"\\uE2B5\";\n    Glyphs[\"accidentalJohnstonEl\"] = \"\\uE2B2\";\n    Glyphs[\"accidentalJohnstonMinus\"] = \"\\uE2B1\";\n    Glyphs[\"accidentalJohnstonPlus\"] = \"\\uE2B0\";\n    Glyphs[\"accidentalJohnstonSeven\"] = \"\\uE2B3\";\n    Glyphs[\"accidentalJohnstonUp\"] = \"\\uE2B4\";\n    Glyphs[\"accidentalKomaFlat\"] = \"\\uE443\";\n    Glyphs[\"accidentalKomaSharp\"] = \"\\uE444\";\n    Glyphs[\"accidentalKoron\"] = \"\\uE460\";\n    Glyphs[\"accidentalKucukMucennebFlat\"] = \"\\uE441\";\n    Glyphs[\"accidentalKucukMucennebSharp\"] = \"\\uE446\";\n    Glyphs[\"accidentalLargeDoubleSharp\"] = \"\\uE47D\";\n    Glyphs[\"accidentalLowerOneSeptimalComma\"] = \"\\uE2DE\";\n    Glyphs[\"accidentalLowerOneTridecimalQuartertone\"] = \"\\uE2E4\";\n    Glyphs[\"accidentalLowerOneUndecimalQuartertone\"] = \"\\uE2E2\";\n    Glyphs[\"accidentalLowerTwoSeptimalCommas\"] = \"\\uE2E0\";\n    Glyphs[\"accidentalLoweredStockhausen\"] = \"\\uED51\";\n    Glyphs[\"accidentalNarrowReversedFlat\"] = \"\\uE284\";\n    Glyphs[\"accidentalNarrowReversedFlatAndFlat\"] = \"\\uE285\";\n    Glyphs[\"accidentalNatural\"] = \"\\uE261\";\n    Glyphs[\"accidentalNaturalArabic\"] = \"\\uED34\";\n    Glyphs[\"accidentalNaturalEqualTempered\"] = \"\\uE2F2\";\n    Glyphs[\"accidentalNaturalFlat\"] = \"\\uE267\";\n    Glyphs[\"accidentalNaturalLoweredStockhausen\"] = \"\\uED55\";\n    Glyphs[\"accidentalNaturalOneArrowDown\"] = \"\\uE2C2\";\n    Glyphs[\"accidentalNaturalOneArrowUp\"] = \"\\uE2C7\";\n    Glyphs[\"accidentalNaturalRaisedStockhausen\"] = \"\\uED54\";\n    Glyphs[\"accidentalNaturalReversed\"] = \"\\uE482\";\n    Glyphs[\"accidentalNaturalSharp\"] = \"\\uE268\";\n    Glyphs[\"accidentalNaturalThreeArrowsDown\"] = \"\\uE2D6\";\n    Glyphs[\"accidentalNaturalThreeArrowsUp\"] = \"\\uE2DB\";\n    Glyphs[\"accidentalNaturalTwoArrowsDown\"] = \"\\uE2CC\";\n    Glyphs[\"accidentalNaturalTwoArrowsUp\"] = \"\\uE2D1\";\n    Glyphs[\"accidentalOneAndAHalfSharpsArrowDown\"] = \"\\uE29C\";\n    Glyphs[\"accidentalOneAndAHalfSharpsArrowUp\"] = \"\\uE29B\";\n    Glyphs[\"accidentalOneQuarterToneFlatFerneyhough\"] = \"\\uE48F\";\n    Glyphs[\"accidentalOneQuarterToneFlatStockhausen\"] = \"\\uED59\";\n    Glyphs[\"accidentalOneQuarterToneSharpFerneyhough\"] = \"\\uE48E\";\n    Glyphs[\"accidentalOneQuarterToneSharpStockhausen\"] = \"\\uED58\";\n    Glyphs[\"accidentalOneThirdToneFlatFerneyhough\"] = \"\\uE48B\";\n    Glyphs[\"accidentalOneThirdToneSharpFerneyhough\"] = \"\\uE48A\";\n    Glyphs[\"accidentalParensLeft\"] = \"\\uE26A\";\n    Glyphs[\"accidentalParensRight\"] = \"\\uE26B\";\n    Glyphs[\"accidentalQuarterFlatEqualTempered\"] = \"\\uE2F5\";\n    Glyphs[\"accidentalQuarterSharpEqualTempered\"] = \"\\uE2F6\";\n    Glyphs[\"accidentalQuarterToneFlat4\"] = \"\\uE47F\";\n    Glyphs[\"accidentalQuarterToneFlatArabic\"] = \"\\uED33\";\n    Glyphs[\"accidentalQuarterToneFlatArrowUp\"] = \"\\uE270\";\n    Glyphs[\"accidentalQuarterToneFlatFilledReversed\"] = \"\\uE480\";\n    Glyphs[\"accidentalQuarterToneFlatNaturalArrowDown\"] = \"\\uE273\";\n    Glyphs[\"accidentalQuarterToneFlatPenderecki\"] = \"\\uE478\";\n    Glyphs[\"accidentalQuarterToneFlatStein\"] = \"\\uE280\";\n    Glyphs[\"accidentalQuarterToneFlatVanBlankenburg\"] = \"\\uE488\";\n    Glyphs[\"accidentalQuarterToneSharp4\"] = \"\\uE47E\";\n    Glyphs[\"accidentalQuarterToneSharpArabic\"] = \"\\uED35\";\n    Glyphs[\"accidentalQuarterToneSharpArrowDown\"] = \"\\uE275\";\n    Glyphs[\"accidentalQuarterToneSharpBusotti\"] = \"\\uE472\";\n    Glyphs[\"accidentalQuarterToneSharpNaturalArrowUp\"] = \"\\uE272\";\n    Glyphs[\"accidentalQuarterToneSharpStein\"] = \"\\uE282\";\n    Glyphs[\"accidentalQuarterToneSharpWiggle\"] = \"\\uE475\";\n    Glyphs[\"accidentalRaiseOneSeptimalComma\"] = \"\\uE2DF\";\n    Glyphs[\"accidentalRaiseOneTridecimalQuartertone\"] = \"\\uE2E5\";\n    Glyphs[\"accidentalRaiseOneUndecimalQuartertone\"] = \"\\uE2E3\";\n    Glyphs[\"accidentalRaiseTwoSeptimalCommas\"] = \"\\uE2E1\";\n    Glyphs[\"accidentalRaisedStockhausen\"] = \"\\uED50\";\n    Glyphs[\"accidentalReversedFlatAndFlatArrowDown\"] = \"\\uE295\";\n    Glyphs[\"accidentalReversedFlatAndFlatArrowUp\"] = \"\\uE294\";\n    Glyphs[\"accidentalReversedFlatArrowDown\"] = \"\\uE291\";\n    Glyphs[\"accidentalReversedFlatArrowUp\"] = \"\\uE290\";\n    Glyphs[\"accidentalSharp\"] = \"\\uE262\";\n    Glyphs[\"accidentalSharpArabic\"] = \"\\uED36\";\n    Glyphs[\"accidentalSharpEqualTempered\"] = \"\\uE2F3\";\n    Glyphs[\"accidentalSharpLoweredStockhausen\"] = \"\\uED57\";\n    Glyphs[\"accidentalSharpOneArrowDown\"] = \"\\uE2C3\";\n    Glyphs[\"accidentalSharpOneArrowUp\"] = \"\\uE2C8\";\n    Glyphs[\"accidentalSharpOneHorizontalStroke\"] = \"\\uE473\";\n    Glyphs[\"accidentalSharpRaisedStockhausen\"] = \"\\uED56\";\n    Glyphs[\"accidentalSharpRepeatedLineStockhausen\"] = \"\\uED5E\";\n    Glyphs[\"accidentalSharpRepeatedSpaceStockhausen\"] = \"\\uED5D\";\n    Glyphs[\"accidentalSharpReversed\"] = \"\\uE481\";\n    Glyphs[\"accidentalSharpSharp\"] = \"\\uE269\";\n    Glyphs[\"accidentalSharpThreeArrowsDown\"] = \"\\uE2D7\";\n    Glyphs[\"accidentalSharpThreeArrowsUp\"] = \"\\uE2DC\";\n    Glyphs[\"accidentalSharpTwoArrowsDown\"] = \"\\uE2CD\";\n    Glyphs[\"accidentalSharpTwoArrowsUp\"] = \"\\uE2D2\";\n    Glyphs[\"accidentalSims12Down\"] = \"\\uE2A0\";\n    Glyphs[\"accidentalSims12Up\"] = \"\\uE2A3\";\n    Glyphs[\"accidentalSims4Down\"] = \"\\uE2A2\";\n    Glyphs[\"accidentalSims4Up\"] = \"\\uE2A5\";\n    Glyphs[\"accidentalSims6Down\"] = \"\\uE2A1\";\n    Glyphs[\"accidentalSims6Up\"] = \"\\uE2A4\";\n    Glyphs[\"accidentalSori\"] = \"\\uE461\";\n    Glyphs[\"accidentalTavenerFlat\"] = \"\\uE477\";\n    Glyphs[\"accidentalTavenerSharp\"] = \"\\uE476\";\n    Glyphs[\"accidentalThreeQuarterTonesFlatArabic\"] = \"\\uED31\";\n    Glyphs[\"accidentalThreeQuarterTonesFlatArrowDown\"] = \"\\uE271\";\n    Glyphs[\"accidentalThreeQuarterTonesFlatArrowUp\"] = \"\\uE278\";\n    Glyphs[\"accidentalThreeQuarterTonesFlatCouper\"] = \"\\uE489\";\n    Glyphs[\"accidentalThreeQuarterTonesFlatGrisey\"] = \"\\uE486\";\n    Glyphs[\"accidentalThreeQuarterTonesFlatTartini\"] = \"\\uE487\";\n    Glyphs[\"accidentalThreeQuarterTonesFlatZimmermann\"] = \"\\uE281\";\n    Glyphs[\"accidentalThreeQuarterTonesSharpArabic\"] = \"\\uED37\";\n    Glyphs[\"accidentalThreeQuarterTonesSharpArrowDown\"] = \"\\uE277\";\n    Glyphs[\"accidentalThreeQuarterTonesSharpArrowUp\"] = \"\\uE274\";\n    Glyphs[\"accidentalThreeQuarterTonesSharpBusotti\"] = \"\\uE474\";\n    Glyphs[\"accidentalThreeQuarterTonesSharpStein\"] = \"\\uE283\";\n    Glyphs[\"accidentalThreeQuarterTonesSharpStockhausen\"] = \"\\uED5A\";\n    Glyphs[\"accidentalTripleFlat\"] = \"\\uE266\";\n    Glyphs[\"accidentalTripleSharp\"] = \"\\uE265\";\n    Glyphs[\"accidentalTwoThirdTonesFlatFerneyhough\"] = \"\\uE48D\";\n    Glyphs[\"accidentalTwoThirdTonesSharpFerneyhough\"] = \"\\uE48C\";\n    Glyphs[\"accidentalUpsAndDownsDown\"] = \"\\uEE61\";\n    Glyphs[\"accidentalUpsAndDownsLess\"] = \"\\uEE63\";\n    Glyphs[\"accidentalUpsAndDownsMore\"] = \"\\uEE62\";\n    Glyphs[\"accidentalUpsAndDownsUp\"] = \"\\uEE60\";\n    Glyphs[\"accidentalWilsonMinus\"] = \"\\uE47C\";\n    Glyphs[\"accidentalWilsonPlus\"] = \"\\uE47B\";\n    Glyphs[\"accidentalWyschnegradsky10TwelfthsFlat\"] = \"\\uE434\";\n    Glyphs[\"accidentalWyschnegradsky10TwelfthsSharp\"] = \"\\uE429\";\n    Glyphs[\"accidentalWyschnegradsky11TwelfthsFlat\"] = \"\\uE435\";\n    Glyphs[\"accidentalWyschnegradsky11TwelfthsSharp\"] = \"\\uE42A\";\n    Glyphs[\"accidentalWyschnegradsky1TwelfthsFlat\"] = \"\\uE42B\";\n    Glyphs[\"accidentalWyschnegradsky1TwelfthsSharp\"] = \"\\uE420\";\n    Glyphs[\"accidentalWyschnegradsky2TwelfthsFlat\"] = \"\\uE42C\";\n    Glyphs[\"accidentalWyschnegradsky2TwelfthsSharp\"] = \"\\uE421\";\n    Glyphs[\"accidentalWyschnegradsky3TwelfthsFlat\"] = \"\\uE42D\";\n    Glyphs[\"accidentalWyschnegradsky3TwelfthsSharp\"] = \"\\uE422\";\n    Glyphs[\"accidentalWyschnegradsky4TwelfthsFlat\"] = \"\\uE42E\";\n    Glyphs[\"accidentalWyschnegradsky4TwelfthsSharp\"] = \"\\uE423\";\n    Glyphs[\"accidentalWyschnegradsky5TwelfthsFlat\"] = \"\\uE42F\";\n    Glyphs[\"accidentalWyschnegradsky5TwelfthsSharp\"] = \"\\uE424\";\n    Glyphs[\"accidentalWyschnegradsky6TwelfthsFlat\"] = \"\\uE430\";\n    Glyphs[\"accidentalWyschnegradsky6TwelfthsSharp\"] = \"\\uE425\";\n    Glyphs[\"accidentalWyschnegradsky7TwelfthsFlat\"] = \"\\uE431\";\n    Glyphs[\"accidentalWyschnegradsky7TwelfthsSharp\"] = \"\\uE426\";\n    Glyphs[\"accidentalWyschnegradsky8TwelfthsFlat\"] = \"\\uE432\";\n    Glyphs[\"accidentalWyschnegradsky8TwelfthsSharp\"] = \"\\uE427\";\n    Glyphs[\"accidentalWyschnegradsky9TwelfthsFlat\"] = \"\\uE433\";\n    Glyphs[\"accidentalWyschnegradsky9TwelfthsSharp\"] = \"\\uE428\";\n    Glyphs[\"accidentalXenakisOneThirdToneSharp\"] = \"\\uE470\";\n    Glyphs[\"accidentalXenakisTwoThirdTonesSharp\"] = \"\\uE471\";\n    Glyphs[\"analyticsChoralmelodie\"] = \"\\uE86A\";\n    Glyphs[\"analyticsEndStimme\"] = \"\\uE863\";\n    Glyphs[\"analyticsHauptrhythmus\"] = \"\\uE86B\";\n    Glyphs[\"analyticsHauptstimme\"] = \"\\uE860\";\n    Glyphs[\"analyticsInversion1\"] = \"\\uE869\";\n    Glyphs[\"analyticsNebenstimme\"] = \"\\uE861\";\n    Glyphs[\"analyticsStartStimme\"] = \"\\uE862\";\n    Glyphs[\"analyticsTheme\"] = \"\\uE864\";\n    Glyphs[\"analyticsTheme1\"] = \"\\uE868\";\n    Glyphs[\"analyticsThemeInversion\"] = \"\\uE867\";\n    Glyphs[\"analyticsThemeRetrograde\"] = \"\\uE865\";\n    Glyphs[\"analyticsThemeRetrogradeInversion\"] = \"\\uE866\";\n    Glyphs[\"arpeggiato\"] = \"\\uE63C\";\n    Glyphs[\"arpeggiatoDown\"] = \"\\uE635\";\n    Glyphs[\"arpeggiatoUp\"] = \"\\uE634\";\n    Glyphs[\"arrowBlackDown\"] = \"\\uEB64\";\n    Glyphs[\"arrowBlackDownLeft\"] = \"\\uEB65\";\n    Glyphs[\"arrowBlackDownRight\"] = \"\\uEB63\";\n    Glyphs[\"arrowBlackLeft\"] = \"\\uEB66\";\n    Glyphs[\"arrowBlackRight\"] = \"\\uEB62\";\n    Glyphs[\"arrowBlackUp\"] = \"\\uEB60\";\n    Glyphs[\"arrowBlackUpLeft\"] = \"\\uEB67\";\n    Glyphs[\"arrowBlackUpRight\"] = \"\\uEB61\";\n    Glyphs[\"arrowOpenDown\"] = \"\\uEB74\";\n    Glyphs[\"arrowOpenDownLeft\"] = \"\\uEB75\";\n    Glyphs[\"arrowOpenDownRight\"] = \"\\uEB73\";\n    Glyphs[\"arrowOpenLeft\"] = \"\\uEB76\";\n    Glyphs[\"arrowOpenRight\"] = \"\\uEB72\";\n    Glyphs[\"arrowOpenUp\"] = \"\\uEB70\";\n    Glyphs[\"arrowOpenUpLeft\"] = \"\\uEB77\";\n    Glyphs[\"arrowOpenUpRight\"] = \"\\uEB71\";\n    Glyphs[\"arrowWhiteDown\"] = \"\\uEB6C\";\n    Glyphs[\"arrowWhiteDownLeft\"] = \"\\uEB6D\";\n    Glyphs[\"arrowWhiteDownRight\"] = \"\\uEB6B\";\n    Glyphs[\"arrowWhiteLeft\"] = \"\\uEB6E\";\n    Glyphs[\"arrowWhiteRight\"] = \"\\uEB6A\";\n    Glyphs[\"arrowWhiteUp\"] = \"\\uEB68\";\n    Glyphs[\"arrowWhiteUpLeft\"] = \"\\uEB6F\";\n    Glyphs[\"arrowWhiteUpRight\"] = \"\\uEB69\";\n    Glyphs[\"arrowheadBlackDown\"] = \"\\uEB7C\";\n    Glyphs[\"arrowheadBlackDownLeft\"] = \"\\uEB7D\";\n    Glyphs[\"arrowheadBlackDownRight\"] = \"\\uEB7B\";\n    Glyphs[\"arrowheadBlackLeft\"] = \"\\uEB7E\";\n    Glyphs[\"arrowheadBlackRight\"] = \"\\uEB7A\";\n    Glyphs[\"arrowheadBlackUp\"] = \"\\uEB78\";\n    Glyphs[\"arrowheadBlackUpLeft\"] = \"\\uEB7F\";\n    Glyphs[\"arrowheadBlackUpRight\"] = \"\\uEB79\";\n    Glyphs[\"arrowheadOpenDown\"] = \"\\uEB8C\";\n    Glyphs[\"arrowheadOpenDownLeft\"] = \"\\uEB8D\";\n    Glyphs[\"arrowheadOpenDownRight\"] = \"\\uEB8B\";\n    Glyphs[\"arrowheadOpenLeft\"] = \"\\uEB8E\";\n    Glyphs[\"arrowheadOpenRight\"] = \"\\uEB8A\";\n    Glyphs[\"arrowheadOpenUp\"] = \"\\uEB88\";\n    Glyphs[\"arrowheadOpenUpLeft\"] = \"\\uEB8F\";\n    Glyphs[\"arrowheadOpenUpRight\"] = \"\\uEB89\";\n    Glyphs[\"arrowheadWhiteDown\"] = \"\\uEB84\";\n    Glyphs[\"arrowheadWhiteDownLeft\"] = \"\\uEB85\";\n    Glyphs[\"arrowheadWhiteDownRight\"] = \"\\uEB83\";\n    Glyphs[\"arrowheadWhiteLeft\"] = \"\\uEB86\";\n    Glyphs[\"arrowheadWhiteRight\"] = \"\\uEB82\";\n    Glyphs[\"arrowheadWhiteUp\"] = \"\\uEB80\";\n    Glyphs[\"arrowheadWhiteUpLeft\"] = \"\\uEB87\";\n    Glyphs[\"arrowheadWhiteUpRight\"] = \"\\uEB81\";\n    Glyphs[\"articAccentAbove\"] = \"\\uE4A0\";\n    Glyphs[\"articAccentBelow\"] = \"\\uE4A1\";\n    Glyphs[\"articAccentStaccatoAbove\"] = \"\\uE4B0\";\n    Glyphs[\"articAccentStaccatoBelow\"] = \"\\uE4B1\";\n    Glyphs[\"articLaissezVibrerAbove\"] = \"\\uE4BA\";\n    Glyphs[\"articLaissezVibrerBelow\"] = \"\\uE4BB\";\n    Glyphs[\"articMarcatoAbove\"] = \"\\uE4AC\";\n    Glyphs[\"articMarcatoBelow\"] = \"\\uE4AD\";\n    Glyphs[\"articMarcatoStaccatoAbove\"] = \"\\uE4AE\";\n    Glyphs[\"articMarcatoStaccatoBelow\"] = \"\\uE4AF\";\n    Glyphs[\"articMarcatoTenutoAbove\"] = \"\\uE4BC\";\n    Glyphs[\"articMarcatoTenutoBelow\"] = \"\\uE4BD\";\n    Glyphs[\"articSoftAccentAbove\"] = \"\\uED40\";\n    Glyphs[\"articSoftAccentBelow\"] = \"\\uED41\";\n    Glyphs[\"articSoftAccentStaccatoAbove\"] = \"\\uED42\";\n    Glyphs[\"articSoftAccentStaccatoBelow\"] = \"\\uED43\";\n    Glyphs[\"articSoftAccentTenutoAbove\"] = \"\\uED44\";\n    Glyphs[\"articSoftAccentTenutoBelow\"] = \"\\uED45\";\n    Glyphs[\"articSoftAccentTenutoStaccatoAbove\"] = \"\\uED46\";\n    Glyphs[\"articSoftAccentTenutoStaccatoBelow\"] = \"\\uED47\";\n    Glyphs[\"articStaccatissimoAbove\"] = \"\\uE4A6\";\n    Glyphs[\"articStaccatissimoBelow\"] = \"\\uE4A7\";\n    Glyphs[\"articStaccatissimoStrokeAbove\"] = \"\\uE4AA\";\n    Glyphs[\"articStaccatissimoStrokeBelow\"] = \"\\uE4AB\";\n    Glyphs[\"articStaccatissimoWedgeAbove\"] = \"\\uE4A8\";\n    Glyphs[\"articStaccatissimoWedgeBelow\"] = \"\\uE4A9\";\n    Glyphs[\"articStaccatoAbove\"] = \"\\uE4A2\";\n    Glyphs[\"articStaccatoBelow\"] = \"\\uE4A3\";\n    Glyphs[\"articStressAbove\"] = \"\\uE4B6\";\n    Glyphs[\"articStressBelow\"] = \"\\uE4B7\";\n    Glyphs[\"articTenutoAbove\"] = \"\\uE4A4\";\n    Glyphs[\"articTenutoAccentAbove\"] = \"\\uE4B4\";\n    Glyphs[\"articTenutoAccentBelow\"] = \"\\uE4B5\";\n    Glyphs[\"articTenutoBelow\"] = \"\\uE4A5\";\n    Glyphs[\"articTenutoStaccatoAbove\"] = \"\\uE4B2\";\n    Glyphs[\"articTenutoStaccatoBelow\"] = \"\\uE4B3\";\n    Glyphs[\"articUnstressAbove\"] = \"\\uE4B8\";\n    Glyphs[\"articUnstressBelow\"] = \"\\uE4B9\";\n    Glyphs[\"augmentationDot\"] = \"\\uE1E7\";\n    Glyphs[\"barlineDashed\"] = \"\\uE036\";\n    Glyphs[\"barlineDotted\"] = \"\\uE037\";\n    Glyphs[\"barlineDouble\"] = \"\\uE031\";\n    Glyphs[\"barlineFinal\"] = \"\\uE032\";\n    Glyphs[\"barlineHeavy\"] = \"\\uE034\";\n    Glyphs[\"barlineHeavyHeavy\"] = \"\\uE035\";\n    Glyphs[\"barlineReverseFinal\"] = \"\\uE033\";\n    Glyphs[\"barlineShort\"] = \"\\uE038\";\n    Glyphs[\"barlineSingle\"] = \"\\uE030\";\n    Glyphs[\"barlineTick\"] = \"\\uE039\";\n    Glyphs[\"beamAccelRit1\"] = \"\\uEAF4\";\n    Glyphs[\"beamAccelRit10\"] = \"\\uEAFD\";\n    Glyphs[\"beamAccelRit11\"] = \"\\uEAFE\";\n    Glyphs[\"beamAccelRit12\"] = \"\\uEAFF\";\n    Glyphs[\"beamAccelRit13\"] = \"\\uEB00\";\n    Glyphs[\"beamAccelRit14\"] = \"\\uEB01\";\n    Glyphs[\"beamAccelRit15\"] = \"\\uEB02\";\n    Glyphs[\"beamAccelRit2\"] = \"\\uEAF5\";\n    Glyphs[\"beamAccelRit3\"] = \"\\uEAF6\";\n    Glyphs[\"beamAccelRit4\"] = \"\\uEAF7\";\n    Glyphs[\"beamAccelRit5\"] = \"\\uEAF8\";\n    Glyphs[\"beamAccelRit6\"] = \"\\uEAF9\";\n    Glyphs[\"beamAccelRit7\"] = \"\\uEAFA\";\n    Glyphs[\"beamAccelRit8\"] = \"\\uEAFB\";\n    Glyphs[\"beamAccelRit9\"] = \"\\uEAFC\";\n    Glyphs[\"beamAccelRitFinal\"] = \"\\uEB03\";\n    Glyphs[\"brace\"] = \"\\uE000\";\n    Glyphs[\"bracket\"] = \"\\uE002\";\n    Glyphs[\"bracketBottom\"] = \"\\uE004\";\n    Glyphs[\"bracketTop\"] = \"\\uE003\";\n    Glyphs[\"brassBend\"] = \"\\uE5E3\";\n    Glyphs[\"brassDoitLong\"] = \"\\uE5D6\";\n    Glyphs[\"brassDoitMedium\"] = \"\\uE5D5\";\n    Glyphs[\"brassDoitShort\"] = \"\\uE5D4\";\n    Glyphs[\"brassFallLipLong\"] = \"\\uE5D9\";\n    Glyphs[\"brassFallLipMedium\"] = \"\\uE5D8\";\n    Glyphs[\"brassFallLipShort\"] = \"\\uE5D7\";\n    Glyphs[\"brassFallRoughLong\"] = \"\\uE5DF\";\n    Glyphs[\"brassFallRoughMedium\"] = \"\\uE5DE\";\n    Glyphs[\"brassFallRoughShort\"] = \"\\uE5DD\";\n    Glyphs[\"brassFallSmoothLong\"] = \"\\uE5DC\";\n    Glyphs[\"brassFallSmoothMedium\"] = \"\\uE5DB\";\n    Glyphs[\"brassFallSmoothShort\"] = \"\\uE5DA\";\n    Glyphs[\"brassFlip\"] = \"\\uE5E1\";\n    Glyphs[\"brassHarmonMuteClosed\"] = \"\\uE5E8\";\n    Glyphs[\"brassHarmonMuteStemHalfLeft\"] = \"\\uE5E9\";\n    Glyphs[\"brassHarmonMuteStemHalfRight\"] = \"\\uE5EA\";\n    Glyphs[\"brassHarmonMuteStemOpen\"] = \"\\uE5EB\";\n    Glyphs[\"brassJazzTurn\"] = \"\\uE5E4\";\n    Glyphs[\"brassLiftLong\"] = \"\\uE5D3\";\n    Glyphs[\"brassLiftMedium\"] = \"\\uE5D2\";\n    Glyphs[\"brassLiftShort\"] = \"\\uE5D1\";\n    Glyphs[\"brassLiftSmoothLong\"] = \"\\uE5EE\";\n    Glyphs[\"brassLiftSmoothMedium\"] = \"\\uE5ED\";\n    Glyphs[\"brassLiftSmoothShort\"] = \"\\uE5EC\";\n    Glyphs[\"brassMuteClosed\"] = \"\\uE5E5\";\n    Glyphs[\"brassMuteHalfClosed\"] = \"\\uE5E6\";\n    Glyphs[\"brassMuteOpen\"] = \"\\uE5E7\";\n    Glyphs[\"brassPlop\"] = \"\\uE5E0\";\n    Glyphs[\"brassScoop\"] = \"\\uE5D0\";\n    Glyphs[\"brassSmear\"] = \"\\uE5E2\";\n    Glyphs[\"brassValveTrill\"] = \"\\uE5EF\";\n    Glyphs[\"breathMarkComma\"] = \"\\uE4CE\";\n    Glyphs[\"breathMarkSalzedo\"] = \"\\uE4D5\";\n    Glyphs[\"breathMarkTick\"] = \"\\uE4CF\";\n    Glyphs[\"breathMarkUpbow\"] = \"\\uE4D0\";\n    Glyphs[\"bridgeClef\"] = \"\\uE078\";\n    Glyphs[\"buzzRoll\"] = \"\\uE22A\";\n    Glyphs[\"cClef\"] = \"\\uE05C\";\n    Glyphs[\"cClef8vb\"] = \"\\uE05D\";\n    Glyphs[\"cClefArrowDown\"] = \"\\uE05F\";\n    Glyphs[\"cClefArrowUp\"] = \"\\uE05E\";\n    Glyphs[\"cClefChange\"] = \"\\uE07B\";\n    Glyphs[\"cClefCombining\"] = \"\\uE061\";\n    Glyphs[\"cClefReversed\"] = \"\\uE075\";\n    Glyphs[\"cClefSquare\"] = \"\\uE060\";\n    Glyphs[\"caesura\"] = \"\\uE4D1\";\n    Glyphs[\"caesuraCurved\"] = \"\\uE4D4\";\n    Glyphs[\"caesuraShort\"] = \"\\uE4D3\";\n    Glyphs[\"caesuraSingleStroke\"] = \"\\uE4D7\";\n    Glyphs[\"caesuraThick\"] = \"\\uE4D2\";\n    Glyphs[\"chantAccentusAbove\"] = \"\\uE9D6\";\n    Glyphs[\"chantAccentusBelow\"] = \"\\uE9D7\";\n    Glyphs[\"chantAuctumAsc\"] = \"\\uE994\";\n    Glyphs[\"chantAuctumDesc\"] = \"\\uE995\";\n    Glyphs[\"chantAugmentum\"] = \"\\uE9D9\";\n    Glyphs[\"chantCaesura\"] = \"\\uE8F8\";\n    Glyphs[\"chantCclef\"] = \"\\uE906\";\n    Glyphs[\"chantCirculusAbove\"] = \"\\uE9D2\";\n    Glyphs[\"chantCirculusBelow\"] = \"\\uE9D3\";\n    Glyphs[\"chantConnectingLineAsc2nd\"] = \"\\uE9BD\";\n    Glyphs[\"chantConnectingLineAsc3rd\"] = \"\\uE9BE\";\n    Glyphs[\"chantConnectingLineAsc4th\"] = \"\\uE9BF\";\n    Glyphs[\"chantConnectingLineAsc5th\"] = \"\\uE9C0\";\n    Glyphs[\"chantConnectingLineAsc6th\"] = \"\\uE9C1\";\n    Glyphs[\"chantCustosStemDownPosHigh\"] = \"\\uEA08\";\n    Glyphs[\"chantCustosStemDownPosHighest\"] = \"\\uEA09\";\n    Glyphs[\"chantCustosStemDownPosMiddle\"] = \"\\uEA07\";\n    Glyphs[\"chantCustosStemUpPosLow\"] = \"\\uEA05\";\n    Glyphs[\"chantCustosStemUpPosLowest\"] = \"\\uEA04\";\n    Glyphs[\"chantCustosStemUpPosMiddle\"] = \"\\uEA06\";\n    Glyphs[\"chantDeminutumLower\"] = \"\\uE9B3\";\n    Glyphs[\"chantDeminutumUpper\"] = \"\\uE9B2\";\n    Glyphs[\"chantDivisioFinalis\"] = \"\\uE8F6\";\n    Glyphs[\"chantDivisioMaior\"] = \"\\uE8F4\";\n    Glyphs[\"chantDivisioMaxima\"] = \"\\uE8F5\";\n    Glyphs[\"chantDivisioMinima\"] = \"\\uE8F3\";\n    Glyphs[\"chantEntryLineAsc2nd\"] = \"\\uE9B4\";\n    Glyphs[\"chantEntryLineAsc3rd\"] = \"\\uE9B5\";\n    Glyphs[\"chantEntryLineAsc4th\"] = \"\\uE9B6\";\n    Glyphs[\"chantEntryLineAsc5th\"] = \"\\uE9B7\";\n    Glyphs[\"chantEntryLineAsc6th\"] = \"\\uE9B8\";\n    Glyphs[\"chantEpisema\"] = \"\\uE9D8\";\n    Glyphs[\"chantFclef\"] = \"\\uE902\";\n    Glyphs[\"chantIctusAbove\"] = \"\\uE9D0\";\n    Glyphs[\"chantIctusBelow\"] = \"\\uE9D1\";\n    Glyphs[\"chantLigaturaDesc2nd\"] = \"\\uE9B9\";\n    Glyphs[\"chantLigaturaDesc3rd\"] = \"\\uE9BA\";\n    Glyphs[\"chantLigaturaDesc4th\"] = \"\\uE9BB\";\n    Glyphs[\"chantLigaturaDesc5th\"] = \"\\uE9BC\";\n    Glyphs[\"chantOriscusAscending\"] = \"\\uE99C\";\n    Glyphs[\"chantOriscusDescending\"] = \"\\uE99D\";\n    Glyphs[\"chantOriscusLiquescens\"] = \"\\uE99E\";\n    Glyphs[\"chantPodatusLower\"] = \"\\uE9B0\";\n    Glyphs[\"chantPodatusUpper\"] = \"\\uE9B1\";\n    Glyphs[\"chantPunctum\"] = \"\\uE990\";\n    Glyphs[\"chantPunctumCavum\"] = \"\\uE998\";\n    Glyphs[\"chantPunctumDeminutum\"] = \"\\uE9A1\";\n    Glyphs[\"chantPunctumInclinatum\"] = \"\\uE991\";\n    Glyphs[\"chantPunctumInclinatumAuctum\"] = \"\\uE992\";\n    Glyphs[\"chantPunctumInclinatumDeminutum\"] = \"\\uE993\";\n    Glyphs[\"chantPunctumLinea\"] = \"\\uE999\";\n    Glyphs[\"chantPunctumLineaCavum\"] = \"\\uE99A\";\n    Glyphs[\"chantPunctumVirga\"] = \"\\uE996\";\n    Glyphs[\"chantPunctumVirgaReversed\"] = \"\\uE997\";\n    Glyphs[\"chantQuilisma\"] = \"\\uE99B\";\n    Glyphs[\"chantSemicirculusAbove\"] = \"\\uE9D4\";\n    Glyphs[\"chantSemicirculusBelow\"] = \"\\uE9D5\";\n    Glyphs[\"chantStaff\"] = \"\\uE8F0\";\n    Glyphs[\"chantStaffNarrow\"] = \"\\uE8F2\";\n    Glyphs[\"chantStaffWide\"] = \"\\uE8F1\";\n    Glyphs[\"chantStrophicus\"] = \"\\uE99F\";\n    Glyphs[\"chantStrophicusAuctus\"] = \"\\uE9A0\";\n    Glyphs[\"chantStrophicusLiquescens2nd\"] = \"\\uE9C2\";\n    Glyphs[\"chantStrophicusLiquescens3rd\"] = \"\\uE9C3\";\n    Glyphs[\"chantStrophicusLiquescens4th\"] = \"\\uE9C4\";\n    Glyphs[\"chantStrophicusLiquescens5th\"] = \"\\uE9C5\";\n    Glyphs[\"chantVirgula\"] = \"\\uE8F7\";\n    Glyphs[\"clef15\"] = \"\\uE07E\";\n    Glyphs[\"clef8\"] = \"\\uE07D\";\n    Glyphs[\"clefChangeCombining\"] = \"\\uE07F\";\n    Glyphs[\"coda\"] = \"\\uE048\";\n    Glyphs[\"codaSquare\"] = \"\\uE049\";\n    Glyphs[\"conductorBeat2Compound\"] = \"\\uE897\";\n    Glyphs[\"conductorBeat2Simple\"] = \"\\uE894\";\n    Glyphs[\"conductorBeat3Compound\"] = \"\\uE898\";\n    Glyphs[\"conductorBeat3Simple\"] = \"\\uE895\";\n    Glyphs[\"conductorBeat4Compound\"] = \"\\uE899\";\n    Glyphs[\"conductorBeat4Simple\"] = \"\\uE896\";\n    Glyphs[\"conductorLeftBeat\"] = \"\\uE891\";\n    Glyphs[\"conductorRightBeat\"] = \"\\uE892\";\n    Glyphs[\"conductorStrongBeat\"] = \"\\uE890\";\n    Glyphs[\"conductorUnconducted\"] = \"\\uE89A\";\n    Glyphs[\"conductorWeakBeat\"] = \"\\uE893\";\n    Glyphs[\"controlBeginBeam\"] = \"\\uE8E0\";\n    Glyphs[\"controlBeginPhrase\"] = \"\\uE8E6\";\n    Glyphs[\"controlBeginSlur\"] = \"\\uE8E4\";\n    Glyphs[\"controlBeginTie\"] = \"\\uE8E2\";\n    Glyphs[\"controlEndBeam\"] = \"\\uE8E1\";\n    Glyphs[\"controlEndPhrase\"] = \"\\uE8E7\";\n    Glyphs[\"controlEndSlur\"] = \"\\uE8E5\";\n    Glyphs[\"controlEndTie\"] = \"\\uE8E3\";\n    Glyphs[\"csymAccidentalDoubleFlat\"] = \"\\uED64\";\n    Glyphs[\"csymAccidentalDoubleSharp\"] = \"\\uED63\";\n    Glyphs[\"csymAccidentalFlat\"] = \"\\uED60\";\n    Glyphs[\"csymAccidentalNatural\"] = \"\\uED61\";\n    Glyphs[\"csymAccidentalSharp\"] = \"\\uED62\";\n    Glyphs[\"csymAccidentalTripleFlat\"] = \"\\uED66\";\n    Glyphs[\"csymAccidentalTripleSharp\"] = \"\\uED65\";\n    Glyphs[\"csymAlteredBassSlash\"] = \"\\uE87B\";\n    Glyphs[\"csymAugmented\"] = \"\\uE872\";\n    Glyphs[\"csymBracketLeftTall\"] = \"\\uE877\";\n    Glyphs[\"csymBracketRightTall\"] = \"\\uE878\";\n    Glyphs[\"csymDiagonalArrangementSlash\"] = \"\\uE87C\";\n    Glyphs[\"csymDiminished\"] = \"\\uE870\";\n    Glyphs[\"csymHalfDiminished\"] = \"\\uE871\";\n    Glyphs[\"csymMajorSeventh\"] = \"\\uE873\";\n    Glyphs[\"csymMinor\"] = \"\\uE874\";\n    Glyphs[\"csymParensLeftTall\"] = \"\\uE875\";\n    Glyphs[\"csymParensLeftVeryTall\"] = \"\\uE879\";\n    Glyphs[\"csymParensRightTall\"] = \"\\uE876\";\n    Glyphs[\"csymParensRightVeryTall\"] = \"\\uE87A\";\n    Glyphs[\"curlewSign\"] = \"\\uE4D6\";\n    Glyphs[\"daCapo\"] = \"\\uE046\";\n    Glyphs[\"dalSegno\"] = \"\\uE045\";\n    Glyphs[\"daseianExcellentes1\"] = \"\\uEA3C\";\n    Glyphs[\"daseianExcellentes2\"] = \"\\uEA3D\";\n    Glyphs[\"daseianExcellentes3\"] = \"\\uEA3E\";\n    Glyphs[\"daseianExcellentes4\"] = \"\\uEA3F\";\n    Glyphs[\"daseianFinales1\"] = \"\\uEA34\";\n    Glyphs[\"daseianFinales2\"] = \"\\uEA35\";\n    Glyphs[\"daseianFinales3\"] = \"\\uEA36\";\n    Glyphs[\"daseianFinales4\"] = \"\\uEA37\";\n    Glyphs[\"daseianGraves1\"] = \"\\uEA30\";\n    Glyphs[\"daseianGraves2\"] = \"\\uEA31\";\n    Glyphs[\"daseianGraves3\"] = \"\\uEA32\";\n    Glyphs[\"daseianGraves4\"] = \"\\uEA33\";\n    Glyphs[\"daseianResidua1\"] = \"\\uEA40\";\n    Glyphs[\"daseianResidua2\"] = \"\\uEA41\";\n    Glyphs[\"daseianSuperiores1\"] = \"\\uEA38\";\n    Glyphs[\"daseianSuperiores2\"] = \"\\uEA39\";\n    Glyphs[\"daseianSuperiores3\"] = \"\\uEA3A\";\n    Glyphs[\"daseianSuperiores4\"] = \"\\uEA3B\";\n    Glyphs[\"doubleLateralRollStevens\"] = \"\\uE234\";\n    Glyphs[\"doubleTongueAbove\"] = \"\\uE5F0\";\n    Glyphs[\"doubleTongueBelow\"] = \"\\uE5F1\";\n    Glyphs[\"dynamicCombinedSeparatorColon\"] = \"\\uE546\";\n    Glyphs[\"dynamicCombinedSeparatorHyphen\"] = \"\\uE547\";\n    Glyphs[\"dynamicCombinedSeparatorSlash\"] = \"\\uE549\";\n    Glyphs[\"dynamicCombinedSeparatorSpace\"] = \"\\uE548\";\n    Glyphs[\"dynamicCrescendoHairpin\"] = \"\\uE53E\";\n    Glyphs[\"dynamicDiminuendoHairpin\"] = \"\\uE53F\";\n    Glyphs[\"dynamicFF\"] = \"\\uE52F\";\n    Glyphs[\"dynamicFFF\"] = \"\\uE530\";\n    Glyphs[\"dynamicFFFF\"] = \"\\uE531\";\n    Glyphs[\"dynamicFFFFF\"] = \"\\uE532\";\n    Glyphs[\"dynamicFFFFFF\"] = \"\\uE533\";\n    Glyphs[\"dynamicForte\"] = \"\\uE522\";\n    Glyphs[\"dynamicFortePiano\"] = \"\\uE534\";\n    Glyphs[\"dynamicForzando\"] = \"\\uE535\";\n    Glyphs[\"dynamicHairpinBracketLeft\"] = \"\\uE544\";\n    Glyphs[\"dynamicHairpinBracketRight\"] = \"\\uE545\";\n    Glyphs[\"dynamicHairpinParenthesisLeft\"] = \"\\uE542\";\n    Glyphs[\"dynamicHairpinParenthesisRight\"] = \"\\uE543\";\n    Glyphs[\"dynamicMF\"] = \"\\uE52D\";\n    Glyphs[\"dynamicMP\"] = \"\\uE52C\";\n    Glyphs[\"dynamicMessaDiVoce\"] = \"\\uE540\";\n    Glyphs[\"dynamicMezzo\"] = \"\\uE521\";\n    Glyphs[\"dynamicNiente\"] = \"\\uE526\";\n    Glyphs[\"dynamicNienteForHairpin\"] = \"\\uE541\";\n    Glyphs[\"dynamicPF\"] = \"\\uE52E\";\n    Glyphs[\"dynamicPP\"] = \"\\uE52B\";\n    Glyphs[\"dynamicPPP\"] = \"\\uE52A\";\n    Glyphs[\"dynamicPPPP\"] = \"\\uE529\";\n    Glyphs[\"dynamicPPPPP\"] = \"\\uE528\";\n    Glyphs[\"dynamicPPPPPP\"] = \"\\uE527\";\n    Glyphs[\"dynamicPiano\"] = \"\\uE520\";\n    Glyphs[\"dynamicRinforzando\"] = \"\\uE523\";\n    Glyphs[\"dynamicRinforzando1\"] = \"\\uE53C\";\n    Glyphs[\"dynamicRinforzando2\"] = \"\\uE53D\";\n    Glyphs[\"dynamicSforzando\"] = \"\\uE524\";\n    Glyphs[\"dynamicSforzando1\"] = \"\\uE536\";\n    Glyphs[\"dynamicSforzandoPianissimo\"] = \"\\uE538\";\n    Glyphs[\"dynamicSforzandoPiano\"] = \"\\uE537\";\n    Glyphs[\"dynamicSforzato\"] = \"\\uE539\";\n    Glyphs[\"dynamicSforzatoFF\"] = \"\\uE53B\";\n    Glyphs[\"dynamicSforzatoPiano\"] = \"\\uE53A\";\n    Glyphs[\"dynamicZ\"] = \"\\uE525\";\n    Glyphs[\"elecAudioChannelsEight\"] = \"\\uEB46\";\n    Glyphs[\"elecAudioChannelsFive\"] = \"\\uEB43\";\n    Glyphs[\"elecAudioChannelsFour\"] = \"\\uEB42\";\n    Glyphs[\"elecAudioChannelsOne\"] = \"\\uEB3E\";\n    Glyphs[\"elecAudioChannelsSeven\"] = \"\\uEB45\";\n    Glyphs[\"elecAudioChannelsSix\"] = \"\\uEB44\";\n    Glyphs[\"elecAudioChannelsThreeFrontal\"] = \"\\uEB40\";\n    Glyphs[\"elecAudioChannelsThreeSurround\"] = \"\\uEB41\";\n    Glyphs[\"elecAudioChannelsTwo\"] = \"\\uEB3F\";\n    Glyphs[\"elecAudioIn\"] = \"\\uEB49\";\n    Glyphs[\"elecAudioMono\"] = \"\\uEB3C\";\n    Glyphs[\"elecAudioOut\"] = \"\\uEB4A\";\n    Glyphs[\"elecAudioStereo\"] = \"\\uEB3D\";\n    Glyphs[\"elecCamera\"] = \"\\uEB1B\";\n    Glyphs[\"elecDataIn\"] = \"\\uEB4D\";\n    Glyphs[\"elecDataOut\"] = \"\\uEB4E\";\n    Glyphs[\"elecDisc\"] = \"\\uEB13\";\n    Glyphs[\"elecDownload\"] = \"\\uEB4F\";\n    Glyphs[\"elecEject\"] = \"\\uEB2B\";\n    Glyphs[\"elecFastForward\"] = \"\\uEB1F\";\n    Glyphs[\"elecHeadphones\"] = \"\\uEB11\";\n    Glyphs[\"elecHeadset\"] = \"\\uEB12\";\n    Glyphs[\"elecLineIn\"] = \"\\uEB47\";\n    Glyphs[\"elecLineOut\"] = \"\\uEB48\";\n    Glyphs[\"elecLoop\"] = \"\\uEB23\";\n    Glyphs[\"elecLoudspeaker\"] = \"\\uEB1A\";\n    Glyphs[\"elecMIDIController0\"] = \"\\uEB36\";\n    Glyphs[\"elecMIDIController100\"] = \"\\uEB3B\";\n    Glyphs[\"elecMIDIController20\"] = \"\\uEB37\";\n    Glyphs[\"elecMIDIController40\"] = \"\\uEB38\";\n    Glyphs[\"elecMIDIController60\"] = \"\\uEB39\";\n    Glyphs[\"elecMIDIController80\"] = \"\\uEB3A\";\n    Glyphs[\"elecMIDIIn\"] = \"\\uEB34\";\n    Glyphs[\"elecMIDIOut\"] = \"\\uEB35\";\n    Glyphs[\"elecMicrophone\"] = \"\\uEB10\";\n    Glyphs[\"elecMicrophoneMute\"] = \"\\uEB28\";\n    Glyphs[\"elecMicrophoneUnmute\"] = \"\\uEB29\";\n    Glyphs[\"elecMixingConsole\"] = \"\\uEB15\";\n    Glyphs[\"elecMonitor\"] = \"\\uEB18\";\n    Glyphs[\"elecMute\"] = \"\\uEB26\";\n    Glyphs[\"elecPause\"] = \"\\uEB1E\";\n    Glyphs[\"elecPlay\"] = \"\\uEB1C\";\n    Glyphs[\"elecPowerOnOff\"] = \"\\uEB2A\";\n    Glyphs[\"elecProjector\"] = \"\\uEB19\";\n    Glyphs[\"elecReplay\"] = \"\\uEB24\";\n    Glyphs[\"elecRewind\"] = \"\\uEB20\";\n    Glyphs[\"elecShuffle\"] = \"\\uEB25\";\n    Glyphs[\"elecSkipBackwards\"] = \"\\uEB22\";\n    Glyphs[\"elecSkipForwards\"] = \"\\uEB21\";\n    Glyphs[\"elecStop\"] = \"\\uEB1D\";\n    Glyphs[\"elecTape\"] = \"\\uEB14\";\n    Glyphs[\"elecUSB\"] = \"\\uEB16\";\n    Glyphs[\"elecUnmute\"] = \"\\uEB27\";\n    Glyphs[\"elecUpload\"] = \"\\uEB50\";\n    Glyphs[\"elecVideoCamera\"] = \"\\uEB17\";\n    Glyphs[\"elecVideoIn\"] = \"\\uEB4B\";\n    Glyphs[\"elecVideoOut\"] = \"\\uEB4C\";\n    Glyphs[\"elecVolumeFader\"] = \"\\uEB2C\";\n    Glyphs[\"elecVolumeFaderThumb\"] = \"\\uEB2D\";\n    Glyphs[\"elecVolumeLevel0\"] = \"\\uEB2E\";\n    Glyphs[\"elecVolumeLevel100\"] = \"\\uEB33\";\n    Glyphs[\"elecVolumeLevel20\"] = \"\\uEB2F\";\n    Glyphs[\"elecVolumeLevel40\"] = \"\\uEB30\";\n    Glyphs[\"elecVolumeLevel60\"] = \"\\uEB31\";\n    Glyphs[\"elecVolumeLevel80\"] = \"\\uEB32\";\n    Glyphs[\"fClef\"] = \"\\uE062\";\n    Glyphs[\"fClef15ma\"] = \"\\uE066\";\n    Glyphs[\"fClef15mb\"] = \"\\uE063\";\n    Glyphs[\"fClef8va\"] = \"\\uE065\";\n    Glyphs[\"fClef8vb\"] = \"\\uE064\";\n    Glyphs[\"fClefArrowDown\"] = \"\\uE068\";\n    Glyphs[\"fClefArrowUp\"] = \"\\uE067\";\n    Glyphs[\"fClefChange\"] = \"\\uE07C\";\n    Glyphs[\"fClefReversed\"] = \"\\uE076\";\n    Glyphs[\"fClefTurned\"] = \"\\uE077\";\n    Glyphs[\"fermataAbove\"] = \"\\uE4C0\";\n    Glyphs[\"fermataBelow\"] = \"\\uE4C1\";\n    Glyphs[\"fermataLongAbove\"] = \"\\uE4C6\";\n    Glyphs[\"fermataLongBelow\"] = \"\\uE4C7\";\n    Glyphs[\"fermataLongHenzeAbove\"] = \"\\uE4CA\";\n    Glyphs[\"fermataLongHenzeBelow\"] = \"\\uE4CB\";\n    Glyphs[\"fermataShortAbove\"] = \"\\uE4C4\";\n    Glyphs[\"fermataShortBelow\"] = \"\\uE4C5\";\n    Glyphs[\"fermataShortHenzeAbove\"] = \"\\uE4CC\";\n    Glyphs[\"fermataShortHenzeBelow\"] = \"\\uE4CD\";\n    Glyphs[\"fermataVeryLongAbove\"] = \"\\uE4C8\";\n    Glyphs[\"fermataVeryLongBelow\"] = \"\\uE4C9\";\n    Glyphs[\"fermataVeryShortAbove\"] = \"\\uE4C2\";\n    Glyphs[\"fermataVeryShortBelow\"] = \"\\uE4C3\";\n    Glyphs[\"figbass0\"] = \"\\uEA50\";\n    Glyphs[\"figbass1\"] = \"\\uEA51\";\n    Glyphs[\"figbass2\"] = \"\\uEA52\";\n    Glyphs[\"figbass2Raised\"] = \"\\uEA53\";\n    Glyphs[\"figbass3\"] = \"\\uEA54\";\n    Glyphs[\"figbass4\"] = \"\\uEA55\";\n    Glyphs[\"figbass4Raised\"] = \"\\uEA56\";\n    Glyphs[\"figbass5\"] = \"\\uEA57\";\n    Glyphs[\"figbass5Raised1\"] = \"\\uEA58\";\n    Glyphs[\"figbass5Raised2\"] = \"\\uEA59\";\n    Glyphs[\"figbass5Raised3\"] = \"\\uEA5A\";\n    Glyphs[\"figbass6\"] = \"\\uEA5B\";\n    Glyphs[\"figbass6Raised\"] = \"\\uEA5C\";\n    Glyphs[\"figbass6Raised2\"] = \"\\uEA6F\";\n    Glyphs[\"figbass7\"] = \"\\uEA5D\";\n    Glyphs[\"figbass7Diminished\"] = \"\\uECC0\";\n    Glyphs[\"figbass7Raised1\"] = \"\\uEA5E\";\n    Glyphs[\"figbass7Raised2\"] = \"\\uEA5F\";\n    Glyphs[\"figbass8\"] = \"\\uEA60\";\n    Glyphs[\"figbass9\"] = \"\\uEA61\";\n    Glyphs[\"figbass9Raised\"] = \"\\uEA62\";\n    Glyphs[\"figbassBracketLeft\"] = \"\\uEA68\";\n    Glyphs[\"figbassBracketRight\"] = \"\\uEA69\";\n    Glyphs[\"figbassCombiningLowering\"] = \"\\uEA6E\";\n    Glyphs[\"figbassCombiningRaising\"] = \"\\uEA6D\";\n    Glyphs[\"figbassDoubleFlat\"] = \"\\uEA63\";\n    Glyphs[\"figbassDoubleSharp\"] = \"\\uEA67\";\n    Glyphs[\"figbassFlat\"] = \"\\uEA64\";\n    Glyphs[\"figbassNatural\"] = \"\\uEA65\";\n    Glyphs[\"figbassParensLeft\"] = \"\\uEA6A\";\n    Glyphs[\"figbassParensRight\"] = \"\\uEA6B\";\n    Glyphs[\"figbassPlus\"] = \"\\uEA6C\";\n    Glyphs[\"figbassSharp\"] = \"\\uEA66\";\n    Glyphs[\"figbassTripleFlat\"] = \"\\uECC1\";\n    Glyphs[\"figbassTripleSharp\"] = \"\\uECC2\";\n    Glyphs[\"fingering0\"] = \"\\uED10\";\n    Glyphs[\"fingering0Italic\"] = \"\\uED80\";\n    Glyphs[\"fingering1\"] = \"\\uED11\";\n    Glyphs[\"fingering1Italic\"] = \"\\uED81\";\n    Glyphs[\"fingering2\"] = \"\\uED12\";\n    Glyphs[\"fingering2Italic\"] = \"\\uED82\";\n    Glyphs[\"fingering3\"] = \"\\uED13\";\n    Glyphs[\"fingering3Italic\"] = \"\\uED83\";\n    Glyphs[\"fingering4\"] = \"\\uED14\";\n    Glyphs[\"fingering4Italic\"] = \"\\uED84\";\n    Glyphs[\"fingering5\"] = \"\\uED15\";\n    Glyphs[\"fingering5Italic\"] = \"\\uED85\";\n    Glyphs[\"fingering6\"] = \"\\uED24\";\n    Glyphs[\"fingering6Italic\"] = \"\\uED86\";\n    Glyphs[\"fingering7\"] = \"\\uED25\";\n    Glyphs[\"fingering7Italic\"] = \"\\uED87\";\n    Glyphs[\"fingering8\"] = \"\\uED26\";\n    Glyphs[\"fingering8Italic\"] = \"\\uED88\";\n    Glyphs[\"fingering9\"] = \"\\uED27\";\n    Glyphs[\"fingering9Italic\"] = \"\\uED89\";\n    Glyphs[\"fingeringALower\"] = \"\\uED1B\";\n    Glyphs[\"fingeringCLower\"] = \"\\uED1C\";\n    Glyphs[\"fingeringELower\"] = \"\\uED1E\";\n    Glyphs[\"fingeringILower\"] = \"\\uED19\";\n    Glyphs[\"fingeringLeftBracket\"] = \"\\uED2A\";\n    Glyphs[\"fingeringLeftBracketItalic\"] = \"\\uED8C\";\n    Glyphs[\"fingeringLeftParenthesis\"] = \"\\uED28\";\n    Glyphs[\"fingeringLeftParenthesisItalic\"] = \"\\uED8A\";\n    Glyphs[\"fingeringMLower\"] = \"\\uED1A\";\n    Glyphs[\"fingeringMultipleNotes\"] = \"\\uED23\";\n    Glyphs[\"fingeringOLower\"] = \"\\uED1F\";\n    Glyphs[\"fingeringPLower\"] = \"\\uED17\";\n    Glyphs[\"fingeringQLower\"] = \"\\uED8E\";\n    Glyphs[\"fingeringRightBracket\"] = \"\\uED2B\";\n    Glyphs[\"fingeringRightBracketItalic\"] = \"\\uED8D\";\n    Glyphs[\"fingeringRightParenthesis\"] = \"\\uED29\";\n    Glyphs[\"fingeringRightParenthesisItalic\"] = \"\\uED8B\";\n    Glyphs[\"fingeringSLower\"] = \"\\uED8F\";\n    Glyphs[\"fingeringSeparatorMiddleDot\"] = \"\\uED2C\";\n    Glyphs[\"fingeringSeparatorMiddleDotWhite\"] = \"\\uED2D\";\n    Glyphs[\"fingeringSeparatorSlash\"] = \"\\uED2E\";\n    Glyphs[\"fingeringSubstitutionAbove\"] = \"\\uED20\";\n    Glyphs[\"fingeringSubstitutionBelow\"] = \"\\uED21\";\n    Glyphs[\"fingeringSubstitutionDash\"] = \"\\uED22\";\n    Glyphs[\"fingeringTLower\"] = \"\\uED18\";\n    Glyphs[\"fingeringTUpper\"] = \"\\uED16\";\n    Glyphs[\"fingeringXLower\"] = \"\\uED1D\";\n    Glyphs[\"flag1024thDown\"] = \"\\uE24F\";\n    Glyphs[\"flag1024thUp\"] = \"\\uE24E\";\n    Glyphs[\"flag128thDown\"] = \"\\uE249\";\n    Glyphs[\"flag128thUp\"] = \"\\uE248\";\n    Glyphs[\"flag16thDown\"] = \"\\uE243\";\n    Glyphs[\"flag16thUp\"] = \"\\uE242\";\n    Glyphs[\"flag256thDown\"] = \"\\uE24B\";\n    Glyphs[\"flag256thUp\"] = \"\\uE24A\";\n    Glyphs[\"flag32ndDown\"] = \"\\uE245\";\n    Glyphs[\"flag32ndUp\"] = \"\\uE244\";\n    Glyphs[\"flag512thDown\"] = \"\\uE24D\";\n    Glyphs[\"flag512thUp\"] = \"\\uE24C\";\n    Glyphs[\"flag64thDown\"] = \"\\uE247\";\n    Glyphs[\"flag64thUp\"] = \"\\uE246\";\n    Glyphs[\"flag8thDown\"] = \"\\uE241\";\n    Glyphs[\"flag8thUp\"] = \"\\uE240\";\n    Glyphs[\"flagInternalDown\"] = \"\\uE251\";\n    Glyphs[\"flagInternalUp\"] = \"\\uE250\";\n    Glyphs[\"fretboard3String\"] = \"\\uE850\";\n    Glyphs[\"fretboard3StringNut\"] = \"\\uE851\";\n    Glyphs[\"fretboard4String\"] = \"\\uE852\";\n    Glyphs[\"fretboard4StringNut\"] = \"\\uE853\";\n    Glyphs[\"fretboard5String\"] = \"\\uE854\";\n    Glyphs[\"fretboard5StringNut\"] = \"\\uE855\";\n    Glyphs[\"fretboard6String\"] = \"\\uE856\";\n    Glyphs[\"fretboard6StringNut\"] = \"\\uE857\";\n    Glyphs[\"fretboardFilledCircle\"] = \"\\uE858\";\n    Glyphs[\"fretboardO\"] = \"\\uE85A\";\n    Glyphs[\"fretboardX\"] = \"\\uE859\";\n    Glyphs[\"functionAngleLeft\"] = \"\\uEA93\";\n    Glyphs[\"functionAngleRight\"] = \"\\uEA94\";\n    Glyphs[\"functionBracketLeft\"] = \"\\uEA8F\";\n    Glyphs[\"functionBracketRight\"] = \"\\uEA90\";\n    Glyphs[\"functionDD\"] = \"\\uEA81\";\n    Glyphs[\"functionDLower\"] = \"\\uEA80\";\n    Glyphs[\"functionDUpper\"] = \"\\uEA7F\";\n    Glyphs[\"functionEight\"] = \"\\uEA78\";\n    Glyphs[\"functionFUpper\"] = \"\\uEA99\";\n    Glyphs[\"functionFive\"] = \"\\uEA75\";\n    Glyphs[\"functionFour\"] = \"\\uEA74\";\n    Glyphs[\"functionGLower\"] = \"\\uEA84\";\n    Glyphs[\"functionGUpper\"] = \"\\uEA83\";\n    Glyphs[\"functionGreaterThan\"] = \"\\uEA7C\";\n    Glyphs[\"functionILower\"] = \"\\uEA9B\";\n    Glyphs[\"functionIUpper\"] = \"\\uEA9A\";\n    Glyphs[\"functionKLower\"] = \"\\uEA9D\";\n    Glyphs[\"functionKUpper\"] = \"\\uEA9C\";\n    Glyphs[\"functionLLower\"] = \"\\uEA9F\";\n    Glyphs[\"functionLUpper\"] = \"\\uEA9E\";\n    Glyphs[\"functionLessThan\"] = \"\\uEA7A\";\n    Glyphs[\"functionMLower\"] = \"\\uED01\";\n    Glyphs[\"functionMUpper\"] = \"\\uED00\";\n    Glyphs[\"functionMinus\"] = \"\\uEA7B\";\n    Glyphs[\"functionNLower\"] = \"\\uEA86\";\n    Glyphs[\"functionNUpper\"] = \"\\uEA85\";\n    Glyphs[\"functionNUpperSuperscript\"] = \"\\uED02\";\n    Glyphs[\"functionNine\"] = \"\\uEA79\";\n    Glyphs[\"functionOne\"] = \"\\uEA71\";\n    Glyphs[\"functionPLower\"] = \"\\uEA88\";\n    Glyphs[\"functionPUpper\"] = \"\\uEA87\";\n    Glyphs[\"functionParensLeft\"] = \"\\uEA91\";\n    Glyphs[\"functionParensRight\"] = \"\\uEA92\";\n    Glyphs[\"functionPlus\"] = \"\\uEA98\";\n    Glyphs[\"functionRLower\"] = \"\\uED03\";\n    Glyphs[\"functionRepetition1\"] = \"\\uEA95\";\n    Glyphs[\"functionRepetition2\"] = \"\\uEA96\";\n    Glyphs[\"functionRing\"] = \"\\uEA97\";\n    Glyphs[\"functionSLower\"] = \"\\uEA8A\";\n    Glyphs[\"functionSSLower\"] = \"\\uEA7E\";\n    Glyphs[\"functionSSUpper\"] = \"\\uEA7D\";\n    Glyphs[\"functionSUpper\"] = \"\\uEA89\";\n    Glyphs[\"functionSeven\"] = \"\\uEA77\";\n    Glyphs[\"functionSix\"] = \"\\uEA76\";\n    Glyphs[\"functionSlashedDD\"] = \"\\uEA82\";\n    Glyphs[\"functionTLower\"] = \"\\uEA8C\";\n    Glyphs[\"functionTUpper\"] = \"\\uEA8B\";\n    Glyphs[\"functionThree\"] = \"\\uEA73\";\n    Glyphs[\"functionTwo\"] = \"\\uEA72\";\n    Glyphs[\"functionVLower\"] = \"\\uEA8E\";\n    Glyphs[\"functionVUpper\"] = \"\\uEA8D\";\n    Glyphs[\"functionZero\"] = \"\\uEA70\";\n    Glyphs[\"gClef\"] = \"\\uE050\";\n    Glyphs[\"gClef15ma\"] = \"\\uE054\";\n    Glyphs[\"gClef15mb\"] = \"\\uE051\";\n    Glyphs[\"gClef8va\"] = \"\\uE053\";\n    Glyphs[\"gClef8vb\"] = \"\\uE052\";\n    Glyphs[\"gClef8vbCClef\"] = \"\\uE056\";\n    Glyphs[\"gClef8vbOld\"] = \"\\uE055\";\n    Glyphs[\"gClef8vbParens\"] = \"\\uE057\";\n    Glyphs[\"gClefArrowDown\"] = \"\\uE05B\";\n    Glyphs[\"gClefArrowUp\"] = \"\\uE05A\";\n    Glyphs[\"gClefChange\"] = \"\\uE07A\";\n    Glyphs[\"gClefLigatedNumberAbove\"] = \"\\uE059\";\n    Glyphs[\"gClefLigatedNumberBelow\"] = \"\\uE058\";\n    Glyphs[\"gClefReversed\"] = \"\\uE073\";\n    Glyphs[\"gClefTurned\"] = \"\\uE074\";\n    Glyphs[\"glissandoDown\"] = \"\\uE586\";\n    Glyphs[\"glissandoUp\"] = \"\\uE585\";\n    Glyphs[\"graceNoteAcciaccaturaStemDown\"] = \"\\uE561\";\n    Glyphs[\"graceNoteAcciaccaturaStemUp\"] = \"\\uE560\";\n    Glyphs[\"graceNoteAppoggiaturaStemDown\"] = \"\\uE563\";\n    Glyphs[\"graceNoteAppoggiaturaStemUp\"] = \"\\uE562\";\n    Glyphs[\"graceNoteSlashStemDown\"] = \"\\uE565\";\n    Glyphs[\"graceNoteSlashStemUp\"] = \"\\uE564\";\n    Glyphs[\"guitarBarreFull\"] = \"\\uE848\";\n    Glyphs[\"guitarBarreHalf\"] = \"\\uE849\";\n    Glyphs[\"guitarClosePedal\"] = \"\\uE83F\";\n    Glyphs[\"guitarFadeIn\"] = \"\\uE843\";\n    Glyphs[\"guitarFadeOut\"] = \"\\uE844\";\n    Glyphs[\"guitarGolpe\"] = \"\\uE842\";\n    Glyphs[\"guitarHalfOpenPedal\"] = \"\\uE83E\";\n    Glyphs[\"guitarLeftHandTapping\"] = \"\\uE840\";\n    Glyphs[\"guitarOpenPedal\"] = \"\\uE83D\";\n    Glyphs[\"guitarRightHandTapping\"] = \"\\uE841\";\n    Glyphs[\"guitarShake\"] = \"\\uE832\";\n    Glyphs[\"guitarString0\"] = \"\\uE833\";\n    Glyphs[\"guitarString1\"] = \"\\uE834\";\n    Glyphs[\"guitarString10\"] = \"\\uE84A\";\n    Glyphs[\"guitarString11\"] = \"\\uE84B\";\n    Glyphs[\"guitarString12\"] = \"\\uE84C\";\n    Glyphs[\"guitarString13\"] = \"\\uE84D\";\n    Glyphs[\"guitarString2\"] = \"\\uE835\";\n    Glyphs[\"guitarString3\"] = \"\\uE836\";\n    Glyphs[\"guitarString4\"] = \"\\uE837\";\n    Glyphs[\"guitarString5\"] = \"\\uE838\";\n    Glyphs[\"guitarString6\"] = \"\\uE839\";\n    Glyphs[\"guitarString7\"] = \"\\uE83A\";\n    Glyphs[\"guitarString8\"] = \"\\uE83B\";\n    Glyphs[\"guitarString9\"] = \"\\uE83C\";\n    Glyphs[\"guitarStrumDown\"] = \"\\uE847\";\n    Glyphs[\"guitarStrumUp\"] = \"\\uE846\";\n    Glyphs[\"guitarVibratoBarDip\"] = \"\\uE831\";\n    Glyphs[\"guitarVibratoBarScoop\"] = \"\\uE830\";\n    Glyphs[\"guitarVibratoStroke\"] = \"\\uEAB2\";\n    Glyphs[\"guitarVolumeSwell\"] = \"\\uE845\";\n    Glyphs[\"guitarWideVibratoStroke\"] = \"\\uEAB3\";\n    Glyphs[\"handbellsBelltree\"] = \"\\uE81F\";\n    Glyphs[\"handbellsDamp3\"] = \"\\uE81E\";\n    Glyphs[\"handbellsEcho1\"] = \"\\uE81B\";\n    Glyphs[\"handbellsEcho2\"] = \"\\uE81C\";\n    Glyphs[\"handbellsGyro\"] = \"\\uE81D\";\n    Glyphs[\"handbellsHandMartellato\"] = \"\\uE812\";\n    Glyphs[\"handbellsMalletBellOnTable\"] = \"\\uE815\";\n    Glyphs[\"handbellsMalletBellSuspended\"] = \"\\uE814\";\n    Glyphs[\"handbellsMalletLft\"] = \"\\uE816\";\n    Glyphs[\"handbellsMartellato\"] = \"\\uE810\";\n    Glyphs[\"handbellsMartellatoLift\"] = \"\\uE811\";\n    Glyphs[\"handbellsMutedMartellato\"] = \"\\uE813\";\n    Glyphs[\"handbellsPluckLift\"] = \"\\uE817\";\n    Glyphs[\"handbellsSwing\"] = \"\\uE81A\";\n    Glyphs[\"handbellsSwingDown\"] = \"\\uE819\";\n    Glyphs[\"handbellsSwingUp\"] = \"\\uE818\";\n    Glyphs[\"handbellsTablePairBells\"] = \"\\uE821\";\n    Glyphs[\"handbellsTableSingleBell\"] = \"\\uE820\";\n    Glyphs[\"harpMetalRod\"] = \"\\uE68F\";\n    Glyphs[\"harpPedalCentered\"] = \"\\uE681\";\n    Glyphs[\"harpPedalDivider\"] = \"\\uE683\";\n    Glyphs[\"harpPedalLowered\"] = \"\\uE682\";\n    Glyphs[\"harpPedalRaised\"] = \"\\uE680\";\n    Glyphs[\"harpSalzedoAeolianAscending\"] = \"\\uE695\";\n    Glyphs[\"harpSalzedoAeolianDescending\"] = \"\\uE696\";\n    Glyphs[\"harpSalzedoDampAbove\"] = \"\\uE69A\";\n    Glyphs[\"harpSalzedoDampBelow\"] = \"\\uE699\";\n    Glyphs[\"harpSalzedoDampBothHands\"] = \"\\uE698\";\n    Glyphs[\"harpSalzedoDampLowStrings\"] = \"\\uE697\";\n    Glyphs[\"harpSalzedoFluidicSoundsLeft\"] = \"\\uE68D\";\n    Glyphs[\"harpSalzedoFluidicSoundsRight\"] = \"\\uE68E\";\n    Glyphs[\"harpSalzedoIsolatedSounds\"] = \"\\uE69C\";\n    Glyphs[\"harpSalzedoMetallicSounds\"] = \"\\uE688\";\n    Glyphs[\"harpSalzedoMetallicSoundsOneString\"] = \"\\uE69B\";\n    Glyphs[\"harpSalzedoMuffleTotally\"] = \"\\uE68C\";\n    Glyphs[\"harpSalzedoOboicFlux\"] = \"\\uE685\";\n    Glyphs[\"harpSalzedoPlayUpperEnd\"] = \"\\uE68A\";\n    Glyphs[\"harpSalzedoSlideWithSuppleness\"] = \"\\uE684\";\n    Glyphs[\"harpSalzedoSnareDrum\"] = \"\\uE69D\";\n    Glyphs[\"harpSalzedoTamTamSounds\"] = \"\\uE689\";\n    Glyphs[\"harpSalzedoThunderEffect\"] = \"\\uE686\";\n    Glyphs[\"harpSalzedoTimpanicSounds\"] = \"\\uE68B\";\n    Glyphs[\"harpSalzedoWhistlingSounds\"] = \"\\uE687\";\n    Glyphs[\"harpStringNoiseStem\"] = \"\\uE694\";\n    Glyphs[\"harpTuningKey\"] = \"\\uE690\";\n    Glyphs[\"harpTuningKeyGlissando\"] = \"\\uE693\";\n    Glyphs[\"harpTuningKeyHandle\"] = \"\\uE691\";\n    Glyphs[\"harpTuningKeyShank\"] = \"\\uE692\";\n    Glyphs[\"indianDrumClef\"] = \"\\uED70\";\n    Glyphs[\"kahnBackChug\"] = \"\\uEDE2\";\n    Glyphs[\"kahnBackFlap\"] = \"\\uEDD8\";\n    Glyphs[\"kahnBackRiff\"] = \"\\uEDE1\";\n    Glyphs[\"kahnBackRip\"] = \"\\uEDDA\";\n    Glyphs[\"kahnBallChange\"] = \"\\uEDC6\";\n    Glyphs[\"kahnBallDig\"] = \"\\uEDCD\";\n    Glyphs[\"kahnBrushBackward\"] = \"\\uEDA7\";\n    Glyphs[\"kahnBrushForward\"] = \"\\uEDA6\";\n    Glyphs[\"kahnChug\"] = \"\\uEDDD\";\n    Glyphs[\"kahnClap\"] = \"\\uEDB8\";\n    Glyphs[\"kahnDoubleSnap\"] = \"\\uEDBA\";\n    Glyphs[\"kahnDoubleWing\"] = \"\\uEDEB\";\n    Glyphs[\"kahnDrawStep\"] = \"\\uEDB2\";\n    Glyphs[\"kahnDrawTap\"] = \"\\uEDB3\";\n    Glyphs[\"kahnFlam\"] = \"\\uEDCF\";\n    Glyphs[\"kahnFlap\"] = \"\\uEDD5\";\n    Glyphs[\"kahnFlapStep\"] = \"\\uEDD7\";\n    Glyphs[\"kahnFlat\"] = \"\\uEDA9\";\n    Glyphs[\"kahnFleaHop\"] = \"\\uEDB0\";\n    Glyphs[\"kahnFleaTap\"] = \"\\uEDB1\";\n    Glyphs[\"kahnGraceTap\"] = \"\\uEDA8\";\n    Glyphs[\"kahnGraceTapChange\"] = \"\\uEDD1\";\n    Glyphs[\"kahnGraceTapHop\"] = \"\\uEDD0\";\n    Glyphs[\"kahnGraceTapStamp\"] = \"\\uEDD3\";\n    Glyphs[\"kahnHeel\"] = \"\\uEDAA\";\n    Glyphs[\"kahnHeelChange\"] = \"\\uEDC9\";\n    Glyphs[\"kahnHeelClick\"] = \"\\uEDBB\";\n    Glyphs[\"kahnHeelDrop\"] = \"\\uEDB6\";\n    Glyphs[\"kahnHeelStep\"] = \"\\uEDC4\";\n    Glyphs[\"kahnHeelTap\"] = \"\\uEDCB\";\n    Glyphs[\"kahnHop\"] = \"\\uEDA2\";\n    Glyphs[\"kahnJumpApart\"] = \"\\uEDA5\";\n    Glyphs[\"kahnJumpTogether\"] = \"\\uEDA4\";\n    Glyphs[\"kahnKneeInward\"] = \"\\uEDAD\";\n    Glyphs[\"kahnKneeOutward\"] = \"\\uEDAC\";\n    Glyphs[\"kahnLeap\"] = \"\\uEDA3\";\n    Glyphs[\"kahnLeapFlatFoot\"] = \"\\uEDD2\";\n    Glyphs[\"kahnLeapHeelClick\"] = \"\\uEDD4\";\n    Glyphs[\"kahnLeftCatch\"] = \"\\uEDBF\";\n    Glyphs[\"kahnLeftCross\"] = \"\\uEDBD\";\n    Glyphs[\"kahnLeftFoot\"] = \"\\uEDEE\";\n    Glyphs[\"kahnLeftToeStrike\"] = \"\\uEDC1\";\n    Glyphs[\"kahnLeftTurn\"] = \"\\uEDF0\";\n    Glyphs[\"kahnOverTheTop\"] = \"\\uEDEC\";\n    Glyphs[\"kahnOverTheTopTap\"] = \"\\uEDED\";\n    Glyphs[\"kahnPull\"] = \"\\uEDE3\";\n    Glyphs[\"kahnPush\"] = \"\\uEDDE\";\n    Glyphs[\"kahnRiff\"] = \"\\uEDE0\";\n    Glyphs[\"kahnRiffle\"] = \"\\uEDE7\";\n    Glyphs[\"kahnRightCatch\"] = \"\\uEDC0\";\n    Glyphs[\"kahnRightCross\"] = \"\\uEDBE\";\n    Glyphs[\"kahnRightFoot\"] = \"\\uEDEF\";\n    Glyphs[\"kahnRightToeStrike\"] = \"\\uEDC2\";\n    Glyphs[\"kahnRightTurn\"] = \"\\uEDF1\";\n    Glyphs[\"kahnRip\"] = \"\\uEDD6\";\n    Glyphs[\"kahnRipple\"] = \"\\uEDE8\";\n    Glyphs[\"kahnScrape\"] = \"\\uEDAE\";\n    Glyphs[\"kahnScuff\"] = \"\\uEDDC\";\n    Glyphs[\"kahnScuffle\"] = \"\\uEDE6\";\n    Glyphs[\"kahnShuffle\"] = \"\\uEDE5\";\n    Glyphs[\"kahnSlam\"] = \"\\uEDCE\";\n    Glyphs[\"kahnSlap\"] = \"\\uEDD9\";\n    Glyphs[\"kahnSlideStep\"] = \"\\uEDB4\";\n    Glyphs[\"kahnSlideTap\"] = \"\\uEDB5\";\n    Glyphs[\"kahnSnap\"] = \"\\uEDB9\";\n    Glyphs[\"kahnStamp\"] = \"\\uEDC3\";\n    Glyphs[\"kahnStampStamp\"] = \"\\uEDC8\";\n    Glyphs[\"kahnStep\"] = \"\\uEDA0\";\n    Glyphs[\"kahnStepStamp\"] = \"\\uEDC7\";\n    Glyphs[\"kahnStomp\"] = \"\\uEDCA\";\n    Glyphs[\"kahnStompBrush\"] = \"\\uEDDB\";\n    Glyphs[\"kahnTap\"] = \"\\uEDA1\";\n    Glyphs[\"kahnToe\"] = \"\\uEDAB\";\n    Glyphs[\"kahnToeClick\"] = \"\\uEDBC\";\n    Glyphs[\"kahnToeDrop\"] = \"\\uEDB7\";\n    Glyphs[\"kahnToeStep\"] = \"\\uEDC5\";\n    Glyphs[\"kahnToeTap\"] = \"\\uEDCC\";\n    Glyphs[\"kahnTrench\"] = \"\\uEDAF\";\n    Glyphs[\"kahnWing\"] = \"\\uEDE9\";\n    Glyphs[\"kahnWingChange\"] = \"\\uEDEA\";\n    Glyphs[\"kahnZank\"] = \"\\uEDE4\";\n    Glyphs[\"kahnZink\"] = \"\\uEDDF\";\n    Glyphs[\"keyboardBebung2DotsAbove\"] = \"\\uE668\";\n    Glyphs[\"keyboardBebung2DotsBelow\"] = \"\\uE669\";\n    Glyphs[\"keyboardBebung3DotsAbove\"] = \"\\uE66A\";\n    Glyphs[\"keyboardBebung3DotsBelow\"] = \"\\uE66B\";\n    Glyphs[\"keyboardBebung4DotsAbove\"] = \"\\uE66C\";\n    Glyphs[\"keyboardBebung4DotsBelow\"] = \"\\uE66D\";\n    Glyphs[\"keyboardLeftPedalPictogram\"] = \"\\uE65E\";\n    Glyphs[\"keyboardMiddlePedalPictogram\"] = \"\\uE65F\";\n    Glyphs[\"keyboardPedalD\"] = \"\\uE653\";\n    Glyphs[\"keyboardPedalDot\"] = \"\\uE654\";\n    Glyphs[\"keyboardPedalE\"] = \"\\uE652\";\n    Glyphs[\"keyboardPedalHalf\"] = \"\\uE656\";\n    Glyphs[\"keyboardPedalHalf2\"] = \"\\uE65B\";\n    Glyphs[\"keyboardPedalHalf3\"] = \"\\uE65C\";\n    Glyphs[\"keyboardPedalHeel1\"] = \"\\uE661\";\n    Glyphs[\"keyboardPedalHeel2\"] = \"\\uE662\";\n    Glyphs[\"keyboardPedalHeel3\"] = \"\\uE663\";\n    Glyphs[\"keyboardPedalHeelToToe\"] = \"\\uE674\";\n    Glyphs[\"keyboardPedalHeelToe\"] = \"\\uE666\";\n    Glyphs[\"keyboardPedalHookEnd\"] = \"\\uE673\";\n    Glyphs[\"keyboardPedalHookStart\"] = \"\\uE672\";\n    Glyphs[\"keyboardPedalHyphen\"] = \"\\uE658\";\n    Glyphs[\"keyboardPedalP\"] = \"\\uE651\";\n    Glyphs[\"keyboardPedalParensLeft\"] = \"\\uE676\";\n    Glyphs[\"keyboardPedalParensRight\"] = \"\\uE677\";\n    Glyphs[\"keyboardPedalPed\"] = \"\\uE650\";\n    Glyphs[\"keyboardPedalS\"] = \"\\uE65A\";\n    Glyphs[\"keyboardPedalSost\"] = \"\\uE659\";\n    Glyphs[\"keyboardPedalToe1\"] = \"\\uE664\";\n    Glyphs[\"keyboardPedalToe2\"] = \"\\uE665\";\n    Glyphs[\"keyboardPedalToeToHeel\"] = \"\\uE675\";\n    Glyphs[\"keyboardPedalUp\"] = \"\\uE655\";\n    Glyphs[\"keyboardPedalUpNotch\"] = \"\\uE657\";\n    Glyphs[\"keyboardPedalUpSpecial\"] = \"\\uE65D\";\n    Glyphs[\"keyboardPlayWithLH\"] = \"\\uE670\";\n    Glyphs[\"keyboardPlayWithLHEnd\"] = \"\\uE671\";\n    Glyphs[\"keyboardPlayWithRH\"] = \"\\uE66E\";\n    Glyphs[\"keyboardPlayWithRHEnd\"] = \"\\uE66F\";\n    Glyphs[\"keyboardPluckInside\"] = \"\\uE667\";\n    Glyphs[\"keyboardRightPedalPictogram\"] = \"\\uE660\";\n    Glyphs[\"kievanAccidentalFlat\"] = \"\\uEC3E\";\n    Glyphs[\"kievanAccidentalSharp\"] = \"\\uEC3D\";\n    Glyphs[\"kievanAugmentationDot\"] = \"\\uEC3C\";\n    Glyphs[\"kievanCClef\"] = \"\\uEC30\";\n    Glyphs[\"kievanEndingSymbol\"] = \"\\uEC31\";\n    Glyphs[\"kievanNote8thStemDown\"] = \"\\uEC3A\";\n    Glyphs[\"kievanNote8thStemUp\"] = \"\\uEC39\";\n    Glyphs[\"kievanNoteBeam\"] = \"\\uEC3B\";\n    Glyphs[\"kievanNoteHalfStaffLine\"] = \"\\uEC35\";\n    Glyphs[\"kievanNoteHalfStaffSpace\"] = \"\\uEC36\";\n    Glyphs[\"kievanNoteQuarterStemDown\"] = \"\\uEC38\";\n    Glyphs[\"kievanNoteQuarterStemUp\"] = \"\\uEC37\";\n    Glyphs[\"kievanNoteReciting\"] = \"\\uEC32\";\n    Glyphs[\"kievanNoteWhole\"] = \"\\uEC33\";\n    Glyphs[\"kievanNoteWholeFinal\"] = \"\\uEC34\";\n    Glyphs[\"kodalyHandDo\"] = \"\\uEC40\";\n    Glyphs[\"kodalyHandFa\"] = \"\\uEC43\";\n    Glyphs[\"kodalyHandLa\"] = \"\\uEC45\";\n    Glyphs[\"kodalyHandMi\"] = \"\\uEC42\";\n    Glyphs[\"kodalyHandRe\"] = \"\\uEC41\";\n    Glyphs[\"kodalyHandSo\"] = \"\\uEC44\";\n    Glyphs[\"kodalyHandTi\"] = \"\\uEC46\";\n    Glyphs[\"leftRepeatSmall\"] = \"\\uE04C\";\n    Glyphs[\"legerLine\"] = \"\\uE022\";\n    Glyphs[\"legerLineNarrow\"] = \"\\uE024\";\n    Glyphs[\"legerLineWide\"] = \"\\uE023\";\n    Glyphs[\"luteBarlineEndRepeat\"] = \"\\uEBA4\";\n    Glyphs[\"luteBarlineFinal\"] = \"\\uEBA5\";\n    Glyphs[\"luteBarlineStartRepeat\"] = \"\\uEBA3\";\n    Glyphs[\"luteDuration16th\"] = \"\\uEBAB\";\n    Glyphs[\"luteDuration32nd\"] = \"\\uEBAC\";\n    Glyphs[\"luteDuration8th\"] = \"\\uEBAA\";\n    Glyphs[\"luteDurationDoubleWhole\"] = \"\\uEBA6\";\n    Glyphs[\"luteDurationHalf\"] = \"\\uEBA8\";\n    Glyphs[\"luteDurationQuarter\"] = \"\\uEBA9\";\n    Glyphs[\"luteDurationWhole\"] = \"\\uEBA7\";\n    Glyphs[\"luteFingeringRHFirst\"] = \"\\uEBAE\";\n    Glyphs[\"luteFingeringRHSecond\"] = \"\\uEBAF\";\n    Glyphs[\"luteFingeringRHThird\"] = \"\\uEBB0\";\n    Glyphs[\"luteFingeringRHThumb\"] = \"\\uEBAD\";\n    Glyphs[\"luteFrench10thCourse\"] = \"\\uEBD0\";\n    Glyphs[\"luteFrench7thCourse\"] = \"\\uEBCD\";\n    Glyphs[\"luteFrench8thCourse\"] = \"\\uEBCE\";\n    Glyphs[\"luteFrench9thCourse\"] = \"\\uEBCF\";\n    Glyphs[\"luteFrenchAppoggiaturaAbove\"] = \"\\uEBD5\";\n    Glyphs[\"luteFrenchAppoggiaturaBelow\"] = \"\\uEBD4\";\n    Glyphs[\"luteFrenchFretA\"] = \"\\uEBC0\";\n    Glyphs[\"luteFrenchFretB\"] = \"\\uEBC1\";\n    Glyphs[\"luteFrenchFretC\"] = \"\\uEBC2\";\n    Glyphs[\"luteFrenchFretD\"] = \"\\uEBC3\";\n    Glyphs[\"luteFrenchFretE\"] = \"\\uEBC4\";\n    Glyphs[\"luteFrenchFretF\"] = \"\\uEBC5\";\n    Glyphs[\"luteFrenchFretG\"] = \"\\uEBC6\";\n    Glyphs[\"luteFrenchFretH\"] = \"\\uEBC7\";\n    Glyphs[\"luteFrenchFretI\"] = \"\\uEBC8\";\n    Glyphs[\"luteFrenchFretK\"] = \"\\uEBC9\";\n    Glyphs[\"luteFrenchFretL\"] = \"\\uEBCA\";\n    Glyphs[\"luteFrenchFretM\"] = \"\\uEBCB\";\n    Glyphs[\"luteFrenchFretN\"] = \"\\uEBCC\";\n    Glyphs[\"luteFrenchMordentInverted\"] = \"\\uEBD3\";\n    Glyphs[\"luteFrenchMordentLower\"] = \"\\uEBD2\";\n    Glyphs[\"luteFrenchMordentUpper\"] = \"\\uEBD1\";\n    Glyphs[\"luteGermanALower\"] = \"\\uEC00\";\n    Glyphs[\"luteGermanAUpper\"] = \"\\uEC17\";\n    Glyphs[\"luteGermanBLower\"] = \"\\uEC01\";\n    Glyphs[\"luteGermanBUpper\"] = \"\\uEC18\";\n    Glyphs[\"luteGermanCLower\"] = \"\\uEC02\";\n    Glyphs[\"luteGermanCUpper\"] = \"\\uEC19\";\n    Glyphs[\"luteGermanDLower\"] = \"\\uEC03\";\n    Glyphs[\"luteGermanDUpper\"] = \"\\uEC1A\";\n    Glyphs[\"luteGermanELower\"] = \"\\uEC04\";\n    Glyphs[\"luteGermanEUpper\"] = \"\\uEC1B\";\n    Glyphs[\"luteGermanFLower\"] = \"\\uEC05\";\n    Glyphs[\"luteGermanFUpper\"] = \"\\uEC1C\";\n    Glyphs[\"luteGermanGLower\"] = \"\\uEC06\";\n    Glyphs[\"luteGermanGUpper\"] = \"\\uEC1D\";\n    Glyphs[\"luteGermanHLower\"] = \"\\uEC07\";\n    Glyphs[\"luteGermanHUpper\"] = \"\\uEC1E\";\n    Glyphs[\"luteGermanILower\"] = \"\\uEC08\";\n    Glyphs[\"luteGermanIUpper\"] = \"\\uEC1F\";\n    Glyphs[\"luteGermanKLower\"] = \"\\uEC09\";\n    Glyphs[\"luteGermanKUpper\"] = \"\\uEC20\";\n    Glyphs[\"luteGermanLLower\"] = \"\\uEC0A\";\n    Glyphs[\"luteGermanLUpper\"] = \"\\uEC21\";\n    Glyphs[\"luteGermanMLower\"] = \"\\uEC0B\";\n    Glyphs[\"luteGermanMUpper\"] = \"\\uEC22\";\n    Glyphs[\"luteGermanNLower\"] = \"\\uEC0C\";\n    Glyphs[\"luteGermanNUpper\"] = \"\\uEC23\";\n    Glyphs[\"luteGermanOLower\"] = \"\\uEC0D\";\n    Glyphs[\"luteGermanPLower\"] = \"\\uEC0E\";\n    Glyphs[\"luteGermanQLower\"] = \"\\uEC0F\";\n    Glyphs[\"luteGermanRLower\"] = \"\\uEC10\";\n    Glyphs[\"luteGermanSLower\"] = \"\\uEC11\";\n    Glyphs[\"luteGermanTLower\"] = \"\\uEC12\";\n    Glyphs[\"luteGermanVLower\"] = \"\\uEC13\";\n    Glyphs[\"luteGermanXLower\"] = \"\\uEC14\";\n    Glyphs[\"luteGermanYLower\"] = \"\\uEC15\";\n    Glyphs[\"luteGermanZLower\"] = \"\\uEC16\";\n    Glyphs[\"luteItalianClefCSolFaUt\"] = \"\\uEBF1\";\n    Glyphs[\"luteItalianClefFFaUt\"] = \"\\uEBF0\";\n    Glyphs[\"luteItalianFret0\"] = \"\\uEBE0\";\n    Glyphs[\"luteItalianFret1\"] = \"\\uEBE1\";\n    Glyphs[\"luteItalianFret2\"] = \"\\uEBE2\";\n    Glyphs[\"luteItalianFret3\"] = \"\\uEBE3\";\n    Glyphs[\"luteItalianFret4\"] = \"\\uEBE4\";\n    Glyphs[\"luteItalianFret5\"] = \"\\uEBE5\";\n    Glyphs[\"luteItalianFret6\"] = \"\\uEBE6\";\n    Glyphs[\"luteItalianFret7\"] = \"\\uEBE7\";\n    Glyphs[\"luteItalianFret8\"] = \"\\uEBE8\";\n    Glyphs[\"luteItalianFret9\"] = \"\\uEBE9\";\n    Glyphs[\"luteItalianHoldFinger\"] = \"\\uEBF4\";\n    Glyphs[\"luteItalianHoldNote\"] = \"\\uEBF3\";\n    Glyphs[\"luteItalianReleaseFinger\"] = \"\\uEBF5\";\n    Glyphs[\"luteItalianTempoFast\"] = \"\\uEBEA\";\n    Glyphs[\"luteItalianTempoNeitherFastNorSlow\"] = \"\\uEBEC\";\n    Glyphs[\"luteItalianTempoSlow\"] = \"\\uEBED\";\n    Glyphs[\"luteItalianTempoSomewhatFast\"] = \"\\uEBEB\";\n    Glyphs[\"luteItalianTempoVerySlow\"] = \"\\uEBEE\";\n    Glyphs[\"luteItalianTimeTriple\"] = \"\\uEBEF\";\n    Glyphs[\"luteItalianTremolo\"] = \"\\uEBF2\";\n    Glyphs[\"luteItalianVibrato\"] = \"\\uEBF6\";\n    Glyphs[\"luteStaff6Lines\"] = \"\\uEBA0\";\n    Glyphs[\"luteStaff6LinesNarrow\"] = \"\\uEBA2\";\n    Glyphs[\"luteStaff6LinesWide\"] = \"\\uEBA1\";\n    Glyphs[\"lyricsElision\"] = \"\\uE551\";\n    Glyphs[\"lyricsElisionNarrow\"] = \"\\uE550\";\n    Glyphs[\"lyricsElisionWide\"] = \"\\uE552\";\n    Glyphs[\"lyricsHyphenBaseline\"] = \"\\uE553\";\n    Glyphs[\"lyricsHyphenBaselineNonBreaking\"] = \"\\uE554\";\n    Glyphs[\"lyricsTextRepeat\"] = \"\\uE555\";\n    Glyphs[\"medRenFlatHardB\"] = \"\\uE9E1\";\n    Glyphs[\"medRenFlatSoftB\"] = \"\\uE9E0\";\n    Glyphs[\"medRenFlatWithDot\"] = \"\\uE9E4\";\n    Glyphs[\"medRenGClefCMN\"] = \"\\uEA24\";\n    Glyphs[\"medRenLiquescenceCMN\"] = \"\\uEA22\";\n    Glyphs[\"medRenLiquescentAscCMN\"] = \"\\uEA26\";\n    Glyphs[\"medRenLiquescentDescCMN\"] = \"\\uEA27\";\n    Glyphs[\"medRenNatural\"] = \"\\uE9E2\";\n    Glyphs[\"medRenNaturalWithCross\"] = \"\\uE9E5\";\n    Glyphs[\"medRenOriscusCMN\"] = \"\\uEA2A\";\n    Glyphs[\"medRenPlicaCMN\"] = \"\\uEA23\";\n    Glyphs[\"medRenPunctumCMN\"] = \"\\uEA25\";\n    Glyphs[\"medRenQuilismaCMN\"] = \"\\uEA28\";\n    Glyphs[\"medRenSharpCroix\"] = \"\\uE9E3\";\n    Glyphs[\"medRenStrophicusCMN\"] = \"\\uEA29\";\n    Glyphs[\"mensuralAlterationSign\"] = \"\\uEA10\";\n    Glyphs[\"mensuralBlackBrevis\"] = \"\\uE952\";\n    Glyphs[\"mensuralBlackBrevisVoid\"] = \"\\uE956\";\n    Glyphs[\"mensuralBlackDragma\"] = \"\\uE95A\";\n    Glyphs[\"mensuralBlackLonga\"] = \"\\uE951\";\n    Glyphs[\"mensuralBlackMaxima\"] = \"\\uE950\";\n    Glyphs[\"mensuralBlackMinima\"] = \"\\uE954\";\n    Glyphs[\"mensuralBlackMinimaVoid\"] = \"\\uE958\";\n    Glyphs[\"mensuralBlackSemibrevis\"] = \"\\uE953\";\n    Glyphs[\"mensuralBlackSemibrevisCaudata\"] = \"\\uE959\";\n    Glyphs[\"mensuralBlackSemibrevisOblique\"] = \"\\uE95B\";\n    Glyphs[\"mensuralBlackSemibrevisVoid\"] = \"\\uE957\";\n    Glyphs[\"mensuralBlackSemiminima\"] = \"\\uE955\";\n    Glyphs[\"mensuralCclef\"] = \"\\uE905\";\n    Glyphs[\"mensuralCclefPetrucciPosHigh\"] = \"\\uE90A\";\n    Glyphs[\"mensuralCclefPetrucciPosHighest\"] = \"\\uE90B\";\n    Glyphs[\"mensuralCclefPetrucciPosLow\"] = \"\\uE908\";\n    Glyphs[\"mensuralCclefPetrucciPosLowest\"] = \"\\uE907\";\n    Glyphs[\"mensuralCclefPetrucciPosMiddle\"] = \"\\uE909\";\n    Glyphs[\"mensuralColorationEndRound\"] = \"\\uEA0F\";\n    Glyphs[\"mensuralColorationEndSquare\"] = \"\\uEA0D\";\n    Glyphs[\"mensuralColorationStartRound\"] = \"\\uEA0E\";\n    Glyphs[\"mensuralColorationStartSquare\"] = \"\\uEA0C\";\n    Glyphs[\"mensuralCombStemDiagonal\"] = \"\\uE940\";\n    Glyphs[\"mensuralCombStemDown\"] = \"\\uE93F\";\n    Glyphs[\"mensuralCombStemDownFlagExtended\"] = \"\\uE948\";\n    Glyphs[\"mensuralCombStemDownFlagFlared\"] = \"\\uE946\";\n    Glyphs[\"mensuralCombStemDownFlagFusa\"] = \"\\uE94C\";\n    Glyphs[\"mensuralCombStemDownFlagLeft\"] = \"\\uE944\";\n    Glyphs[\"mensuralCombStemDownFlagRight\"] = \"\\uE942\";\n    Glyphs[\"mensuralCombStemDownFlagSemiminima\"] = \"\\uE94A\";\n    Glyphs[\"mensuralCombStemUp\"] = \"\\uE93E\";\n    Glyphs[\"mensuralCombStemUpFlagExtended\"] = \"\\uE947\";\n    Glyphs[\"mensuralCombStemUpFlagFlared\"] = \"\\uE945\";\n    Glyphs[\"mensuralCombStemUpFlagFusa\"] = \"\\uE94B\";\n    Glyphs[\"mensuralCombStemUpFlagLeft\"] = \"\\uE943\";\n    Glyphs[\"mensuralCombStemUpFlagRight\"] = \"\\uE941\";\n    Glyphs[\"mensuralCombStemUpFlagSemiminima\"] = \"\\uE949\";\n    Glyphs[\"mensuralCustosCheckmark\"] = \"\\uEA0A\";\n    Glyphs[\"mensuralCustosDown\"] = \"\\uEA03\";\n    Glyphs[\"mensuralCustosTurn\"] = \"\\uEA0B\";\n    Glyphs[\"mensuralCustosUp\"] = \"\\uEA02\";\n    Glyphs[\"mensuralFclef\"] = \"\\uE903\";\n    Glyphs[\"mensuralFclefPetrucci\"] = \"\\uE904\";\n    Glyphs[\"mensuralGclef\"] = \"\\uE900\";\n    Glyphs[\"mensuralGclefPetrucci\"] = \"\\uE901\";\n    Glyphs[\"mensuralModusImperfectumVert\"] = \"\\uE92D\";\n    Glyphs[\"mensuralModusPerfectumVert\"] = \"\\uE92C\";\n    Glyphs[\"mensuralNoteheadLongaBlack\"] = \"\\uE934\";\n    Glyphs[\"mensuralNoteheadLongaBlackVoid\"] = \"\\uE936\";\n    Glyphs[\"mensuralNoteheadLongaVoid\"] = \"\\uE935\";\n    Glyphs[\"mensuralNoteheadLongaWhite\"] = \"\\uE937\";\n    Glyphs[\"mensuralNoteheadMaximaBlack\"] = \"\\uE930\";\n    Glyphs[\"mensuralNoteheadMaximaBlackVoid\"] = \"\\uE932\";\n    Glyphs[\"mensuralNoteheadMaximaVoid\"] = \"\\uE931\";\n    Glyphs[\"mensuralNoteheadMaximaWhite\"] = \"\\uE933\";\n    Glyphs[\"mensuralNoteheadMinimaWhite\"] = \"\\uE93C\";\n    Glyphs[\"mensuralNoteheadSemibrevisBlack\"] = \"\\uE938\";\n    Glyphs[\"mensuralNoteheadSemibrevisBlackVoid\"] = \"\\uE93A\";\n    Glyphs[\"mensuralNoteheadSemibrevisBlackVoidTurned\"] = \"\\uE93B\";\n    Glyphs[\"mensuralNoteheadSemibrevisVoid\"] = \"\\uE939\";\n    Glyphs[\"mensuralNoteheadSemiminimaWhite\"] = \"\\uE93D\";\n    Glyphs[\"mensuralObliqueAsc2ndBlack\"] = \"\\uE970\";\n    Glyphs[\"mensuralObliqueAsc2ndBlackVoid\"] = \"\\uE972\";\n    Glyphs[\"mensuralObliqueAsc2ndVoid\"] = \"\\uE971\";\n    Glyphs[\"mensuralObliqueAsc2ndWhite\"] = \"\\uE973\";\n    Glyphs[\"mensuralObliqueAsc3rdBlack\"] = \"\\uE974\";\n    Glyphs[\"mensuralObliqueAsc3rdBlackVoid\"] = \"\\uE976\";\n    Glyphs[\"mensuralObliqueAsc3rdVoid\"] = \"\\uE975\";\n    Glyphs[\"mensuralObliqueAsc3rdWhite\"] = \"\\uE977\";\n    Glyphs[\"mensuralObliqueAsc4thBlack\"] = \"\\uE978\";\n    Glyphs[\"mensuralObliqueAsc4thBlackVoid\"] = \"\\uE97A\";\n    Glyphs[\"mensuralObliqueAsc4thVoid\"] = \"\\uE979\";\n    Glyphs[\"mensuralObliqueAsc4thWhite\"] = \"\\uE97B\";\n    Glyphs[\"mensuralObliqueAsc5thBlack\"] = \"\\uE97C\";\n    Glyphs[\"mensuralObliqueAsc5thBlackVoid\"] = \"\\uE97E\";\n    Glyphs[\"mensuralObliqueAsc5thVoid\"] = \"\\uE97D\";\n    Glyphs[\"mensuralObliqueAsc5thWhite\"] = \"\\uE97F\";\n    Glyphs[\"mensuralObliqueDesc2ndBlack\"] = \"\\uE980\";\n    Glyphs[\"mensuralObliqueDesc2ndBlackVoid\"] = \"\\uE982\";\n    Glyphs[\"mensuralObliqueDesc2ndVoid\"] = \"\\uE981\";\n    Glyphs[\"mensuralObliqueDesc2ndWhite\"] = \"\\uE983\";\n    Glyphs[\"mensuralObliqueDesc3rdBlack\"] = \"\\uE984\";\n    Glyphs[\"mensuralObliqueDesc3rdBlackVoid\"] = \"\\uE986\";\n    Glyphs[\"mensuralObliqueDesc3rdVoid\"] = \"\\uE985\";\n    Glyphs[\"mensuralObliqueDesc3rdWhite\"] = \"\\uE987\";\n    Glyphs[\"mensuralObliqueDesc4thBlack\"] = \"\\uE988\";\n    Glyphs[\"mensuralObliqueDesc4thBlackVoid\"] = \"\\uE98A\";\n    Glyphs[\"mensuralObliqueDesc4thVoid\"] = \"\\uE989\";\n    Glyphs[\"mensuralObliqueDesc4thWhite\"] = \"\\uE98B\";\n    Glyphs[\"mensuralObliqueDesc5thBlack\"] = \"\\uE98C\";\n    Glyphs[\"mensuralObliqueDesc5thBlackVoid\"] = \"\\uE98E\";\n    Glyphs[\"mensuralObliqueDesc5thVoid\"] = \"\\uE98D\";\n    Glyphs[\"mensuralObliqueDesc5thWhite\"] = \"\\uE98F\";\n    Glyphs[\"mensuralProlation1\"] = \"\\uE910\";\n    Glyphs[\"mensuralProlation10\"] = \"\\uE919\";\n    Glyphs[\"mensuralProlation11\"] = \"\\uE91A\";\n    Glyphs[\"mensuralProlation2\"] = \"\\uE911\";\n    Glyphs[\"mensuralProlation3\"] = \"\\uE912\";\n    Glyphs[\"mensuralProlation4\"] = \"\\uE913\";\n    Glyphs[\"mensuralProlation5\"] = \"\\uE914\";\n    Glyphs[\"mensuralProlation6\"] = \"\\uE915\";\n    Glyphs[\"mensuralProlation7\"] = \"\\uE916\";\n    Glyphs[\"mensuralProlation8\"] = \"\\uE917\";\n    Glyphs[\"mensuralProlation9\"] = \"\\uE918\";\n    Glyphs[\"mensuralProlationCombiningDot\"] = \"\\uE920\";\n    Glyphs[\"mensuralProlationCombiningDotVoid\"] = \"\\uE924\";\n    Glyphs[\"mensuralProlationCombiningStroke\"] = \"\\uE925\";\n    Glyphs[\"mensuralProlationCombiningThreeDots\"] = \"\\uE922\";\n    Glyphs[\"mensuralProlationCombiningThreeDotsTri\"] = \"\\uE923\";\n    Glyphs[\"mensuralProlationCombiningTwoDots\"] = \"\\uE921\";\n    Glyphs[\"mensuralProportion1\"] = \"\\uE926\";\n    Glyphs[\"mensuralProportion2\"] = \"\\uE927\";\n    Glyphs[\"mensuralProportion3\"] = \"\\uE928\";\n    Glyphs[\"mensuralProportion4\"] = \"\\uE929\";\n    Glyphs[\"mensuralProportion5\"] = \"\\uEE90\";\n    Glyphs[\"mensuralProportion6\"] = \"\\uEE91\";\n    Glyphs[\"mensuralProportion7\"] = \"\\uEE92\";\n    Glyphs[\"mensuralProportion8\"] = \"\\uEE93\";\n    Glyphs[\"mensuralProportion9\"] = \"\\uEE94\";\n    Glyphs[\"mensuralProportionMajor\"] = \"\\uE92B\";\n    Glyphs[\"mensuralProportionMinor\"] = \"\\uE92A\";\n    Glyphs[\"mensuralProportionProportioDupla1\"] = \"\\uE91C\";\n    Glyphs[\"mensuralProportionProportioDupla2\"] = \"\\uE91D\";\n    Glyphs[\"mensuralProportionProportioQuadrupla\"] = \"\\uE91F\";\n    Glyphs[\"mensuralProportionProportioTripla\"] = \"\\uE91E\";\n    Glyphs[\"mensuralProportionTempusPerfectum\"] = \"\\uE91B\";\n    Glyphs[\"mensuralRestBrevis\"] = \"\\uE9F3\";\n    Glyphs[\"mensuralRestFusa\"] = \"\\uE9F7\";\n    Glyphs[\"mensuralRestLongaImperfecta\"] = \"\\uE9F2\";\n    Glyphs[\"mensuralRestLongaPerfecta\"] = \"\\uE9F1\";\n    Glyphs[\"mensuralRestMaxima\"] = \"\\uE9F0\";\n    Glyphs[\"mensuralRestMinima\"] = \"\\uE9F5\";\n    Glyphs[\"mensuralRestSemibrevis\"] = \"\\uE9F4\";\n    Glyphs[\"mensuralRestSemifusa\"] = \"\\uE9F8\";\n    Glyphs[\"mensuralRestSemiminima\"] = \"\\uE9F6\";\n    Glyphs[\"mensuralSignumDown\"] = \"\\uEA01\";\n    Glyphs[\"mensuralSignumUp\"] = \"\\uEA00\";\n    Glyphs[\"mensuralTempusImperfectumHoriz\"] = \"\\uE92F\";\n    Glyphs[\"mensuralTempusPerfectumHoriz\"] = \"\\uE92E\";\n    Glyphs[\"mensuralWhiteBrevis\"] = \"\\uE95E\";\n    Glyphs[\"mensuralWhiteFusa\"] = \"\\uE961\";\n    Glyphs[\"mensuralWhiteLonga\"] = \"\\uE95D\";\n    Glyphs[\"mensuralWhiteMaxima\"] = \"\\uE95C\";\n    Glyphs[\"mensuralWhiteMinima\"] = \"\\uE95F\";\n    Glyphs[\"mensuralWhiteSemibrevis\"] = \"\\uE962\";\n    Glyphs[\"mensuralWhiteSemiminima\"] = \"\\uE960\";\n    Glyphs[\"metAugmentationDot\"] = \"\\uECB7\";\n    Glyphs[\"metNote1024thDown\"] = \"\\uECB6\";\n    Glyphs[\"metNote1024thUp\"] = \"\\uECB5\";\n    Glyphs[\"metNote128thDown\"] = \"\\uECB0\";\n    Glyphs[\"metNote128thUp\"] = \"\\uECAF\";\n    Glyphs[\"metNote16thDown\"] = \"\\uECAA\";\n    Glyphs[\"metNote16thUp\"] = \"\\uECA9\";\n    Glyphs[\"metNote256thDown\"] = \"\\uECB2\";\n    Glyphs[\"metNote256thUp\"] = \"\\uECB1\";\n    Glyphs[\"metNote32ndDown\"] = \"\\uECAC\";\n    Glyphs[\"metNote32ndUp\"] = \"\\uECAB\";\n    Glyphs[\"metNote512thDown\"] = \"\\uECB4\";\n    Glyphs[\"metNote512thUp\"] = \"\\uECB3\";\n    Glyphs[\"metNote64thDown\"] = \"\\uECAE\";\n    Glyphs[\"metNote64thUp\"] = \"\\uECAD\";\n    Glyphs[\"metNote8thDown\"] = \"\\uECA8\";\n    Glyphs[\"metNote8thUp\"] = \"\\uECA7\";\n    Glyphs[\"metNoteDoubleWhole\"] = \"\\uECA0\";\n    Glyphs[\"metNoteDoubleWholeSquare\"] = \"\\uECA1\";\n    Glyphs[\"metNoteHalfDown\"] = \"\\uECA4\";\n    Glyphs[\"metNoteHalfUp\"] = \"\\uECA3\";\n    Glyphs[\"metNoteQuarterDown\"] = \"\\uECA6\";\n    Glyphs[\"metNoteQuarterUp\"] = \"\\uECA5\";\n    Glyphs[\"metNoteWhole\"] = \"\\uECA2\";\n    Glyphs[\"metricModulationArrowLeft\"] = \"\\uEC63\";\n    Glyphs[\"metricModulationArrowRight\"] = \"\\uEC64\";\n    Glyphs[\"miscDoNotCopy\"] = \"\\uEC61\";\n    Glyphs[\"miscDoNotPhotocopy\"] = \"\\uEC60\";\n    Glyphs[\"miscEyeglasses\"] = \"\\uEC62\";\n    Glyphs[\"note1024thDown\"] = \"\\uE1E6\";\n    Glyphs[\"note1024thUp\"] = \"\\uE1E5\";\n    Glyphs[\"note128thDown\"] = \"\\uE1E0\";\n    Glyphs[\"note128thUp\"] = \"\\uE1DF\";\n    Glyphs[\"note16thDown\"] = \"\\uE1DA\";\n    Glyphs[\"note16thUp\"] = \"\\uE1D9\";\n    Glyphs[\"note256thDown\"] = \"\\uE1E2\";\n    Glyphs[\"note256thUp\"] = \"\\uE1E1\";\n    Glyphs[\"note32ndDown\"] = \"\\uE1DC\";\n    Glyphs[\"note32ndUp\"] = \"\\uE1DB\";\n    Glyphs[\"note512thDown\"] = \"\\uE1E4\";\n    Glyphs[\"note512thUp\"] = \"\\uE1E3\";\n    Glyphs[\"note64thDown\"] = \"\\uE1DE\";\n    Glyphs[\"note64thUp\"] = \"\\uE1DD\";\n    Glyphs[\"note8thDown\"] = \"\\uE1D8\";\n    Glyphs[\"note8thUp\"] = \"\\uE1D7\";\n    Glyphs[\"noteABlack\"] = \"\\uE197\";\n    Glyphs[\"noteAFlatBlack\"] = \"\\uE196\";\n    Glyphs[\"noteAFlatHalf\"] = \"\\uE17F\";\n    Glyphs[\"noteAFlatWhole\"] = \"\\uE168\";\n    Glyphs[\"noteAHalf\"] = \"\\uE180\";\n    Glyphs[\"noteASharpBlack\"] = \"\\uE198\";\n    Glyphs[\"noteASharpHalf\"] = \"\\uE181\";\n    Glyphs[\"noteASharpWhole\"] = \"\\uE16A\";\n    Glyphs[\"noteAWhole\"] = \"\\uE169\";\n    Glyphs[\"noteBBlack\"] = \"\\uE19A\";\n    Glyphs[\"noteBFlatBlack\"] = \"\\uE199\";\n    Glyphs[\"noteBFlatHalf\"] = \"\\uE182\";\n    Glyphs[\"noteBFlatWhole\"] = \"\\uE16B\";\n    Glyphs[\"noteBHalf\"] = \"\\uE183\";\n    Glyphs[\"noteBSharpBlack\"] = \"\\uE19B\";\n    Glyphs[\"noteBSharpHalf\"] = \"\\uE184\";\n    Glyphs[\"noteBSharpWhole\"] = \"\\uE16D\";\n    Glyphs[\"noteBWhole\"] = \"\\uE16C\";\n    Glyphs[\"noteCBlack\"] = \"\\uE19D\";\n    Glyphs[\"noteCFlatBlack\"] = \"\\uE19C\";\n    Glyphs[\"noteCFlatHalf\"] = \"\\uE185\";\n    Glyphs[\"noteCFlatWhole\"] = \"\\uE16E\";\n    Glyphs[\"noteCHalf\"] = \"\\uE186\";\n    Glyphs[\"noteCSharpBlack\"] = \"\\uE19E\";\n    Glyphs[\"noteCSharpHalf\"] = \"\\uE187\";\n    Glyphs[\"noteCSharpWhole\"] = \"\\uE170\";\n    Glyphs[\"noteCWhole\"] = \"\\uE16F\";\n    Glyphs[\"noteDBlack\"] = \"\\uE1A0\";\n    Glyphs[\"noteDFlatBlack\"] = \"\\uE19F\";\n    Glyphs[\"noteDFlatHalf\"] = \"\\uE188\";\n    Glyphs[\"noteDFlatWhole\"] = \"\\uE171\";\n    Glyphs[\"noteDHalf\"] = \"\\uE189\";\n    Glyphs[\"noteDSharpBlack\"] = \"\\uE1A1\";\n    Glyphs[\"noteDSharpHalf\"] = \"\\uE18A\";\n    Glyphs[\"noteDSharpWhole\"] = \"\\uE173\";\n    Glyphs[\"noteDWhole\"] = \"\\uE172\";\n    Glyphs[\"noteDiBlack\"] = \"\\uEEF2\";\n    Glyphs[\"noteDiHalf\"] = \"\\uEEE9\";\n    Glyphs[\"noteDiWhole\"] = \"\\uEEE0\";\n    Glyphs[\"noteDoBlack\"] = \"\\uE160\";\n    Glyphs[\"noteDoHalf\"] = \"\\uE158\";\n    Glyphs[\"noteDoWhole\"] = \"\\uE150\";\n    Glyphs[\"noteDoubleWhole\"] = \"\\uE1D0\";\n    Glyphs[\"noteDoubleWholeSquare\"] = \"\\uE1D1\";\n    Glyphs[\"noteEBlack\"] = \"\\uE1A3\";\n    Glyphs[\"noteEFlatBlack\"] = \"\\uE1A2\";\n    Glyphs[\"noteEFlatHalf\"] = \"\\uE18B\";\n    Glyphs[\"noteEFlatWhole\"] = \"\\uE174\";\n    Glyphs[\"noteEHalf\"] = \"\\uE18C\";\n    Glyphs[\"noteESharpBlack\"] = \"\\uE1A4\";\n    Glyphs[\"noteESharpHalf\"] = \"\\uE18D\";\n    Glyphs[\"noteESharpWhole\"] = \"\\uE176\";\n    Glyphs[\"noteEWhole\"] = \"\\uE175\";\n    Glyphs[\"noteEmptyBlack\"] = \"\\uE1AF\";\n    Glyphs[\"noteEmptyHalf\"] = \"\\uE1AE\";\n    Glyphs[\"noteEmptyWhole\"] = \"\\uE1AD\";\n    Glyphs[\"noteFBlack\"] = \"\\uE1A6\";\n    Glyphs[\"noteFFlatBlack\"] = \"\\uE1A5\";\n    Glyphs[\"noteFFlatHalf\"] = \"\\uE18E\";\n    Glyphs[\"noteFFlatWhole\"] = \"\\uE177\";\n    Glyphs[\"noteFHalf\"] = \"\\uE18F\";\n    Glyphs[\"noteFSharpBlack\"] = \"\\uE1A7\";\n    Glyphs[\"noteFSharpHalf\"] = \"\\uE190\";\n    Glyphs[\"noteFSharpWhole\"] = \"\\uE179\";\n    Glyphs[\"noteFWhole\"] = \"\\uE178\";\n    Glyphs[\"noteFaBlack\"] = \"\\uE163\";\n    Glyphs[\"noteFaHalf\"] = \"\\uE15B\";\n    Glyphs[\"noteFaWhole\"] = \"\\uE153\";\n    Glyphs[\"noteFiBlack\"] = \"\\uEEF6\";\n    Glyphs[\"noteFiHalf\"] = \"\\uEEED\";\n    Glyphs[\"noteFiWhole\"] = \"\\uEEE4\";\n    Glyphs[\"noteGBlack\"] = \"\\uE1A9\";\n    Glyphs[\"noteGFlatBlack\"] = \"\\uE1A8\";\n    Glyphs[\"noteGFlatHalf\"] = \"\\uE191\";\n    Glyphs[\"noteGFlatWhole\"] = \"\\uE17A\";\n    Glyphs[\"noteGHalf\"] = \"\\uE192\";\n    Glyphs[\"noteGSharpBlack\"] = \"\\uE1AA\";\n    Glyphs[\"noteGSharpHalf\"] = \"\\uE193\";\n    Glyphs[\"noteGSharpWhole\"] = \"\\uE17C\";\n    Glyphs[\"noteGWhole\"] = \"\\uE17B\";\n    Glyphs[\"noteHBlack\"] = \"\\uE1AB\";\n    Glyphs[\"noteHHalf\"] = \"\\uE194\";\n    Glyphs[\"noteHSharpBlack\"] = \"\\uE1AC\";\n    Glyphs[\"noteHSharpHalf\"] = \"\\uE195\";\n    Glyphs[\"noteHSharpWhole\"] = \"\\uE17E\";\n    Glyphs[\"noteHWhole\"] = \"\\uE17D\";\n    Glyphs[\"noteHalfDown\"] = \"\\uE1D4\";\n    Glyphs[\"noteHalfUp\"] = \"\\uE1D3\";\n    Glyphs[\"noteLaBlack\"] = \"\\uE165\";\n    Glyphs[\"noteLaHalf\"] = \"\\uE15D\";\n    Glyphs[\"noteLaWhole\"] = \"\\uE155\";\n    Glyphs[\"noteLeBlack\"] = \"\\uEEF9\";\n    Glyphs[\"noteLeHalf\"] = \"\\uEEF0\";\n    Glyphs[\"noteLeWhole\"] = \"\\uEEE7\";\n    Glyphs[\"noteLiBlack\"] = \"\\uEEF8\";\n    Glyphs[\"noteLiHalf\"] = \"\\uEEEF\";\n    Glyphs[\"noteLiWhole\"] = \"\\uEEE6\";\n    Glyphs[\"noteMeBlack\"] = \"\\uEEF5\";\n    Glyphs[\"noteMeHalf\"] = \"\\uEEEC\";\n    Glyphs[\"noteMeWhole\"] = \"\\uEEE3\";\n    Glyphs[\"noteMiBlack\"] = \"\\uE162\";\n    Glyphs[\"noteMiHalf\"] = \"\\uE15A\";\n    Glyphs[\"noteMiWhole\"] = \"\\uE152\";\n    Glyphs[\"noteQuarterDown\"] = \"\\uE1D6\";\n    Glyphs[\"noteQuarterUp\"] = \"\\uE1D5\";\n    Glyphs[\"noteRaBlack\"] = \"\\uEEF4\";\n    Glyphs[\"noteRaHalf\"] = \"\\uEEEB\";\n    Glyphs[\"noteRaWhole\"] = \"\\uEEE2\";\n    Glyphs[\"noteReBlack\"] = \"\\uE161\";\n    Glyphs[\"noteReHalf\"] = \"\\uE159\";\n    Glyphs[\"noteReWhole\"] = \"\\uE151\";\n    Glyphs[\"noteRiBlack\"] = \"\\uEEF3\";\n    Glyphs[\"noteRiHalf\"] = \"\\uEEEA\";\n    Glyphs[\"noteRiWhole\"] = \"\\uEEE1\";\n    Glyphs[\"noteSeBlack\"] = \"\\uEEF7\";\n    Glyphs[\"noteSeHalf\"] = \"\\uEEEE\";\n    Glyphs[\"noteSeWhole\"] = \"\\uEEE5\";\n    Glyphs[\"noteShapeArrowheadLeftBlack\"] = \"\\uE1C9\";\n    Glyphs[\"noteShapeArrowheadLeftDoubleWhole\"] = \"\\uECDC\";\n    Glyphs[\"noteShapeArrowheadLeftWhite\"] = \"\\uE1C8\";\n    Glyphs[\"noteShapeDiamondBlack\"] = \"\\uE1B9\";\n    Glyphs[\"noteShapeDiamondDoubleWhole\"] = \"\\uECD4\";\n    Glyphs[\"noteShapeDiamondWhite\"] = \"\\uE1B8\";\n    Glyphs[\"noteShapeIsoscelesTriangleBlack\"] = \"\\uE1C5\";\n    Glyphs[\"noteShapeIsoscelesTriangleDoubleWhole\"] = \"\\uECDA\";\n    Glyphs[\"noteShapeIsoscelesTriangleWhite\"] = \"\\uE1C4\";\n    Glyphs[\"noteShapeKeystoneBlack\"] = \"\\uE1C1\";\n    Glyphs[\"noteShapeKeystoneDoubleWhole\"] = \"\\uECD8\";\n    Glyphs[\"noteShapeKeystoneWhite\"] = \"\\uE1C0\";\n    Glyphs[\"noteShapeMoonBlack\"] = \"\\uE1BD\";\n    Glyphs[\"noteShapeMoonDoubleWhole\"] = \"\\uECD6\";\n    Glyphs[\"noteShapeMoonLeftBlack\"] = \"\\uE1C7\";\n    Glyphs[\"noteShapeMoonLeftDoubleWhole\"] = \"\\uECDB\";\n    Glyphs[\"noteShapeMoonLeftWhite\"] = \"\\uE1C6\";\n    Glyphs[\"noteShapeMoonWhite\"] = \"\\uE1BC\";\n    Glyphs[\"noteShapeQuarterMoonBlack\"] = \"\\uE1C3\";\n    Glyphs[\"noteShapeQuarterMoonDoubleWhole\"] = \"\\uECD9\";\n    Glyphs[\"noteShapeQuarterMoonWhite\"] = \"\\uE1C2\";\n    Glyphs[\"noteShapeRoundBlack\"] = \"\\uE1B1\";\n    Glyphs[\"noteShapeRoundDoubleWhole\"] = \"\\uECD0\";\n    Glyphs[\"noteShapeRoundWhite\"] = \"\\uE1B0\";\n    Glyphs[\"noteShapeSquareBlack\"] = \"\\uE1B3\";\n    Glyphs[\"noteShapeSquareDoubleWhole\"] = \"\\uECD1\";\n    Glyphs[\"noteShapeSquareWhite\"] = \"\\uE1B2\";\n    Glyphs[\"noteShapeTriangleLeftBlack\"] = \"\\uE1B7\";\n    Glyphs[\"noteShapeTriangleLeftDoubleWhole\"] = \"\\uECD3\";\n    Glyphs[\"noteShapeTriangleLeftWhite\"] = \"\\uE1B6\";\n    Glyphs[\"noteShapeTriangleRightBlack\"] = \"\\uE1B5\";\n    Glyphs[\"noteShapeTriangleRightDoubleWhole\"] = \"\\uECD2\";\n    Glyphs[\"noteShapeTriangleRightWhite\"] = \"\\uE1B4\";\n    Glyphs[\"noteShapeTriangleRoundBlack\"] = \"\\uE1BF\";\n    Glyphs[\"noteShapeTriangleRoundDoubleWhole\"] = \"\\uECD7\";\n    Glyphs[\"noteShapeTriangleRoundLeftBlack\"] = \"\\uE1CB\";\n    Glyphs[\"noteShapeTriangleRoundLeftDoubleWhole\"] = \"\\uECDD\";\n    Glyphs[\"noteShapeTriangleRoundLeftWhite\"] = \"\\uE1CA\";\n    Glyphs[\"noteShapeTriangleRoundWhite\"] = \"\\uE1BE\";\n    Glyphs[\"noteShapeTriangleUpBlack\"] = \"\\uE1BB\";\n    Glyphs[\"noteShapeTriangleUpDoubleWhole\"] = \"\\uECD5\";\n    Glyphs[\"noteShapeTriangleUpWhite\"] = \"\\uE1BA\";\n    Glyphs[\"noteSiBlack\"] = \"\\uE167\";\n    Glyphs[\"noteSiHalf\"] = \"\\uE15F\";\n    Glyphs[\"noteSiWhole\"] = \"\\uE157\";\n    Glyphs[\"noteSoBlack\"] = \"\\uE164\";\n    Glyphs[\"noteSoHalf\"] = \"\\uE15C\";\n    Glyphs[\"noteSoWhole\"] = \"\\uE154\";\n    Glyphs[\"noteTeBlack\"] = \"\\uEEFA\";\n    Glyphs[\"noteTeHalf\"] = \"\\uEEF1\";\n    Glyphs[\"noteTeWhole\"] = \"\\uEEE8\";\n    Glyphs[\"noteTiBlack\"] = \"\\uE166\";\n    Glyphs[\"noteTiHalf\"] = \"\\uE15E\";\n    Glyphs[\"noteTiWhole\"] = \"\\uE156\";\n    Glyphs[\"noteWhole\"] = \"\\uE1D2\";\n    Glyphs[\"noteheadBlack\"] = \"\\uE0A4\";\n    Glyphs[\"noteheadCircleSlash\"] = \"\\uE0F7\";\n    Glyphs[\"noteheadCircleX\"] = \"\\uE0B3\";\n    Glyphs[\"noteheadCircleXDoubleWhole\"] = \"\\uE0B0\";\n    Glyphs[\"noteheadCircleXHalf\"] = \"\\uE0B2\";\n    Glyphs[\"noteheadCircleXWhole\"] = \"\\uE0B1\";\n    Glyphs[\"noteheadCircledBlack\"] = \"\\uE0E4\";\n    Glyphs[\"noteheadCircledBlackLarge\"] = \"\\uE0E8\";\n    Glyphs[\"noteheadCircledDoubleWhole\"] = \"\\uE0E7\";\n    Glyphs[\"noteheadCircledDoubleWholeLarge\"] = \"\\uE0EB\";\n    Glyphs[\"noteheadCircledHalf\"] = \"\\uE0E5\";\n    Glyphs[\"noteheadCircledHalfLarge\"] = \"\\uE0E9\";\n    Glyphs[\"noteheadCircledWhole\"] = \"\\uE0E6\";\n    Glyphs[\"noteheadCircledWholeLarge\"] = \"\\uE0EA\";\n    Glyphs[\"noteheadCircledXLarge\"] = \"\\uE0EC\";\n    Glyphs[\"noteheadClusterDoubleWhole2nd\"] = \"\\uE124\";\n    Glyphs[\"noteheadClusterDoubleWhole3rd\"] = \"\\uE128\";\n    Glyphs[\"noteheadClusterDoubleWholeBottom\"] = \"\\uE12E\";\n    Glyphs[\"noteheadClusterDoubleWholeMiddle\"] = \"\\uE12D\";\n    Glyphs[\"noteheadClusterDoubleWholeTop\"] = \"\\uE12C\";\n    Glyphs[\"noteheadClusterHalf2nd\"] = \"\\uE126\";\n    Glyphs[\"noteheadClusterHalf3rd\"] = \"\\uE12A\";\n    Glyphs[\"noteheadClusterHalfBottom\"] = \"\\uE134\";\n    Glyphs[\"noteheadClusterHalfMiddle\"] = \"\\uE133\";\n    Glyphs[\"noteheadClusterHalfTop\"] = \"\\uE132\";\n    Glyphs[\"noteheadClusterQuarter2nd\"] = \"\\uE127\";\n    Glyphs[\"noteheadClusterQuarter3rd\"] = \"\\uE12B\";\n    Glyphs[\"noteheadClusterQuarterBottom\"] = \"\\uE137\";\n    Glyphs[\"noteheadClusterQuarterMiddle\"] = \"\\uE136\";\n    Glyphs[\"noteheadClusterQuarterTop\"] = \"\\uE135\";\n    Glyphs[\"noteheadClusterRoundBlack\"] = \"\\uE123\";\n    Glyphs[\"noteheadClusterRoundWhite\"] = \"\\uE122\";\n    Glyphs[\"noteheadClusterSquareBlack\"] = \"\\uE121\";\n    Glyphs[\"noteheadClusterSquareWhite\"] = \"\\uE120\";\n    Glyphs[\"noteheadClusterWhole2nd\"] = \"\\uE125\";\n    Glyphs[\"noteheadClusterWhole3rd\"] = \"\\uE129\";\n    Glyphs[\"noteheadClusterWholeBottom\"] = \"\\uE131\";\n    Glyphs[\"noteheadClusterWholeMiddle\"] = \"\\uE130\";\n    Glyphs[\"noteheadClusterWholeTop\"] = \"\\uE12F\";\n    Glyphs[\"noteheadCowellEleventhNoteSeriesHalf\"] = \"\\uEEAE\";\n    Glyphs[\"noteheadCowellEleventhNoteSeriesWhole\"] = \"\\uEEAD\";\n    Glyphs[\"noteheadCowellEleventhSeriesBlack\"] = \"\\uEEAF\";\n    Glyphs[\"noteheadCowellFifteenthNoteSeriesBlack\"] = \"\\uEEB5\";\n    Glyphs[\"noteheadCowellFifteenthNoteSeriesHalf\"] = \"\\uEEB4\";\n    Glyphs[\"noteheadCowellFifteenthNoteSeriesWhole\"] = \"\\uEEB3\";\n    Glyphs[\"noteheadCowellFifthNoteSeriesBlack\"] = \"\\uEEA6\";\n    Glyphs[\"noteheadCowellFifthNoteSeriesHalf\"] = \"\\uEEA5\";\n    Glyphs[\"noteheadCowellFifthNoteSeriesWhole\"] = \"\\uEEA4\";\n    Glyphs[\"noteheadCowellNinthNoteSeriesBlack\"] = \"\\uEEAC\";\n    Glyphs[\"noteheadCowellNinthNoteSeriesHalf\"] = \"\\uEEAB\";\n    Glyphs[\"noteheadCowellNinthNoteSeriesWhole\"] = \"\\uEEAA\";\n    Glyphs[\"noteheadCowellSeventhNoteSeriesBlack\"] = \"\\uEEA9\";\n    Glyphs[\"noteheadCowellSeventhNoteSeriesHalf\"] = \"\\uEEA8\";\n    Glyphs[\"noteheadCowellSeventhNoteSeriesWhole\"] = \"\\uEEA7\";\n    Glyphs[\"noteheadCowellThirdNoteSeriesBlack\"] = \"\\uEEA3\";\n    Glyphs[\"noteheadCowellThirdNoteSeriesHalf\"] = \"\\uEEA2\";\n    Glyphs[\"noteheadCowellThirdNoteSeriesWhole\"] = \"\\uEEA1\";\n    Glyphs[\"noteheadCowellThirteenthNoteSeriesBlack\"] = \"\\uEEB2\";\n    Glyphs[\"noteheadCowellThirteenthNoteSeriesHalf\"] = \"\\uEEB1\";\n    Glyphs[\"noteheadCowellThirteenthNoteSeriesWhole\"] = \"\\uEEB0\";\n    Glyphs[\"noteheadDiamondBlack\"] = \"\\uE0DB\";\n    Glyphs[\"noteheadDiamondBlackOld\"] = \"\\uE0E2\";\n    Glyphs[\"noteheadDiamondBlackWide\"] = \"\\uE0DC\";\n    Glyphs[\"noteheadDiamondClusterBlack2nd\"] = \"\\uE139\";\n    Glyphs[\"noteheadDiamondClusterBlack3rd\"] = \"\\uE13B\";\n    Glyphs[\"noteheadDiamondClusterBlackBottom\"] = \"\\uE141\";\n    Glyphs[\"noteheadDiamondClusterBlackMiddle\"] = \"\\uE140\";\n    Glyphs[\"noteheadDiamondClusterBlackTop\"] = \"\\uE13F\";\n    Glyphs[\"noteheadDiamondClusterWhite2nd\"] = \"\\uE138\";\n    Glyphs[\"noteheadDiamondClusterWhite3rd\"] = \"\\uE13A\";\n    Glyphs[\"noteheadDiamondClusterWhiteBottom\"] = \"\\uE13E\";\n    Glyphs[\"noteheadDiamondClusterWhiteMiddle\"] = \"\\uE13D\";\n    Glyphs[\"noteheadDiamondClusterWhiteTop\"] = \"\\uE13C\";\n    Glyphs[\"noteheadDiamondDoubleWhole\"] = \"\\uE0D7\";\n    Glyphs[\"noteheadDiamondDoubleWholeOld\"] = \"\\uE0DF\";\n    Glyphs[\"noteheadDiamondHalf\"] = \"\\uE0D9\";\n    Glyphs[\"noteheadDiamondHalfFilled\"] = \"\\uE0E3\";\n    Glyphs[\"noteheadDiamondHalfOld\"] = \"\\uE0E1\";\n    Glyphs[\"noteheadDiamondHalfWide\"] = \"\\uE0DA\";\n    Glyphs[\"noteheadDiamondOpen\"] = \"\\uE0FC\";\n    Glyphs[\"noteheadDiamondWhite\"] = \"\\uE0DD\";\n    Glyphs[\"noteheadDiamondWhiteWide\"] = \"\\uE0DE\";\n    Glyphs[\"noteheadDiamondWhole\"] = \"\\uE0D8\";\n    Glyphs[\"noteheadDiamondWholeOld\"] = \"\\uE0E0\";\n    Glyphs[\"noteheadDoubleWhole\"] = \"\\uE0A0\";\n    Glyphs[\"noteheadDoubleWholeSquare\"] = \"\\uE0A1\";\n    Glyphs[\"noteheadDoubleWholeWithX\"] = \"\\uE0B4\";\n    Glyphs[\"noteheadHalf\"] = \"\\uE0A3\";\n    Glyphs[\"noteheadHalfFilled\"] = \"\\uE0FB\";\n    Glyphs[\"noteheadHalfWithX\"] = \"\\uE0B6\";\n    Glyphs[\"noteheadHeavyX\"] = \"\\uE0F8\";\n    Glyphs[\"noteheadHeavyXHat\"] = \"\\uE0F9\";\n    Glyphs[\"noteheadLargeArrowDownBlack\"] = \"\\uE0F4\";\n    Glyphs[\"noteheadLargeArrowDownDoubleWhole\"] = \"\\uE0F1\";\n    Glyphs[\"noteheadLargeArrowDownHalf\"] = \"\\uE0F3\";\n    Glyphs[\"noteheadLargeArrowDownWhole\"] = \"\\uE0F2\";\n    Glyphs[\"noteheadLargeArrowUpBlack\"] = \"\\uE0F0\";\n    Glyphs[\"noteheadLargeArrowUpDoubleWhole\"] = \"\\uE0ED\";\n    Glyphs[\"noteheadLargeArrowUpHalf\"] = \"\\uE0EF\";\n    Glyphs[\"noteheadLargeArrowUpWhole\"] = \"\\uE0EE\";\n    Glyphs[\"noteheadMoonBlack\"] = \"\\uE0CB\";\n    Glyphs[\"noteheadMoonWhite\"] = \"\\uE0CA\";\n    Glyphs[\"noteheadNancarrowSine\"] = \"\\uEEA0\";\n    Glyphs[\"noteheadNull\"] = \"\\uE0A5\";\n    Glyphs[\"noteheadParenthesis\"] = \"\\uE0CE\";\n    Glyphs[\"noteheadParenthesisLeft\"] = \"\\uE0F5\";\n    Glyphs[\"noteheadParenthesisRight\"] = \"\\uE0F6\";\n    Glyphs[\"noteheadPlusBlack\"] = \"\\uE0AF\";\n    Glyphs[\"noteheadPlusDoubleWhole\"] = \"\\uE0AC\";\n    Glyphs[\"noteheadPlusHalf\"] = \"\\uE0AE\";\n    Glyphs[\"noteheadPlusWhole\"] = \"\\uE0AD\";\n    Glyphs[\"noteheadRectangularClusterBlackBottom\"] = \"\\uE144\";\n    Glyphs[\"noteheadRectangularClusterBlackMiddle\"] = \"\\uE143\";\n    Glyphs[\"noteheadRectangularClusterBlackTop\"] = \"\\uE142\";\n    Glyphs[\"noteheadRectangularClusterWhiteBottom\"] = \"\\uE147\";\n    Glyphs[\"noteheadRectangularClusterWhiteMiddle\"] = \"\\uE146\";\n    Glyphs[\"noteheadRectangularClusterWhiteTop\"] = \"\\uE145\";\n    Glyphs[\"noteheadRoundBlack\"] = \"\\uE113\";\n    Glyphs[\"noteheadRoundBlackDoubleSlashed\"] = \"\\uE11C\";\n    Glyphs[\"noteheadRoundBlackLarge\"] = \"\\uE110\";\n    Glyphs[\"noteheadRoundBlackSlashed\"] = \"\\uE118\";\n    Glyphs[\"noteheadRoundBlackSlashedLarge\"] = \"\\uE116\";\n    Glyphs[\"noteheadRoundWhite\"] = \"\\uE114\";\n    Glyphs[\"noteheadRoundWhiteDoubleSlashed\"] = \"\\uE11D\";\n    Glyphs[\"noteheadRoundWhiteLarge\"] = \"\\uE111\";\n    Glyphs[\"noteheadRoundWhiteSlashed\"] = \"\\uE119\";\n    Glyphs[\"noteheadRoundWhiteSlashedLarge\"] = \"\\uE117\";\n    Glyphs[\"noteheadRoundWhiteWithDot\"] = \"\\uE115\";\n    Glyphs[\"noteheadRoundWhiteWithDotLarge\"] = \"\\uE112\";\n    Glyphs[\"noteheadSlashDiamondWhite\"] = \"\\uE104\";\n    Glyphs[\"noteheadSlashHorizontalEnds\"] = \"\\uE101\";\n    Glyphs[\"noteheadSlashHorizontalEndsMuted\"] = \"\\uE108\";\n    Glyphs[\"noteheadSlashVerticalEnds\"] = \"\\uE100\";\n    Glyphs[\"noteheadSlashVerticalEndsMuted\"] = \"\\uE107\";\n    Glyphs[\"noteheadSlashVerticalEndsSmall\"] = \"\\uE105\";\n    Glyphs[\"noteheadSlashWhiteDoubleWhole\"] = \"\\uE10A\";\n    Glyphs[\"noteheadSlashWhiteHalf\"] = \"\\uE103\";\n    Glyphs[\"noteheadSlashWhiteMuted\"] = \"\\uE109\";\n    Glyphs[\"noteheadSlashWhiteWhole\"] = \"\\uE102\";\n    Glyphs[\"noteheadSlashX\"] = \"\\uE106\";\n    Glyphs[\"noteheadSlashedBlack1\"] = \"\\uE0CF\";\n    Glyphs[\"noteheadSlashedBlack2\"] = \"\\uE0D0\";\n    Glyphs[\"noteheadSlashedDoubleWhole1\"] = \"\\uE0D5\";\n    Glyphs[\"noteheadSlashedDoubleWhole2\"] = \"\\uE0D6\";\n    Glyphs[\"noteheadSlashedHalf1\"] = \"\\uE0D1\";\n    Glyphs[\"noteheadSlashedHalf2\"] = \"\\uE0D2\";\n    Glyphs[\"noteheadSlashedWhole1\"] = \"\\uE0D3\";\n    Glyphs[\"noteheadSlashedWhole2\"] = \"\\uE0D4\";\n    Glyphs[\"noteheadSquareBlack\"] = \"\\uE0B9\";\n    Glyphs[\"noteheadSquareBlackLarge\"] = \"\\uE11A\";\n    Glyphs[\"noteheadSquareBlackWhite\"] = \"\\uE11B\";\n    Glyphs[\"noteheadSquareWhite\"] = \"\\uE0B8\";\n    Glyphs[\"noteheadTriangleDownBlack\"] = \"\\uE0C7\";\n    Glyphs[\"noteheadTriangleDownDoubleWhole\"] = \"\\uE0C3\";\n    Glyphs[\"noteheadTriangleDownHalf\"] = \"\\uE0C5\";\n    Glyphs[\"noteheadTriangleDownWhite\"] = \"\\uE0C6\";\n    Glyphs[\"noteheadTriangleDownWhole\"] = \"\\uE0C4\";\n    Glyphs[\"noteheadTriangleLeftBlack\"] = \"\\uE0C0\";\n    Glyphs[\"noteheadTriangleLeftWhite\"] = \"\\uE0BF\";\n    Glyphs[\"noteheadTriangleRightBlack\"] = \"\\uE0C2\";\n    Glyphs[\"noteheadTriangleRightWhite\"] = \"\\uE0C1\";\n    Glyphs[\"noteheadTriangleRoundDownBlack\"] = \"\\uE0CD\";\n    Glyphs[\"noteheadTriangleRoundDownWhite\"] = \"\\uE0CC\";\n    Glyphs[\"noteheadTriangleUpBlack\"] = \"\\uE0BE\";\n    Glyphs[\"noteheadTriangleUpDoubleWhole\"] = \"\\uE0BA\";\n    Glyphs[\"noteheadTriangleUpHalf\"] = \"\\uE0BC\";\n    Glyphs[\"noteheadTriangleUpRightBlack\"] = \"\\uE0C9\";\n    Glyphs[\"noteheadTriangleUpRightWhite\"] = \"\\uE0C8\";\n    Glyphs[\"noteheadTriangleUpWhite\"] = \"\\uE0BD\";\n    Glyphs[\"noteheadTriangleUpWhole\"] = \"\\uE0BB\";\n    Glyphs[\"noteheadVoidWithX\"] = \"\\uE0B7\";\n    Glyphs[\"noteheadWhole\"] = \"\\uE0A2\";\n    Glyphs[\"noteheadWholeFilled\"] = \"\\uE0FA\";\n    Glyphs[\"noteheadWholeWithX\"] = \"\\uE0B5\";\n    Glyphs[\"noteheadXBlack\"] = \"\\uE0A9\";\n    Glyphs[\"noteheadXDoubleWhole\"] = \"\\uE0A6\";\n    Glyphs[\"noteheadXHalf\"] = \"\\uE0A8\";\n    Glyphs[\"noteheadXOrnate\"] = \"\\uE0AA\";\n    Glyphs[\"noteheadXOrnateEllipse\"] = \"\\uE0AB\";\n    Glyphs[\"noteheadXWhole\"] = \"\\uE0A7\";\n    Glyphs[\"octaveBaselineA\"] = \"\\uEC91\";\n    Glyphs[\"octaveBaselineB\"] = \"\\uEC93\";\n    Glyphs[\"octaveBaselineM\"] = \"\\uEC95\";\n    Glyphs[\"octaveBaselineV\"] = \"\\uEC97\";\n    Glyphs[\"octaveBassa\"] = \"\\uE51F\";\n    Glyphs[\"octaveLoco\"] = \"\\uEC90\";\n    Glyphs[\"octaveParensLeft\"] = \"\\uE51A\";\n    Glyphs[\"octaveParensRight\"] = \"\\uE51B\";\n    Glyphs[\"octaveSuperscriptA\"] = \"\\uEC92\";\n    Glyphs[\"octaveSuperscriptB\"] = \"\\uEC94\";\n    Glyphs[\"octaveSuperscriptM\"] = \"\\uEC96\";\n    Glyphs[\"octaveSuperscriptV\"] = \"\\uEC98\";\n    Glyphs[\"oneHandedRollStevens\"] = \"\\uE233\";\n    Glyphs[\"organGerman2Fusae\"] = \"\\uEE2E\";\n    Glyphs[\"organGerman2Minimae\"] = \"\\uEE2C\";\n    Glyphs[\"organGerman2OctaveUp\"] = \"\\uEE19\";\n    Glyphs[\"organGerman2Semifusae\"] = \"\\uEE2F\";\n    Glyphs[\"organGerman2Semiminimae\"] = \"\\uEE2D\";\n    Glyphs[\"organGerman3Fusae\"] = \"\\uEE32\";\n    Glyphs[\"organGerman3Minimae\"] = \"\\uEE30\";\n    Glyphs[\"organGerman3Semifusae\"] = \"\\uEE33\";\n    Glyphs[\"organGerman3Semiminimae\"] = \"\\uEE31\";\n    Glyphs[\"organGerman4Fusae\"] = \"\\uEE36\";\n    Glyphs[\"organGerman4Minimae\"] = \"\\uEE34\";\n    Glyphs[\"organGerman4Semifusae\"] = \"\\uEE37\";\n    Glyphs[\"organGerman4Semiminimae\"] = \"\\uEE35\";\n    Glyphs[\"organGerman5Fusae\"] = \"\\uEE3A\";\n    Glyphs[\"organGerman5Minimae\"] = \"\\uEE38\";\n    Glyphs[\"organGerman5Semifusae\"] = \"\\uEE3B\";\n    Glyphs[\"organGerman5Semiminimae\"] = \"\\uEE39\";\n    Glyphs[\"organGerman6Fusae\"] = \"\\uEE3E\";\n    Glyphs[\"organGerman6Minimae\"] = \"\\uEE3C\";\n    Glyphs[\"organGerman6Semifusae\"] = \"\\uEE3F\";\n    Glyphs[\"organGerman6Semiminimae\"] = \"\\uEE3D\";\n    Glyphs[\"organGermanALower\"] = \"\\uEE15\";\n    Glyphs[\"organGermanAUpper\"] = \"\\uEE09\";\n    Glyphs[\"organGermanAugmentationDot\"] = \"\\uEE1C\";\n    Glyphs[\"organGermanBLower\"] = \"\\uEE16\";\n    Glyphs[\"organGermanBUpper\"] = \"\\uEE0A\";\n    Glyphs[\"organGermanBuxheimerBrevis2\"] = \"\\uEE25\";\n    Glyphs[\"organGermanBuxheimerBrevis3\"] = \"\\uEE24\";\n    Glyphs[\"organGermanBuxheimerMinimaRest\"] = \"\\uEE1E\";\n    Glyphs[\"organGermanBuxheimerSemibrevis\"] = \"\\uEE26\";\n    Glyphs[\"organGermanBuxheimerSemibrevisRest\"] = \"\\uEE1D\";\n    Glyphs[\"organGermanCLower\"] = \"\\uEE0C\";\n    Glyphs[\"organGermanCUpper\"] = \"\\uEE00\";\n    Glyphs[\"organGermanCisLower\"] = \"\\uEE0D\";\n    Glyphs[\"organGermanCisUpper\"] = \"\\uEE01\";\n    Glyphs[\"organGermanDLower\"] = \"\\uEE0E\";\n    Glyphs[\"organGermanDUpper\"] = \"\\uEE02\";\n    Glyphs[\"organGermanDisLower\"] = \"\\uEE0F\";\n    Glyphs[\"organGermanDisUpper\"] = \"\\uEE03\";\n    Glyphs[\"organGermanELower\"] = \"\\uEE10\";\n    Glyphs[\"organGermanEUpper\"] = \"\\uEE04\";\n    Glyphs[\"organGermanFLower\"] = \"\\uEE11\";\n    Glyphs[\"organGermanFUpper\"] = \"\\uEE05\";\n    Glyphs[\"organGermanFisLower\"] = \"\\uEE12\";\n    Glyphs[\"organGermanFisUpper\"] = \"\\uEE06\";\n    Glyphs[\"organGermanFusa\"] = \"\\uEE2A\";\n    Glyphs[\"organGermanFusaRest\"] = \"\\uEE22\";\n    Glyphs[\"organGermanGLower\"] = \"\\uEE13\";\n    Glyphs[\"organGermanGUpper\"] = \"\\uEE07\";\n    Glyphs[\"organGermanGisLower\"] = \"\\uEE14\";\n    Glyphs[\"organGermanGisUpper\"] = \"\\uEE08\";\n    Glyphs[\"organGermanHLower\"] = \"\\uEE17\";\n    Glyphs[\"organGermanHUpper\"] = \"\\uEE0B\";\n    Glyphs[\"organGermanMinima\"] = \"\\uEE28\";\n    Glyphs[\"organGermanMinimaRest\"] = \"\\uEE20\";\n    Glyphs[\"organGermanOctaveDown\"] = \"\\uEE1A\";\n    Glyphs[\"organGermanOctaveUp\"] = \"\\uEE18\";\n    Glyphs[\"organGermanSemibrevis\"] = \"\\uEE27\";\n    Glyphs[\"organGermanSemibrevisRest\"] = \"\\uEE1F\";\n    Glyphs[\"organGermanSemifusa\"] = \"\\uEE2B\";\n    Glyphs[\"organGermanSemifusaRest\"] = \"\\uEE23\";\n    Glyphs[\"organGermanSemiminima\"] = \"\\uEE29\";\n    Glyphs[\"organGermanSemiminimaRest\"] = \"\\uEE21\";\n    Glyphs[\"organGermanTie\"] = \"\\uEE1B\";\n    Glyphs[\"ornamentBottomLeftConcaveStroke\"] = \"\\uE59A\";\n    Glyphs[\"ornamentBottomLeftConcaveStrokeLarge\"] = \"\\uE59B\";\n    Glyphs[\"ornamentBottomLeftConvexStroke\"] = \"\\uE59C\";\n    Glyphs[\"ornamentBottomRightConcaveStroke\"] = \"\\uE5A7\";\n    Glyphs[\"ornamentBottomRightConvexStroke\"] = \"\\uE5A8\";\n    Glyphs[\"ornamentComma\"] = \"\\uE581\";\n    Glyphs[\"ornamentDoubleObliqueLinesAfterNote\"] = \"\\uE57E\";\n    Glyphs[\"ornamentDoubleObliqueLinesBeforeNote\"] = \"\\uE57D\";\n    Glyphs[\"ornamentDownCurve\"] = \"\\uE578\";\n    Glyphs[\"ornamentHaydn\"] = \"\\uE56F\";\n    Glyphs[\"ornamentHighLeftConcaveStroke\"] = \"\\uE592\";\n    Glyphs[\"ornamentHighLeftConvexStroke\"] = \"\\uE593\";\n    Glyphs[\"ornamentHighRightConcaveStroke\"] = \"\\uE5A2\";\n    Glyphs[\"ornamentHighRightConvexStroke\"] = \"\\uE5A3\";\n    Glyphs[\"ornamentHookAfterNote\"] = \"\\uE576\";\n    Glyphs[\"ornamentHookBeforeNote\"] = \"\\uE575\";\n    Glyphs[\"ornamentLeftFacingHalfCircle\"] = \"\\uE572\";\n    Glyphs[\"ornamentLeftFacingHook\"] = \"\\uE574\";\n    Glyphs[\"ornamentLeftPlus\"] = \"\\uE597\";\n    Glyphs[\"ornamentLeftShakeT\"] = \"\\uE596\";\n    Glyphs[\"ornamentLeftVerticalStroke\"] = \"\\uE594\";\n    Glyphs[\"ornamentLeftVerticalStrokeWithCross\"] = \"\\uE595\";\n    Glyphs[\"ornamentLowLeftConcaveStroke\"] = \"\\uE598\";\n    Glyphs[\"ornamentLowLeftConvexStroke\"] = \"\\uE599\";\n    Glyphs[\"ornamentLowRightConcaveStroke\"] = \"\\uE5A5\";\n    Glyphs[\"ornamentLowRightConvexStroke\"] = \"\\uE5A6\";\n    Glyphs[\"ornamentMiddleVerticalStroke\"] = \"\\uE59F\";\n    Glyphs[\"ornamentMordent\"] = \"\\uE56D\";\n    Glyphs[\"ornamentObliqueLineAfterNote\"] = \"\\uE57C\";\n    Glyphs[\"ornamentObliqueLineBeforeNote\"] = \"\\uE57B\";\n    Glyphs[\"ornamentObliqueLineHorizAfterNote\"] = \"\\uE580\";\n    Glyphs[\"ornamentObliqueLineHorizBeforeNote\"] = \"\\uE57F\";\n    Glyphs[\"ornamentOriscus\"] = \"\\uEA21\";\n    Glyphs[\"ornamentPinceCouperin\"] = \"\\uE588\";\n    Glyphs[\"ornamentPortDeVoixV\"] = \"\\uE570\";\n    Glyphs[\"ornamentPrecompAppoggTrill\"] = \"\\uE5B2\";\n    Glyphs[\"ornamentPrecompAppoggTrillSuffix\"] = \"\\uE5B3\";\n    Glyphs[\"ornamentPrecompCadence\"] = \"\\uE5BE\";\n    Glyphs[\"ornamentPrecompCadenceUpperPrefix\"] = \"\\uE5C1\";\n    Glyphs[\"ornamentPrecompCadenceUpperPrefixTurn\"] = \"\\uE5C2\";\n    Glyphs[\"ornamentPrecompCadenceWithTurn\"] = \"\\uE5BF\";\n    Glyphs[\"ornamentPrecompDescendingSlide\"] = \"\\uE5B1\";\n    Glyphs[\"ornamentPrecompDoubleCadenceLowerPrefix\"] = \"\\uE5C0\";\n    Glyphs[\"ornamentPrecompDoubleCadenceUpperPrefix\"] = \"\\uE5C3\";\n    Glyphs[\"ornamentPrecompDoubleCadenceUpperPrefixTurn\"] = \"\\uE5C4\";\n    Glyphs[\"ornamentPrecompInvertedMordentUpperPrefix\"] = \"\\uE5C7\";\n    Glyphs[\"ornamentPrecompMordentRelease\"] = \"\\uE5C5\";\n    Glyphs[\"ornamentPrecompMordentUpperPrefix\"] = \"\\uE5C6\";\n    Glyphs[\"ornamentPrecompPortDeVoixMordent\"] = \"\\uE5BC\";\n    Glyphs[\"ornamentPrecompSlide\"] = \"\\uE5B0\";\n    Glyphs[\"ornamentPrecompSlideTrillBach\"] = \"\\uE5B8\";\n    Glyphs[\"ornamentPrecompSlideTrillDAnglebert\"] = \"\\uE5B5\";\n    Glyphs[\"ornamentPrecompSlideTrillMarpurg\"] = \"\\uE5B6\";\n    Glyphs[\"ornamentPrecompSlideTrillMuffat\"] = \"\\uE5B9\";\n    Glyphs[\"ornamentPrecompSlideTrillSuffixMuffat\"] = \"\\uE5BA\";\n    Glyphs[\"ornamentPrecompTrillLowerSuffix\"] = \"\\uE5C8\";\n    Glyphs[\"ornamentPrecompTrillSuffixDandrieu\"] = \"\\uE5BB\";\n    Glyphs[\"ornamentPrecompTrillWithMordent\"] = \"\\uE5BD\";\n    Glyphs[\"ornamentPrecompTurnTrillBach\"] = \"\\uE5B7\";\n    Glyphs[\"ornamentPrecompTurnTrillDAnglebert\"] = \"\\uE5B4\";\n    Glyphs[\"ornamentQuilisma\"] = \"\\uEA20\";\n    Glyphs[\"ornamentRightFacingHalfCircle\"] = \"\\uE571\";\n    Glyphs[\"ornamentRightFacingHook\"] = \"\\uE573\";\n    Glyphs[\"ornamentRightVerticalStroke\"] = \"\\uE5A4\";\n    Glyphs[\"ornamentSchleifer\"] = \"\\uE587\";\n    Glyphs[\"ornamentShake3\"] = \"\\uE582\";\n    Glyphs[\"ornamentShakeMuffat1\"] = \"\\uE584\";\n    Glyphs[\"ornamentShortObliqueLineAfterNote\"] = \"\\uE57A\";\n    Glyphs[\"ornamentShortObliqueLineBeforeNote\"] = \"\\uE579\";\n    Glyphs[\"ornamentShortTrill\"] = \"\\uE56C\";\n    Glyphs[\"ornamentTopLeftConcaveStroke\"] = \"\\uE590\";\n    Glyphs[\"ornamentTopLeftConvexStroke\"] = \"\\uE591\";\n    Glyphs[\"ornamentTopRightConcaveStroke\"] = \"\\uE5A0\";\n    Glyphs[\"ornamentTopRightConvexStroke\"] = \"\\uE5A1\";\n    Glyphs[\"ornamentTremblement\"] = \"\\uE56E\";\n    Glyphs[\"ornamentTremblementCouperin\"] = \"\\uE589\";\n    Glyphs[\"ornamentTrill\"] = \"\\uE566\";\n    Glyphs[\"ornamentTurn\"] = \"\\uE567\";\n    Glyphs[\"ornamentTurnInverted\"] = \"\\uE568\";\n    Glyphs[\"ornamentTurnSlash\"] = \"\\uE569\";\n    Glyphs[\"ornamentTurnUp\"] = \"\\uE56A\";\n    Glyphs[\"ornamentTurnUpS\"] = \"\\uE56B\";\n    Glyphs[\"ornamentUpCurve\"] = \"\\uE577\";\n    Glyphs[\"ornamentVerticalLine\"] = \"\\uE583\";\n    Glyphs[\"ornamentZigZagLineNoRightEnd\"] = \"\\uE59D\";\n    Glyphs[\"ornamentZigZagLineWithRightEnd\"] = \"\\uE59E\";\n    Glyphs[\"ottava\"] = \"\\uE510\";\n    Glyphs[\"ottavaAlta\"] = \"\\uE511\";\n    Glyphs[\"ottavaBassa\"] = \"\\uE512\";\n    Glyphs[\"ottavaBassaBa\"] = \"\\uE513\";\n    Glyphs[\"ottavaBassaVb\"] = \"\\uE51C\";\n    Glyphs[\"pendereckiTremolo\"] = \"\\uE22B\";\n    Glyphs[\"pictAgogo\"] = \"\\uE717\";\n    Glyphs[\"pictAlmglocken\"] = \"\\uE712\";\n    Glyphs[\"pictAnvil\"] = \"\\uE701\";\n    Glyphs[\"pictBambooChimes\"] = \"\\uE6C3\";\n    Glyphs[\"pictBambooScraper\"] = \"\\uE6FB\";\n    Glyphs[\"pictBassDrum\"] = \"\\uE6D4\";\n    Glyphs[\"pictBassDrumOnSide\"] = \"\\uE6D5\";\n    Glyphs[\"pictBeaterBow\"] = \"\\uE7DE\";\n    Glyphs[\"pictBeaterBox\"] = \"\\uE7EB\";\n    Glyphs[\"pictBeaterBrassMalletsDown\"] = \"\\uE7DA\";\n    Glyphs[\"pictBeaterBrassMalletsLeft\"] = \"\\uE7EE\";\n    Glyphs[\"pictBeaterBrassMalletsRight\"] = \"\\uE7ED\";\n    Glyphs[\"pictBeaterBrassMalletsUp\"] = \"\\uE7D9\";\n    Glyphs[\"pictBeaterCombiningDashedCircle\"] = \"\\uE7EA\";\n    Glyphs[\"pictBeaterCombiningParentheses\"] = \"\\uE7E9\";\n    Glyphs[\"pictBeaterDoubleBassDrumDown\"] = \"\\uE7A1\";\n    Glyphs[\"pictBeaterDoubleBassDrumUp\"] = \"\\uE7A0\";\n    Glyphs[\"pictBeaterFinger\"] = \"\\uE7E4\";\n    Glyphs[\"pictBeaterFingernails\"] = \"\\uE7E6\";\n    Glyphs[\"pictBeaterFist\"] = \"\\uE7E5\";\n    Glyphs[\"pictBeaterGuiroScraper\"] = \"\\uE7DD\";\n    Glyphs[\"pictBeaterHammer\"] = \"\\uE7E1\";\n    Glyphs[\"pictBeaterHammerMetalDown\"] = \"\\uE7D0\";\n    Glyphs[\"pictBeaterHammerMetalUp\"] = \"\\uE7CF\";\n    Glyphs[\"pictBeaterHammerPlasticDown\"] = \"\\uE7CE\";\n    Glyphs[\"pictBeaterHammerPlasticUp\"] = \"\\uE7CD\";\n    Glyphs[\"pictBeaterHammerWoodDown\"] = \"\\uE7CC\";\n    Glyphs[\"pictBeaterHammerWoodUp\"] = \"\\uE7CB\";\n    Glyphs[\"pictBeaterHand\"] = \"\\uE7E3\";\n    Glyphs[\"pictBeaterHardBassDrumDown\"] = \"\\uE79D\";\n    Glyphs[\"pictBeaterHardBassDrumUp\"] = \"\\uE79C\";\n    Glyphs[\"pictBeaterHardGlockenspielDown\"] = \"\\uE785\";\n    Glyphs[\"pictBeaterHardGlockenspielLeft\"] = \"\\uE787\";\n    Glyphs[\"pictBeaterHardGlockenspielRight\"] = \"\\uE786\";\n    Glyphs[\"pictBeaterHardGlockenspielUp\"] = \"\\uE784\";\n    Glyphs[\"pictBeaterHardTimpaniDown\"] = \"\\uE791\";\n    Glyphs[\"pictBeaterHardTimpaniLeft\"] = \"\\uE793\";\n    Glyphs[\"pictBeaterHardTimpaniRight\"] = \"\\uE792\";\n    Glyphs[\"pictBeaterHardTimpaniUp\"] = \"\\uE790\";\n    Glyphs[\"pictBeaterHardXylophoneDown\"] = \"\\uE779\";\n    Glyphs[\"pictBeaterHardXylophoneLeft\"] = \"\\uE77B\";\n    Glyphs[\"pictBeaterHardXylophoneRight\"] = \"\\uE77A\";\n    Glyphs[\"pictBeaterHardXylophoneUp\"] = \"\\uE778\";\n    Glyphs[\"pictBeaterHardYarnDown\"] = \"\\uE7AB\";\n    Glyphs[\"pictBeaterHardYarnLeft\"] = \"\\uE7AD\";\n    Glyphs[\"pictBeaterHardYarnRight\"] = \"\\uE7AC\";\n    Glyphs[\"pictBeaterHardYarnUp\"] = \"\\uE7AA\";\n    Glyphs[\"pictBeaterJazzSticksDown\"] = \"\\uE7D4\";\n    Glyphs[\"pictBeaterJazzSticksUp\"] = \"\\uE7D3\";\n    Glyphs[\"pictBeaterKnittingNeedle\"] = \"\\uE7E2\";\n    Glyphs[\"pictBeaterMallet\"] = \"\\uE7DF\";\n    Glyphs[\"pictBeaterMalletDown\"] = \"\\uE7EC\";\n    Glyphs[\"pictBeaterMediumBassDrumDown\"] = \"\\uE79B\";\n    Glyphs[\"pictBeaterMediumBassDrumUp\"] = \"\\uE79A\";\n    Glyphs[\"pictBeaterMediumTimpaniDown\"] = \"\\uE78D\";\n    Glyphs[\"pictBeaterMediumTimpaniLeft\"] = \"\\uE78F\";\n    Glyphs[\"pictBeaterMediumTimpaniRight\"] = \"\\uE78E\";\n    Glyphs[\"pictBeaterMediumTimpaniUp\"] = \"\\uE78C\";\n    Glyphs[\"pictBeaterMediumXylophoneDown\"] = \"\\uE775\";\n    Glyphs[\"pictBeaterMediumXylophoneLeft\"] = \"\\uE777\";\n    Glyphs[\"pictBeaterMediumXylophoneRight\"] = \"\\uE776\";\n    Glyphs[\"pictBeaterMediumXylophoneUp\"] = \"\\uE774\";\n    Glyphs[\"pictBeaterMediumYarnDown\"] = \"\\uE7A7\";\n    Glyphs[\"pictBeaterMediumYarnLeft\"] = \"\\uE7A9\";\n    Glyphs[\"pictBeaterMediumYarnRight\"] = \"\\uE7A8\";\n    Glyphs[\"pictBeaterMediumYarnUp\"] = \"\\uE7A6\";\n    Glyphs[\"pictBeaterMetalBassDrumDown\"] = \"\\uE79F\";\n    Glyphs[\"pictBeaterMetalBassDrumUp\"] = \"\\uE79E\";\n    Glyphs[\"pictBeaterMetalDown\"] = \"\\uE7C8\";\n    Glyphs[\"pictBeaterMetalHammer\"] = \"\\uE7E0\";\n    Glyphs[\"pictBeaterMetalLeft\"] = \"\\uE7CA\";\n    Glyphs[\"pictBeaterMetalRight\"] = \"\\uE7C9\";\n    Glyphs[\"pictBeaterMetalUp\"] = \"\\uE7C7\";\n    Glyphs[\"pictBeaterSnareSticksDown\"] = \"\\uE7D2\";\n    Glyphs[\"pictBeaterSnareSticksUp\"] = \"\\uE7D1\";\n    Glyphs[\"pictBeaterSoftBassDrumDown\"] = \"\\uE799\";\n    Glyphs[\"pictBeaterSoftBassDrumUp\"] = \"\\uE798\";\n    Glyphs[\"pictBeaterSoftGlockenspielDown\"] = \"\\uE781\";\n    Glyphs[\"pictBeaterSoftGlockenspielLeft\"] = \"\\uE783\";\n    Glyphs[\"pictBeaterSoftGlockenspielRight\"] = \"\\uE782\";\n    Glyphs[\"pictBeaterSoftGlockenspielUp\"] = \"\\uE780\";\n    Glyphs[\"pictBeaterSoftTimpaniDown\"] = \"\\uE789\";\n    Glyphs[\"pictBeaterSoftTimpaniLeft\"] = \"\\uE78B\";\n    Glyphs[\"pictBeaterSoftTimpaniRight\"] = \"\\uE78A\";\n    Glyphs[\"pictBeaterSoftTimpaniUp\"] = \"\\uE788\";\n    Glyphs[\"pictBeaterSoftXylophone\"] = \"\\uE7DB\";\n    Glyphs[\"pictBeaterSoftXylophoneDown\"] = \"\\uE771\";\n    Glyphs[\"pictBeaterSoftXylophoneLeft\"] = \"\\uE773\";\n    Glyphs[\"pictBeaterSoftXylophoneRight\"] = \"\\uE772\";\n    Glyphs[\"pictBeaterSoftXylophoneUp\"] = \"\\uE770\";\n    Glyphs[\"pictBeaterSoftYarnDown\"] = \"\\uE7A3\";\n    Glyphs[\"pictBeaterSoftYarnLeft\"] = \"\\uE7A5\";\n    Glyphs[\"pictBeaterSoftYarnRight\"] = \"\\uE7A4\";\n    Glyphs[\"pictBeaterSoftYarnUp\"] = \"\\uE7A2\";\n    Glyphs[\"pictBeaterSpoonWoodenMallet\"] = \"\\uE7DC\";\n    Glyphs[\"pictBeaterSuperballDown\"] = \"\\uE7AF\";\n    Glyphs[\"pictBeaterSuperballLeft\"] = \"\\uE7B1\";\n    Glyphs[\"pictBeaterSuperballRight\"] = \"\\uE7B0\";\n    Glyphs[\"pictBeaterSuperballUp\"] = \"\\uE7AE\";\n    Glyphs[\"pictBeaterTriangleDown\"] = \"\\uE7D6\";\n    Glyphs[\"pictBeaterTrianglePlain\"] = \"\\uE7EF\";\n    Glyphs[\"pictBeaterTriangleUp\"] = \"\\uE7D5\";\n    Glyphs[\"pictBeaterWireBrushesDown\"] = \"\\uE7D8\";\n    Glyphs[\"pictBeaterWireBrushesUp\"] = \"\\uE7D7\";\n    Glyphs[\"pictBeaterWoodTimpaniDown\"] = \"\\uE795\";\n    Glyphs[\"pictBeaterWoodTimpaniLeft\"] = \"\\uE797\";\n    Glyphs[\"pictBeaterWoodTimpaniRight\"] = \"\\uE796\";\n    Glyphs[\"pictBeaterWoodTimpaniUp\"] = \"\\uE794\";\n    Glyphs[\"pictBeaterWoodXylophoneDown\"] = \"\\uE77D\";\n    Glyphs[\"pictBeaterWoodXylophoneLeft\"] = \"\\uE77F\";\n    Glyphs[\"pictBeaterWoodXylophoneRight\"] = \"\\uE77E\";\n    Glyphs[\"pictBeaterWoodXylophoneUp\"] = \"\\uE77C\";\n    Glyphs[\"pictBell\"] = \"\\uE714\";\n    Glyphs[\"pictBellOfCymbal\"] = \"\\uE72A\";\n    Glyphs[\"pictBellPlate\"] = \"\\uE713\";\n    Glyphs[\"pictBellTree\"] = \"\\uE71A\";\n    Glyphs[\"pictBirdWhistle\"] = \"\\uE751\";\n    Glyphs[\"pictBoardClapper\"] = \"\\uE6F7\";\n    Glyphs[\"pictBongos\"] = \"\\uE6DD\";\n    Glyphs[\"pictBrakeDrum\"] = \"\\uE6E1\";\n    Glyphs[\"pictCabasa\"] = \"\\uE743\";\n    Glyphs[\"pictCannon\"] = \"\\uE761\";\n    Glyphs[\"pictCarHorn\"] = \"\\uE755\";\n    Glyphs[\"pictCastanets\"] = \"\\uE6F8\";\n    Glyphs[\"pictCastanetsWithHandle\"] = \"\\uE6F9\";\n    Glyphs[\"pictCelesta\"] = \"\\uE6B0\";\n    Glyphs[\"pictCencerro\"] = \"\\uE716\";\n    Glyphs[\"pictCenter1\"] = \"\\uE7FE\";\n    Glyphs[\"pictCenter2\"] = \"\\uE7FF\";\n    Glyphs[\"pictCenter3\"] = \"\\uE800\";\n    Glyphs[\"pictChainRattle\"] = \"\\uE748\";\n    Glyphs[\"pictChimes\"] = \"\\uE6C2\";\n    Glyphs[\"pictChineseCymbal\"] = \"\\uE726\";\n    Glyphs[\"pictChokeCymbal\"] = \"\\uE805\";\n    Glyphs[\"pictClaves\"] = \"\\uE6F2\";\n    Glyphs[\"pictCoins\"] = \"\\uE7E7\";\n    Glyphs[\"pictConga\"] = \"\\uE6DE\";\n    Glyphs[\"pictCowBell\"] = \"\\uE711\";\n    Glyphs[\"pictCrashCymbals\"] = \"\\uE720\";\n    Glyphs[\"pictCrotales\"] = \"\\uE6AE\";\n    Glyphs[\"pictCrushStem\"] = \"\\uE80C\";\n    Glyphs[\"pictCuica\"] = \"\\uE6E4\";\n    Glyphs[\"pictCymbalTongs\"] = \"\\uE728\";\n    Glyphs[\"pictDamp1\"] = \"\\uE7F9\";\n    Glyphs[\"pictDamp2\"] = \"\\uE7FA\";\n    Glyphs[\"pictDamp3\"] = \"\\uE7FB\";\n    Glyphs[\"pictDamp4\"] = \"\\uE7FC\";\n    Glyphs[\"pictDeadNoteStem\"] = \"\\uE80D\";\n    Glyphs[\"pictDrumStick\"] = \"\\uE7E8\";\n    Glyphs[\"pictDuckCall\"] = \"\\uE757\";\n    Glyphs[\"pictEdgeOfCymbal\"] = \"\\uE729\";\n    Glyphs[\"pictEmptyTrap\"] = \"\\uE6A9\";\n    Glyphs[\"pictFingerCymbals\"] = \"\\uE727\";\n    Glyphs[\"pictFlexatone\"] = \"\\uE740\";\n    Glyphs[\"pictFootballRatchet\"] = \"\\uE6F5\";\n    Glyphs[\"pictGlassHarmonica\"] = \"\\uE765\";\n    Glyphs[\"pictGlassHarp\"] = \"\\uE764\";\n    Glyphs[\"pictGlassPlateChimes\"] = \"\\uE6C6\";\n    Glyphs[\"pictGlassTubeChimes\"] = \"\\uE6C5\";\n    Glyphs[\"pictGlsp\"] = \"\\uE6A0\";\n    Glyphs[\"pictGlspSmithBrindle\"] = \"\\uE6AA\";\n    Glyphs[\"pictGobletDrum\"] = \"\\uE6E2\";\n    Glyphs[\"pictGong\"] = \"\\uE732\";\n    Glyphs[\"pictGongWithButton\"] = \"\\uE733\";\n    Glyphs[\"pictGuiro\"] = \"\\uE6F3\";\n    Glyphs[\"pictGumHardDown\"] = \"\\uE7C4\";\n    Glyphs[\"pictGumHardLeft\"] = \"\\uE7C6\";\n    Glyphs[\"pictGumHardRight\"] = \"\\uE7C5\";\n    Glyphs[\"pictGumHardUp\"] = \"\\uE7C3\";\n    Glyphs[\"pictGumMediumDown\"] = \"\\uE7C0\";\n    Glyphs[\"pictGumMediumLeft\"] = \"\\uE7C2\";\n    Glyphs[\"pictGumMediumRight\"] = \"\\uE7C1\";\n    Glyphs[\"pictGumMediumUp\"] = \"\\uE7BF\";\n    Glyphs[\"pictGumSoftDown\"] = \"\\uE7BC\";\n    Glyphs[\"pictGumSoftLeft\"] = \"\\uE7BE\";\n    Glyphs[\"pictGumSoftRight\"] = \"\\uE7BD\";\n    Glyphs[\"pictGumSoftUp\"] = \"\\uE7BB\";\n    Glyphs[\"pictHalfOpen1\"] = \"\\uE7F6\";\n    Glyphs[\"pictHalfOpen2\"] = \"\\uE7F7\";\n    Glyphs[\"pictHandbell\"] = \"\\uE715\";\n    Glyphs[\"pictHiHat\"] = \"\\uE722\";\n    Glyphs[\"pictHiHatOnStand\"] = \"\\uE723\";\n    Glyphs[\"pictJawHarp\"] = \"\\uE767\";\n    Glyphs[\"pictJingleBells\"] = \"\\uE719\";\n    Glyphs[\"pictKlaxonHorn\"] = \"\\uE756\";\n    Glyphs[\"pictLeftHandCircle\"] = \"\\uE807\";\n    Glyphs[\"pictLionsRoar\"] = \"\\uE763\";\n    Glyphs[\"pictLithophone\"] = \"\\uE6B1\";\n    Glyphs[\"pictLogDrum\"] = \"\\uE6DF\";\n    Glyphs[\"pictLotusFlute\"] = \"\\uE75A\";\n    Glyphs[\"pictMar\"] = \"\\uE6A6\";\n    Glyphs[\"pictMarSmithBrindle\"] = \"\\uE6AC\";\n    Glyphs[\"pictMaraca\"] = \"\\uE741\";\n    Glyphs[\"pictMaracas\"] = \"\\uE742\";\n    Glyphs[\"pictMegaphone\"] = \"\\uE759\";\n    Glyphs[\"pictMetalPlateChimes\"] = \"\\uE6C8\";\n    Glyphs[\"pictMetalTubeChimes\"] = \"\\uE6C7\";\n    Glyphs[\"pictMusicalSaw\"] = \"\\uE766\";\n    Glyphs[\"pictNormalPosition\"] = \"\\uE804\";\n    Glyphs[\"pictOnRim\"] = \"\\uE7F4\";\n    Glyphs[\"pictOpen\"] = \"\\uE7F8\";\n    Glyphs[\"pictOpenRimShot\"] = \"\\uE7F5\";\n    Glyphs[\"pictPistolShot\"] = \"\\uE760\";\n    Glyphs[\"pictPoliceWhistle\"] = \"\\uE752\";\n    Glyphs[\"pictQuijada\"] = \"\\uE6FA\";\n    Glyphs[\"pictRainstick\"] = \"\\uE747\";\n    Glyphs[\"pictRatchet\"] = \"\\uE6F4\";\n    Glyphs[\"pictRecoReco\"] = \"\\uE6FC\";\n    Glyphs[\"pictRightHandSquare\"] = \"\\uE806\";\n    Glyphs[\"pictRim1\"] = \"\\uE801\";\n    Glyphs[\"pictRim2\"] = \"\\uE802\";\n    Glyphs[\"pictRim3\"] = \"\\uE803\";\n    Glyphs[\"pictRimShotOnStem\"] = \"\\uE7FD\";\n    Glyphs[\"pictSandpaperBlocks\"] = \"\\uE762\";\n    Glyphs[\"pictScrapeAroundRim\"] = \"\\uE7F3\";\n    Glyphs[\"pictScrapeAroundRimClockwise\"] = \"\\uE80E\";\n    Glyphs[\"pictScrapeCenterToEdge\"] = \"\\uE7F1\";\n    Glyphs[\"pictScrapeEdgeToCenter\"] = \"\\uE7F2\";\n    Glyphs[\"pictShellBells\"] = \"\\uE718\";\n    Glyphs[\"pictShellChimes\"] = \"\\uE6C4\";\n    Glyphs[\"pictSiren\"] = \"\\uE753\";\n    Glyphs[\"pictSistrum\"] = \"\\uE746\";\n    Glyphs[\"pictSizzleCymbal\"] = \"\\uE724\";\n    Glyphs[\"pictSleighBell\"] = \"\\uE710\";\n    Glyphs[\"pictSlideBrushOnGong\"] = \"\\uE734\";\n    Glyphs[\"pictSlideWhistle\"] = \"\\uE750\";\n    Glyphs[\"pictSlitDrum\"] = \"\\uE6E0\";\n    Glyphs[\"pictSnareDrum\"] = \"\\uE6D1\";\n    Glyphs[\"pictSnareDrumMilitary\"] = \"\\uE6D3\";\n    Glyphs[\"pictSnareDrumSnaresOff\"] = \"\\uE6D2\";\n    Glyphs[\"pictSteelDrums\"] = \"\\uE6AF\";\n    Glyphs[\"pictStickShot\"] = \"\\uE7F0\";\n    Glyphs[\"pictSuperball\"] = \"\\uE7B2\";\n    Glyphs[\"pictSuspendedCymbal\"] = \"\\uE721\";\n    Glyphs[\"pictSwishStem\"] = \"\\uE808\";\n    Glyphs[\"pictTabla\"] = \"\\uE6E3\";\n    Glyphs[\"pictTamTam\"] = \"\\uE730\";\n    Glyphs[\"pictTamTamWithBeater\"] = \"\\uE731\";\n    Glyphs[\"pictTambourine\"] = \"\\uE6DB\";\n    Glyphs[\"pictTempleBlocks\"] = \"\\uE6F1\";\n    Glyphs[\"pictTenorDrum\"] = \"\\uE6D6\";\n    Glyphs[\"pictThundersheet\"] = \"\\uE744\";\n    Glyphs[\"pictTimbales\"] = \"\\uE6DC\";\n    Glyphs[\"pictTimpani\"] = \"\\uE6D0\";\n    Glyphs[\"pictTomTom\"] = \"\\uE6D7\";\n    Glyphs[\"pictTomTomChinese\"] = \"\\uE6D8\";\n    Glyphs[\"pictTomTomIndoAmerican\"] = \"\\uE6DA\";\n    Glyphs[\"pictTomTomJapanese\"] = \"\\uE6D9\";\n    Glyphs[\"pictTriangle\"] = \"\\uE700\";\n    Glyphs[\"pictTubaphone\"] = \"\\uE6B2\";\n    Glyphs[\"pictTubularBells\"] = \"\\uE6C0\";\n    Glyphs[\"pictTurnLeftStem\"] = \"\\uE80A\";\n    Glyphs[\"pictTurnRightLeftStem\"] = \"\\uE80B\";\n    Glyphs[\"pictTurnRightStem\"] = \"\\uE809\";\n    Glyphs[\"pictVib\"] = \"\\uE6A7\";\n    Glyphs[\"pictVibMotorOff\"] = \"\\uE6A8\";\n    Glyphs[\"pictVibSmithBrindle\"] = \"\\uE6AD\";\n    Glyphs[\"pictVibraslap\"] = \"\\uE745\";\n    Glyphs[\"pictVietnameseHat\"] = \"\\uE725\";\n    Glyphs[\"pictWhip\"] = \"\\uE6F6\";\n    Glyphs[\"pictWindChimesGlass\"] = \"\\uE6C1\";\n    Glyphs[\"pictWindMachine\"] = \"\\uE754\";\n    Glyphs[\"pictWindWhistle\"] = \"\\uE758\";\n    Glyphs[\"pictWoodBlock\"] = \"\\uE6F0\";\n    Glyphs[\"pictWoundHardDown\"] = \"\\uE7B4\";\n    Glyphs[\"pictWoundHardLeft\"] = \"\\uE7B6\";\n    Glyphs[\"pictWoundHardRight\"] = \"\\uE7B5\";\n    Glyphs[\"pictWoundHardUp\"] = \"\\uE7B3\";\n    Glyphs[\"pictWoundSoftDown\"] = \"\\uE7B8\";\n    Glyphs[\"pictWoundSoftLeft\"] = \"\\uE7BA\";\n    Glyphs[\"pictWoundSoftRight\"] = \"\\uE7B9\";\n    Glyphs[\"pictWoundSoftUp\"] = \"\\uE7B7\";\n    Glyphs[\"pictXyl\"] = \"\\uE6A1\";\n    Glyphs[\"pictXylBass\"] = \"\\uE6A3\";\n    Glyphs[\"pictXylSmithBrindle\"] = \"\\uE6AB\";\n    Glyphs[\"pictXylTenor\"] = \"\\uE6A2\";\n    Glyphs[\"pictXylTenorTrough\"] = \"\\uE6A5\";\n    Glyphs[\"pictXylTrough\"] = \"\\uE6A4\";\n    Glyphs[\"pluckedBuzzPizzicato\"] = \"\\uE632\";\n    Glyphs[\"pluckedDamp\"] = \"\\uE638\";\n    Glyphs[\"pluckedDampAll\"] = \"\\uE639\";\n    Glyphs[\"pluckedDampOnStem\"] = \"\\uE63B\";\n    Glyphs[\"pluckedFingernailFlick\"] = \"\\uE637\";\n    Glyphs[\"pluckedLeftHandPizzicato\"] = \"\\uE633\";\n    Glyphs[\"pluckedPlectrum\"] = \"\\uE63A\";\n    Glyphs[\"pluckedSnapPizzicatoAbove\"] = \"\\uE631\";\n    Glyphs[\"pluckedSnapPizzicatoBelow\"] = \"\\uE630\";\n    Glyphs[\"pluckedWithFingernails\"] = \"\\uE636\";\n    Glyphs[\"quindicesima\"] = \"\\uE514\";\n    Glyphs[\"quindicesimaAlta\"] = \"\\uE515\";\n    Glyphs[\"quindicesimaBassa\"] = \"\\uE516\";\n    Glyphs[\"quindicesimaBassaMb\"] = \"\\uE51D\";\n    Glyphs[\"repeat1Bar\"] = \"\\uE500\";\n    Glyphs[\"repeat2Bars\"] = \"\\uE501\";\n    Glyphs[\"repeat4Bars\"] = \"\\uE502\";\n    Glyphs[\"repeatBarLowerDot\"] = \"\\uE505\";\n    Glyphs[\"repeatBarSlash\"] = \"\\uE504\";\n    Glyphs[\"repeatBarUpperDot\"] = \"\\uE503\";\n    Glyphs[\"repeatDot\"] = \"\\uE044\";\n    Glyphs[\"repeatDots\"] = \"\\uE043\";\n    Glyphs[\"repeatLeft\"] = \"\\uE040\";\n    Glyphs[\"repeatRight\"] = \"\\uE041\";\n    Glyphs[\"repeatRightLeft\"] = \"\\uE042\";\n    Glyphs[\"rest1024th\"] = \"\\uE4ED\";\n    Glyphs[\"rest128th\"] = \"\\uE4EA\";\n    Glyphs[\"rest16th\"] = \"\\uE4E7\";\n    Glyphs[\"rest256th\"] = \"\\uE4EB\";\n    Glyphs[\"rest32nd\"] = \"\\uE4E8\";\n    Glyphs[\"rest512th\"] = \"\\uE4EC\";\n    Glyphs[\"rest64th\"] = \"\\uE4E9\";\n    Glyphs[\"rest8th\"] = \"\\uE4E6\";\n    Glyphs[\"restDoubleWhole\"] = \"\\uE4E2\";\n    Glyphs[\"restDoubleWholeLegerLine\"] = \"\\uE4F3\";\n    Glyphs[\"restHBar\"] = \"\\uE4EE\";\n    Glyphs[\"restHBarLeft\"] = \"\\uE4EF\";\n    Glyphs[\"restHBarMiddle\"] = \"\\uE4F0\";\n    Glyphs[\"restHBarRight\"] = \"\\uE4F1\";\n    Glyphs[\"restHalf\"] = \"\\uE4E4\";\n    Glyphs[\"restHalfLegerLine\"] = \"\\uE4F5\";\n    Glyphs[\"restLonga\"] = \"\\uE4E1\";\n    Glyphs[\"restMaxima\"] = \"\\uE4E0\";\n    Glyphs[\"restQuarter\"] = \"\\uE4E5\";\n    Glyphs[\"restQuarterOld\"] = \"\\uE4F2\";\n    Glyphs[\"restQuarterZ\"] = \"\\uE4F6\";\n    Glyphs[\"restWhole\"] = \"\\uE4E3\";\n    Glyphs[\"restWholeLegerLine\"] = \"\\uE4F4\";\n    Glyphs[\"reversedBrace\"] = \"\\uE001\";\n    Glyphs[\"reversedBracketBottom\"] = \"\\uE006\";\n    Glyphs[\"reversedBracketTop\"] = \"\\uE005\";\n    Glyphs[\"rightRepeatSmall\"] = \"\\uE04D\";\n    Glyphs[\"scaleDegree1\"] = \"\\uEF00\";\n    Glyphs[\"scaleDegree2\"] = \"\\uEF01\";\n    Glyphs[\"scaleDegree3\"] = \"\\uEF02\";\n    Glyphs[\"scaleDegree4\"] = \"\\uEF03\";\n    Glyphs[\"scaleDegree5\"] = \"\\uEF04\";\n    Glyphs[\"scaleDegree6\"] = \"\\uEF05\";\n    Glyphs[\"scaleDegree7\"] = \"\\uEF06\";\n    Glyphs[\"scaleDegree8\"] = \"\\uEF07\";\n    Glyphs[\"scaleDegree9\"] = \"\\uEF08\";\n    Glyphs[\"schaefferClef\"] = \"\\uE06F\";\n    Glyphs[\"schaefferFClefToGClef\"] = \"\\uE072\";\n    Glyphs[\"schaefferGClefToFClef\"] = \"\\uE071\";\n    Glyphs[\"schaefferPreviousClef\"] = \"\\uE070\";\n    Glyphs[\"segno\"] = \"\\uE047\";\n    Glyphs[\"segnoSerpent1\"] = \"\\uE04A\";\n    Glyphs[\"segnoSerpent2\"] = \"\\uE04B\";\n    Glyphs[\"semipitchedPercussionClef1\"] = \"\\uE06B\";\n    Glyphs[\"semipitchedPercussionClef2\"] = \"\\uE06C\";\n    Glyphs[\"smnFlat\"] = \"\\uEC52\";\n    Glyphs[\"smnFlatWhite\"] = \"\\uEC53\";\n    Glyphs[\"smnHistoryDoubleFlat\"] = \"\\uEC57\";\n    Glyphs[\"smnHistoryDoubleSharp\"] = \"\\uEC55\";\n    Glyphs[\"smnHistoryFlat\"] = \"\\uEC56\";\n    Glyphs[\"smnHistorySharp\"] = \"\\uEC54\";\n    Glyphs[\"smnNatural\"] = \"\\uEC58\";\n    Glyphs[\"smnSharp\"] = \"\\uEC50\";\n    Glyphs[\"smnSharpDown\"] = \"\\uEC59\";\n    Glyphs[\"smnSharpWhite\"] = \"\\uEC51\";\n    Glyphs[\"smnSharpWhiteDown\"] = \"\\uEC5A\";\n    Glyphs[\"splitBarDivider\"] = \"\\uE00A\";\n    Glyphs[\"staff1Line\"] = \"\\uE010\";\n    Glyphs[\"staff1LineNarrow\"] = \"\\uE01C\";\n    Glyphs[\"staff1LineWide\"] = \"\\uE016\";\n    Glyphs[\"staff2Lines\"] = \"\\uE011\";\n    Glyphs[\"staff2LinesNarrow\"] = \"\\uE01D\";\n    Glyphs[\"staff2LinesWide\"] = \"\\uE017\";\n    Glyphs[\"staff3Lines\"] = \"\\uE012\";\n    Glyphs[\"staff3LinesNarrow\"] = \"\\uE01E\";\n    Glyphs[\"staff3LinesWide\"] = \"\\uE018\";\n    Glyphs[\"staff4Lines\"] = \"\\uE013\";\n    Glyphs[\"staff4LinesNarrow\"] = \"\\uE01F\";\n    Glyphs[\"staff4LinesWide\"] = \"\\uE019\";\n    Glyphs[\"staff5Lines\"] = \"\\uE014\";\n    Glyphs[\"staff5LinesNarrow\"] = \"\\uE020\";\n    Glyphs[\"staff5LinesWide\"] = \"\\uE01A\";\n    Glyphs[\"staff6Lines\"] = \"\\uE015\";\n    Glyphs[\"staff6LinesNarrow\"] = \"\\uE021\";\n    Glyphs[\"staff6LinesWide\"] = \"\\uE01B\";\n    Glyphs[\"staffDivideArrowDown\"] = \"\\uE00B\";\n    Glyphs[\"staffDivideArrowUp\"] = \"\\uE00C\";\n    Glyphs[\"staffDivideArrowUpDown\"] = \"\\uE00D\";\n    Glyphs[\"staffPosLower1\"] = \"\\uEB98\";\n    Glyphs[\"staffPosLower2\"] = \"\\uEB99\";\n    Glyphs[\"staffPosLower3\"] = \"\\uEB9A\";\n    Glyphs[\"staffPosLower4\"] = \"\\uEB9B\";\n    Glyphs[\"staffPosLower5\"] = \"\\uEB9C\";\n    Glyphs[\"staffPosLower6\"] = \"\\uEB9D\";\n    Glyphs[\"staffPosLower7\"] = \"\\uEB9E\";\n    Glyphs[\"staffPosLower8\"] = \"\\uEB9F\";\n    Glyphs[\"staffPosRaise1\"] = \"\\uEB90\";\n    Glyphs[\"staffPosRaise2\"] = \"\\uEB91\";\n    Glyphs[\"staffPosRaise3\"] = \"\\uEB92\";\n    Glyphs[\"staffPosRaise4\"] = \"\\uEB93\";\n    Glyphs[\"staffPosRaise5\"] = \"\\uEB94\";\n    Glyphs[\"staffPosRaise6\"] = \"\\uEB95\";\n    Glyphs[\"staffPosRaise7\"] = \"\\uEB96\";\n    Glyphs[\"staffPosRaise8\"] = \"\\uEB97\";\n    Glyphs[\"stem\"] = \"\\uE210\";\n    Glyphs[\"stemBowOnBridge\"] = \"\\uE215\";\n    Glyphs[\"stemBowOnTailpiece\"] = \"\\uE216\";\n    Glyphs[\"stemBuzzRoll\"] = \"\\uE217\";\n    Glyphs[\"stemDamp\"] = \"\\uE218\";\n    Glyphs[\"stemHarpStringNoise\"] = \"\\uE21F\";\n    Glyphs[\"stemMultiphonicsBlack\"] = \"\\uE21A\";\n    Glyphs[\"stemMultiphonicsBlackWhite\"] = \"\\uE21C\";\n    Glyphs[\"stemMultiphonicsWhite\"] = \"\\uE21B\";\n    Glyphs[\"stemPendereckiTremolo\"] = \"\\uE213\";\n    Glyphs[\"stemRimShot\"] = \"\\uE21E\";\n    Glyphs[\"stemSprechgesang\"] = \"\\uE211\";\n    Glyphs[\"stemSulPonticello\"] = \"\\uE214\";\n    Glyphs[\"stemSussurando\"] = \"\\uE21D\";\n    Glyphs[\"stemSwished\"] = \"\\uE212\";\n    Glyphs[\"stemVibratoPulse\"] = \"\\uE219\";\n    Glyphs[\"stockhausenTremolo\"] = \"\\uE232\";\n    Glyphs[\"stringsBowBehindBridge\"] = \"\\uE618\";\n    Glyphs[\"stringsBowBehindBridgeFourStrings\"] = \"\\uE62A\";\n    Glyphs[\"stringsBowBehindBridgeOneString\"] = \"\\uE627\";\n    Glyphs[\"stringsBowBehindBridgeThreeStrings\"] = \"\\uE629\";\n    Glyphs[\"stringsBowBehindBridgeTwoStrings\"] = \"\\uE628\";\n    Glyphs[\"stringsBowOnBridge\"] = \"\\uE619\";\n    Glyphs[\"stringsBowOnTailpiece\"] = \"\\uE61A\";\n    Glyphs[\"stringsChangeBowDirection\"] = \"\\uE626\";\n    Glyphs[\"stringsDownBow\"] = \"\\uE610\";\n    Glyphs[\"stringsDownBowAwayFromBody\"] = \"\\uEE82\";\n    Glyphs[\"stringsDownBowBeyondBridge\"] = \"\\uEE84\";\n    Glyphs[\"stringsDownBowTowardsBody\"] = \"\\uEE80\";\n    Glyphs[\"stringsDownBowTurned\"] = \"\\uE611\";\n    Glyphs[\"stringsFouette\"] = \"\\uE622\";\n    Glyphs[\"stringsHalfHarmonic\"] = \"\\uE615\";\n    Glyphs[\"stringsHarmonic\"] = \"\\uE614\";\n    Glyphs[\"stringsJeteAbove\"] = \"\\uE620\";\n    Glyphs[\"stringsJeteBelow\"] = \"\\uE621\";\n    Glyphs[\"stringsMuteOff\"] = \"\\uE617\";\n    Glyphs[\"stringsMuteOn\"] = \"\\uE616\";\n    Glyphs[\"stringsOverpressureDownBow\"] = \"\\uE61B\";\n    Glyphs[\"stringsOverpressureNoDirection\"] = \"\\uE61F\";\n    Glyphs[\"stringsOverpressurePossibileDownBow\"] = \"\\uE61D\";\n    Glyphs[\"stringsOverpressurePossibileUpBow\"] = \"\\uE61E\";\n    Glyphs[\"stringsOverpressureUpBow\"] = \"\\uE61C\";\n    Glyphs[\"stringsScrapeCircularClockwise\"] = \"\\uEE88\";\n    Glyphs[\"stringsScrapeCircularCounterclockwise\"] = \"\\uEE89\";\n    Glyphs[\"stringsScrapeParallelInward\"] = \"\\uEE86\";\n    Glyphs[\"stringsScrapeParallelOutward\"] = \"\\uEE87\";\n    Glyphs[\"stringsThumbPosition\"] = \"\\uE624\";\n    Glyphs[\"stringsThumbPositionTurned\"] = \"\\uE625\";\n    Glyphs[\"stringsTripleChopInward\"] = \"\\uEE8A\";\n    Glyphs[\"stringsTripleChopOutward\"] = \"\\uEE8B\";\n    Glyphs[\"stringsUpBow\"] = \"\\uE612\";\n    Glyphs[\"stringsUpBowAwayFromBody\"] = \"\\uEE83\";\n    Glyphs[\"stringsUpBowBeyondBridge\"] = \"\\uEE85\";\n    Glyphs[\"stringsUpBowTowardsBody\"] = \"\\uEE81\";\n    Glyphs[\"stringsUpBowTurned\"] = \"\\uE613\";\n    Glyphs[\"stringsVibratoPulse\"] = \"\\uE623\";\n    Glyphs[\"swissRudimentsNoteheadBlackDouble\"] = \"\\uEE72\";\n    Glyphs[\"swissRudimentsNoteheadBlackFlam\"] = \"\\uEE70\";\n    Glyphs[\"swissRudimentsNoteheadHalfDouble\"] = \"\\uEE73\";\n    Glyphs[\"swissRudimentsNoteheadHalfFlam\"] = \"\\uEE71\";\n    Glyphs[\"systemDivider\"] = \"\\uE007\";\n    Glyphs[\"systemDividerExtraLong\"] = \"\\uE009\";\n    Glyphs[\"systemDividerLong\"] = \"\\uE008\";\n    Glyphs[\"textAugmentationDot\"] = \"\\uE1FC\";\n    Glyphs[\"textBlackNoteFrac16thLongStem\"] = \"\\uE1F5\";\n    Glyphs[\"textBlackNoteFrac16thShortStem\"] = \"\\uE1F4\";\n    Glyphs[\"textBlackNoteFrac32ndLongStem\"] = \"\\uE1F6\";\n    Glyphs[\"textBlackNoteFrac8thLongStem\"] = \"\\uE1F3\";\n    Glyphs[\"textBlackNoteFrac8thShortStem\"] = \"\\uE1F2\";\n    Glyphs[\"textBlackNoteLongStem\"] = \"\\uE1F1\";\n    Glyphs[\"textBlackNoteShortStem\"] = \"\\uE1F0\";\n    Glyphs[\"textCont16thBeamLongStem\"] = \"\\uE1FA\";\n    Glyphs[\"textCont16thBeamShortStem\"] = \"\\uE1F9\";\n    Glyphs[\"textCont32ndBeamLongStem\"] = \"\\uE1FB\";\n    Glyphs[\"textCont8thBeamLongStem\"] = \"\\uE1F8\";\n    Glyphs[\"textCont8thBeamShortStem\"] = \"\\uE1F7\";\n    Glyphs[\"textHeadlessBlackNoteFrac16thLongStem\"] = \"\\uE209\";\n    Glyphs[\"textHeadlessBlackNoteFrac16thShortStem\"] = \"\\uE208\";\n    Glyphs[\"textHeadlessBlackNoteFrac32ndLongStem\"] = \"\\uE20A\";\n    Glyphs[\"textHeadlessBlackNoteFrac8thLongStem\"] = \"\\uE207\";\n    Glyphs[\"textHeadlessBlackNoteFrac8thShortStem\"] = \"\\uE206\";\n    Glyphs[\"textHeadlessBlackNoteLongStem\"] = \"\\uE205\";\n    Glyphs[\"textHeadlessBlackNoteShortStem\"] = \"\\uE204\";\n    Glyphs[\"textTie\"] = \"\\uE1FD\";\n    Glyphs[\"textTuplet3LongStem\"] = \"\\uE202\";\n    Glyphs[\"textTuplet3ShortStem\"] = \"\\uE1FF\";\n    Glyphs[\"textTupletBracketEndLongStem\"] = \"\\uE203\";\n    Glyphs[\"textTupletBracketEndShortStem\"] = \"\\uE200\";\n    Glyphs[\"textTupletBracketStartLongStem\"] = \"\\uE201\";\n    Glyphs[\"textTupletBracketStartShortStem\"] = \"\\uE1FE\";\n    Glyphs[\"timeSig0\"] = \"\\uE080\";\n    Glyphs[\"timeSig0Reversed\"] = \"\\uECF0\";\n    Glyphs[\"timeSig0Turned\"] = \"\\uECE0\";\n    Glyphs[\"timeSig1\"] = \"\\uE081\";\n    Glyphs[\"timeSig1Reversed\"] = \"\\uECF1\";\n    Glyphs[\"timeSig1Turned\"] = \"\\uECE1\";\n    Glyphs[\"timeSig2\"] = \"\\uE082\";\n    Glyphs[\"timeSig2Reversed\"] = \"\\uECF2\";\n    Glyphs[\"timeSig2Turned\"] = \"\\uECE2\";\n    Glyphs[\"timeSig3\"] = \"\\uE083\";\n    Glyphs[\"timeSig3Reversed\"] = \"\\uECF3\";\n    Glyphs[\"timeSig3Turned\"] = \"\\uECE3\";\n    Glyphs[\"timeSig4\"] = \"\\uE084\";\n    Glyphs[\"timeSig4Reversed\"] = \"\\uECF4\";\n    Glyphs[\"timeSig4Turned\"] = \"\\uECE4\";\n    Glyphs[\"timeSig5\"] = \"\\uE085\";\n    Glyphs[\"timeSig5Reversed\"] = \"\\uECF5\";\n    Glyphs[\"timeSig5Turned\"] = \"\\uECE5\";\n    Glyphs[\"timeSig6\"] = \"\\uE086\";\n    Glyphs[\"timeSig6Reversed\"] = \"\\uECF6\";\n    Glyphs[\"timeSig6Turned\"] = \"\\uECE6\";\n    Glyphs[\"timeSig7\"] = \"\\uE087\";\n    Glyphs[\"timeSig7Reversed\"] = \"\\uECF7\";\n    Glyphs[\"timeSig7Turned\"] = \"\\uECE7\";\n    Glyphs[\"timeSig8\"] = \"\\uE088\";\n    Glyphs[\"timeSig8Reversed\"] = \"\\uECF8\";\n    Glyphs[\"timeSig8Turned\"] = \"\\uECE8\";\n    Glyphs[\"timeSig9\"] = \"\\uE089\";\n    Glyphs[\"timeSig9Reversed\"] = \"\\uECF9\";\n    Glyphs[\"timeSig9Turned\"] = \"\\uECE9\";\n    Glyphs[\"timeSigBracketLeft\"] = \"\\uEC80\";\n    Glyphs[\"timeSigBracketLeftSmall\"] = \"\\uEC82\";\n    Glyphs[\"timeSigBracketRight\"] = \"\\uEC81\";\n    Glyphs[\"timeSigBracketRightSmall\"] = \"\\uEC83\";\n    Glyphs[\"timeSigCombDenominator\"] = \"\\uE09F\";\n    Glyphs[\"timeSigCombNumerator\"] = \"\\uE09E\";\n    Glyphs[\"timeSigComma\"] = \"\\uE096\";\n    Glyphs[\"timeSigCommon\"] = \"\\uE08A\";\n    Glyphs[\"timeSigCommonReversed\"] = \"\\uECFA\";\n    Glyphs[\"timeSigCommonTurned\"] = \"\\uECEA\";\n    Glyphs[\"timeSigCut2\"] = \"\\uEC85\";\n    Glyphs[\"timeSigCut3\"] = \"\\uEC86\";\n    Glyphs[\"timeSigCutCommon\"] = \"\\uE08B\";\n    Glyphs[\"timeSigCutCommonReversed\"] = \"\\uECFB\";\n    Glyphs[\"timeSigCutCommonTurned\"] = \"\\uECEB\";\n    Glyphs[\"timeSigEquals\"] = \"\\uE08F\";\n    Glyphs[\"timeSigFractionHalf\"] = \"\\uE098\";\n    Glyphs[\"timeSigFractionOneThird\"] = \"\\uE09A\";\n    Glyphs[\"timeSigFractionQuarter\"] = \"\\uE097\";\n    Glyphs[\"timeSigFractionThreeQuarters\"] = \"\\uE099\";\n    Glyphs[\"timeSigFractionTwoThirds\"] = \"\\uE09B\";\n    Glyphs[\"timeSigFractionalSlash\"] = \"\\uE08E\";\n    Glyphs[\"timeSigMinus\"] = \"\\uE090\";\n    Glyphs[\"timeSigMultiply\"] = \"\\uE091\";\n    Glyphs[\"timeSigOpenPenderecki\"] = \"\\uE09D\";\n    Glyphs[\"timeSigParensLeft\"] = \"\\uE094\";\n    Glyphs[\"timeSigParensLeftSmall\"] = \"\\uE092\";\n    Glyphs[\"timeSigParensRight\"] = \"\\uE095\";\n    Glyphs[\"timeSigParensRightSmall\"] = \"\\uE093\";\n    Glyphs[\"timeSigPlus\"] = \"\\uE08C\";\n    Glyphs[\"timeSigPlusSmall\"] = \"\\uE08D\";\n    Glyphs[\"timeSigSlash\"] = \"\\uEC84\";\n    Glyphs[\"timeSigX\"] = \"\\uE09C\";\n    Glyphs[\"tremolo1\"] = \"\\uE220\";\n    Glyphs[\"tremolo2\"] = \"\\uE221\";\n    Glyphs[\"tremolo3\"] = \"\\uE222\";\n    Glyphs[\"tremolo4\"] = \"\\uE223\";\n    Glyphs[\"tremolo5\"] = \"\\uE224\";\n    Glyphs[\"tremoloDivisiDots2\"] = \"\\uE22E\";\n    Glyphs[\"tremoloDivisiDots3\"] = \"\\uE22F\";\n    Glyphs[\"tremoloDivisiDots4\"] = \"\\uE230\";\n    Glyphs[\"tremoloDivisiDots6\"] = \"\\uE231\";\n    Glyphs[\"tremoloFingered1\"] = \"\\uE225\";\n    Glyphs[\"tremoloFingered2\"] = \"\\uE226\";\n    Glyphs[\"tremoloFingered3\"] = \"\\uE227\";\n    Glyphs[\"tremoloFingered4\"] = \"\\uE228\";\n    Glyphs[\"tremoloFingered5\"] = \"\\uE229\";\n    Glyphs[\"tripleTongueAbove\"] = \"\\uE5F2\";\n    Glyphs[\"tripleTongueBelow\"] = \"\\uE5F3\";\n    Glyphs[\"tuplet0\"] = \"\\uE880\";\n    Glyphs[\"tuplet1\"] = \"\\uE881\";\n    Glyphs[\"tuplet2\"] = \"\\uE882\";\n    Glyphs[\"tuplet3\"] = \"\\uE883\";\n    Glyphs[\"tuplet4\"] = \"\\uE884\";\n    Glyphs[\"tuplet5\"] = \"\\uE885\";\n    Glyphs[\"tuplet6\"] = \"\\uE886\";\n    Glyphs[\"tuplet7\"] = \"\\uE887\";\n    Glyphs[\"tuplet8\"] = \"\\uE888\";\n    Glyphs[\"tuplet9\"] = \"\\uE889\";\n    Glyphs[\"tupletColon\"] = \"\\uE88A\";\n    Glyphs[\"unmeasuredTremolo\"] = \"\\uE22C\";\n    Glyphs[\"unmeasuredTremoloSimple\"] = \"\\uE22D\";\n    Glyphs[\"unpitchedPercussionClef1\"] = \"\\uE069\";\n    Glyphs[\"unpitchedPercussionClef2\"] = \"\\uE06A\";\n    Glyphs[\"ventiduesima\"] = \"\\uE517\";\n    Glyphs[\"ventiduesimaAlta\"] = \"\\uE518\";\n    Glyphs[\"ventiduesimaBassa\"] = \"\\uE519\";\n    Glyphs[\"ventiduesimaBassaMb\"] = \"\\uE51E\";\n    Glyphs[\"vocalFingerClickStockhausen\"] = \"\\uE649\";\n    Glyphs[\"vocalHalbGesungen\"] = \"\\uE64B\";\n    Glyphs[\"vocalMouthClosed\"] = \"\\uE640\";\n    Glyphs[\"vocalMouthOpen\"] = \"\\uE642\";\n    Glyphs[\"vocalMouthPursed\"] = \"\\uE644\";\n    Glyphs[\"vocalMouthSlightlyOpen\"] = \"\\uE641\";\n    Glyphs[\"vocalMouthWideOpen\"] = \"\\uE643\";\n    Glyphs[\"vocalNasalVoice\"] = \"\\uE647\";\n    Glyphs[\"vocalSprechgesang\"] = \"\\uE645\";\n    Glyphs[\"vocalTongueClickStockhausen\"] = \"\\uE648\";\n    Glyphs[\"vocalTongueFingerClickStockhausen\"] = \"\\uE64A\";\n    Glyphs[\"vocalsSussurando\"] = \"\\uE646\";\n    Glyphs[\"wiggleArpeggiatoDown\"] = \"\\uEAAA\";\n    Glyphs[\"wiggleArpeggiatoDownArrow\"] = \"\\uEAAE\";\n    Glyphs[\"wiggleArpeggiatoDownSwash\"] = \"\\uEAAC\";\n    Glyphs[\"wiggleArpeggiatoUp\"] = \"\\uEAA9\";\n    Glyphs[\"wiggleArpeggiatoUpArrow\"] = \"\\uEAAD\";\n    Glyphs[\"wiggleArpeggiatoUpSwash\"] = \"\\uEAAB\";\n    Glyphs[\"wiggleCircular\"] = \"\\uEAC9\";\n    Glyphs[\"wiggleCircularConstant\"] = \"\\uEAC0\";\n    Glyphs[\"wiggleCircularConstantFlipped\"] = \"\\uEAC1\";\n    Glyphs[\"wiggleCircularConstantFlippedLarge\"] = \"\\uEAC3\";\n    Glyphs[\"wiggleCircularConstantLarge\"] = \"\\uEAC2\";\n    Glyphs[\"wiggleCircularEnd\"] = \"\\uEACB\";\n    Glyphs[\"wiggleCircularLarge\"] = \"\\uEAC8\";\n    Glyphs[\"wiggleCircularLarger\"] = \"\\uEAC7\";\n    Glyphs[\"wiggleCircularLargerStill\"] = \"\\uEAC6\";\n    Glyphs[\"wiggleCircularLargest\"] = \"\\uEAC5\";\n    Glyphs[\"wiggleCircularSmall\"] = \"\\uEACA\";\n    Glyphs[\"wiggleCircularStart\"] = \"\\uEAC4\";\n    Glyphs[\"wiggleGlissando\"] = \"\\uEAAF\";\n    Glyphs[\"wiggleGlissandoGroup1\"] = \"\\uEABD\";\n    Glyphs[\"wiggleGlissandoGroup2\"] = \"\\uEABE\";\n    Glyphs[\"wiggleGlissandoGroup3\"] = \"\\uEABF\";\n    Glyphs[\"wiggleRandom1\"] = \"\\uEAF0\";\n    Glyphs[\"wiggleRandom2\"] = \"\\uEAF1\";\n    Glyphs[\"wiggleRandom3\"] = \"\\uEAF2\";\n    Glyphs[\"wiggleRandom4\"] = \"\\uEAF3\";\n    Glyphs[\"wiggleSawtooth\"] = \"\\uEABB\";\n    Glyphs[\"wiggleSawtoothNarrow\"] = \"\\uEABA\";\n    Glyphs[\"wiggleSawtoothWide\"] = \"\\uEABC\";\n    Glyphs[\"wiggleSquareWave\"] = \"\\uEAB8\";\n    Glyphs[\"wiggleSquareWaveNarrow\"] = \"\\uEAB7\";\n    Glyphs[\"wiggleSquareWaveWide\"] = \"\\uEAB9\";\n    Glyphs[\"wiggleTrill\"] = \"\\uEAA4\";\n    Glyphs[\"wiggleTrillFast\"] = \"\\uEAA3\";\n    Glyphs[\"wiggleTrillFaster\"] = \"\\uEAA2\";\n    Glyphs[\"wiggleTrillFasterStill\"] = \"\\uEAA1\";\n    Glyphs[\"wiggleTrillFastest\"] = \"\\uEAA0\";\n    Glyphs[\"wiggleTrillSlow\"] = \"\\uEAA5\";\n    Glyphs[\"wiggleTrillSlower\"] = \"\\uEAA6\";\n    Glyphs[\"wiggleTrillSlowerStill\"] = \"\\uEAA7\";\n    Glyphs[\"wiggleTrillSlowest\"] = \"\\uEAA8\";\n    Glyphs[\"wiggleVIbratoLargestSlower\"] = \"\\uEAEE\";\n    Glyphs[\"wiggleVIbratoMediumSlower\"] = \"\\uEAE0\";\n    Glyphs[\"wiggleVibrato\"] = \"\\uEAB0\";\n    Glyphs[\"wiggleVibratoLargeFast\"] = \"\\uEAE5\";\n    Glyphs[\"wiggleVibratoLargeFaster\"] = \"\\uEAE4\";\n    Glyphs[\"wiggleVibratoLargeFasterStill\"] = \"\\uEAE3\";\n    Glyphs[\"wiggleVibratoLargeFastest\"] = \"\\uEAE2\";\n    Glyphs[\"wiggleVibratoLargeSlow\"] = \"\\uEAE6\";\n    Glyphs[\"wiggleVibratoLargeSlower\"] = \"\\uEAE7\";\n    Glyphs[\"wiggleVibratoLargeSlowest\"] = \"\\uEAE8\";\n    Glyphs[\"wiggleVibratoLargestFast\"] = \"\\uEAEC\";\n    Glyphs[\"wiggleVibratoLargestFaster\"] = \"\\uEAEB\";\n    Glyphs[\"wiggleVibratoLargestFasterStill\"] = \"\\uEAEA\";\n    Glyphs[\"wiggleVibratoLargestFastest\"] = \"\\uEAE9\";\n    Glyphs[\"wiggleVibratoLargestSlow\"] = \"\\uEAED\";\n    Glyphs[\"wiggleVibratoLargestSlowest\"] = \"\\uEAEF\";\n    Glyphs[\"wiggleVibratoMediumFast\"] = \"\\uEADE\";\n    Glyphs[\"wiggleVibratoMediumFaster\"] = \"\\uEADD\";\n    Glyphs[\"wiggleVibratoMediumFasterStill\"] = \"\\uEADC\";\n    Glyphs[\"wiggleVibratoMediumFastest\"] = \"\\uEADB\";\n    Glyphs[\"wiggleVibratoMediumSlow\"] = \"\\uEADF\";\n    Glyphs[\"wiggleVibratoMediumSlowest\"] = \"\\uEAE1\";\n    Glyphs[\"wiggleVibratoSmallFast\"] = \"\\uEAD7\";\n    Glyphs[\"wiggleVibratoSmallFaster\"] = \"\\uEAD6\";\n    Glyphs[\"wiggleVibratoSmallFasterStill\"] = \"\\uEAD5\";\n    Glyphs[\"wiggleVibratoSmallFastest\"] = \"\\uEAD4\";\n    Glyphs[\"wiggleVibratoSmallSlow\"] = \"\\uEAD8\";\n    Glyphs[\"wiggleVibratoSmallSlower\"] = \"\\uEAD9\";\n    Glyphs[\"wiggleVibratoSmallSlowest\"] = \"\\uEADA\";\n    Glyphs[\"wiggleVibratoSmallestFast\"] = \"\\uEAD0\";\n    Glyphs[\"wiggleVibratoSmallestFaster\"] = \"\\uEACF\";\n    Glyphs[\"wiggleVibratoSmallestFasterStill\"] = \"\\uEACE\";\n    Glyphs[\"wiggleVibratoSmallestFastest\"] = \"\\uEACD\";\n    Glyphs[\"wiggleVibratoSmallestSlow\"] = \"\\uEAD1\";\n    Glyphs[\"wiggleVibratoSmallestSlower\"] = \"\\uEAD2\";\n    Glyphs[\"wiggleVibratoSmallestSlowest\"] = \"\\uEAD3\";\n    Glyphs[\"wiggleVibratoStart\"] = \"\\uEACC\";\n    Glyphs[\"wiggleVibratoWide\"] = \"\\uEAB1\";\n    Glyphs[\"wiggleWavy\"] = \"\\uEAB5\";\n    Glyphs[\"wiggleWavyNarrow\"] = \"\\uEAB4\";\n    Glyphs[\"wiggleWavyWide\"] = \"\\uEAB6\";\n    Glyphs[\"windClosedHole\"] = \"\\uE5F4\";\n    Glyphs[\"windFlatEmbouchure\"] = \"\\uE5FB\";\n    Glyphs[\"windHalfClosedHole1\"] = \"\\uE5F6\";\n    Glyphs[\"windHalfClosedHole2\"] = \"\\uE5F7\";\n    Glyphs[\"windHalfClosedHole3\"] = \"\\uE5F8\";\n    Glyphs[\"windLessRelaxedEmbouchure\"] = \"\\uE5FE\";\n    Glyphs[\"windLessTightEmbouchure\"] = \"\\uE600\";\n    Glyphs[\"windMouthpiecePop\"] = \"\\uE60A\";\n    Glyphs[\"windMultiphonicsBlackStem\"] = \"\\uE607\";\n    Glyphs[\"windMultiphonicsBlackWhiteStem\"] = \"\\uE609\";\n    Glyphs[\"windMultiphonicsWhiteStem\"] = \"\\uE608\";\n    Glyphs[\"windOpenHole\"] = \"\\uE5F9\";\n    Glyphs[\"windReedPositionIn\"] = \"\\uE606\";\n    Glyphs[\"windReedPositionNormal\"] = \"\\uE604\";\n    Glyphs[\"windReedPositionOut\"] = \"\\uE605\";\n    Glyphs[\"windRelaxedEmbouchure\"] = \"\\uE5FD\";\n    Glyphs[\"windRimOnly\"] = \"\\uE60B\";\n    Glyphs[\"windSharpEmbouchure\"] = \"\\uE5FC\";\n    Glyphs[\"windStrongAirPressure\"] = \"\\uE603\";\n    Glyphs[\"windThreeQuartersClosedHole\"] = \"\\uE5F5\";\n    Glyphs[\"windTightEmbouchure\"] = \"\\uE5FF\";\n    Glyphs[\"windTrillKey\"] = \"\\uE5FA\";\n    Glyphs[\"windVeryTightEmbouchure\"] = \"\\uE601\";\n    Glyphs[\"windWeakAirPressure\"] = \"\\uE602\";\n})(Glyphs || (Glyphs = {}));\n","import { RuntimeError } from './util.js';\nexport class Music {\n    static get NUM_TONES() {\n        return this.canonicalNotes.length;\n    }\n    static get roots() {\n        return ['c', 'd', 'e', 'f', 'g', 'a', 'b'];\n    }\n    static get rootValues() {\n        return [0, 2, 4, 5, 7, 9, 11];\n    }\n    static get rootIndexes() {\n        return {\n            c: 0,\n            d: 1,\n            e: 2,\n            f: 3,\n            g: 4,\n            a: 5,\n            b: 6,\n        };\n    }\n    static get canonicalNotes() {\n        return ['c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b'];\n    }\n    static get diatonicIntervals() {\n        return ['unison', 'm2', 'M2', 'm3', 'M3', 'p4', 'dim5', 'p5', 'm6', 'M6', 'b7', 'M7', 'octave'];\n    }\n    static get diatonicAccidentals() {\n        return {\n            unison: { note: 0, accidental: 0 },\n            m2: { note: 1, accidental: -1 },\n            M2: { note: 1, accidental: 0 },\n            m3: { note: 2, accidental: -1 },\n            M3: { note: 2, accidental: 0 },\n            p4: { note: 3, accidental: 0 },\n            dim5: { note: 4, accidental: -1 },\n            p5: { note: 4, accidental: 0 },\n            m6: { note: 5, accidental: -1 },\n            M6: { note: 5, accidental: 0 },\n            b7: { note: 6, accidental: -1 },\n            M7: { note: 6, accidental: 0 },\n            octave: { note: 7, accidental: 0 },\n        };\n    }\n    static get intervals() {\n        return {\n            u: 0,\n            unison: 0,\n            m2: 1,\n            b2: 1,\n            min2: 1,\n            S: 1,\n            H: 1,\n            2: 2,\n            M2: 2,\n            maj2: 2,\n            T: 2,\n            W: 2,\n            m3: 3,\n            b3: 3,\n            min3: 3,\n            M3: 4,\n            3: 4,\n            maj3: 4,\n            4: 5,\n            p4: 5,\n            '#4': 6,\n            b5: 6,\n            aug4: 6,\n            dim5: 6,\n            5: 7,\n            p5: 7,\n            '#5': 8,\n            b6: 8,\n            aug5: 8,\n            6: 9,\n            M6: 9,\n            maj6: 9,\n            b7: 10,\n            m7: 10,\n            min7: 10,\n            dom7: 10,\n            M7: 11,\n            maj7: 11,\n            8: 12,\n            octave: 12,\n        };\n    }\n    static get scales() {\n        return {\n            major: [2, 2, 1, 2, 2, 2, 1],\n            minor: [2, 1, 2, 2, 1, 2, 2],\n            ionian: [2, 2, 1, 2, 2, 2, 1],\n            dorian: [2, 1, 2, 2, 2, 1, 2],\n            phyrgian: [1, 2, 2, 2, 1, 2, 2],\n            lydian: [2, 2, 2, 1, 2, 2, 1],\n            mixolydian: [2, 2, 1, 2, 2, 1, 2],\n            aeolian: [2, 1, 2, 2, 1, 2, 2],\n            locrian: [1, 2, 2, 1, 2, 2, 2],\n        };\n    }\n    static get scaleTypes() {\n        return {\n            M: Music.scales.major,\n            m: Music.scales.minor,\n        };\n    }\n    static get accidentals() {\n        return ['bb', 'b', 'n', '#', '##'];\n    }\n    static get noteValues() {\n        return {\n            c: { rootIndex: 0, intVal: 0 },\n            cn: { rootIndex: 0, intVal: 0 },\n            'c#': { rootIndex: 0, intVal: 1 },\n            'c##': { rootIndex: 0, intVal: 2 },\n            cb: { rootIndex: 0, intVal: 11 },\n            cbb: { rootIndex: 0, intVal: 10 },\n            d: { rootIndex: 1, intVal: 2 },\n            dn: { rootIndex: 1, intVal: 2 },\n            'd#': { rootIndex: 1, intVal: 3 },\n            'd##': { rootIndex: 1, intVal: 4 },\n            db: { rootIndex: 1, intVal: 1 },\n            dbb: { rootIndex: 1, intVal: 0 },\n            e: { rootIndex: 2, intVal: 4 },\n            en: { rootIndex: 2, intVal: 4 },\n            'e#': { rootIndex: 2, intVal: 5 },\n            'e##': { rootIndex: 2, intVal: 6 },\n            eb: { rootIndex: 2, intVal: 3 },\n            ebb: { rootIndex: 2, intVal: 2 },\n            f: { rootIndex: 3, intVal: 5 },\n            fn: { rootIndex: 3, intVal: 5 },\n            'f#': { rootIndex: 3, intVal: 6 },\n            'f##': { rootIndex: 3, intVal: 7 },\n            fb: { rootIndex: 3, intVal: 4 },\n            fbb: { rootIndex: 3, intVal: 3 },\n            g: { rootIndex: 4, intVal: 7 },\n            gn: { rootIndex: 4, intVal: 7 },\n            'g#': { rootIndex: 4, intVal: 8 },\n            'g##': { rootIndex: 4, intVal: 9 },\n            gb: { rootIndex: 4, intVal: 6 },\n            gbb: { rootIndex: 4, intVal: 5 },\n            a: { rootIndex: 5, intVal: 9 },\n            an: { rootIndex: 5, intVal: 9 },\n            'a#': { rootIndex: 5, intVal: 10 },\n            'a##': { rootIndex: 5, intVal: 11 },\n            ab: { rootIndex: 5, intVal: 8 },\n            abb: { rootIndex: 5, intVal: 7 },\n            b: { rootIndex: 6, intVal: 11 },\n            bn: { rootIndex: 6, intVal: 11 },\n            'b#': { rootIndex: 6, intVal: 0 },\n            'b##': { rootIndex: 6, intVal: 1 },\n            bb: { rootIndex: 6, intVal: 10 },\n            bbb: { rootIndex: 6, intVal: 9 },\n        };\n    }\n    isValidNoteValue(note) {\n        return note >= 0 && note < Music.canonicalNotes.length;\n    }\n    isValidIntervalValue(interval) {\n        return interval >= 0 && interval < Music.diatonicIntervals.length;\n    }\n    getNoteParts(noteString) {\n        if (!noteString || noteString.length < 1) {\n            throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n        }\n        if (noteString.length > 3) {\n            throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n        }\n        const note = noteString.toLowerCase();\n        const regex = /^([cdefgab])(b|bb|n|#|##)?$/;\n        const match = regex.exec(note);\n        if (match !== null) {\n            const root = match[1];\n            const accidental = match[2];\n            return {\n                root,\n                accidental,\n            };\n        }\n        else {\n            throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n        }\n    }\n    getKeyParts(keyString) {\n        if (!keyString || keyString.length < 1) {\n            throw new RuntimeError('BadArguments', 'Invalid key: ' + keyString);\n        }\n        const key = keyString.toLowerCase();\n        const regex = /^([cdefgab])(b|#)?(mel|harm|m|M)?$/;\n        const match = regex.exec(key);\n        if (match !== null) {\n            const root = match[1];\n            const accidental = match[2];\n            let type = match[3];\n            if (!type)\n                type = 'M';\n            return {\n                root,\n                accidental,\n                type,\n            };\n        }\n        else {\n            throw new RuntimeError('BadArguments', `Invalid key: ${keyString}`);\n        }\n    }\n    getNoteValue(noteString) {\n        const value = Music.noteValues[noteString];\n        if (value === undefined) {\n            throw new RuntimeError('BadArguments', `Invalid note name: ${noteString}`);\n        }\n        return value.intVal;\n    }\n    getIntervalValue(intervalString) {\n        const value = Music.intervals[intervalString];\n        if (value === undefined) {\n            throw new RuntimeError('BadArguments', `Invalid interval name: ${intervalString}`);\n        }\n        return value;\n    }\n    getCanonicalNoteName(noteValue) {\n        if (!this.isValidNoteValue(noteValue)) {\n            throw new RuntimeError('BadArguments', `Invalid note value: ${noteValue}`);\n        }\n        return Music.canonicalNotes[noteValue];\n    }\n    getCanonicalIntervalName(intervalValue) {\n        if (!this.isValidIntervalValue(intervalValue)) {\n            throw new RuntimeError('BadArguments', `Invalid interval value: ${intervalValue}`);\n        }\n        return Music.diatonicIntervals[intervalValue];\n    }\n    getRelativeNoteValue(noteValue, intervalValue, direction = 1) {\n        if (direction !== 1 && direction !== -1) {\n            throw new RuntimeError('BadArguments', `Invalid direction: ${direction}`);\n        }\n        let sum = (noteValue + direction * intervalValue) % Music.NUM_TONES;\n        if (sum < 0)\n            sum += Music.NUM_TONES;\n        return sum;\n    }\n    getRelativeNoteName(root, noteValue) {\n        const parts = this.getNoteParts(root);\n        const rootValue = this.getNoteValue(parts.root);\n        let interval = noteValue - rootValue;\n        if (Math.abs(interval) > Music.NUM_TONES - 3) {\n            let multiplier = 1;\n            if (interval > 0)\n                multiplier = -1;\n            const reverseInterval = ((noteValue + 1 + (rootValue + 1)) % Music.NUM_TONES) * multiplier;\n            if (Math.abs(reverseInterval) > 2) {\n                throw new RuntimeError('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n            }\n            else {\n                interval = reverseInterval;\n            }\n        }\n        if (Math.abs(interval) > 2) {\n            throw new RuntimeError('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n        }\n        let relativeNoteName = parts.root;\n        if (interval > 0) {\n            for (let i = 1; i <= interval; ++i) {\n                relativeNoteName += '#';\n            }\n        }\n        else if (interval < 0) {\n            for (let i = -1; i >= interval; --i) {\n                relativeNoteName += 'b';\n            }\n        }\n        return relativeNoteName;\n    }\n    getScaleTones(key, intervals) {\n        const tones = [key];\n        let nextNote = key;\n        for (let i = 0; i < intervals.length; i++) {\n            nextNote = this.getRelativeNoteValue(nextNote, intervals[i]);\n            if (nextNote !== key)\n                tones.push(nextNote);\n        }\n        return tones;\n    }\n    getIntervalBetween(note1, note2, direction = 1) {\n        if (direction !== 1 && direction !== -1) {\n            throw new RuntimeError('BadArguments', `Invalid direction: ${direction}`);\n        }\n        if (!this.isValidNoteValue(note1) || !this.isValidNoteValue(note2)) {\n            throw new RuntimeError('BadArguments', `Invalid notes: ${note1}, ${note2}`);\n        }\n        let difference = direction === 1 ? note2 - note1 : note1 - note2;\n        if (difference < 0)\n            difference += Music.NUM_TONES;\n        return difference;\n    }\n    createScaleMap(keySignature) {\n        const keySigParts = this.getKeyParts(keySignature);\n        if (!keySigParts.type)\n            throw new RuntimeError('BadArguments', 'Unsupported key type: undefined');\n        const scaleName = Music.scaleTypes[keySigParts.type];\n        let keySigString = keySigParts.root;\n        if (keySigParts.accidental)\n            keySigString += keySigParts.accidental;\n        if (!scaleName)\n            throw new RuntimeError('BadArguments', 'Unsupported key type: ' + keySignature);\n        const scale = this.getScaleTones(this.getNoteValue(keySigString), scaleName);\n        const noteLocation = Music.rootIndexes[keySigParts.root];\n        const scaleMap = {};\n        for (let i = 0; i < Music.roots.length; ++i) {\n            const index = (noteLocation + i) % Music.roots.length;\n            const rootName = Music.roots[index];\n            let noteName = this.getRelativeNoteName(rootName, scale[i]);\n            if (noteName.length === 1) {\n                noteName += 'n';\n            }\n            scaleMap[rootName] = noteName;\n        }\n        return scaleMap;\n    }\n}\n","import { Fraction } from './fraction.js';\nimport { Glyphs } from './glyphs.js';\nimport { RuntimeError } from './util.js';\nconst RESOLUTION = 16384;\nconst durations = {\n    '1/2': RESOLUTION * 2,\n    1: RESOLUTION / 1,\n    2: RESOLUTION / 2,\n    4: RESOLUTION / 4,\n    8: RESOLUTION / 8,\n    16: RESOLUTION / 16,\n    32: RESOLUTION / 32,\n    64: RESOLUTION / 64,\n    128: RESOLUTION / 128,\n    256: RESOLUTION / 256,\n};\nconst durationAliases = {\n    w: '1',\n    h: '2',\n    q: '4',\n    b: '256',\n};\nconst keySignatures = {\n    C: { num: 0 },\n    Am: { num: 0 },\n    F: { accidental: 'b', num: 1 },\n    Dm: { accidental: 'b', num: 1 },\n    Bb: { accidental: 'b', num: 2 },\n    Gm: { accidental: 'b', num: 2 },\n    Eb: { accidental: 'b', num: 3 },\n    Cm: { accidental: 'b', num: 3 },\n    Ab: { accidental: 'b', num: 4 },\n    Fm: { accidental: 'b', num: 4 },\n    Db: { accidental: 'b', num: 5 },\n    Bbm: { accidental: 'b', num: 5 },\n    Gb: { accidental: 'b', num: 6 },\n    Ebm: { accidental: 'b', num: 6 },\n    Cb: { accidental: 'b', num: 7 },\n    Abm: { accidental: 'b', num: 7 },\n    G: { accidental: '#', num: 1 },\n    Em: { accidental: '#', num: 1 },\n    D: { accidental: '#', num: 2 },\n    Bm: { accidental: '#', num: 2 },\n    A: { accidental: '#', num: 3 },\n    'F#m': { accidental: '#', num: 3 },\n    E: { accidental: '#', num: 4 },\n    'C#m': { accidental: '#', num: 4 },\n    B: { accidental: '#', num: 5 },\n    'G#m': { accidental: '#', num: 5 },\n    'F#': { accidental: '#', num: 6 },\n    'D#m': { accidental: '#', num: 6 },\n    'C#': { accidental: '#', num: 7 },\n    'A#m': { accidental: '#', num: 7 },\n};\nconst clefs = {\n    treble: { lineShift: 0 },\n    bass: { lineShift: 6 },\n    tenor: { lineShift: 4 },\n    alto: { lineShift: 3 },\n    soprano: { lineShift: 1 },\n    percussion: { lineShift: 0 },\n    'mezzo-soprano': { lineShift: 2 },\n    'baritone-c': { lineShift: 5 },\n    'baritone-f': { lineShift: 5 },\n    subbass: { lineShift: 7 },\n    french: { lineShift: -1 },\n};\nconst notesInfo = {\n    C: { index: 0, intVal: 0 },\n    CN: { index: 0, intVal: 0 },\n    'C#': { index: 0, intVal: 1 },\n    'C##': { index: 0, intVal: 2 },\n    CB: { index: 0, intVal: 11 },\n    CBB: { index: 0, intVal: 10 },\n    D: { index: 1, intVal: 2 },\n    DN: { index: 1, intVal: 2 },\n    'D#': { index: 1, intVal: 3 },\n    'D##': { index: 1, intVal: 4 },\n    DB: { index: 1, intVal: 1 },\n    DBB: { index: 1, intVal: 0 },\n    E: { index: 2, intVal: 4 },\n    EN: { index: 2, intVal: 4 },\n    'E#': { index: 2, intVal: 5 },\n    'E##': { index: 2, intVal: 6 },\n    EB: { index: 2, intVal: 3 },\n    EBB: { index: 2, intVal: 2 },\n    F: { index: 3, intVal: 5 },\n    FN: { index: 3, intVal: 5 },\n    'F#': { index: 3, intVal: 6 },\n    'F##': { index: 3, intVal: 7 },\n    FB: { index: 3, intVal: 4 },\n    FBB: { index: 3, intVal: 3 },\n    G: { index: 4, intVal: 7 },\n    GN: { index: 4, intVal: 7 },\n    'G#': { index: 4, intVal: 8 },\n    'G##': { index: 4, intVal: 9 },\n    GB: { index: 4, intVal: 6 },\n    GBB: { index: 4, intVal: 5 },\n    A: { index: 5, intVal: 9 },\n    AN: { index: 5, intVal: 9 },\n    'A#': { index: 5, intVal: 10 },\n    'A##': { index: 5, intVal: 11 },\n    AB: { index: 5, intVal: 8 },\n    ABB: { index: 5, intVal: 7 },\n    B: { index: 6, intVal: 11 },\n    BN: { index: 6, intVal: 11 },\n    'B#': { index: 6, intVal: 12 },\n    'B##': { index: 6, intVal: 13 },\n    BB: { index: 6, intVal: 10 },\n    BBB: { index: 6, intVal: 9 },\n    R: { index: 6 },\n    X: { index: 6 },\n};\nconst validNoteTypes = {\n    n: { name: 'note' },\n    r: { name: 'rest' },\n    h: { name: 'harmonic' },\n    m: { name: 'muted' },\n    s: { name: 'slash' },\n    g: { name: 'ghost' },\n    d: { name: 'diamond' },\n    x: { name: 'x' },\n    ci: { name: 'circled' },\n    cx: { name: 'circle x' },\n    sf: { name: 'slashed' },\n    sb: { name: 'slashed backward' },\n    sq: { name: 'square' },\n    tu: { name: 'triangle up' },\n    td: { name: 'triangle down' },\n};\nconst accidentals = {\n    '#': Glyphs.accidentalSharp,\n    '##': Glyphs.accidentalDoubleSharp,\n    b: Glyphs.accidentalFlat,\n    bb: Glyphs.accidentalDoubleFlat,\n    n: Glyphs.accidentalNatural,\n    '{': Glyphs.accidentalParensLeft,\n    '}': Glyphs.accidentalParensRight,\n    db: Glyphs.accidentalThreeQuarterTonesFlatZimmermann,\n    d: Glyphs.accidentalQuarterToneFlatStein,\n    '++': Glyphs.accidentalThreeQuarterTonesSharpStein,\n    '+': Glyphs.accidentalQuarterToneSharpStein,\n    '+-': Glyphs.accidentalKucukMucennebSharp,\n    bs: Glyphs.accidentalBakiyeFlat,\n    bss: Glyphs.accidentalBuyukMucennebFlat,\n    o: Glyphs.accidentalSori,\n    k: Glyphs.accidentalKoron,\n    bbs: Glyphs.accidentalBuyukMucennebSharp,\n    '++-': Glyphs.accidentalBuyukMucennebSharp,\n    ashs: Glyphs.accidentalBuyukMucennebSharp,\n    afhf: Glyphs.accidentalBuyukMucennebSharp,\n};\nconst accidentalColumns = {\n    1: {\n        a: [1],\n        b: [1],\n    },\n    2: {\n        a: [1, 2],\n    },\n    3: {\n        a: [1, 3, 2],\n        b: [1, 2, 1],\n        secondOnBottom: [1, 2, 3],\n    },\n    4: {\n        a: [1, 3, 4, 2],\n        b: [1, 2, 3, 1],\n        spacedOutTetrachord: [1, 2, 1, 2],\n    },\n    5: {\n        a: [1, 3, 5, 4, 2],\n        b: [1, 2, 4, 3, 1],\n        spacedOutPentachord: [1, 2, 3, 2, 1],\n        verySpacedOutPentachord: [1, 2, 1, 2, 1],\n    },\n    6: {\n        a: [1, 3, 5, 6, 4, 2],\n        b: [1, 2, 4, 5, 3, 1],\n        spacedOutHexachord: [1, 3, 2, 1, 3, 2],\n        verySpacedOutHexachord: [1, 2, 1, 2, 1, 2],\n    },\n};\nconst articulations = {\n    'a.': { code: Glyphs.augmentationDot, betweenLines: true },\n    av: {\n        aboveCode: Glyphs.articStaccatissimoAbove,\n        belowCode: Glyphs.articStaccatissimoBelow,\n        betweenLines: true,\n    },\n    'a>': {\n        aboveCode: Glyphs.articAccentAbove,\n        belowCode: Glyphs.articAccentBelow,\n        betweenLines: true,\n    },\n    'a-': {\n        aboveCode: Glyphs.articTenutoAbove,\n        belowCode: Glyphs.articTenutoBelow,\n        betweenLines: true,\n    },\n    'a^': {\n        aboveCode: Glyphs.articMarcatoAbove,\n        belowCode: Glyphs.articMarcatoBelow,\n        betweenLines: false,\n    },\n    'a+': { code: Glyphs.pluckedLeftHandPizzicato, betweenLines: false },\n    ao: {\n        aboveCode: Glyphs.pluckedSnapPizzicatoAbove,\n        belowCode: Glyphs.pluckedSnapPizzicatoBelow,\n        betweenLines: false,\n    },\n    ah: { code: Glyphs.stringsHarmonic, betweenLines: false },\n    'a@': { aboveCode: Glyphs.fermataAbove, belowCode: Glyphs.fermataBelow, betweenLines: false },\n    'a@a': { code: Glyphs.fermataAbove, betweenLines: false },\n    'a@u': { code: Glyphs.fermataBelow, betweenLines: false },\n    'a@s': { aboveCode: Glyphs.fermataShortAbove, belowCode: Glyphs.fermataShortBelow, betweenLines: false },\n    'a@as': { code: Glyphs.fermataShortAbove, betweenLines: false },\n    'a@us': { code: Glyphs.fermataShortBelow, betweenLines: false },\n    'a@l': { aboveCode: Glyphs.fermataLongAbove, belowCode: Glyphs.fermataLongBelow, betweenLines: false },\n    'a@al': { code: Glyphs.fermataLongAbove, betweenLines: false },\n    'a@ul': { code: Glyphs.fermataLongBelow, betweenLines: false },\n    'a@vl': {\n        aboveCode: Glyphs.fermataVeryLongAbove,\n        belowCode: Glyphs.fermataVeryLongBelow,\n        betweenLines: false,\n    },\n    'a@avl': { code: Glyphs.fermataVeryLongAbove, betweenLines: false },\n    'a@uvl': { code: Glyphs.fermataVeryLongBelow, betweenLines: false },\n    'a|': { code: Glyphs.stringsUpBow, betweenLines: false },\n    am: { code: Glyphs.stringsDownBow, betweenLines: false },\n    'a,': { code: Glyphs.pictChokeCymbal, betweenLines: false },\n};\nconst ornaments = {\n    mordent: Glyphs.ornamentShortTrill,\n    mordentInverted: Glyphs.ornamentMordent,\n    turn: Glyphs.ornamentTurn,\n    turnInverted: Glyphs.ornamentTurnSlash,\n    tr: Glyphs.ornamentTrill,\n    upprall: Glyphs.ornamentPrecompSlideTrillDAnglebert,\n    downprall: Glyphs.ornamentPrecompDoubleCadenceUpperPrefix,\n    prallup: Glyphs.ornamentPrecompTrillSuffixDandrieu,\n    pralldown: Glyphs.ornamentPrecompTrillLowerSuffix,\n    upmordent: Glyphs.ornamentPrecompSlideTrillBach,\n    downmordent: Glyphs.ornamentPrecompDoubleCadenceUpperPrefixTurn,\n    lineprall: Glyphs.ornamentPrecompAppoggTrill,\n    prallprall: Glyphs.ornamentTremblement,\n    scoop: Glyphs.brassScoop,\n    doit: Glyphs.brassDoitMedium,\n    fall: Glyphs.brassFallLipShort,\n    doitLong: Glyphs.brassLiftMedium,\n    fallLong: Glyphs.brassFallRoughMedium,\n    bend: Glyphs.brassBend,\n    plungerClosed: Glyphs.brassMuteClosed,\n    plungerOpen: Glyphs.brassMuteOpen,\n    flip: Glyphs.brassFlip,\n    jazzTurn: Glyphs.brassJazzTurn,\n    smear: Glyphs.brassSmear,\n};\nexport class Tables {\n    static clefProperties(clef) {\n        if (!clef || !(clef in clefs))\n            throw new RuntimeError('BadArgument', 'Invalid clef: ' + clef);\n        return clefs[clef];\n    }\n    static keyProperties(keyOctaveGlyph, clef = 'treble', type = 'N', params) {\n        let options = { octaveShift: 0, duration: '4' };\n        if (typeof params === 'object') {\n            options = Object.assign(Object.assign({}, options), params);\n        }\n        const duration = Tables.sanitizeDuration(options.duration);\n        const pieces = keyOctaveGlyph.split('/');\n        if (pieces.length < 2) {\n            throw new RuntimeError('BadArguments', `First argument must be note/octave or note/octave/glyph-code: ${keyOctaveGlyph}`);\n        }\n        const key = pieces[0].toUpperCase();\n        type = type.toUpperCase();\n        const value = notesInfo[key];\n        if (!value)\n            throw new RuntimeError('BadArguments', 'Invalid key name: ' + key);\n        let octave = parseInt(pieces[1], 10);\n        octave -= options.octaveShift;\n        const baseIndex = octave * 7 - 4 * 7;\n        let line = (baseIndex + value.index) / 2;\n        line += Tables.clefProperties(clef).lineShift;\n        const intValue = typeof value.intVal !== 'undefined' ? octave * 12 + value.intVal : undefined;\n        let code = '';\n        let glyphName = 'N';\n        if (pieces.length > 2 && pieces[2]) {\n            glyphName = pieces[2].toUpperCase();\n        }\n        else if (type !== 'N') {\n            glyphName = type;\n        }\n        else\n            glyphName = key;\n        code = this.codeNoteHead(glyphName, duration);\n        return {\n            key,\n            octave,\n            line,\n            intValue,\n            code,\n            displaced: false,\n        };\n    }\n    static integerToNote(integer) {\n        if (typeof integer === 'undefined' || integer < 0 || integer > 11) {\n            throw new RuntimeError('BadArguments', `integerToNote() requires an integer in the range [0, 11]: ${integer}`);\n        }\n        const table = {\n            0: 'C',\n            1: 'C#',\n            2: 'D',\n            3: 'D#',\n            4: 'E',\n            5: 'F',\n            6: 'F#',\n            7: 'G',\n            8: 'G#',\n            9: 'A',\n            10: 'A#',\n            11: 'B',\n        };\n        const noteValue = table[integer];\n        if (!noteValue) {\n            throw new RuntimeError('BadArguments', `Unknown note value for integer: ${integer}`);\n        }\n        return noteValue;\n    }\n    static textWidth(text) {\n        return 7 * text.toString().length;\n    }\n    static articulationCodes(artic) {\n        return articulations[artic];\n    }\n    static accidentalCodes(accidental) {\n        var _a;\n        return (_a = accidentals[accidental]) !== null && _a !== void 0 ? _a : accidental;\n    }\n    static ornamentCodes(ornament) {\n        var _a;\n        return (_a = ornaments[ornament]) !== null && _a !== void 0 ? _a : ornament;\n    }\n    static keySignature(spec) {\n        const keySpec = keySignatures[spec];\n        if (!keySpec) {\n            throw new RuntimeError('BadKeySignature', `Bad key signature spec: '${spec}'`);\n        }\n        if (!keySpec.accidental) {\n            return [];\n        }\n        const accidentalList = {\n            b: [2, 0.5, 2.5, 1, 3, 1.5, 3.5],\n            '#': [0, 1.5, -0.5, 1, 2.5, 0.5, 2],\n        };\n        const notes = accidentalList[keySpec.accidental];\n        const accList = [];\n        for (let i = 0; i < keySpec.num; ++i) {\n            const line = notes[i];\n            accList.push({ type: keySpec.accidental, line });\n        }\n        return accList;\n    }\n    static getKeySignatures() {\n        return keySignatures;\n    }\n    static hasKeySignature(spec) {\n        return spec in keySignatures;\n    }\n    static sanitizeDuration(duration) {\n        const durationNumber = durationAliases[duration];\n        if (durationNumber !== undefined) {\n            duration = durationNumber;\n        }\n        if (durations[duration] === undefined) {\n            throw new RuntimeError('BadArguments', `The provided duration is not valid: ${duration}`);\n        }\n        return duration;\n    }\n    static durationToFraction(duration) {\n        return new Fraction().parse(Tables.sanitizeDuration(duration));\n    }\n    static durationToNumber(duration) {\n        return Tables.durationToFraction(duration).value();\n    }\n    static durationToTicks(duration) {\n        duration = Tables.sanitizeDuration(duration);\n        const ticks = durations[duration];\n        if (ticks === undefined) {\n            throw new RuntimeError('InvalidDuration');\n        }\n        return ticks;\n    }\n    static codeNoteHead(type, duration) {\n        switch (type) {\n            case 'D0':\n                return Glyphs.noteheadDiamondWhole;\n            case 'D1':\n                return Glyphs.noteheadDiamondHalf;\n            case 'D2':\n                return Glyphs.noteheadDiamondBlack;\n            case 'D3':\n                return Glyphs.noteheadDiamondBlack;\n            case 'T0':\n                return Glyphs.noteheadTriangleUpWhole;\n            case 'T1':\n                return Glyphs.noteheadTriangleUpHalf;\n            case 'T2':\n                return Glyphs.noteheadTriangleUpBlack;\n            case 'T3':\n                return Glyphs.noteheadTriangleUpBlack;\n            case 'X0':\n                return Glyphs.noteheadXWhole;\n            case 'X1':\n                return Glyphs.noteheadXHalf;\n            case 'X2':\n                return Glyphs.noteheadXBlack;\n            case 'X3':\n                return Glyphs.noteheadCircleX;\n            case 'S1':\n                return Glyphs.noteheadSquareWhite;\n            case 'S2':\n                return Glyphs.noteheadSquareBlack;\n            case 'R1':\n                return Glyphs.noteheadSquareWhite;\n            case 'R2':\n                return Glyphs.noteheadSquareWhite;\n            case 'DO':\n                return Glyphs.noteheadTriangleUpBlack;\n            case 'RE':\n                return Glyphs.noteheadMoonBlack;\n            case 'MI':\n                return Glyphs.noteheadDiamondBlack;\n            case 'FA':\n                return Glyphs.noteheadTriangleLeftBlack;\n            case 'FAUP':\n                return Glyphs.noteheadTriangleRightBlack;\n            case 'SO':\n                return Glyphs.noteheadBlack;\n            case 'LA':\n                return Glyphs.noteheadSquareBlack;\n            case 'TI':\n                return Glyphs.noteheadTriangleRoundDownBlack;\n            case 'DI':\n            case 'H':\n                switch (duration) {\n                    case '1/2':\n                        return Glyphs.noteheadDiamondDoubleWhole;\n                    case '1':\n                        return Glyphs.noteheadDiamondWhole;\n                    case '2':\n                        return Glyphs.noteheadDiamondHalf;\n                    default:\n                        return Glyphs.noteheadDiamondBlack;\n                }\n            case 'X':\n            case 'M':\n                switch (duration) {\n                    case '1/2':\n                        return Glyphs.noteheadXDoubleWhole;\n                    case '1':\n                        return Glyphs.noteheadXWhole;\n                    case '2':\n                        return Glyphs.noteheadXHalf;\n                    default:\n                        return Glyphs.noteheadXBlack;\n                }\n            case 'CX':\n                switch (duration) {\n                    case '1/2':\n                        return Glyphs.noteheadCircleXDoubleWhole;\n                    case '1':\n                        return Glyphs.noteheadCircleXWhole;\n                    case '2':\n                        return Glyphs.noteheadCircleXHalf;\n                    default:\n                        return Glyphs.noteheadCircleX;\n                }\n            case 'CI':\n                switch (duration) {\n                    case '1/2':\n                        return Glyphs.noteheadCircledDoubleWhole;\n                    case '1':\n                        return Glyphs.noteheadCircledWhole;\n                    case '2':\n                        return Glyphs.noteheadCircledHalf;\n                    default:\n                        return Glyphs.noteheadCircledBlack;\n                }\n            case 'SQ':\n                switch (duration) {\n                    case '1/2':\n                        return Glyphs.noteheadDoubleWholeSquare;\n                    case '1':\n                        return Glyphs.noteheadSquareWhite;\n                    case '2':\n                        return Glyphs.noteheadSquareWhite;\n                    default:\n                        return Glyphs.noteheadSquareBlack;\n                }\n            case 'TU':\n                switch (duration) {\n                    case '1/2':\n                        return Glyphs.noteheadTriangleUpDoubleWhole;\n                    case '1':\n                        return Glyphs.noteheadTriangleUpWhole;\n                    case '2':\n                        return Glyphs.noteheadTriangleUpHalf;\n                    default:\n                        return Glyphs.noteheadTriangleUpBlack;\n                }\n            case 'TD':\n                switch (duration) {\n                    case '1/2':\n                        return Glyphs.noteheadTriangleDownDoubleWhole;\n                    case '1':\n                        return Glyphs.noteheadTriangleDownWhole;\n                    case '2':\n                        return Glyphs.noteheadTriangleDownHalf;\n                    default:\n                        return Glyphs.noteheadTriangleDownBlack;\n                }\n            case 'SF':\n                switch (duration) {\n                    case '1/2':\n                        return Glyphs.noteheadSlashedDoubleWhole1;\n                    case '1':\n                        return Glyphs.noteheadSlashedWhole1;\n                    case '2':\n                        return Glyphs.noteheadSlashedHalf1;\n                    default:\n                        return Glyphs.noteheadSlashedBlack1;\n                }\n            case 'SB':\n                switch (duration) {\n                    case '1/2':\n                        return Glyphs.noteheadSlashedDoubleWhole2;\n                    case '1':\n                        return Glyphs.noteheadSlashedWhole2;\n                    case '2':\n                        return Glyphs.noteheadSlashedHalf2;\n                    default:\n                        return Glyphs.noteheadSlashedBlack2;\n                }\n            case 'R':\n                switch (duration) {\n                    case '1/2':\n                        return Glyphs.restDoubleWhole;\n                    case '1':\n                        return Glyphs.restWhole;\n                    case '2':\n                        return Glyphs.restHalf;\n                    case '4':\n                        return Glyphs.restQuarter;\n                    case '8':\n                        return Glyphs.rest8th;\n                    case '16':\n                        return Glyphs.rest16th;\n                    case '32':\n                        return Glyphs.rest32nd;\n                    case '64':\n                        return Glyphs.rest64th;\n                    case '128':\n                        return Glyphs.rest128th;\n                }\n                break;\n            case 'S':\n                switch (duration) {\n                    case '1/2':\n                        return Glyphs.noteheadSlashWhiteDoubleWhole;\n                    case '1':\n                        return Glyphs.noteheadSlashWhiteWhole;\n                    case '2':\n                        return Glyphs.noteheadSlashWhiteHalf;\n                    default:\n                        return Glyphs.noteheadSlashVerticalEnds;\n                }\n            default:\n                switch (duration) {\n                    case '1/2':\n                        return Glyphs.noteheadDoubleWhole;\n                    case '1':\n                        return Glyphs.noteheadWhole;\n                    case '2':\n                        return Glyphs.noteheadHalf;\n                    default:\n                        return Glyphs.noteheadBlack;\n                }\n        }\n        return Glyphs.null;\n    }\n}\nTables.UNISON = true;\nTables.SOFTMAX_FACTOR = 10;\nTables.STEM_WIDTH = 1.5;\nTables.STEM_HEIGHT = 35;\nTables.STAVE_LINE_THICKNESS = 1;\nTables.RENDER_PRECISION_PLACES = 3;\nTables.RESOLUTION = RESOLUTION;\nTables.durationCodes = {\n    '1/2': {\n        stem: false,\n    },\n    1: {\n        stem: false,\n    },\n    2: {\n        stem: true,\n    },\n    4: {\n        stem: true,\n    },\n    8: {\n        stem: true,\n        beamCount: 1,\n        stemBeamExtension: 0,\n        codeFlagUp: Glyphs.flag8thUp,\n    },\n    16: {\n        beamCount: 2,\n        stemBeamExtension: 0,\n        stem: true,\n        codeFlagUp: Glyphs.flag16thUp,\n    },\n    32: {\n        beamCount: 3,\n        stemBeamExtension: 7.5,\n        stem: true,\n        codeFlagUp: Glyphs.flag32ndUp,\n    },\n    64: {\n        beamCount: 4,\n        stemBeamExtension: 15,\n        stem: true,\n        codeFlagUp: Glyphs.flag64thUp,\n    },\n    128: {\n        beamCount: 5,\n        stemBeamExtension: 22.5,\n        stem: true,\n        codeFlagUp: Glyphs.flag128thUp,\n    },\n};\nTables.NOTATION_FONT_SCALE = 39;\nTables.TABLATURE_FONT_SCALE = 39;\nTables.SLASH_NOTEHEAD_WIDTH = 15;\nTables.STAVE_LINE_DISTANCE = 10;\nTables.TEXT_HEIGHT_OFFSET_HACK = 1;\nTables.accidentalColumnsTable = accidentalColumns;\nTables.unicode = {\n    sharp: '\\u266f',\n    flat: '\\u266d',\n    natural: '\\u266e',\n    triangle: '\\u25b3',\n    'o-with-slash': '\\u00f8',\n    degrees: '\\u00b0',\n    circle: '\\u25cb',\n};\nTables.validTypes = validNoteTypes;\nTables.TIME4_4 = {\n    numBeats: 4,\n    beatValue: 4,\n    resolution: RESOLUTION,\n};\n","export function isCategory(obj, category, checkAncestors = true) {\n    if (typeof obj !== 'object' || obj === null) {\n        return false;\n    }\n    let constructorFcn = obj.constructor;\n    if (checkAncestors) {\n        while (obj !== null) {\n            constructorFcn = obj.constructor;\n            if ('CATEGORY' in constructorFcn && constructorFcn.CATEGORY === category) {\n                return true;\n            }\n            obj = Object.getPrototypeOf(obj);\n        }\n        return false;\n    }\n    else {\n        return 'CATEGORY' in constructorFcn && constructorFcn.CATEGORY === category;\n    }\n}\nexport const isAccidental = (obj) => isCategory(obj, \"Accidental\");\nexport const isAnnotation = (obj) => isCategory(obj, \"Annotation\");\nexport const isBarline = (obj) => isCategory(obj, \"Barline\");\nexport const isDot = (obj) => isCategory(obj, \"Dot\");\nexport const isGraceNote = (obj) => isCategory(obj, \"GraceNote\");\nexport const isGraceNoteGroup = (obj) => isCategory(obj, \"GraceNoteGroup\");\nexport const isNote = (obj) => isCategory(obj, \"Note\");\nexport const isRenderContext = (obj) => isCategory(obj, \"RenderContext\");\nexport const isStaveNote = (obj) => isCategory(obj, \"StaveNote\");\nexport const isStemmableNote = (obj) => isCategory(obj, \"StemmableNote\");\nexport const isTabNote = (obj) => isCategory(obj, \"TabNote\");\n","import { Fraction } from './fraction.js';\nimport { Metrics } from './metrics.js';\nimport { Modifier } from './modifier.js';\nimport { Music } from './music.js';\nimport { Tables } from './tables.js';\nimport { isAccidental, isGraceNote, isGraceNoteGroup, isStaveNote } from './typeguard.js';\nimport { defined, log } from './util.js';\nfunction L(...args) {\n    if (Accidental.DEBUG)\n        log('VexFlow.Accidental', args);\n}\nexport class Accidental extends Modifier {\n    static get CATEGORY() {\n        return \"Accidental\";\n    }\n    static format(accidentals, state) {\n        if (!accidentals || accidentals.length === 0)\n            return;\n        const noteheadAccidentalPadding = Metrics.get('Accidental.noteheadAccidentalPadding');\n        const leftShift = state.leftShift + noteheadAccidentalPadding;\n        const accidentalSpacing = Metrics.get('Accidental.accidentalSpacing');\n        const additionalPadding = Metrics.get('Accidental.leftPadding');\n        const accidentalLinePositionsAndSpaceNeeds = [];\n        let prevNote = undefined;\n        let extraXSpaceNeededForLeftDisplacedNotehead = 0;\n        for (let i = 0; i < accidentals.length; ++i) {\n            const accidental = accidentals[i];\n            const note = accidental.getNote();\n            const stave = note.getStave();\n            const index = accidental.checkIndex();\n            const props = note.getKeyProps()[index];\n            if (note !== prevNote) {\n                for (let n = 0; n < note.keys.length; ++n) {\n                    extraXSpaceNeededForLeftDisplacedNotehead = Math.max(note.getLeftDisplacedHeadPx() - note.getXShift(), extraXSpaceNeededForLeftDisplacedNotehead);\n                }\n                prevNote = note;\n            }\n            if (stave) {\n                const lineSpace = stave.getSpacingBetweenLines();\n                const y = stave.getYForLine(props.line);\n                const accLine = Math.round((y / lineSpace) * 2) / 2;\n                accidentalLinePositionsAndSpaceNeeds.push({\n                    y,\n                    line: accLine,\n                    extraXSpaceNeeded: extraXSpaceNeededForLeftDisplacedNotehead,\n                    accidental: accidental,\n                    spacingBetweenStaveLines: lineSpace,\n                });\n            }\n            else {\n                accidentalLinePositionsAndSpaceNeeds.push({\n                    line: props.line,\n                    extraXSpaceNeeded: extraXSpaceNeededForLeftDisplacedNotehead,\n                    accidental: accidental,\n                });\n            }\n        }\n        accidentalLinePositionsAndSpaceNeeds.sort((a, b) => b.line - a.line);\n        const staveLineAccidentalLayoutMetrics = [];\n        let maxExtraXSpaceNeeded = 0;\n        for (let i = 0; i < accidentalLinePositionsAndSpaceNeeds.length; i++) {\n            const accidentalLinePositionAndSpaceNeeds = accidentalLinePositionsAndSpaceNeeds[i];\n            const accidentalType = accidentalLinePositionAndSpaceNeeds.accidental.type;\n            const priorLineMetric = staveLineAccidentalLayoutMetrics[staveLineAccidentalLayoutMetrics.length - 1];\n            let currentLineMetric;\n            if (!priorLineMetric || (priorLineMetric === null || priorLineMetric === void 0 ? void 0 : priorLineMetric.line) !== accidentalLinePositionAndSpaceNeeds.line) {\n                currentLineMetric = {\n                    line: accidentalLinePositionAndSpaceNeeds.line,\n                    flatLine: true,\n                    dblSharpLine: true,\n                    numAcc: 0,\n                    width: 0,\n                    column: 0,\n                };\n                staveLineAccidentalLayoutMetrics.push(currentLineMetric);\n            }\n            else {\n                currentLineMetric = priorLineMetric;\n            }\n            if (accidentalType !== 'b' && accidentalType !== 'bb') {\n                currentLineMetric.flatLine = false;\n            }\n            if (accidentalType !== '##') {\n                currentLineMetric.dblSharpLine = false;\n            }\n            currentLineMetric.numAcc++;\n            currentLineMetric.width += accidentalLinePositionAndSpaceNeeds.accidental.getWidth() + accidentalSpacing;\n            maxExtraXSpaceNeeded = Math.max(accidentalLinePositionAndSpaceNeeds.extraXSpaceNeeded, maxExtraXSpaceNeeded);\n        }\n        let totalColumns = 0;\n        for (let i = 0; i < staveLineAccidentalLayoutMetrics.length; i++) {\n            let noFurtherConflicts = false;\n            const groupStart = i;\n            let groupEnd = i;\n            while (groupEnd + 1 < staveLineAccidentalLayoutMetrics.length && !noFurtherConflicts) {\n                if (this.checkCollision(staveLineAccidentalLayoutMetrics[groupEnd], staveLineAccidentalLayoutMetrics[groupEnd + 1])) {\n                    groupEnd++;\n                }\n                else {\n                    noFurtherConflicts = true;\n                }\n            }\n            const getGroupLine = (index) => staveLineAccidentalLayoutMetrics[groupStart + index];\n            const getGroupLines = (indexes) => indexes.map(getGroupLine);\n            const lineDifference = (indexA, indexB) => {\n                const [a, b] = getGroupLines([indexA, indexB]).map((item) => item.line);\n                return a - b;\n            };\n            const notColliding = (...indexPairs) => indexPairs.map(getGroupLines).every(([line1, line2]) => !this.checkCollision(line1, line2));\n            const groupLength = groupEnd - groupStart + 1;\n            let endCase = this.checkCollision(staveLineAccidentalLayoutMetrics[groupStart], staveLineAccidentalLayoutMetrics[groupEnd])\n                ? 'a'\n                : 'b';\n            switch (groupLength) {\n                case 3:\n                    if (endCase === 'a' && lineDifference(1, 2) === 0.5 && lineDifference(0, 1) !== 0.5) {\n                        endCase = 'secondOnBottom';\n                    }\n                    break;\n                case 4:\n                    if (notColliding([0, 2], [1, 3])) {\n                        endCase = 'spacedOutTetrachord';\n                    }\n                    break;\n                case 5:\n                    if (endCase === 'b' && notColliding([1, 3])) {\n                        endCase = 'spacedOutPentachord';\n                        if (notColliding([0, 2], [2, 4])) {\n                            endCase = 'verySpacedOutPentachord';\n                        }\n                    }\n                    break;\n                case 6:\n                    if (notColliding([0, 3], [1, 4], [2, 5])) {\n                        endCase = 'spacedOutHexachord';\n                    }\n                    if (notColliding([0, 2], [2, 4], [1, 3], [3, 5])) {\n                        endCase = 'verySpacedOutHexachord';\n                    }\n                    break;\n                default:\n                    break;\n            }\n            let groupMember;\n            let column;\n            if (groupLength >= 7) {\n                let patternLength = 2;\n                let collisionDetected = true;\n                while (collisionDetected === true) {\n                    collisionDetected = false;\n                    for (let line = 0; line + patternLength < staveLineAccidentalLayoutMetrics.length; line++) {\n                        if (this.checkCollision(staveLineAccidentalLayoutMetrics[line], staveLineAccidentalLayoutMetrics[line + patternLength])) {\n                            collisionDetected = true;\n                            patternLength++;\n                            break;\n                        }\n                    }\n                }\n                for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n                    column = ((groupMember - i) % patternLength) + 1;\n                    staveLineAccidentalLayoutMetrics[groupMember].column = column;\n                    totalColumns = totalColumns > column ? totalColumns : column;\n                }\n            }\n            else {\n                for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n                    column = Tables.accidentalColumnsTable[groupLength][endCase][groupMember - i];\n                    staveLineAccidentalLayoutMetrics[groupMember].column = column;\n                    totalColumns = totalColumns > column ? totalColumns : column;\n                }\n            }\n            i = groupEnd;\n        }\n        const columnWidths = [];\n        const columnXOffsets = [];\n        for (let i = 0; i <= totalColumns; i++) {\n            columnWidths[i] = 0;\n            columnXOffsets[i] = 0;\n        }\n        columnWidths[0] = leftShift + maxExtraXSpaceNeeded;\n        columnXOffsets[0] = leftShift;\n        staveLineAccidentalLayoutMetrics.forEach((line) => {\n            if (line.width > columnWidths[line.column])\n                columnWidths[line.column] = line.width;\n        });\n        for (let i = 1; i < columnWidths.length; i++) {\n            columnXOffsets[i] = columnWidths[i] + columnXOffsets[i - 1];\n        }\n        const totalShift = columnXOffsets[columnXOffsets.length - 1];\n        let accCount = 0;\n        staveLineAccidentalLayoutMetrics.forEach((line) => {\n            let lineWidth = 0;\n            const lastAccOnLine = accCount + line.numAcc;\n            for (accCount; accCount < lastAccOnLine; accCount++) {\n                const xShift = columnXOffsets[line.column - 1] + lineWidth + maxExtraXSpaceNeeded;\n                accidentalLinePositionsAndSpaceNeeds[accCount].accidental.setXShift(xShift);\n                lineWidth += accidentalLinePositionsAndSpaceNeeds[accCount].accidental.getWidth() + accidentalSpacing;\n                L('Line, accCount, shift: ', line.line, accCount, xShift);\n            }\n        });\n        state.leftShift = totalShift + additionalPadding;\n    }\n    static checkCollision(line1, line2) {\n        let clearance = line2.line - line1.line;\n        let clearanceRequired = 3;\n        if (clearance > 0) {\n            clearanceRequired = line2.flatLine || line2.dblSharpLine ? 2.5 : 3.0;\n            if (line1.dblSharpLine)\n                clearance -= 0.5;\n        }\n        else {\n            clearanceRequired = line1.flatLine || line1.dblSharpLine ? 2.5 : 3.0;\n            if (line2.dblSharpLine)\n                clearance -= 0.5;\n        }\n        const collision = Math.abs(clearance) < clearanceRequired;\n        L('Line1, Line2, Collision: ', line1.line, line2.line, collision);\n        return collision;\n    }\n    static applyAccidentals(voices, keySignature) {\n        const tickPositions = [];\n        const tickNoteMap = {};\n        voices.forEach((voice) => {\n            const tickPosition = new Fraction(0, 1);\n            const tickable = voice.getTickables();\n            tickable.forEach((t) => {\n                if (t.shouldIgnoreTicks())\n                    return;\n                const notesAtPosition = tickNoteMap[tickPosition.value()];\n                if (!notesAtPosition) {\n                    tickPositions.push(tickPosition.value());\n                    tickNoteMap[tickPosition.value()] = [t];\n                }\n                else {\n                    notesAtPosition.push(t);\n                }\n                tickPosition.add(t.getTicks());\n            });\n        });\n        const music = new Music();\n        if (!keySignature)\n            keySignature = 'C';\n        const scaleMapKey = music.createScaleMap(keySignature);\n        const scaleMap = {};\n        tickPositions.forEach((tickPos) => {\n            const tickables = tickNoteMap[tickPos];\n            const modifiedPitches = [];\n            const processNote = (t) => {\n                if (!isStaveNote(t) || t.isRest() || t.shouldIgnoreTicks()) {\n                    return;\n                }\n                const staveNote = t;\n                staveNote.keys.forEach((keyString, keyIndex) => {\n                    const key = music.getNoteParts(keyString.split('/')[0]);\n                    const octave = keyString.split('/')[1];\n                    const accidentalString = key.accidental || 'n';\n                    const pitch = key.root + accidentalString;\n                    if (!scaleMap[key.root + octave])\n                        scaleMap[key.root + octave] = scaleMapKey[key.root];\n                    const sameAccidental = scaleMap[key.root + octave] === pitch;\n                    const previouslyModified = modifiedPitches.indexOf(keyString) > -1;\n                    staveNote.getModifiers().forEach((modifier, index) => {\n                        if (isAccidental(modifier) && modifier.type == accidentalString && modifier.getIndex() == keyIndex) {\n                            staveNote.getModifiers().splice(index, 1);\n                        }\n                    });\n                    if (!sameAccidental || (sameAccidental && previouslyModified)) {\n                        scaleMap[key.root + octave] = pitch;\n                        const accidental = new Accidental(accidentalString);\n                        staveNote.addModifier(accidental, keyIndex);\n                        modifiedPitches.push(keyString);\n                    }\n                });\n                staveNote.getModifiers().forEach((modifier) => {\n                    if (isGraceNoteGroup(modifier)) {\n                        modifier.getGraceNotes().forEach(processNote);\n                    }\n                });\n            };\n            tickables.forEach(processNote);\n        });\n    }\n    constructor(type) {\n        super();\n        L('New accidental: ', type);\n        this.type = type;\n        this.position = Modifier.Position.LEFT;\n        this.cautionary = false;\n        this.reset();\n    }\n    reset() {\n        this.text = '';\n        if (!this.cautionary) {\n            this.text += Tables.accidentalCodes(this.type);\n            this.fontInfo.size = Metrics.get('Accidental.fontSize');\n        }\n        else {\n            this.text += Tables.accidentalCodes('{');\n            this.text += Tables.accidentalCodes(this.type);\n            this.text += Tables.accidentalCodes('}');\n            this.fontInfo.size = Metrics.get('Accidental.cautionary.fontSize');\n        }\n        if (isGraceNote(this.note)) {\n            this.fontInfo.size = Metrics.get('Accidental.grace.fontSize');\n        }\n    }\n    setNote(note) {\n        defined(note, 'ArgumentError', `Bad note value: ${note}`);\n        this.note = note;\n        this.reset();\n        return this;\n    }\n    setAsCautionary() {\n        this.cautionary = true;\n        this.reset();\n        return this;\n    }\n    draw() {\n        const { type, position, index } = this;\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(position, index);\n        this.x = start.x - this.width;\n        this.y = start.y;\n        L('Rendering: ', type, start.x, start.y);\n        this.renderText(ctx, 0, 0);\n    }\n}\nAccidental.DEBUG = false;\n","import { Element } from './element.js';\nimport { Metrics } from './metrics.js';\nimport { Tables } from './tables.js';\nimport { log, RuntimeError } from './util.js';\nfunction L(...args) {\n    if (Stem.DEBUG)\n        log('VexFlow.Stem', args);\n}\nexport class Stem extends Element {\n    static get CATEGORY() {\n        return \"Stem\";\n    }\n    static get UP() {\n        return 1;\n    }\n    static get DOWN() {\n        return -1;\n    }\n    static get WIDTH() {\n        return Tables.STEM_WIDTH;\n    }\n    static get HEIGHT() {\n        return Tables.STEM_HEIGHT;\n    }\n    constructor(options) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        super();\n        this.stemUpYOffset = 0;\n        this.stemDownYOffset = 0;\n        this.stemUpYBaseOffset = 0;\n        this.stemDownYBaseOffset = 0;\n        this.xBegin = (_a = options === null || options === void 0 ? void 0 : options.xBegin) !== null && _a !== void 0 ? _a : 0;\n        this.xEnd = (_b = options === null || options === void 0 ? void 0 : options.xEnd) !== null && _b !== void 0 ? _b : 0;\n        this.yTop = (_c = options === null || options === void 0 ? void 0 : options.yTop) !== null && _c !== void 0 ? _c : 0;\n        this.yBottom = (_d = options === null || options === void 0 ? void 0 : options.yBottom) !== null && _d !== void 0 ? _d : 0;\n        this.stemExtension = (_e = options === null || options === void 0 ? void 0 : options.stemExtension) !== null && _e !== void 0 ? _e : 0;\n        this.stemDirection = (_f = options === null || options === void 0 ? void 0 : options.stemDirection) !== null && _f !== void 0 ? _f : 0;\n        this.hide = (options === null || options === void 0 ? void 0 : options.hide) || false;\n        this.isStemlet = (options === null || options === void 0 ? void 0 : options.isStemlet) || false;\n        this.stemletHeight = (_g = options === null || options === void 0 ? void 0 : options.stemletHeight) !== null && _g !== void 0 ? _g : 0;\n        this.renderHeightAdjustment = 0;\n        this.setOptions(options);\n    }\n    setOptions(options) {\n        var _a, _b, _c, _d;\n        this.stemUpYOffset = (_a = options === null || options === void 0 ? void 0 : options.stemUpYOffset) !== null && _a !== void 0 ? _a : 0;\n        this.stemDownYOffset = (_b = options === null || options === void 0 ? void 0 : options.stemDownYOffset) !== null && _b !== void 0 ? _b : 0;\n        this.stemUpYBaseOffset = (_c = options === null || options === void 0 ? void 0 : options.stemUpYBaseOffset) !== null && _c !== void 0 ? _c : 0;\n        this.stemDownYBaseOffset = (_d = options === null || options === void 0 ? void 0 : options.stemDownYBaseOffset) !== null && _d !== void 0 ? _d : 0;\n    }\n    setNoteHeadXBounds(xBegin, xEnd) {\n        this.xBegin = xBegin;\n        this.xEnd = xEnd;\n        return this;\n    }\n    setDirection(direction) {\n        this.stemDirection = direction;\n    }\n    setExtension(ext) {\n        this.stemExtension = ext;\n    }\n    getExtension() {\n        return this.stemExtension;\n    }\n    setYBounds(yTop, yBottom) {\n        this.yTop = yTop;\n        this.yBottom = yBottom;\n    }\n    getHeight() {\n        const yOffset = this.stemDirection === Stem.UP ? this.stemUpYOffset : this.stemDownYOffset;\n        const unsignedHeight = this.yBottom - this.yTop + (Stem.HEIGHT - yOffset + this.stemExtension);\n        return unsignedHeight * this.stemDirection;\n    }\n    getBoundingBox() {\n        throw new RuntimeError('NotImplemented', 'getBoundingBox() not implemented.');\n    }\n    getExtents() {\n        const isStemUp = this.stemDirection === Stem.UP;\n        const ys = [this.yTop, this.yBottom];\n        const stemHeight = Stem.HEIGHT + this.stemExtension;\n        const innerMostNoteheadY = (isStemUp ? Math.min : Math.max)(...ys);\n        const outerMostNoteheadY = (isStemUp ? Math.max : Math.min)(...ys);\n        const stemTipY = innerMostNoteheadY + stemHeight * -this.stemDirection;\n        return { topY: stemTipY, baseY: outerMostNoteheadY };\n    }\n    setVisibility(isVisible) {\n        this.hide = !isVisible;\n        return this;\n    }\n    setStemlet(isStemlet, stemletHeight) {\n        this.isStemlet = isStemlet;\n        this.stemletHeight = stemletHeight;\n        return this;\n    }\n    adjustHeightForFlag() {\n        this.renderHeightAdjustment = Metrics.get('Stem.heightAdjustmentForFlag', -3);\n    }\n    adjustHeightForBeam() {\n        this.renderHeightAdjustment = -Stem.WIDTH / 2;\n    }\n    draw() {\n        this.setRendered();\n        if (this.hide)\n            return;\n        const ctx = this.checkContext();\n        let stemX;\n        let stemY;\n        const stemDirection = this.stemDirection;\n        let yBaseOffset = 0;\n        if (stemDirection === Stem.DOWN) {\n            stemX = this.xBegin;\n            stemY = this.yTop + this.stemDownYOffset;\n            yBaseOffset = this.stemDownYBaseOffset;\n        }\n        else {\n            stemX = this.xEnd;\n            stemY = this.yBottom - this.stemUpYOffset;\n            yBaseOffset = this.stemUpYBaseOffset;\n        }\n        const stemHeight = this.getHeight();\n        L('Rendering stem - ', 'Top Y: ', this.yTop, 'Bottom Y: ', this.yBottom);\n        const stemletYOffset = this.isStemlet ? stemHeight - this.stemletHeight * this.stemDirection : 0;\n        ctx.openGroup('stem', this.getAttribute('id'));\n        ctx.beginPath();\n        ctx.setLineWidth(Stem.WIDTH);\n        ctx.moveTo(stemX, stemY - stemletYOffset + yBaseOffset);\n        ctx.lineTo(stemX, stemY - stemHeight - this.renderHeightAdjustment * stemDirection);\n        ctx.stroke();\n        ctx.closeGroup();\n    }\n}\nStem.DEBUG = false;\n","import { Font } from './font.js';\nimport { Metrics } from './metrics.js';\nimport { Modifier, ModifierPosition } from './modifier.js';\nimport { Stem } from './stem.js';\nimport { Tables } from './tables.js';\nimport { isStemmableNote, isTabNote } from './typeguard.js';\nimport { log } from './util.js';\nfunction L(...args) {\n    if (Annotation.DEBUG)\n        log('VexFlow.Annotation', args);\n}\nexport var AnnotationHorizontalJustify;\n(function (AnnotationHorizontalJustify) {\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"LEFT\"] = 1] = \"LEFT\";\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"CENTER\"] = 2] = \"CENTER\";\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"RIGHT\"] = 3] = \"RIGHT\";\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"CENTER_STEM\"] = 4] = \"CENTER_STEM\";\n})(AnnotationHorizontalJustify || (AnnotationHorizontalJustify = {}));\nexport var AnnotationVerticalJustify;\n(function (AnnotationVerticalJustify) {\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"TOP\"] = 1] = \"TOP\";\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"CENTER\"] = 2] = \"CENTER\";\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"BOTTOM\"] = 3] = \"BOTTOM\";\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"CENTER_STEM\"] = 4] = \"CENTER_STEM\";\n})(AnnotationVerticalJustify || (AnnotationVerticalJustify = {}));\nexport class Annotation extends Modifier {\n    static get CATEGORY() {\n        return \"Annotation\";\n    }\n    static get minAnnotationPadding() {\n        return Metrics.get('NoteHead.minPadding');\n    }\n    static format(annotations, state) {\n        if (!annotations || annotations.length === 0)\n            return false;\n        let leftWidth = 0;\n        let rightWidth = 0;\n        let maxLeftGlyphWidth = 0;\n        let maxRightGlyphWidth = 0;\n        for (let i = 0; i < annotations.length; ++i) {\n            const annotation = annotations[i];\n            const textLines = (2 + Font.convertSizeToPixelValue(annotation.fontInfo.size)) / Tables.STAVE_LINE_DISTANCE;\n            let verticalSpaceNeeded = textLines;\n            const note = annotation.checkAttachedNote();\n            const glyphWidth = note.getGlyphWidth();\n            const textWidth = annotation.getWidth();\n            if (annotation.horizontalJustification === AnnotationHorizontalJustify.RIGHT) {\n                maxLeftGlyphWidth = Math.max(glyphWidth, maxLeftGlyphWidth);\n                leftWidth = Math.max(leftWidth, textWidth) + Annotation.minAnnotationPadding;\n            }\n            else if (annotation.horizontalJustification === AnnotationHorizontalJustify.LEFT) {\n                maxRightGlyphWidth = Math.max(glyphWidth, maxRightGlyphWidth);\n                rightWidth = Math.max(rightWidth, textWidth);\n            }\n            else {\n                leftWidth = Math.max(leftWidth, textWidth / 2) + Annotation.minAnnotationPadding;\n                rightWidth = Math.max(rightWidth, textWidth / 2);\n                maxLeftGlyphWidth = Math.max(glyphWidth / 2, maxLeftGlyphWidth);\n                maxRightGlyphWidth = Math.max(glyphWidth / 2, maxRightGlyphWidth);\n            }\n            const stave = note.getStave();\n            const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n            let stemHeight = 0;\n            let lines = 5;\n            if (isTabNote(note)) {\n                if (note.renderOptions.drawStem) {\n                    const stem = note.getStem();\n                    if (stem) {\n                        stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                    }\n                }\n                else {\n                    stemHeight = 0;\n                }\n            }\n            else if (isStemmableNote(note)) {\n                const stem = note.getStem();\n                if (stem && note.getNoteType() === 'n') {\n                    stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                }\n            }\n            if (stave) {\n                lines = stave.getNumLines();\n            }\n            if (annotation.verticalJustification === this.VerticalJustify.TOP) {\n                let noteLine = note.getLineNumber(true);\n                if (isTabNote(note)) {\n                    noteLine = lines - (note.leastString() - 0.5);\n                }\n                if (stemDirection === Stem.UP) {\n                    noteLine += stemHeight;\n                }\n                const curTop = noteLine + state.topTextLine + 0.5;\n                if (curTop < lines) {\n                    annotation.setTextLine(lines - noteLine);\n                    verticalSpaceNeeded += lines - noteLine;\n                    state.topTextLine = verticalSpaceNeeded;\n                }\n                else {\n                    annotation.setTextLine(state.topTextLine);\n                    state.topTextLine += verticalSpaceNeeded;\n                }\n            }\n            else if (annotation.verticalJustification === this.VerticalJustify.BOTTOM) {\n                let noteLine = lines - note.getLineNumber();\n                if (isTabNote(note)) {\n                    noteLine = note.greatestString() - 1;\n                }\n                if (stemDirection === Stem.DOWN) {\n                    noteLine += stemHeight;\n                }\n                const curBottom = noteLine + state.textLine + 1;\n                if (curBottom < lines) {\n                    annotation.setTextLine(lines - curBottom);\n                    verticalSpaceNeeded += lines - curBottom;\n                    state.textLine = verticalSpaceNeeded;\n                }\n                else {\n                    annotation.setTextLine(state.textLine);\n                    state.textLine += verticalSpaceNeeded;\n                }\n            }\n            else {\n                annotation.setTextLine(state.textLine);\n            }\n        }\n        const rightOverlap = Math.min(Math.max(rightWidth - maxRightGlyphWidth, 0), Math.max(rightWidth - state.rightShift, 0));\n        const leftOverlap = Math.min(Math.max(leftWidth - maxLeftGlyphWidth, 0), Math.max(leftWidth - state.leftShift, 0));\n        state.leftShift += leftOverlap;\n        state.rightShift += rightOverlap;\n        return true;\n    }\n    constructor(text) {\n        super();\n        this.text = text;\n        this.horizontalJustification = AnnotationHorizontalJustify.CENTER;\n        this.verticalJustification = AnnotationVerticalJustify.TOP;\n    }\n    setVerticalJustification(just) {\n        this.verticalJustification = typeof just === 'string' ? Annotation.VerticalJustifyString[just] : just;\n        return this;\n    }\n    getJustification() {\n        return this.horizontalJustification;\n    }\n    setJustification(just) {\n        this.horizontalJustification = typeof just === 'string' ? Annotation.HorizontalJustifyString[just] : just;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n        const start = note.getModifierStartXY(ModifierPosition.ABOVE, this.index);\n        this.setRendered();\n        ctx.openGroup('annotation', this.getAttribute('id'));\n        const textWidth = this.getWidth();\n        const textHeight = Font.convertSizeToPixelValue(this.fontInfo.size);\n        let x;\n        let y;\n        if (this.horizontalJustification === AnnotationHorizontalJustify.LEFT) {\n            x = start.x;\n        }\n        else if (this.horizontalJustification === AnnotationHorizontalJustify.RIGHT) {\n            x = start.x - textWidth;\n        }\n        else if (this.horizontalJustification === AnnotationHorizontalJustify.CENTER) {\n            x = start.x - textWidth / 2;\n        }\n        else {\n            x = note.getStemX() - textWidth / 2;\n        }\n        let stemExt = {};\n        let spacing = 0;\n        const hasStem = note.hasStem();\n        const stave = note.checkStave();\n        if (hasStem) {\n            stemExt = note.checkStem().getExtents();\n            spacing = stave.getSpacingBetweenLines();\n        }\n        if (this.verticalJustification === AnnotationVerticalJustify.BOTTOM) {\n            const ys = note.getYs();\n            y = ys.reduce((a, b) => (a > b ? a : b));\n            y += (this.textLine + 1) * Tables.STAVE_LINE_DISTANCE + textHeight;\n            if (hasStem && stemDirection === Stem.DOWN) {\n                y = Math.max(y, stemExt.topY + textHeight + spacing * this.textLine);\n            }\n        }\n        else if (this.verticalJustification === AnnotationVerticalJustify.CENTER) {\n            const yt = note.getYForTopText(this.textLine) - 1;\n            const yb = stave.getYForBottomText(this.textLine);\n            y = yt + (yb - yt) / 2 + textHeight / 2;\n        }\n        else if (this.verticalJustification === AnnotationVerticalJustify.TOP) {\n            const topY = Math.min(...note.getYs());\n            y = topY - (this.textLine + 1) * Tables.STAVE_LINE_DISTANCE;\n            if (hasStem && stemDirection === Stem.UP) {\n                spacing = stemExt.topY < stave.getTopLineTopY() ? Tables.STAVE_LINE_DISTANCE : spacing;\n                y = Math.min(y, stemExt.topY - spacing * (this.textLine + 1));\n            }\n        }\n        else {\n            const extents = note.getStemExtents();\n            y = extents.topY + (extents.baseY - extents.topY) / 2 + textHeight / 2;\n        }\n        L('Rendering annotation: ', this.text, x, y);\n        this.x = x;\n        this.y = y;\n        this.renderText(ctx, 0, 0);\n        ctx.closeGroup();\n    }\n}\nAnnotation.DEBUG = false;\nAnnotation.HorizontalJustify = AnnotationHorizontalJustify;\nAnnotation.HorizontalJustifyString = {\n    left: AnnotationHorizontalJustify.LEFT,\n    right: AnnotationHorizontalJustify.RIGHT,\n    center: AnnotationHorizontalJustify.CENTER,\n    centerStem: AnnotationHorizontalJustify.CENTER_STEM,\n};\nAnnotation.VerticalJustify = AnnotationVerticalJustify;\nAnnotation.VerticalJustifyString = {\n    above: AnnotationVerticalJustify.TOP,\n    top: AnnotationVerticalJustify.TOP,\n    below: AnnotationVerticalJustify.BOTTOM,\n    bottom: AnnotationVerticalJustify.BOTTOM,\n    center: AnnotationVerticalJustify.CENTER,\n    centerStem: AnnotationVerticalJustify.CENTER_STEM,\n};\n","import { Glyphs } from './glyphs.js';\nimport { Modifier } from './modifier.js';\nimport { Stem } from './stem.js';\nimport { Tables } from './tables.js';\nimport { isGraceNote, isStaveNote, isStemmableNote, isTabNote } from './typeguard.js';\nimport { log, RuntimeError } from './util.js';\nfunction L(...args) {\n    if (Articulation.DEBUG)\n        log('VexFlow.Articulation', args);\n}\nconst { ABOVE, BELOW } = Modifier.Position;\nfunction roundToNearestHalf(mathFn, value) {\n    return mathFn(value / 0.5) * 0.5;\n}\nfunction isWithinLines(line, position) {\n    return position === ABOVE ? line <= 5 : line >= 1;\n}\nfunction getRoundingFunction(line, position) {\n    if (isWithinLines(line, position)) {\n        if (position === ABOVE) {\n            return Math.ceil;\n        }\n        else {\n            return Math.floor;\n        }\n    }\n    else {\n        return Math.round;\n    }\n}\nfunction snapLineToStaff(canSitBetweenLines, line, position, offsetDirection) {\n    const snappedLine = roundToNearestHalf(getRoundingFunction(line, position), line);\n    const canSnapToStaffSpace = canSitBetweenLines && isWithinLines(snappedLine, position);\n    const onStaffLine = snappedLine % 1 === 0;\n    if (canSnapToStaffSpace && onStaffLine) {\n        const HALF_STAFF_SPACE = 0.5;\n        return snappedLine + HALF_STAFF_SPACE * -offsetDirection;\n    }\n    else {\n        return snappedLine;\n    }\n}\nconst isStaveOrGraceNote = (note) => isStaveNote(note) || isGraceNote(note);\nexport function getTopY(note, textLine) {\n    const stemDirection = note.getStemDirection();\n    const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n    if (isStaveOrGraceNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return stemTipY;\n            }\n            else {\n                return stemBaseY;\n            }\n        }\n        else {\n            return Math.min(...note.getYs());\n        }\n    }\n    else if (isTabNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return stemTipY;\n            }\n            else {\n                return note.checkStave().getYForTopText(textLine);\n            }\n        }\n        else {\n            return note.checkStave().getYForTopText(textLine);\n        }\n    }\n    else {\n        throw new RuntimeError('UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes');\n    }\n}\nexport function getBottomY(note, textLine) {\n    const stemDirection = note.getStemDirection();\n    const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n    if (isStaveOrGraceNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return stemBaseY;\n            }\n            else {\n                return stemTipY;\n            }\n        }\n        else {\n            return Math.max(...note.getYs());\n        }\n    }\n    else if (isTabNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return note.checkStave().getYForBottomText(textLine);\n            }\n            else {\n                return stemTipY;\n            }\n        }\n        else {\n            return note.checkStave().getYForBottomText(textLine);\n        }\n    }\n    else {\n        throw new RuntimeError('UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes');\n    }\n}\nexport function getInitialOffset(note, position) {\n    const isOnStemTip = (position === ABOVE && note.getStemDirection() === Stem.UP) ||\n        (position === BELOW && note.getStemDirection() === Stem.DOWN);\n    if (isStaveOrGraceNote(note)) {\n        if (note.hasStem() && isOnStemTip) {\n            return 0.5;\n        }\n        else {\n            return 1;\n        }\n    }\n    else {\n        if (note.hasStem() && isOnStemTip) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n}\nexport class Articulation extends Modifier {\n    static get CATEGORY() {\n        return \"Articulation\";\n    }\n    static format(articulations, state) {\n        if (!articulations || articulations.length === 0)\n            return false;\n        const margin = 0.5;\n        let maxGlyphWidth = 0;\n        const getIncrement = (articulation, line, position) => roundToNearestHalf(getRoundingFunction(line, position), articulation.height / 10 + margin);\n        articulations.forEach((articulation) => {\n            const note = articulation.checkAttachedNote();\n            maxGlyphWidth = Math.max(note.getGlyphWidth(), maxGlyphWidth);\n            let lines = 5;\n            const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n            let stemHeight = 0;\n            if (isStemmableNote(note)) {\n                const stem = note.getStem();\n                if (stem) {\n                    stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                }\n            }\n            const stave = note.getStave();\n            if (stave) {\n                lines = stave.getNumLines();\n            }\n            if (articulation.getPosition() === ABOVE) {\n                let noteLine = note.getLineNumber(true);\n                if (stemDirection === Stem.UP) {\n                    noteLine += stemHeight;\n                }\n                let increment = getIncrement(articulation, state.topTextLine, ABOVE);\n                const curTop = noteLine + state.topTextLine + 0.5;\n                if (!articulation.articulation.betweenLines && curTop < lines) {\n                    increment += lines - curTop;\n                }\n                articulation.setTextLine(state.topTextLine);\n                state.topTextLine += increment;\n                articulation.setOrigin(0.5, 1);\n            }\n            else if (articulation.getPosition() === BELOW) {\n                let noteLine = Math.max(lines - note.getLineNumber(), 0);\n                if (stemDirection === Stem.DOWN) {\n                    noteLine += stemHeight;\n                }\n                let increment = getIncrement(articulation, state.textLine, BELOW);\n                const curBottom = noteLine + state.textLine + 0.5;\n                if (!articulation.articulation.betweenLines && curBottom < lines) {\n                    increment += lines - curBottom;\n                }\n                articulation.setTextLine(state.textLine);\n                state.textLine += increment;\n                articulation.setOrigin(0.5, 0);\n            }\n        });\n        const width = articulations\n            .map((articulation) => articulation.getWidth())\n            .reduce((maxWidth, articWidth) => Math.max(articWidth, maxWidth));\n        const overlap = Math.min(Math.max(width - maxGlyphWidth, 0), Math.max(width - (state.leftShift + state.rightShift), 0));\n        state.leftShift += overlap / 2;\n        state.rightShift += overlap / 2;\n        return true;\n    }\n    static easyScoreHook({ articulations }, note, builder) {\n        if (!articulations)\n            return;\n        const articNameToCode = {\n            staccato: 'a.',\n            tenuto: 'a-',\n            accent: 'a>',\n        };\n        articulations\n            .split(',')\n            .map((articString) => articString.trim().split('.'))\n            .map(([name, position]) => {\n            const artic = { type: articNameToCode[name] };\n            if (position)\n                artic.position = Modifier.PositionString[position];\n            return builder.getFactory().Articulation(artic);\n        })\n            .map((artic) => note.addModifier(artic, 0));\n    }\n    constructor(type) {\n        var _a;\n        super();\n        this.heightShift = 0;\n        this.type = type;\n        this.position = ABOVE;\n        if (!Tables.articulationCodes(this.type)) {\n            if (((_a = this.type.codePointAt(0)) !== null && _a !== void 0 ? _a : 0) % 2 === 0)\n                this.position = ABOVE;\n            else\n                this.position = BELOW;\n        }\n        this.articulation = { betweenLines: false };\n        this.reset();\n    }\n    reset() {\n        this.articulation = Tables.articulationCodes(this.type);\n        if (!this.articulation) {\n            this.articulation = { code: this.type, betweenLines: false };\n        }\n        const code = (this.position === ABOVE ? this.articulation.aboveCode : this.articulation.belowCode) ||\n            this.articulation.code ||\n            Glyphs.null;\n        this.text = code;\n    }\n    setBetweenLines(betweenLines = true) {\n        this.articulation.betweenLines = betweenLines;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const index = this.checkIndex();\n        const { position, textLine } = this;\n        const canSitBetweenLines = this.articulation.betweenLines;\n        const stave = note.checkStave();\n        const staffSpace = stave.getSpacingBetweenLines();\n        const isTab = isTabNote(note);\n        const { x } = note.getModifierStartXY(position, index);\n        const shouldSitOutsideStaff = !canSitBetweenLines || isTab;\n        const initialOffset = getInitialOffset(note, position);\n        let y = {\n            [ABOVE]: () => {\n                const y = getTopY(note, textLine) - (textLine + initialOffset) * staffSpace;\n                return shouldSitOutsideStaff ? Math.min(stave.getYForTopText(Articulation.INITIAL_OFFSET), y) : y;\n            },\n            [BELOW]: () => {\n                const y = getBottomY(note, textLine) + (textLine + initialOffset) * staffSpace;\n                return shouldSitOutsideStaff ? Math.max(stave.getYForBottomText(Articulation.INITIAL_OFFSET), y) : y;\n            },\n        }[position]();\n        if (!isTab) {\n            const offsetDirection = position === ABOVE ? -1 : +1;\n            const noteLine = note.getKeyProps()[index].line;\n            const distanceFromNote = (note.getYs()[index] - y) / staffSpace;\n            const articLine = distanceFromNote + Number(noteLine);\n            const snappedLine = snapLineToStaff(canSitBetweenLines, articLine, position, offsetDirection);\n            if (isWithinLines(snappedLine, position))\n                this.setOrigin(0.5, 0.5);\n            y += Math.abs(snappedLine - articLine) * staffSpace * offsetDirection;\n        }\n        L(`Rendering articulation at (x: ${x}, y: ${y})`);\n        this.x = x;\n        this.y = y;\n        this.renderText(ctx, 0, 0);\n    }\n}\nArticulation.DEBUG = false;\nArticulation.INITIAL_OFFSET = -0.5;\n","export class RenderContext {\n    static get CATEGORY() {\n        return \"RenderContext\";\n    }\n    set font(f) {\n        this.setFont(f);\n    }\n    get font() {\n        return this.getFont();\n    }\n}\nexport function drawDot(ctx, x, y, color = '#F55') {\n    ctx.save();\n    ctx.setFillStyle(color);\n    ctx.beginPath();\n    ctx.arc(x, y, 3, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n    ctx.restore();\n}\n","import { Element } from './element.js';\nimport { Fraction } from './fraction.js';\nimport { Tables } from './tables.js';\nimport { defined, RuntimeError } from './util.js';\nexport class Tickable extends Element {\n    static get CATEGORY() {\n        return \"Tickable\";\n    }\n    constructor() {\n        super();\n        this._preFormatted = false;\n        this._postFormatted = false;\n        this.ticks = new Fraction(0, 1);\n        this.intrinsicTicks = 0;\n        this.tickMultiplier = new Fraction(1, 1);\n        this.modifiers = [];\n        this.tupletStack = [];\n        this.alignCenter = false;\n        this.centerXShift = 0;\n        this.ignoreTicks = false;\n        this.formatterMetrics = {\n            freedom: { left: 0, right: 0 },\n            duration: '',\n            iterations: 0,\n            space: {\n                used: 0,\n                mean: 0,\n                deviation: 0,\n            },\n        };\n    }\n    reset() {\n        return this;\n    }\n    getTicks() {\n        return this.ticks;\n    }\n    shouldIgnoreTicks() {\n        return this.ignoreTicks;\n    }\n    setIgnoreTicks(flag) {\n        this.ignoreTicks = flag;\n        return this;\n    }\n    getWidth() {\n        if (!this._preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetWidth on an unformatted note.\");\n        }\n        return this.width + (this.modifierContext ? this.modifierContext.getWidth() : 0);\n    }\n    getX() {\n        const tickContext = this.checkTickContext(`Can't getX() without a TickContext.`);\n        return tickContext.getX() + this.xShift;\n    }\n    getFormatterMetrics() {\n        return this.formatterMetrics;\n    }\n    getCenterXShift() {\n        if (this.isCenterAligned()) {\n            return this.centerXShift;\n        }\n        return 0;\n    }\n    setCenterXShift(centerXShift) {\n        this.centerXShift = centerXShift;\n        return this;\n    }\n    isCenterAligned() {\n        return this.alignCenter;\n    }\n    setCenterAlignment(alignCenter) {\n        this.alignCenter = alignCenter;\n        return this;\n    }\n    getVoice() {\n        return defined(this.voice, 'NoVoice', 'Tickable has no voice.');\n    }\n    setVoice(voice) {\n        this.voice = voice;\n    }\n    getTuplet() {\n        return this.tuplet;\n    }\n    getTupletStack() {\n        return this.tupletStack;\n    }\n    resetTuplet(tuplet) {\n        let noteCount;\n        let notesOccupied;\n        if (tuplet) {\n            const i = this.tupletStack.indexOf(tuplet);\n            if (i !== -1) {\n                this.tupletStack.splice(i, 1);\n                noteCount = tuplet.getNoteCount();\n                notesOccupied = tuplet.getNotesOccupied();\n                this.applyTickMultiplier(noteCount, notesOccupied);\n            }\n            return this;\n        }\n        while (this.tupletStack.length) {\n            tuplet = this.tupletStack.pop();\n            noteCount = tuplet.getNoteCount();\n            notesOccupied = tuplet.getNotesOccupied();\n            this.applyTickMultiplier(noteCount, notesOccupied);\n        }\n        return this;\n    }\n    setTuplet(tuplet) {\n        if (tuplet) {\n            this.tupletStack.push(tuplet);\n            const noteCount = tuplet.getNoteCount();\n            const notesOccupied = tuplet.getNotesOccupied();\n            this.applyTickMultiplier(notesOccupied, noteCount);\n        }\n        this.tuplet = tuplet;\n        return this;\n    }\n    addToModifierContext(mc) {\n        this.modifierContext = mc;\n        for (let i = 0; i < this.modifiers.length; ++i) {\n            this.modifierContext.addMember(this.modifiers[i]);\n        }\n        this.modifierContext.addMember(this);\n        this._preFormatted = false;\n        return this;\n    }\n    addModifier(modifier, index = 0) {\n        this.modifiers.push(modifier);\n        this._preFormatted = false;\n        return this;\n    }\n    getModifiers() {\n        return this.modifiers;\n    }\n    setTickContext(tc) {\n        this.tickContext = tc;\n        this._preFormatted = false;\n    }\n    checkTickContext(message = 'Tickable has no tick context.') {\n        return defined(this.tickContext, 'NoTickContext', message);\n    }\n    preFormat() {\n        if (this._preFormatted)\n            return;\n        this.width = 0;\n        if (this.modifierContext) {\n            this.modifierContext.preFormat();\n            this.width += this.modifierContext.getWidth();\n        }\n    }\n    set preFormatted(value) {\n        this._preFormatted = value;\n    }\n    get preFormatted() {\n        return this._preFormatted;\n    }\n    postFormat() {\n        if (this._postFormatted)\n            return this;\n        this._postFormatted = true;\n        return this;\n    }\n    set postFormatted(value) {\n        this._postFormatted = value;\n    }\n    get postFormatted() {\n        return this._postFormatted;\n    }\n    getIntrinsicTicks() {\n        return this.intrinsicTicks;\n    }\n    setIntrinsicTicks(intrinsicTicks) {\n        this.intrinsicTicks = intrinsicTicks;\n        this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n    }\n    getTickMultiplier() {\n        return this.tickMultiplier;\n    }\n    applyTickMultiplier(numerator, denominator) {\n        this.tickMultiplier.multiply(numerator, denominator);\n        this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n    }\n    setDuration(duration) {\n        const ticks = duration.numerator * (Tables.RESOLUTION / duration.denominator);\n        this.ticks = this.tickMultiplier.clone().multiply(ticks);\n        this.intrinsicTicks = this.ticks.value();\n    }\n    getAbsoluteX() {\n        const tickContext = this.checkTickContext(`Can't getAbsoluteX() without a TickContext.`);\n        return tickContext.getX();\n    }\n    setModifierContext(mc) {\n        this.modifierContext = mc;\n        return this;\n    }\n    getModifierContext() {\n        return this.modifierContext;\n    }\n    checkModifierContext() {\n        return defined(this.modifierContext, 'NoModifierContext', 'No modifier context attached to this tickable.');\n    }\n}\n","import { Glyphs } from './glyphs.js';\nimport { Metrics } from './metrics.js';\nimport { drawDot } from './rendercontext.js';\nimport { Tables } from './tables.js';\nimport { Tickable } from './tickable.js';\nimport { defined, RuntimeError } from './util.js';\nexport class Note extends Tickable {\n    static get CATEGORY() {\n        return \"Note\";\n    }\n    static getGlyphProps(duration, type = 'n') {\n        duration = Tables.sanitizeDuration(duration);\n        let code = Tables.durationCodes[duration];\n        if (code === undefined) {\n            code = Tables.durationCodes['4'];\n        }\n        const codeNoteHead = Tables.codeNoteHead(type.toUpperCase(), duration);\n        if (codeNoteHead !== Glyphs.null) {\n            code = Object.assign(Object.assign({}, code), { codeHead: codeNoteHead });\n        }\n        return code;\n    }\n    static plotMetrics(ctx, note, yPos) {\n        var _a;\n        const metrics = note.getMetrics();\n        const xStart = note.getAbsoluteX() - metrics.modLeftPx - metrics.leftDisplacedHeadPx;\n        const xPre1 = note.getAbsoluteX() - metrics.leftDisplacedHeadPx;\n        const xAbs = note.getAbsoluteX();\n        const xPost1 = note.getAbsoluteX() + metrics.notePx;\n        const xPost2 = note.getAbsoluteX() + metrics.notePx + metrics.rightDisplacedHeadPx;\n        const xEnd = note.getAbsoluteX() + metrics.notePx + metrics.rightDisplacedHeadPx + metrics.modRightPx;\n        const xFreedomRight = xEnd + ((_a = note.getFormatterMetrics().freedom.right) !== null && _a !== void 0 ? _a : 0);\n        const xWidth = xEnd - xStart;\n        ctx.save();\n        ctx.setFont(Metrics.get('fontFamily'), 8);\n        ctx.fillText(Math.round(xWidth) + 'px', xStart + note.getXShift(), yPos);\n        const y = yPos + 7;\n        function stroke(x1, x2, color, yy = y) {\n            ctx.beginPath();\n            ctx.setStrokeStyle(color);\n            ctx.setFillStyle(color);\n            ctx.setLineWidth(3);\n            ctx.moveTo(x1 + note.getXShift(), yy);\n            ctx.lineTo(x2 + note.getXShift(), yy);\n            ctx.stroke();\n        }\n        stroke(xStart, xPre1, 'red');\n        stroke(xPre1, xAbs, '#999');\n        stroke(xAbs, xPost1, 'green');\n        stroke(xPost1, xPost2, '#999');\n        stroke(xPost2, xEnd, 'red');\n        stroke(xEnd, xFreedomRight, '#DD0');\n        stroke(xStart - note.getXShift(), xStart, '#BBB');\n        drawDot(ctx, xAbs + note.getXShift(), y, 'blue');\n        const formatterMetrics = note.getFormatterMetrics();\n        if (formatterMetrics.iterations > 0) {\n            const spaceDeviation = formatterMetrics.space.deviation;\n            const prefix = spaceDeviation >= 0 ? '+' : '';\n            ctx.setFillStyle('red');\n            ctx.fillText(prefix + Math.round(spaceDeviation), xAbs + note.getXShift(), yPos - 10);\n        }\n        ctx.restore();\n    }\n    static parseDuration(durationString) {\n        if (!durationString) {\n            return undefined;\n        }\n        const regexp = /(\\d*\\/?\\d+|[a-z])(d*)([nrhms]|$)/;\n        const result = regexp.exec(durationString);\n        if (!result) {\n            return undefined;\n        }\n        const duration = result[1];\n        const dots = result[2].length;\n        const type = result[3] || 'n';\n        return { duration, dots, type };\n    }\n    static parseNoteStruct(noteStruct) {\n        const durationProps = Note.parseDuration(noteStruct.duration);\n        if (!durationProps) {\n            return undefined;\n        }\n        let type = noteStruct.type;\n        if (type && !Tables.validTypes[type]) {\n            return undefined;\n        }\n        const customTypes = [];\n        if (!type) {\n            type = durationProps.type || 'n';\n            if (noteStruct.keys !== undefined) {\n                noteStruct.keys.forEach((k, i) => {\n                    const result = k.split('/');\n                    customTypes[i] = (result && result.length === 3 ? result[2] : type);\n                });\n            }\n        }\n        let ticks = Tables.durationToTicks(durationProps.duration);\n        if (!ticks) {\n            return undefined;\n        }\n        const dots = noteStruct.dots ? noteStruct.dots : durationProps.dots;\n        if (typeof dots !== 'number') {\n            return undefined;\n        }\n        let currentTicks = ticks;\n        for (let i = 0; i < dots; i++) {\n            if (currentTicks <= 1)\n                return undefined;\n            currentTicks = currentTicks / 2;\n            ticks += currentTicks;\n        }\n        return {\n            duration: durationProps.duration,\n            type,\n            customTypes,\n            dots,\n            ticks,\n        };\n    }\n    constructor(noteStruct) {\n        super();\n        if (!noteStruct) {\n            throw new RuntimeError('BadArguments', 'Note must have valid initialization data to identify duration and type.');\n        }\n        const parsedNoteStruct = Note.parseNoteStruct(noteStruct);\n        if (!parsedNoteStruct) {\n            throw new RuntimeError('BadArguments', `Invalid note initialization object: ${JSON.stringify(noteStruct)}`);\n        }\n        this.keys = noteStruct.keys || [];\n        this.keyProps = [];\n        this.duration = parsedNoteStruct.duration;\n        this.noteType = parsedNoteStruct.type;\n        this.customTypes = parsedNoteStruct.customTypes;\n        if (noteStruct.durationOverride) {\n            this.setDuration(noteStruct.durationOverride);\n        }\n        else {\n            this.setIntrinsicTicks(parsedNoteStruct.ticks);\n        }\n        this.modifiers = [];\n        this.glyphProps = Note.getGlyphProps(this.duration, this.noteType);\n        this.customGlyphs = this.customTypes.map((t) => Note.getGlyphProps(this.duration, t));\n        this.playNote = undefined;\n        this.ignoreTicks = false;\n        this.width = 0;\n        this.leftDisplacedHeadPx = 0;\n        this.rightDisplacedHeadPx = 0;\n        this.xShift = 0;\n        this.ys = [];\n        if (noteStruct.alignCenter) {\n            this.setCenterAlignment(noteStruct.alignCenter);\n        }\n        this.renderOptions = {\n            annotationSpacing: 5,\n            strokePx: 1,\n            yShift: 0,\n        };\n    }\n    getPlayNote() {\n        return this.playNote;\n    }\n    setPlayNote(note) {\n        this.playNote = note;\n        return this;\n    }\n    isRest() {\n        return false;\n    }\n    addStroke(index, stroke) {\n        stroke.setNote(this);\n        stroke.setIndex(index);\n        this.modifiers.push(stroke);\n        this.preFormatted = false;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    setStave(stave) {\n        this.stave = stave;\n        this.setYs([stave.getYForLine(0)]);\n        this.setContext(this.stave.getContext());\n        return this;\n    }\n    getLeftDisplacedHeadPx() {\n        return this.leftDisplacedHeadPx;\n    }\n    getRightDisplacedHeadPx() {\n        return this.rightDisplacedHeadPx;\n    }\n    setLeftDisplacedHeadPx(x) {\n        this.leftDisplacedHeadPx = x;\n        return this;\n    }\n    setRightDisplacedHeadPx(x) {\n        this.rightDisplacedHeadPx = x;\n        return this;\n    }\n    shouldIgnoreTicks() {\n        return this.ignoreTicks;\n    }\n    getLineNumber(isTopNote) {\n        return 0;\n    }\n    getLineForRest() {\n        return 0;\n    }\n    getGlyphProps() {\n        return this.glyphProps;\n    }\n    getGlyphWidth() {\n        return 0;\n    }\n    setYs(ys) {\n        this.ys = ys;\n        return this;\n    }\n    getYs() {\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', 'No Y-values calculated for this note.');\n        }\n        return this.ys;\n    }\n    getYForTopText(textLine) {\n        return this.checkStave().getYForTopText(textLine);\n    }\n    getVoice() {\n        if (!this.voice)\n            throw new RuntimeError('NoVoice', 'Note has no voice.');\n        return this.voice;\n    }\n    setVoice(voice) {\n        this.voice = voice;\n        this.preFormatted = false;\n        return this;\n    }\n    getTickContext() {\n        return this.checkTickContext();\n    }\n    setTickContext(tc) {\n        this.tickContext = tc;\n        this.preFormatted = false;\n        return this;\n    }\n    getDuration() {\n        return this.duration;\n    }\n    isDotted() {\n        return this.getModifiersByType(\"Dot\").length > 0;\n    }\n    hasStem() {\n        return false;\n    }\n    getNoteType() {\n        return this.noteType;\n    }\n    getBeam() {\n        return this.beam;\n    }\n    checkBeam() {\n        return defined(this.beam, 'NoBeam', 'No beam attached to instance');\n    }\n    hasBeam() {\n        return this.beam !== undefined;\n    }\n    setBeam(beam) {\n        this.beam = beam;\n        return this;\n    }\n    addModifier(modifier, index = 0) {\n        const signature = 'Note.addModifier(modifier: Modifier, index: number=0)';\n        if (typeof index === 'string') {\n            index = parseInt(index);\n            console.warn(signature + ' expected a number for `index`, but received a string.');\n        }\n        if (typeof modifier !== 'object' || typeof index !== 'number') {\n            throw new RuntimeError('WrongParams', 'Incorrect call signature. Use ' + signature + ' instead.');\n        }\n        modifier.setNote(this);\n        modifier.setIndex(index);\n        super.addModifier(modifier);\n        return this;\n    }\n    getModifiersByType(type) {\n        return this.modifiers.filter((modifier) => modifier.getCategory() === type);\n    }\n    getModifierStartXY(position, index, options) {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n        return {\n            x: this.getAbsoluteX(),\n            y: this.ys[0],\n        };\n    }\n    getRightParenthesisPx(index) {\n        const props = this.getKeyProps()[index];\n        return props.displaced ? this.getRightDisplacedHeadPx() : 0;\n    }\n    getLeftParenthesisPx(index) {\n        const props = this.getKeyProps()[index];\n        return props.displaced ? this.getLeftDisplacedHeadPx() - this.xShift : -this.xShift;\n    }\n    getFirstDotPx() {\n        let px = this.getRightDisplacedHeadPx();\n        const parentheses = this.checkModifierContext().getMembers('Parenthesis');\n        if (parentheses.length !== 0) {\n            px += parentheses[0].getWidth() + 1;\n        }\n        return px;\n    }\n    getMetrics() {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call getMetrics on an unformatted note.\");\n        }\n        const modLeftPx = this.modifierContext ? this.modifierContext.getState().leftShift : 0;\n        const modRightPx = this.modifierContext ? this.modifierContext.getState().rightShift : 0;\n        const width = this.getWidth();\n        const glyphWidth = this.getGlyphWidth();\n        const notePx = width -\n            modLeftPx -\n            modRightPx -\n            this.leftDisplacedHeadPx -\n            this.rightDisplacedHeadPx;\n        return {\n            width,\n            glyphWidth,\n            notePx,\n            modLeftPx,\n            modRightPx,\n            leftDisplacedHeadPx: this.leftDisplacedHeadPx,\n            rightDisplacedHeadPx: this.rightDisplacedHeadPx,\n            glyphPx: 0,\n        };\n    }\n    getAbsoluteX() {\n        const tickContext = this.checkTickContext(`Can't getAbsoluteX() without a TickContext.`);\n        let x = tickContext.getX();\n        if (this.stave) {\n            x += this.stave.getNoteStartX() + Metrics.get('Stave.padding', 0);\n        }\n        if (this.isCenterAligned()) {\n            x += this.getCenterXShift();\n        }\n        return x;\n    }\n    getStemDirection() {\n        throw new RuntimeError('NoStem', 'No stem attached to this note.');\n    }\n    getStemExtents() {\n        throw new RuntimeError('NoStem', 'No stem attached to this note.');\n    }\n    getTieRightX() {\n        let tieStartX = this.getAbsoluteX();\n        const noteGlyphWidth = this.getGlyphWidth();\n        tieStartX += noteGlyphWidth / 2;\n        tieStartX += -this.width / 2 + this.width + 2;\n        return tieStartX;\n    }\n    getTieLeftX() {\n        let tieEndX = this.getAbsoluteX();\n        const noteGlyphWidth = this.getGlyphWidth();\n        tieEndX += noteGlyphWidth / 2;\n        tieEndX -= this.width / 2 + 2;\n        return tieEndX;\n    }\n    getKeys() {\n        return this.keys;\n    }\n    getKeyProps() {\n        return this.keyProps;\n    }\n    getBoundingBox() {\n        const boundingBox = super.getBoundingBox();\n        for (let i = 0; i < this.modifiers.length; i++) {\n            boundingBox.mergeWith(this.modifiers[i].getBoundingBox());\n        }\n        return boundingBox;\n    }\n}\n","import { Element } from './element.js';\nimport { defined } from './util.js';\nexport var StaveModifierPosition;\n(function (StaveModifierPosition) {\n    StaveModifierPosition[StaveModifierPosition[\"CENTER\"] = 0] = \"CENTER\";\n    StaveModifierPosition[StaveModifierPosition[\"LEFT\"] = 1] = \"LEFT\";\n    StaveModifierPosition[StaveModifierPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n    StaveModifierPosition[StaveModifierPosition[\"ABOVE\"] = 3] = \"ABOVE\";\n    StaveModifierPosition[StaveModifierPosition[\"BELOW\"] = 4] = \"BELOW\";\n    StaveModifierPosition[StaveModifierPosition[\"BEGIN\"] = 5] = \"BEGIN\";\n    StaveModifierPosition[StaveModifierPosition[\"END\"] = 6] = \"END\";\n})(StaveModifierPosition || (StaveModifierPosition = {}));\nexport class StaveModifier extends Element {\n    static get CATEGORY() {\n        return \"StaveModifier\";\n    }\n    static get Position() {\n        return StaveModifierPosition;\n    }\n    constructor() {\n        super();\n        this.padding = 10;\n        this.position = StaveModifierPosition.ABOVE;\n    }\n    getPosition() {\n        return this.position;\n    }\n    setPosition(position) {\n        this.position = position;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    getPadding(index) {\n        return index !== undefined && index < 2 ? 0 : this.padding;\n    }\n    setPadding(padding) {\n        this.padding = padding;\n        return this;\n    }\n    setLayoutMetrics(layoutMetrics) {\n        this.layoutMetrics = layoutMetrics;\n        return this;\n    }\n    getLayoutMetrics() {\n        return this.layoutMetrics;\n    }\n}\n","import { StaveModifier, StaveModifierPosition } from './stavemodifier.js';\nimport { Tables } from './tables.js';\nexport var BarlineType;\n(function (BarlineType) {\n    BarlineType[BarlineType[\"SINGLE\"] = 1] = \"SINGLE\";\n    BarlineType[BarlineType[\"DOUBLE\"] = 2] = \"DOUBLE\";\n    BarlineType[BarlineType[\"END\"] = 3] = \"END\";\n    BarlineType[BarlineType[\"REPEAT_BEGIN\"] = 4] = \"REPEAT_BEGIN\";\n    BarlineType[BarlineType[\"REPEAT_END\"] = 5] = \"REPEAT_END\";\n    BarlineType[BarlineType[\"REPEAT_BOTH\"] = 6] = \"REPEAT_BOTH\";\n    BarlineType[BarlineType[\"NONE\"] = 7] = \"NONE\";\n})(BarlineType || (BarlineType = {}));\nexport class Barline extends StaveModifier {\n    static get CATEGORY() {\n        return \"Barline\";\n    }\n    static get type() {\n        return BarlineType;\n    }\n    static get typeString() {\n        return {\n            single: BarlineType.SINGLE,\n            double: BarlineType.DOUBLE,\n            end: BarlineType.END,\n            repeatBegin: BarlineType.REPEAT_BEGIN,\n            repeatEnd: BarlineType.REPEAT_END,\n            repeatBoth: BarlineType.REPEAT_BOTH,\n            none: BarlineType.NONE,\n        };\n    }\n    constructor(type) {\n        super();\n        this.thickness = Tables.STAVE_LINE_THICKNESS;\n        const TYPE = BarlineType;\n        this.widths = {};\n        this.widths[TYPE.SINGLE] = 5;\n        this.widths[TYPE.DOUBLE] = 5;\n        this.widths[TYPE.END] = 5;\n        this.widths[TYPE.REPEAT_BEGIN] = 5;\n        this.widths[TYPE.REPEAT_END] = 5;\n        this.widths[TYPE.REPEAT_BOTH] = 5;\n        this.widths[TYPE.NONE] = 5;\n        this.paddings = {};\n        this.paddings[TYPE.SINGLE] = 0;\n        this.paddings[TYPE.DOUBLE] = 0;\n        this.paddings[TYPE.END] = 0;\n        this.paddings[TYPE.REPEAT_BEGIN] = 15;\n        this.paddings[TYPE.REPEAT_END] = 15;\n        this.paddings[TYPE.REPEAT_BOTH] = 15;\n        this.paddings[TYPE.NONE] = 0;\n        this.layoutMetricsMap = {};\n        this.layoutMetricsMap[TYPE.SINGLE] = {\n            xMin: 0,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.DOUBLE] = {\n            xMin: -3,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.END] = {\n            xMin: -5,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.REPEAT_END] = {\n            xMin: -10,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.REPEAT_BEGIN] = {\n            xMin: -2,\n            xMax: 10,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.REPEAT_BOTH] = {\n            xMin: -10,\n            xMax: 10,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.NONE] = {\n            xMin: 0,\n            xMax: 0,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.setType(type);\n    }\n    getType() {\n        return this.type;\n    }\n    setType(type) {\n        this.type = typeof type === 'string' ? Barline.typeString[type] : type;\n        this.setWidth(this.widths[this.type]);\n        this.setPadding(this.paddings[this.type]);\n        this.setLayoutMetrics(this.layoutMetricsMap[this.type]);\n        return this;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.openGroup('stavebarline', this.getAttribute('id'));\n        switch (this.type) {\n            case BarlineType.SINGLE:\n                this.drawVerticalBar(stave, this.x, false);\n                break;\n            case BarlineType.DOUBLE:\n                this.drawVerticalBar(stave, this.x, true);\n                break;\n            case BarlineType.END:\n                this.drawVerticalEndBar(stave, this.x);\n                break;\n            case BarlineType.REPEAT_BEGIN:\n                this.drawRepeatBar(stave, this.x, true);\n                if (stave.getX() !== this.x) {\n                    this.drawVerticalBar(stave, stave.getX());\n                }\n                break;\n            case BarlineType.REPEAT_END:\n                this.drawRepeatBar(stave, this.x, false);\n                break;\n            case BarlineType.REPEAT_BOTH:\n                this.drawRepeatBar(stave, this.x, false);\n                this.drawRepeatBar(stave, this.x, true);\n                break;\n            default:\n                break;\n        }\n        ctx.closeGroup();\n    }\n    drawVerticalBar(stave, x, doubleBar) {\n        const staveCtx = stave.checkContext();\n        const topY = stave.getTopLineTopY();\n        const botY = stave.getBottomLineBottomY();\n        if (doubleBar) {\n            staveCtx.fillRect(x - 3, topY, 1, botY - topY);\n        }\n        staveCtx.fillRect(x, topY, 1, botY - topY);\n    }\n    drawVerticalEndBar(stave, x) {\n        const staveCtx = stave.checkContext();\n        const topY = stave.getTopLineTopY();\n        const botY = stave.getBottomLineBottomY();\n        staveCtx.fillRect(x - 5, topY, 1, botY - topY);\n        staveCtx.fillRect(x - 2, topY, 3, botY - topY);\n    }\n    drawRepeatBar(stave, x, begin) {\n        const staveCtx = stave.checkContext();\n        const topY = stave.getTopLineTopY();\n        const botY = stave.getBottomLineBottomY();\n        let xShift = 3;\n        if (!begin) {\n            xShift = -5;\n        }\n        staveCtx.fillRect(x + xShift, topY, 1, botY - topY);\n        staveCtx.fillRect(x - 2, topY, 3, botY - topY);\n        const dotRadius = 2;\n        if (begin) {\n            xShift += 4;\n        }\n        else {\n            xShift -= 4;\n        }\n        const dotX = x + xShift + dotRadius / 2;\n        let yOffset = (stave.getNumLines() - 1) * stave.getSpacingBetweenLines();\n        yOffset = yOffset / 2 - stave.getSpacingBetweenLines() / 2;\n        let dotY = topY + yOffset + dotRadius / 2;\n        staveCtx.beginPath();\n        staveCtx.arc(dotX, dotY, dotRadius, 0, Math.PI * 2, false);\n        staveCtx.fill();\n        dotY += stave.getSpacingBetweenLines();\n        staveCtx.beginPath();\n        staveCtx.arc(dotX, dotY, dotRadius, 0, Math.PI * 2, false);\n        staveCtx.fill();\n    }\n}\n","import { Note } from './note.js';\nimport { Barline, BarlineType } from './stavebarline.js';\nimport { log } from './util.js';\nfunction L(...args) {\n    if (BarNote.DEBUG)\n        log('VexFlow.BarNote', args);\n}\nexport class BarNote extends Note {\n    static get CATEGORY() {\n        return \"BarNote\";\n    }\n    constructor(type = BarlineType.SINGLE) {\n        super({ duration: 'b' });\n        this.metrics = {\n            widths: {},\n        };\n        const TYPE = BarlineType;\n        this.metrics.widths = {\n            [TYPE.SINGLE]: 8,\n            [TYPE.DOUBLE]: 12,\n            [TYPE.END]: 15,\n            [TYPE.REPEAT_BEGIN]: 14,\n            [TYPE.REPEAT_END]: 14,\n            [TYPE.REPEAT_BOTH]: 18,\n            [TYPE.NONE]: 0,\n        };\n        this.ignoreTicks = true;\n        this.setType(type);\n    }\n    getType() {\n        return this.type;\n    }\n    setType(type) {\n        this.type = typeof type === 'string' ? Barline.typeString[type] : type;\n        this.setWidth(this.metrics.widths[this.type]);\n        return this;\n    }\n    addToModifierContext(mc) {\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        L('Rendering bar line at: ', this.getAbsoluteX());\n        const barline = new Barline(this.type);\n        barline.setX(this.getAbsoluteX());\n        barline.setStave(this.checkStave());\n        barline.setContext(ctx);\n        barline.drawWithStyle();\n        this.setRendered();\n    }\n}\nBarNote.DEBUG = false;\n","import { Element } from './element.js';\nimport { Fraction } from './fraction.js';\nimport { Stem } from './stem.js';\nimport { Tables } from './tables.js';\nimport { isStaveNote, isTabNote } from './typeguard.js';\nimport { RuntimeError } from './util.js';\nfunction calculateStemDirection(notes) {\n    let lineSum = 0;\n    notes.forEach((note) => {\n        if (note.keyProps) {\n            note.keyProps.forEach((keyProp) => {\n                lineSum += keyProp.line - 3;\n            });\n        }\n    });\n    if (lineSum >= 0) {\n        return Stem.DOWN;\n    }\n    return Stem.UP;\n}\nfunction getStemSlope(firstNote, lastNote) {\n    const firstStemTipY = firstNote.getStemExtents().topY;\n    const firstStemX = firstNote.getStemX();\n    const lastStemTipY = lastNote.getStemExtents().topY;\n    const lastStemX = lastNote.getStemX();\n    return (lastStemTipY - firstStemTipY) / (lastStemX - firstStemX);\n}\nexport const BEAM_LEFT = 'L';\nexport const BEAM_RIGHT = 'R';\nexport const BEAM_BOTH = 'B';\nexport class Beam extends Element {\n    static get CATEGORY() {\n        return \"Beam\";\n    }\n    getStemDirection() {\n        return this._stemDirection;\n    }\n    static getDefaultBeamGroups(timeSig) {\n        if (!timeSig || timeSig === 'c') {\n            timeSig = '4/4';\n        }\n        const defaults = {\n            '1/2': ['1/2'],\n            '2/2': ['1/2'],\n            '3/2': ['1/2'],\n            '4/2': ['1/2'],\n            '1/4': ['1/4'],\n            '2/4': ['1/4'],\n            '3/4': ['1/4'],\n            '4/4': ['1/4'],\n            '1/8': ['1/8'],\n            '2/8': ['2/8'],\n            '3/8': ['3/8'],\n            '4/8': ['2/8'],\n            '1/16': ['1/16'],\n            '2/16': ['2/16'],\n            '3/16': ['3/16'],\n            '4/16': ['2/16'],\n        };\n        const groups = defaults[timeSig];\n        if (groups === undefined) {\n            const beatTotal = parseInt(timeSig.split('/')[0], 10);\n            const beatValue = parseInt(timeSig.split('/')[1], 10);\n            const tripleMeter = beatTotal % 3 === 0;\n            if (tripleMeter) {\n                return [new Fraction(3, beatValue)];\n            }\n            else if (beatValue > 4) {\n                return [new Fraction(2, beatValue)];\n            }\n            else if (beatValue <= 4) {\n                return [new Fraction(1, beatValue)];\n            }\n        }\n        else {\n            return groups.map((group) => new Fraction().parse(group));\n        }\n        return [new Fraction(1, 4)];\n    }\n    static applyAndGetBeams(voice, stemDirection, groups) {\n        return Beam.generateBeams(voice.getTickables(), { groups, stemDirection });\n    }\n    static generateBeams(notes, config = {}) {\n        if (!config.groups || !config.groups.length) {\n            config.groups = [new Fraction(2, 8)];\n        }\n        const tickGroups = config.groups.map((group) => {\n            if (!group.multiply) {\n                throw new RuntimeError('InvalidBeamGroups', 'The beam groups must be an array of VexFlow.Fractions');\n            }\n            return group.clone().multiply(Tables.RESOLUTION, 1);\n        });\n        const unprocessedNotes = notes;\n        let currentTickGroup = 0;\n        let noteGroups = [];\n        let currentGroup = [];\n        function getTotalTicks(notes) {\n            return notes.reduce((memo, note) => note.getTicks().clone().add(memo), new Fraction(0, 1));\n        }\n        function nextTickGroup() {\n            if (tickGroups.length - 1 > currentTickGroup) {\n                currentTickGroup += 1;\n            }\n            else {\n                currentTickGroup = 0;\n            }\n        }\n        function createGroups() {\n            let nextGroup = [];\n            let currentGroupTotalTicks = new Fraction(0, 1);\n            unprocessedNotes.forEach((unprocessedNote) => {\n                nextGroup = [];\n                if (unprocessedNote.shouldIgnoreTicks()) {\n                    noteGroups.push(currentGroup);\n                    currentGroup = nextGroup;\n                    return;\n                }\n                currentGroup.push(unprocessedNote);\n                const ticksPerGroup = tickGroups[currentTickGroup].clone();\n                const totalTicks = getTotalTicks(currentGroup).add(currentGroupTotalTicks);\n                const unbeamable = Tables.durationToNumber(unprocessedNote.getDuration()) < 8;\n                if (unbeamable && unprocessedNote.getTuplet()) {\n                    ticksPerGroup.numerator *= 2;\n                }\n                if (totalTicks.greaterThan(ticksPerGroup)) {\n                    if (!unbeamable) {\n                        const note = currentGroup.pop();\n                        if (note)\n                            nextGroup.push(note);\n                    }\n                    noteGroups.push(currentGroup);\n                    do {\n                        currentGroupTotalTicks = totalTicks.subtract(tickGroups[currentTickGroup]);\n                        nextTickGroup();\n                    } while (currentGroupTotalTicks.greaterThanEquals(tickGroups[currentTickGroup]));\n                    currentGroup = nextGroup;\n                }\n                else if (totalTicks.equals(ticksPerGroup)) {\n                    noteGroups.push(currentGroup);\n                    currentGroupTotalTicks = new Fraction(0, 1);\n                    currentGroup = nextGroup;\n                    nextTickGroup();\n                }\n            });\n            if (currentGroup.length > 0) {\n                noteGroups.push(currentGroup);\n            }\n        }\n        function getBeamGroups() {\n            return noteGroups.filter((group) => {\n                if (group.length > 1) {\n                    let beamable = true;\n                    group.forEach((note) => {\n                        if (note.getIntrinsicTicks() >= Tables.durationToTicks('4')) {\n                            beamable = false;\n                        }\n                    });\n                    return beamable;\n                }\n                return false;\n            });\n        }\n        function sanitizeGroups() {\n            const sanitizedGroups = [];\n            noteGroups.forEach((group) => {\n                let tempGroup = [];\n                group.forEach((note, index, group) => {\n                    const isFirstOrLast = index === 0 || index === group.length - 1;\n                    const prevNote = group[index - 1];\n                    const breaksOnEachRest = !config.beamRests && note.isRest();\n                    const breaksOnFirstOrLastRest = config.beamRests && config.beamMiddleOnly && note.isRest() && isFirstOrLast;\n                    let breakOnStemChange = false;\n                    if (config.maintainStemDirections && prevNote && !note.isRest() && !prevNote.isRest()) {\n                        const prevDirection = prevNote.getStemDirection();\n                        const currentDirection = note.getStemDirection();\n                        breakOnStemChange = currentDirection !== prevDirection;\n                    }\n                    const isUnbeamableDuration = parseInt(note.getDuration(), 10) < 8;\n                    const shouldBreak = breaksOnEachRest || breaksOnFirstOrLastRest || breakOnStemChange || isUnbeamableDuration;\n                    if (shouldBreak) {\n                        if (tempGroup.length > 0) {\n                            sanitizedGroups.push(tempGroup);\n                        }\n                        tempGroup = breakOnStemChange ? [note] : [];\n                    }\n                    else {\n                        tempGroup.push(note);\n                    }\n                });\n                if (tempGroup.length > 0) {\n                    sanitizedGroups.push(tempGroup);\n                }\n            });\n            noteGroups = sanitizedGroups;\n        }\n        function formatStems() {\n            noteGroups.forEach((group) => {\n                let stemDirection;\n                if (config.maintainStemDirections) {\n                    const note = findFirstNote(group);\n                    stemDirection = note ? note.getStemDirection() : Stem.UP;\n                }\n                else {\n                    if (config.stemDirection) {\n                        stemDirection = config.stemDirection;\n                    }\n                    else {\n                        stemDirection = calculateStemDirection(group);\n                    }\n                }\n                applyStemDirection(group, stemDirection);\n            });\n        }\n        function findFirstNote(group) {\n            for (let i = 0; i < group.length; i++) {\n                const note = group[i];\n                if (!note.isRest()) {\n                    return note;\n                }\n            }\n            return false;\n        }\n        function applyStemDirection(group, direction) {\n            group.forEach((note) => {\n                note.setStemDirection(direction);\n            });\n        }\n        function getTuplets() {\n            const uniqueTuplets = [];\n            noteGroups.forEach((group) => {\n                let tuplet;\n                group.forEach((note) => {\n                    const noteTuplet = note.getTuplet();\n                    if (noteTuplet && tuplet !== noteTuplet) {\n                        tuplet = noteTuplet;\n                        uniqueTuplets.push(tuplet);\n                    }\n                });\n            });\n            return uniqueTuplets;\n        }\n        createGroups();\n        sanitizeGroups();\n        formatStems();\n        const beamedNoteGroups = getBeamGroups();\n        const allTuplets = getTuplets();\n        const beams = [];\n        beamedNoteGroups.forEach((group) => {\n            const beam = new Beam(group);\n            if (config.showStemlets) {\n                beam.renderOptions.showStemlets = true;\n            }\n            if (config.secondaryBreaks) {\n                beam.renderOptions.secondaryBreakTicks = Tables.durationToTicks(config.secondaryBreaks);\n            }\n            if (config.flatBeams === true) {\n                beam.renderOptions.flatBeams = true;\n                beam.renderOptions.flatBeamOffset = config.flatBeamOffset;\n            }\n            beams.push(beam);\n        });\n        allTuplets.forEach((tuplet) => {\n            const direction = tuplet.notes[0].stemDirection === Stem.DOWN ? -1 : 1;\n            tuplet.setTupletLocation(direction);\n            let bracketed = false;\n            for (let i = 0; i < tuplet.notes.length; i++) {\n                const note = tuplet.notes[i];\n                if (!note.hasBeam()) {\n                    bracketed = true;\n                    break;\n                }\n            }\n            tuplet.setBracketed(bracketed);\n        });\n        return beams;\n    }\n    constructor(notes, autoStem = false) {\n        super();\n        this.slope = 0;\n        this.yShift = 0;\n        this.forcedPartialDirections = {};\n        if (!notes || notes.length === 0) {\n            throw new RuntimeError('BadArguments', 'No notes provided for beam.');\n        }\n        if (notes.length === 1) {\n            throw new RuntimeError('BadArguments', 'Too few notes for beam.');\n        }\n        this._ticks = notes[0].getIntrinsicTicks();\n        if (this._ticks >= Tables.durationToTicks('4')) {\n            throw new RuntimeError('BadArguments', 'Beams can only be applied to notes shorter than a quarter note.');\n        }\n        let i;\n        let note;\n        this._stemDirection = notes[0].getStemDirection();\n        let stemDirection = this._stemDirection;\n        if (autoStem && isStaveNote(notes[0])) {\n            stemDirection = calculateStemDirection(notes);\n        }\n        else if (autoStem && isTabNote(notes[0])) {\n            const stemWeight = notes.reduce((memo, note) => memo + note.getStemDirection(), 0);\n            stemDirection = stemWeight > -1 ? Stem.UP : Stem.DOWN;\n        }\n        for (i = 0; i < notes.length; ++i) {\n            note = notes[i];\n            if (autoStem) {\n                note.setStemDirection(stemDirection);\n                this._stemDirection = stemDirection;\n            }\n            note.setBeam(this);\n        }\n        this.postFormatted = false;\n        this.notes = notes;\n        this._beamCount = this.getBeamCount();\n        this.breakOnIndexes = [];\n        this.renderOptions = {\n            beamWidth: 5,\n            maxSlope: 0.25,\n            minSlope: -0.25,\n            slopeIterations: 20,\n            slopeCost: 100,\n            showStemlets: false,\n            stemletExtension: 7,\n            partialBeamLength: 10,\n            flatBeams: false,\n            minFlatBeamOffset: 15,\n        };\n    }\n    getNotes() {\n        return this.notes;\n    }\n    getBeamCount() {\n        const beamCounts = this.notes.map((note) => note.getGlyphProps().beamCount);\n        const maxBeamCount = beamCounts.reduce((max, beamCount) => (beamCount > max ? beamCount : max));\n        return maxBeamCount;\n    }\n    breakSecondaryAt(indexes) {\n        this.breakOnIndexes = indexes;\n        return this;\n    }\n    setPartialBeamSideAt(noteIndex, side) {\n        this.forcedPartialDirections[noteIndex] = side;\n        return this;\n    }\n    unsetPartialBeamSideAt(noteIndex) {\n        delete this.forcedPartialDirections[noteIndex];\n        return this;\n    }\n    getSlopeY(x, firstX, firstY, slope) {\n        return firstY + (x - firstX) * slope;\n    }\n    calculateSlope() {\n        const { notes, renderOptions: { maxSlope, minSlope, slopeIterations, slopeCost }, } = this;\n        const stemDirection = this._stemDirection;\n        const firstNote = notes[0];\n        const initialSlope = getStemSlope(firstNote, notes[notes.length - 1]);\n        const increment = (maxSlope - minSlope) / slopeIterations;\n        let minCost = Number.MAX_VALUE;\n        let bestSlope = 0;\n        let yShift = 0;\n        for (let slope = minSlope; slope <= maxSlope; slope += increment) {\n            let totalStemExtension = 0;\n            let yShiftTemp = 0;\n            for (let i = 1; i < notes.length; ++i) {\n                const note = notes[i];\n                if (note.hasStem() || note.isRest()) {\n                    const adjustedStemTipY = this.getSlopeY(note.getStemX(), firstNote.getStemX(), firstNote.getStemExtents().topY, slope) + yShiftTemp;\n                    const stemTipY = note.getStemExtents().topY;\n                    if (stemTipY * stemDirection < adjustedStemTipY * stemDirection) {\n                        const diff = Math.abs(stemTipY - adjustedStemTipY);\n                        yShiftTemp += diff * -stemDirection;\n                        totalStemExtension += diff * i;\n                    }\n                    else {\n                        totalStemExtension += (stemTipY - adjustedStemTipY) * stemDirection;\n                    }\n                }\n            }\n            const idealSlope = initialSlope / 2;\n            const distanceFromIdeal = Math.abs(idealSlope - slope);\n            const cost = slopeCost * distanceFromIdeal + Math.abs(totalStemExtension);\n            if (cost < minCost) {\n                minCost = cost;\n                bestSlope = slope;\n                yShift = yShiftTemp;\n            }\n        }\n        this.slope = bestSlope;\n        this.yShift = yShift;\n    }\n    calculateFlatSlope() {\n        const { notes, renderOptions: { beamWidth, minFlatBeamOffset, flatBeamOffset }, } = this;\n        const stemDirection = this._stemDirection;\n        let total = 0;\n        let extremeY = 0;\n        let extremeBeamCount = 0;\n        let currentExtreme = 0;\n        for (let i = 0; i < notes.length; i++) {\n            const note = notes[i];\n            const stemTipY = note.getStemExtents().topY;\n            total += stemTipY;\n            if (stemDirection === Stem.DOWN && currentExtreme < stemTipY) {\n                currentExtreme = stemTipY;\n                extremeY = Math.max(...note.getYs());\n                extremeBeamCount = note.getBeamCount();\n            }\n            else if (stemDirection === Stem.UP && (currentExtreme === 0 || currentExtreme > stemTipY)) {\n                currentExtreme = stemTipY;\n                extremeY = Math.min(...note.getYs());\n                extremeBeamCount = note.getBeamCount();\n            }\n        }\n        let offset = total / notes.length;\n        const extremeTest = minFlatBeamOffset + extremeBeamCount * beamWidth * 1.5;\n        const newOffset = extremeY + extremeTest * -stemDirection;\n        if (stemDirection === Stem.DOWN && offset < newOffset) {\n            offset = extremeY + extremeTest;\n        }\n        else if (stemDirection === Stem.UP && offset > newOffset) {\n            offset = extremeY - extremeTest;\n        }\n        if (!flatBeamOffset) {\n            this.renderOptions.flatBeamOffset = offset;\n        }\n        else if (stemDirection === Stem.DOWN && offset > flatBeamOffset) {\n            this.renderOptions.flatBeamOffset = offset;\n        }\n        else if (stemDirection === Stem.UP && offset < flatBeamOffset) {\n            this.renderOptions.flatBeamOffset = offset;\n        }\n        this.slope = 0;\n        this.yShift = 0;\n    }\n    getBeamYToDraw() {\n        const firstNote = this.notes[0];\n        const firstStemTipY = firstNote.getStemExtents().topY;\n        let beamY = firstStemTipY;\n        if (this.renderOptions.flatBeams && this.renderOptions.flatBeamOffset) {\n            beamY = this.renderOptions.flatBeamOffset;\n        }\n        return beamY;\n    }\n    applyStemExtensions() {\n        const { notes, slope, renderOptions: { showStemlets, stemletExtension, beamWidth }, } = this;\n        const yShift = this.yShift;\n        const beamCount = this._beamCount;\n        const firstNote = notes[0];\n        const firstStemTipY = this.getBeamYToDraw();\n        const firstStemX = firstNote.getStemX();\n        for (let i = 0; i < notes.length; ++i) {\n            const note = notes[i];\n            const stem = note.getStem();\n            if (stem) {\n                const stemX = note.getStemX();\n                const { topY: stemTipY } = note.getStemExtents();\n                const beamedStemTipY = this.getSlopeY(stemX, firstStemX, firstStemTipY, slope) + yShift;\n                const preBeamExtension = stem.getExtension();\n                const beamExtension = note.getStemDirection() === Stem.UP ? stemTipY - beamedStemTipY : beamedStemTipY - stemTipY;\n                let crossStemExtension = 0;\n                if (note.getStemDirection() !== this._stemDirection) {\n                    const beamCount = note.getGlyphProps().beamCount;\n                    crossStemExtension = (1 + (beamCount - 1) * 1.5) * this.renderOptions.beamWidth;\n                }\n                stem.setExtension(preBeamExtension + beamExtension + crossStemExtension);\n                stem.adjustHeightForBeam();\n                if (note.isRest() && showStemlets) {\n                    const totalBeamWidth = (beamCount - 1) * beamWidth * 1.5 + beamWidth;\n                    stem.setVisibility(true).setStemlet(true, totalBeamWidth + stemletExtension);\n                }\n            }\n        }\n    }\n    lookupBeamDirection(duration, prevTick, tick, nextTick, noteIndex) {\n        if (duration === '4') {\n            return BEAM_LEFT;\n        }\n        const forcedBeamDirection = this.forcedPartialDirections[noteIndex];\n        if (forcedBeamDirection)\n            return forcedBeamDirection;\n        const lookupDuration = `${Tables.durationToNumber(duration) / 2}`;\n        const prevNoteGetsBeam = prevTick < Tables.durationToTicks(lookupDuration);\n        const nextNoteGetsBeam = nextTick < Tables.durationToTicks(lookupDuration);\n        const noteGetsBeam = tick < Tables.durationToTicks(lookupDuration);\n        if (prevNoteGetsBeam && nextNoteGetsBeam && noteGetsBeam) {\n            return BEAM_BOTH;\n        }\n        else if (prevNoteGetsBeam && !nextNoteGetsBeam && noteGetsBeam) {\n            return BEAM_LEFT;\n        }\n        else if (!prevNoteGetsBeam && nextNoteGetsBeam && noteGetsBeam) {\n            return BEAM_RIGHT;\n        }\n        return this.lookupBeamDirection(lookupDuration, prevTick, tick, nextTick, noteIndex);\n    }\n    getBeamLines(duration) {\n        const tickOfDuration = Tables.durationToTicks(duration);\n        let beamStarted = false;\n        const beamLines = [];\n        let currentBeam = undefined;\n        const partialBeamLength = this.renderOptions.partialBeamLength;\n        let previousShouldBreak = false;\n        let tickTally = 0;\n        for (let i = 0; i < this.notes.length; ++i) {\n            const note = this.notes[i];\n            const ticks = note.getTicks().value();\n            tickTally += ticks;\n            let shouldBreak = false;\n            if (parseInt(duration, 10) >= 8) {\n                shouldBreak = this.breakOnIndexes.indexOf(i) !== -1;\n                if (this.renderOptions.secondaryBreakTicks && tickTally >= this.renderOptions.secondaryBreakTicks) {\n                    tickTally = 0;\n                    shouldBreak = true;\n                }\n            }\n            const noteGetsBeam = note.getIntrinsicTicks() < tickOfDuration;\n            const stemX = note.getStemX() - Stem.WIDTH / 2;\n            const prevNote = this.notes[i - 1];\n            const nextNote = this.notes[i + 1];\n            const nextNoteGetsBeam = nextNote && nextNote.getIntrinsicTicks() < tickOfDuration;\n            const prevNoteGetsBeam = prevNote && prevNote.getIntrinsicTicks() < tickOfDuration;\n            const beamAlone = prevNote && nextNote && noteGetsBeam && !prevNoteGetsBeam && !nextNoteGetsBeam;\n            if (noteGetsBeam) {\n                if (beamStarted) {\n                    currentBeam = beamLines[beamLines.length - 1];\n                    currentBeam.end = stemX;\n                    if (shouldBreak) {\n                        beamStarted = false;\n                        if (nextNote && !nextNoteGetsBeam && currentBeam.end === undefined) {\n                            currentBeam.end = currentBeam.start - partialBeamLength;\n                        }\n                    }\n                }\n                else {\n                    currentBeam = { start: stemX, end: undefined };\n                    beamStarted = true;\n                    if (beamAlone) {\n                        const prevTick = prevNote.getIntrinsicTicks();\n                        const nextTick = nextNote.getIntrinsicTicks();\n                        const tick = note.getIntrinsicTicks();\n                        const beamDirection = this.lookupBeamDirection(duration, prevTick, tick, nextTick, i);\n                        if ([BEAM_LEFT, BEAM_BOTH].includes(beamDirection)) {\n                            currentBeam.end = currentBeam.start - partialBeamLength;\n                        }\n                        else {\n                            currentBeam.end = currentBeam.start + partialBeamLength;\n                        }\n                    }\n                    else if (!nextNoteGetsBeam) {\n                        if ((previousShouldBreak || i === 0) && nextNote) {\n                            currentBeam.end = currentBeam.start + partialBeamLength;\n                        }\n                        else {\n                            currentBeam.end = currentBeam.start - partialBeamLength;\n                        }\n                    }\n                    else if (shouldBreak) {\n                        currentBeam.end = currentBeam.start - partialBeamLength;\n                        beamStarted = false;\n                    }\n                    beamLines.push(currentBeam);\n                }\n            }\n            else {\n                beamStarted = false;\n            }\n            previousShouldBreak = shouldBreak;\n        }\n        const lastBeam = beamLines[beamLines.length - 1];\n        if (lastBeam && lastBeam.end === undefined) {\n            lastBeam.end = lastBeam.start - partialBeamLength;\n        }\n        return beamLines;\n    }\n    drawStems(ctx) {\n        this.notes.forEach((note) => {\n            const stem = note.getStem();\n            if (stem) {\n                const stemX = note.getStemX();\n                stem.setNoteHeadXBounds(stemX, stemX);\n                stem.setContext(ctx).drawWithStyle();\n            }\n        }, this);\n    }\n    drawBeamLines(ctx) {\n        const validBeamDurations = ['4', '8', '16', '32', '64'];\n        const firstNote = this.notes[0];\n        let beamY = this.getBeamYToDraw();\n        const firstStemX = firstNote.getStemX();\n        const beamThickness = this.renderOptions.beamWidth * this._stemDirection;\n        for (let i = 0; i < validBeamDurations.length; ++i) {\n            const duration = validBeamDurations[i];\n            const beamLines = this.getBeamLines(duration);\n            for (let j = 0; j < beamLines.length; ++j) {\n                const beamLine = beamLines[j];\n                const startBeamX = beamLine.start;\n                const startBeamY = this.getSlopeY(startBeamX, firstStemX, beamY, this.slope);\n                const lastBeamX = beamLine.end;\n                if (lastBeamX) {\n                    const lastBeamY = this.getSlopeY(lastBeamX, firstStemX, beamY, this.slope);\n                    ctx.beginPath();\n                    ctx.moveTo(startBeamX, startBeamY);\n                    ctx.lineTo(startBeamX, startBeamY + beamThickness);\n                    ctx.lineTo(lastBeamX + 1, lastBeamY + beamThickness);\n                    ctx.lineTo(lastBeamX + 1, lastBeamY);\n                    ctx.closePath();\n                    ctx.fill();\n                }\n                else {\n                    throw new RuntimeError('NoLastBeamX', 'lastBeamX undefined.');\n                }\n            }\n            beamY += beamThickness * 1.5;\n        }\n    }\n    preFormat() {\n        return this;\n    }\n    postFormat() {\n        if (this.postFormatted)\n            return;\n        if (isTabNote(this.notes[0]) || this.renderOptions.flatBeams) {\n            this.calculateFlatSlope();\n        }\n        else {\n            this.calculateSlope();\n        }\n        this.applyStemExtensions();\n        this.postFormatted = true;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        if (this.unbeamable)\n            return;\n        if (!this.postFormatted) {\n            this.postFormat();\n        }\n        ctx.openGroup('beam', this.getAttribute('id'));\n        this.drawStems(ctx);\n        this.drawBeamLines(ctx);\n        ctx.closeGroup();\n    }\n}\n","import { Element } from './element.js';\nimport { Metrics } from './metrics.js';\nimport { Modifier } from './modifier.js';\nimport { isTabNote } from './typeguard.js';\nimport { RuntimeError } from './util.js';\nexport class Bend extends Modifier {\n    static get CATEGORY() {\n        return \"Bend\";\n    }\n    static get UP() {\n        return 0;\n    }\n    static get DOWN() {\n        return 1;\n    }\n    static format(bends, state) {\n        if (!bends || bends.length === 0)\n            return false;\n        let lastWidth = 0;\n        for (let i = 0; i < bends.length; ++i) {\n            const bend = bends[i];\n            const note = bend.checkAttachedNote();\n            if (isTabNote(note)) {\n                const stringPos = note.leastString() - 1;\n                if (state.topTextLine < stringPos) {\n                    state.topTextLine = stringPos;\n                }\n            }\n            bend.setXShift(lastWidth);\n            lastWidth = bend.getWidth();\n            bend.setTextLine(state.topTextLine);\n        }\n        state.rightShift += lastWidth;\n        state.topTextLine += 1;\n        return true;\n    }\n    setStyleLine(style) {\n        this.styleLine = style;\n        return this;\n    }\n    getStyleLine() {\n        return this.styleLine;\n    }\n    constructor(phrase) {\n        super();\n        this.styleLine = Metrics.getStyle('Bend.line');\n        this.xShift = 0;\n        this.tap = '';\n        this.renderOptions = {\n            bendWidth: 8,\n            releaseWidth: 8,\n        };\n        this.phrase = phrase;\n        this.updateWidth();\n    }\n    setXShift(value) {\n        this.xShift = value;\n        this.updateWidth();\n        return this;\n    }\n    setTap(value) {\n        this.tap = value;\n        return this;\n    }\n    getTextHeight() {\n        const element = new Element(\"Bend\");\n        element.setText(this.phrase[0].text);\n        return element.getHeight();\n    }\n    updateWidth() {\n        const measureText = (text) => {\n            const element = new Element(\"Bend\");\n            element.setText(text);\n            return element.getWidth();\n        };\n        let totalWidth = 0;\n        for (let i = 0; i < this.phrase.length; ++i) {\n            const bend = this.phrase[i];\n            if (bend.width !== undefined) {\n                totalWidth += bend.width;\n            }\n            else {\n                const additionalWidth = bend.type === Bend.UP ? this.renderOptions.bendWidth : this.renderOptions.releaseWidth;\n                bend.width = Math.max(additionalWidth, measureText(bend.text)) + 3;\n                bend.drawWidth = bend.width / 2;\n                totalWidth += bend.width;\n            }\n        }\n        this.setWidth(totalWidth + this.xShift);\n        return this;\n    }\n    draw() {\n        var _a;\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n        start.x += 3;\n        start.y += 0.5;\n        const xShift = this.xShift;\n        const stave = note.checkStave();\n        const spacing = stave.getSpacingBetweenLines();\n        const lowestY = note.getYs().reduce((a, b) => (a < b ? a : b));\n        const bendHeight = start.y - ((this.textLine + 1) * spacing + start.y - lowestY) + 3;\n        const annotationY = start.y - ((this.textLine + 1) * spacing + start.y - lowestY) - 1;\n        const renderBend = (x, y, width, height) => {\n            const cpX = x + width;\n            const cpY = y;\n            this.applyStyle(ctx, this.styleLine);\n            ctx.beginPath();\n            ctx.moveTo(x, y);\n            ctx.quadraticCurveTo(cpX, cpY, x + width, height);\n            ctx.stroke();\n        };\n        const renderRelease = (x, y, width, height) => {\n            this.applyStyle(ctx, this.styleLine);\n            ctx.beginPath();\n            ctx.moveTo(x, height);\n            ctx.quadraticCurveTo(x + width, height, x + width, y);\n            ctx.stroke();\n        };\n        const renderArrowHead = (x, y, direction) => {\n            const width = 4;\n            const yBase = y + width * direction;\n            ctx.beginPath();\n            ctx.moveTo(x, y);\n            ctx.lineTo(x - width, yBase);\n            ctx.lineTo(x + width, yBase);\n            ctx.closePath();\n            ctx.fill();\n        };\n        const renderText = (x, text) => {\n            ctx.setFont(this.fontInfo);\n            const renderX = x - ctx.measureText(text).width / 2;\n            ctx.fillText(text, renderX, annotationY);\n        };\n        let lastBend = undefined;\n        let lastBendDrawWidth = 0;\n        let lastDrawnWidth = 0;\n        if ((_a = this.tap) === null || _a === void 0 ? void 0 : _a.length) {\n            const tapStart = note.getModifierStartXY(Modifier.Position.CENTER, this.index);\n            renderText(tapStart.x, this.tap);\n        }\n        for (let i = 0; i < this.phrase.length; ++i) {\n            const bend = this.phrase[i];\n            if (!bend.drawWidth)\n                bend.drawWidth = 0;\n            if (i === 0)\n                bend.drawWidth += xShift;\n            lastDrawnWidth = bend.drawWidth + lastBendDrawWidth - (i === 1 ? xShift : 0);\n            if (bend.type === Bend.UP) {\n                if (lastBend && lastBend.type === Bend.UP) {\n                    renderArrowHead(start.x, bendHeight, +1);\n                }\n                renderBend(start.x, start.y, lastDrawnWidth, bendHeight);\n            }\n            if (bend.type === Bend.DOWN) {\n                if (lastBend && lastBend.type === Bend.UP) {\n                    renderRelease(start.x, start.y, lastDrawnWidth, bendHeight);\n                }\n                if (lastBend && lastBend.type === Bend.DOWN) {\n                    renderArrowHead(start.x, start.y, -1);\n                    renderRelease(start.x, start.y, lastDrawnWidth, bendHeight);\n                }\n                if (!lastBend) {\n                    lastDrawnWidth = bend.drawWidth;\n                    renderRelease(start.x, start.y, lastDrawnWidth, bendHeight);\n                }\n            }\n            renderText(start.x + lastDrawnWidth, bend.text);\n            lastBend = bend;\n            lastBendDrawWidth = bend.drawWidth;\n            lastBend.x = start.x;\n            start.x += lastDrawnWidth;\n        }\n        if (!lastBend || lastBend.x === undefined) {\n            throw new RuntimeError('NoLastBendForBend', 'Internal error.');\n        }\n        if (lastBend.type === Bend.UP) {\n            renderArrowHead(lastBend.x + lastDrawnWidth, bendHeight, +1);\n        }\n        else if (lastBend.type === Bend.DOWN) {\n            renderArrowHead(lastBend.x + lastDrawnWidth, start.y, -1);\n        }\n    }\n}\n","import { globalObject } from './util.js';\nexport function isHTMLCanvas(element) {\n    if (!element)\n        return false;\n    const global = globalObject();\n    return ((typeof global.HTMLCanvasElement === 'function' && element instanceof global.HTMLCanvasElement) ||\n        (typeof element.getContext === 'function' && typeof element.toDataURL === 'function'));\n}\nexport function isHTMLDiv(element) {\n    if (!element)\n        return false;\n    const global = globalObject();\n    return ((typeof global.HTMLDivElement === 'function' && element instanceof global.HTMLDivElement) ||\n        (typeof element.appendChild === 'function' && typeof element.style === 'object'));\n}\n","import { Font } from './font.js';\nimport { RenderContext } from './rendercontext.js';\nimport { globalObject, warn } from './util.js';\nimport { isHTMLCanvas } from './web.js';\nexport class CanvasContext extends RenderContext {\n    static get WIDTH() {\n        return 600;\n    }\n    static get HEIGHT() {\n        return 400;\n    }\n    static get CANVAS_BROWSER_SIZE_LIMIT() {\n        return 32767;\n    }\n    static sanitizeCanvasDims(width, height) {\n        const limit = this.CANVAS_BROWSER_SIZE_LIMIT;\n        if (Math.max(width, height) > limit) {\n            warn('Canvas dimensions exceed browser limit. Cropping to ' + limit);\n            if (width > limit) {\n                width = limit;\n            }\n            if (height > limit) {\n                height = limit;\n            }\n        }\n        return [width, height];\n    }\n    constructor(context) {\n        super();\n        this.textHeight = 0;\n        this.context2D = context;\n        this.curTransfrom = context.getTransform();\n        if (!context.canvas) {\n            this.canvas = {\n                width: CanvasContext.WIDTH,\n                height: CanvasContext.HEIGHT,\n            };\n        }\n        else {\n            this.canvas = context.canvas;\n        }\n    }\n    clear() {\n        this.context2D.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n    openGroup(cls, id) {\n    }\n    closeGroup() {\n    }\n    openRotation(angleDegrees, x, y) {\n        this.curTransfrom = this.context2D.getTransform();\n        this.context2D.translate(x, y);\n        this.context2D.rotate((angleDegrees * Math.PI) / 180);\n        this.context2D.translate(-x, -y);\n    }\n    closeRotation() {\n        this.context2D.setTransform(this.curTransfrom);\n    }\n    add(child) {\n    }\n    setFillStyle(style) {\n        this.context2D.fillStyle = style;\n        return this;\n    }\n    setBackgroundFillStyle(style) {\n        return this;\n    }\n    setStrokeStyle(style) {\n        this.context2D.strokeStyle = style;\n        return this;\n    }\n    setShadowColor(color) {\n        this.context2D.shadowColor = color;\n        return this;\n    }\n    setShadowBlur(blur) {\n        const t = this.context2D.getTransform();\n        const scale = Math.sqrt(t.a * t.a + t.b * t.b + t.c * t.c + t.d * t.d);\n        this.context2D.shadowBlur = scale * blur;\n        return this;\n    }\n    setLineWidth(width) {\n        this.context2D.lineWidth = width;\n        return this;\n    }\n    setLineCap(capType) {\n        this.context2D.lineCap = capType;\n        return this;\n    }\n    setLineDash(dash) {\n        this.context2D.setLineDash(dash);\n        return this;\n    }\n    scale(x, y) {\n        this.context2D.scale(x, y);\n        return this;\n    }\n    resize(width, height, devicePixelRatio) {\n        var _a;\n        const canvas = this.context2D.canvas;\n        const dpr = (_a = devicePixelRatio !== null && devicePixelRatio !== void 0 ? devicePixelRatio : globalObject().devicePixelRatio) !== null && _a !== void 0 ? _a : 1;\n        [width, height] = CanvasContext.sanitizeCanvasDims(width * dpr, height * dpr);\n        width = (width / dpr) | 0;\n        height = (height / dpr) | 0;\n        canvas.width = width * dpr;\n        canvas.height = height * dpr;\n        if (isHTMLCanvas(canvas)) {\n            canvas.style.width = width + 'px';\n            canvas.style.height = height + 'px';\n        }\n        return this.scale(dpr, dpr);\n    }\n    rect(x, y, width, height) {\n        this.context2D.rect(x, y, width, height);\n        return this;\n    }\n    fillRect(x, y, width, height) {\n        this.context2D.fillRect(x, y, width, height);\n        return this;\n    }\n    pointerRect(x, y, width, height) {\n        return this;\n    }\n    clearRect(x, y, width, height) {\n        this.context2D.clearRect(x, y, width, height);\n        return this;\n    }\n    beginPath() {\n        this.context2D.beginPath();\n        return this;\n    }\n    moveTo(x, y) {\n        this.context2D.moveTo(x, y);\n        return this;\n    }\n    lineTo(x, y) {\n        this.context2D.lineTo(x, y);\n        return this;\n    }\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        this.context2D.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n        return this;\n    }\n    quadraticCurveTo(cpx, cpy, x, y) {\n        this.context2D.quadraticCurveTo(cpx, cpy, x, y);\n        return this;\n    }\n    arc(x, y, radius, startAngle, endAngle, counterclockwise) {\n        this.context2D.arc(x, y, radius, startAngle, endAngle, counterclockwise);\n        return this;\n    }\n    fill() {\n        this.context2D.fill();\n        return this;\n    }\n    stroke() {\n        this.context2D.stroke();\n        return this;\n    }\n    closePath() {\n        this.context2D.closePath();\n        return this;\n    }\n    measureText(text) {\n        const metrics = this.context2D.measureText(text);\n        let y = 0;\n        let height = 0;\n        if (metrics.fontBoundingBoxAscent) {\n            y = -metrics.fontBoundingBoxAscent;\n            height = metrics.fontBoundingBoxDescent + metrics.fontBoundingBoxAscent;\n        }\n        else {\n            y = -metrics.actualBoundingBoxAscent;\n            height = metrics.actualBoundingBoxDescent + metrics.actualBoundingBoxAscent;\n        }\n        return {\n            x: 0,\n            y: y,\n            width: metrics.width,\n            height: height,\n        };\n    }\n    fillText(text, x, y) {\n        this.context2D.fillText(text, x, y);\n        return this;\n    }\n    save() {\n        this.context2D.save();\n        return this;\n    }\n    restore() {\n        this.context2D.restore();\n        return this;\n    }\n    set fillStyle(style) {\n        this.context2D.fillStyle = style;\n    }\n    get fillStyle() {\n        return this.context2D.fillStyle;\n    }\n    set strokeStyle(style) {\n        this.context2D.strokeStyle = style;\n    }\n    get strokeStyle() {\n        return this.context2D.strokeStyle;\n    }\n    setFont(f, size, weight, style) {\n        const fontInfo = Font.validate(f, size, weight, style);\n        this.context2D.font = Font.toCSSString(fontInfo);\n        this.textHeight = Font.convertSizeToPixelValue(fontInfo.size);\n        return this;\n    }\n    getFont() {\n        return this.context2D.font;\n    }\n}\n","import { Element } from './element.js';\nimport { Font } from './font.js';\nimport { Glyphs } from './glyphs.js';\nimport { Metrics } from './metrics.js';\nimport { Modifier } from './modifier.js';\nimport { Tables } from './tables.js';\nimport { isStemmableNote } from './typeguard.js';\nimport { log } from './util.js';\nfunction L(...args) {\n    if (ChordSymbol.DEBUG)\n        log('VexFlow.ChordSymbol', args);\n}\nexport class ChordSymbolBlock extends Element {\n    constructor(text, symbolModifier, xShift, yShift, vAlign) {\n        super();\n        this.text = text;\n        this.symbolModifier = symbolModifier;\n        this.xShift = xShift;\n        this.yShift = yShift;\n        this.vAlign = vAlign;\n    }\n    isSuperscript() {\n        return this.symbolModifier === SymbolModifiers.SUPERSCRIPT;\n    }\n    isSubscript() {\n        return this.symbolModifier === SymbolModifiers.SUBSCRIPT;\n    }\n}\nexport var ChordSymbolHorizontalJustify;\n(function (ChordSymbolHorizontalJustify) {\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"LEFT\"] = 1] = \"LEFT\";\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"CENTER\"] = 2] = \"CENTER\";\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"RIGHT\"] = 3] = \"RIGHT\";\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"CENTER_STEM\"] = 4] = \"CENTER_STEM\";\n})(ChordSymbolHorizontalJustify || (ChordSymbolHorizontalJustify = {}));\nexport var ChordSymbolVerticalJustify;\n(function (ChordSymbolVerticalJustify) {\n    ChordSymbolVerticalJustify[ChordSymbolVerticalJustify[\"TOP\"] = 1] = \"TOP\";\n    ChordSymbolVerticalJustify[ChordSymbolVerticalJustify[\"BOTTOM\"] = 2] = \"BOTTOM\";\n})(ChordSymbolVerticalJustify || (ChordSymbolVerticalJustify = {}));\nexport var SymbolModifiers;\n(function (SymbolModifiers) {\n    SymbolModifiers[SymbolModifiers[\"NONE\"] = 1] = \"NONE\";\n    SymbolModifiers[SymbolModifiers[\"SUBSCRIPT\"] = 2] = \"SUBSCRIPT\";\n    SymbolModifiers[SymbolModifiers[\"SUPERSCRIPT\"] = 3] = \"SUPERSCRIPT\";\n})(SymbolModifiers || (SymbolModifiers = {}));\nexport class ChordSymbol extends Modifier {\n    static get CATEGORY() {\n        return \"ChordSymbol\";\n    }\n    static get superSubRatio() {\n        return Metrics.get('ChordSymbol.superSubRatio');\n    }\n    static get spacingBetweenBlocks() {\n        return Metrics.get('ChordSymbol.spacing');\n    }\n    static get superscriptOffset() {\n        return Metrics.get('ChordSymbol.superscriptOffset');\n    }\n    static get subscriptOffset() {\n        return Metrics.get('ChordSymbol.subscriptOffset');\n    }\n    static get minPadding() {\n        return Metrics.get('NoteHead.minPadding');\n    }\n    static format(symbols, state) {\n        if (!symbols || symbols.length === 0)\n            return false;\n        let width = 0;\n        let leftWidth = 0;\n        let rightWidth = 0;\n        let maxLeftGlyphWidth = 0;\n        let maxRightGlyphWidth = 0;\n        for (const symbol of symbols) {\n            const note = symbol.checkAttachedNote();\n            let lineSpaces = 1;\n            for (let j = 0; j < symbol.symbolBlocks.length; ++j) {\n                const block = symbol.symbolBlocks[j];\n                const sup = block.isSuperscript();\n                const sub = block.isSubscript();\n                block.setXShift(width);\n                if (sup || sub) {\n                    lineSpaces = 2;\n                }\n                if (sub && j > 0) {\n                    const prev = symbol.symbolBlocks[j - 1];\n                    if (prev.isSuperscript()) {\n                        block.setXShift(width - prev.getWidth() - ChordSymbol.minPadding);\n                        block.vAlign = true;\n                        width +=\n                            -prev.getWidth() -\n                                ChordSymbol.minPadding +\n                                (prev.getWidth() > block.getWidth() ? prev.getWidth() - block.getWidth() : 0);\n                    }\n                }\n                width += block.getWidth() + ChordSymbol.minPadding;\n            }\n            if (symbol.getVertical() === ChordSymbolVerticalJustify.TOP) {\n                symbol.setTextLine(state.topTextLine);\n                state.topTextLine += lineSpaces;\n            }\n            else {\n                symbol.setTextLine(state.textLine + 1);\n                state.textLine += lineSpaces + 1;\n            }\n            if (symbol.getReportWidth()) {\n                if (isStemmableNote(note)) {\n                    const glyphWidth = note.getGlyphWidth();\n                    if (symbol.getHorizontal() === ChordSymbolHorizontalJustify.RIGHT) {\n                        maxLeftGlyphWidth = Math.max(glyphWidth, maxLeftGlyphWidth);\n                        leftWidth = Math.max(leftWidth, width) + ChordSymbol.minPadding;\n                    }\n                    else if (symbol.getHorizontal() === ChordSymbolHorizontalJustify.LEFT) {\n                        maxRightGlyphWidth = Math.max(glyphWidth, maxRightGlyphWidth);\n                        rightWidth = Math.max(rightWidth, width);\n                    }\n                    else {\n                        leftWidth = Math.max(leftWidth, width / 2) + ChordSymbol.minPadding;\n                        rightWidth = Math.max(rightWidth, width / 2);\n                        maxLeftGlyphWidth = Math.max(glyphWidth / 2, maxLeftGlyphWidth);\n                        maxRightGlyphWidth = Math.max(glyphWidth / 2, maxRightGlyphWidth);\n                    }\n                }\n                symbol.width = width;\n            }\n            width = 0;\n        }\n        const rightOverlap = Math.min(Math.max(rightWidth - maxRightGlyphWidth, 0), Math.max(rightWidth - state.rightShift, 0));\n        const leftOverlap = Math.min(Math.max(leftWidth - maxLeftGlyphWidth, 0), Math.max(leftWidth - state.leftShift, 0));\n        state.leftShift += leftOverlap;\n        state.rightShift += rightOverlap;\n        return true;\n    }\n    constructor() {\n        super();\n        this.symbolBlocks = [];\n        this.horizontal = ChordSymbolHorizontalJustify.LEFT;\n        this.vertical = ChordSymbolVerticalJustify.TOP;\n        this.reportWidth = true;\n    }\n    get superscriptOffset() {\n        return ChordSymbol.superscriptOffset * Font.convertSizeToPixelValue(this.fontInfo.size);\n    }\n    get subscriptOffset() {\n        return ChordSymbol.subscriptOffset * Font.convertSizeToPixelValue(this.fontInfo.size);\n    }\n    setReportWidth(value) {\n        this.reportWidth = value;\n        return this;\n    }\n    getReportWidth() {\n        return this.reportWidth;\n    }\n    getSymbolBlock(params = {}) {\n        var _a, _b;\n        const symbolBlock = new ChordSymbolBlock((_a = params.text) !== null && _a !== void 0 ? _a : '', (_b = params.symbolModifier) !== null && _b !== void 0 ? _b : SymbolModifiers.NONE, 0, 0, false);\n        if (symbolBlock.isSubscript()) {\n            symbolBlock.setYShift(this.subscriptOffset);\n        }\n        if (symbolBlock.isSuperscript()) {\n            symbolBlock.setYShift(this.superscriptOffset);\n        }\n        if (symbolBlock.isSubscript() || symbolBlock.isSuperscript()) {\n            const { family, size, weight, style } = this.fontInfo;\n            const smallerFontSize = Font.scaleSize(size, ChordSymbol.superSubRatio);\n            symbolBlock.setFont(family, smallerFontSize, weight, style);\n        }\n        else {\n            symbolBlock.setFont(this.fontInfo);\n        }\n        return symbolBlock;\n    }\n    addSymbolBlock(parameters) {\n        this.symbolBlocks.push(this.getSymbolBlock(parameters));\n        return this;\n    }\n    addText(text, parameters = {}) {\n        return this.addSymbolBlock(Object.assign(Object.assign({}, parameters), { text }));\n    }\n    addTextSuperscript(text) {\n        const symbolModifier = SymbolModifiers.SUPERSCRIPT;\n        return this.addSymbolBlock({ text, symbolModifier });\n    }\n    addTextSubscript(text) {\n        const symbolModifier = SymbolModifiers.SUBSCRIPT;\n        return this.addSymbolBlock({ text, symbolModifier });\n    }\n    addGlyphSuperscript(glyph) {\n        return this.addTextSuperscript(ChordSymbol.glyphs[glyph]);\n    }\n    addGlyph(glyph, params = {}) {\n        return this.addText(ChordSymbol.glyphs[glyph], params);\n    }\n    addGlyphOrText(text, params = {}) {\n        let str = '';\n        for (let i = 0; i < text.length; ++i) {\n            const char = text[i];\n            const glyph = ChordSymbol.glyphs[char];\n            if (glyph) {\n                str += glyph;\n            }\n            else {\n                str += char;\n            }\n        }\n        if (str.length > 0) {\n            this.addText(str, params);\n        }\n        return this;\n    }\n    addLine(params = {}) {\n        return this.addText('\\ue874\\ue874', params);\n    }\n    setVertical(vj) {\n        this.vertical = typeof vj === 'string' ? ChordSymbol.VerticalJustifyString[vj] : vj;\n        return this;\n    }\n    getVertical() {\n        return this.vertical;\n    }\n    setHorizontal(hj) {\n        this.horizontal = typeof hj === 'string' ? ChordSymbol.HorizontalJustifyString[hj] : hj;\n        return this;\n    }\n    getHorizontal() {\n        return this.horizontal;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        ctx.openGroup('chordsymbol', this.getAttribute('id'));\n        const start = note.getModifierStartXY(Modifier.Position.ABOVE, this.index);\n        ctx.setFont(this.fontInfo);\n        let y;\n        const hasStem = note.hasStem();\n        const stave = note.checkStave();\n        if (this.vertical === ChordSymbolVerticalJustify.BOTTOM) {\n            y = stave.getYForBottomText(this.textLine + Tables.TEXT_HEIGHT_OFFSET_HACK);\n            if (hasStem) {\n                const stemExt = note.checkStem().getExtents();\n                const spacing = stave.getSpacingBetweenLines();\n                const stemBase = note.getStemDirection() === 1 ? stemExt.baseY : stemExt.topY;\n                y = Math.max(y, stemBase + spacing * (this.textLine + 2));\n            }\n        }\n        else {\n            const topY = Math.min(...note.getYs());\n            y = Math.min(stave.getYForTopText(this.textLine), topY - 10);\n            if (hasStem) {\n                const stemExt = note.checkStem().getExtents();\n                const spacing = stave.getSpacingBetweenLines();\n                y = Math.min(y, stemExt.topY - 5 - spacing * this.textLine);\n            }\n        }\n        let x = start.x;\n        if (this.horizontal === ChordSymbolHorizontalJustify.LEFT) {\n            x = start.x;\n        }\n        else if (this.horizontal === ChordSymbolHorizontalJustify.RIGHT) {\n            x = start.x + this.getWidth();\n        }\n        else if (this.horizontal === ChordSymbolHorizontalJustify.CENTER) {\n            x = start.x - this.getWidth() / 2;\n        }\n        else {\n            x = note.getStemX() - this.getWidth() / 2;\n        }\n        L('Rendering ChordSymbol: ', x, y);\n        this.symbolBlocks.forEach((symbol) => {\n            L('Rendering Text: ', symbol.getText(), x + symbol.getXShift(), y + symbol.getYShift());\n            symbol.setX(x);\n            symbol.setY(y);\n            symbol.renderText(ctx, 0, 0);\n        });\n        ctx.closeGroup();\n    }\n    getBoundingBox() {\n        const boundingBox = this.symbolBlocks[0].getBoundingBox();\n        for (let i = 1; i < this.symbolBlocks.length; i++) {\n            boundingBox.mergeWith(this.symbolBlocks[i].getBoundingBox());\n        }\n        return boundingBox;\n    }\n}\nChordSymbol.DEBUG = false;\nChordSymbol.HorizontalJustify = ChordSymbolHorizontalJustify;\nChordSymbol.HorizontalJustifyString = {\n    left: ChordSymbolHorizontalJustify.LEFT,\n    right: ChordSymbolHorizontalJustify.RIGHT,\n    center: ChordSymbolHorizontalJustify.CENTER,\n    centerStem: ChordSymbolHorizontalJustify.CENTER_STEM,\n};\nChordSymbol.VerticalJustify = ChordSymbolVerticalJustify;\nChordSymbol.VerticalJustifyString = {\n    top: ChordSymbolVerticalJustify.TOP,\n    above: ChordSymbolVerticalJustify.TOP,\n    below: ChordSymbolVerticalJustify.BOTTOM,\n    bottom: ChordSymbolVerticalJustify.BOTTOM,\n};\nChordSymbol.glyphs = {\n    diminished: Glyphs.csymDiminished,\n    dim: Glyphs.csymDiminished,\n    halfDiminished: Glyphs.csymHalfDiminished,\n    '+': Glyphs.csymAugmented,\n    augmented: Glyphs.csymAugmented,\n    majorSeventh: Glyphs.csymMajorSeventh,\n    minor: Glyphs.csymMinor,\n    '-': Glyphs.csymMinor,\n    '(': '(',\n    leftParen: '(',\n    ')': ')',\n    rightParen: ')',\n    leftBracket: Glyphs.csymBracketLeftTall,\n    rightBracket: Glyphs.csymBracketRightTall,\n    leftParenTall: '(',\n    rightParenTall: ')',\n    '/': Glyphs.csymDiagonalArrangementSlash,\n    over: Glyphs.csymDiagonalArrangementSlash,\n    '#': Glyphs.csymAccidentalSharp,\n    b: Glyphs.csymAccidentalFlat,\n};\nChordSymbol.symbolModifiers = SymbolModifiers;\n","import { Element } from './element.js';\nimport { RuntimeError } from './util.js';\nexport var CurvePosition;\n(function (CurvePosition) {\n    CurvePosition[CurvePosition[\"NEAR_HEAD\"] = 1] = \"NEAR_HEAD\";\n    CurvePosition[CurvePosition[\"NEAR_TOP\"] = 2] = \"NEAR_TOP\";\n})(CurvePosition || (CurvePosition = {}));\nexport class Curve extends Element {\n    static get CATEGORY() {\n        return \"Curve\";\n    }\n    static get Position() {\n        return CurvePosition;\n    }\n    static get PositionString() {\n        return {\n            nearHead: CurvePosition.NEAR_HEAD,\n            nearTop: CurvePosition.NEAR_TOP,\n        };\n    }\n    constructor(from, to, options) {\n        super();\n        this.renderOptions = Object.assign({ thickness: 2, xShift: 0, yShift: 10, position: CurvePosition.NEAR_HEAD, positionEnd: CurvePosition.NEAR_HEAD, invert: false, cps: [\n                { x: 0, y: 10 },\n                { x: 0, y: 10 },\n            ], openingDirection: 'auto' }, options);\n        this.setNotes(from, to);\n    }\n    setNotes(from, to) {\n        if (!from && !to) {\n            throw new RuntimeError('BadArguments', 'Curve needs to have either `from` or `to` set.');\n        }\n        this.from = from;\n        this.to = to;\n        return this;\n    }\n    isPartial() {\n        return !this.from || !this.to;\n    }\n    renderCurve(params) {\n        var _a, _b;\n        const ctx = this.checkContext();\n        const xShift = this.renderOptions.xShift;\n        const yShift = this.renderOptions.yShift * params.direction;\n        const firstX = params.firstX + xShift;\n        const firstY = params.firstY + yShift;\n        const lastX = params.lastX - xShift;\n        const lastY = params.lastY + yShift;\n        const thickness = this.renderOptions.thickness;\n        const cps = this.renderOptions.cps;\n        const { x: cp0x, y: cp0y } = cps[0];\n        const { x: cp1x, y: cp1y } = cps[1];\n        const controlPointSpacing = (lastX - firstX) / (cps.length + 2);\n        ctx.beginPath();\n        ctx.moveTo(firstX, firstY);\n        ctx.bezierCurveTo(firstX + controlPointSpacing + cp0x, firstY + cp0y * params.direction, lastX - controlPointSpacing + cp1x, lastY + cp1y * params.direction, lastX, lastY);\n        if (!((_a = this.style) === null || _a === void 0 ? void 0 : _a.lineDash))\n            ctx.bezierCurveTo(lastX - controlPointSpacing + cp1x, lastY + (cp1y + thickness) * params.direction, firstX + controlPointSpacing + cp0x, firstY + (cp0y + thickness) * params.direction, firstX, firstY);\n        ctx.stroke();\n        ctx.closePath();\n        if (!((_b = this.style) === null || _b === void 0 ? void 0 : _b.lineDash))\n            ctx.fill();\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        const firstNote = this.from;\n        const lastNote = this.to;\n        let firstX;\n        let lastX;\n        let firstY;\n        let lastY;\n        let stemDirection = 0;\n        let metric = 'baseY';\n        let endMetric = 'baseY';\n        function getPosition(position) {\n            return typeof position === 'string' ? Curve.PositionString[position] : position;\n        }\n        const position = getPosition(this.renderOptions.position);\n        const positionEnd = getPosition(this.renderOptions.positionEnd);\n        if (position === CurvePosition.NEAR_TOP) {\n            metric = 'topY';\n            endMetric = 'topY';\n        }\n        if (positionEnd === CurvePosition.NEAR_HEAD) {\n            endMetric = 'baseY';\n        }\n        else if (positionEnd === CurvePosition.NEAR_TOP) {\n            endMetric = 'topY';\n        }\n        if (firstNote) {\n            firstX = firstNote.getTieRightX();\n            stemDirection = firstNote.getStemDirection();\n            firstY = firstNote.getStemExtents()[metric];\n        }\n        else {\n            const stave = lastNote.checkStave();\n            firstX = stave.getTieStartX();\n            firstY = lastNote.getStemExtents()[metric];\n        }\n        if (lastNote) {\n            lastX = lastNote.getTieLeftX();\n            stemDirection = lastNote.getStemDirection();\n            lastY = lastNote.getStemExtents()[endMetric];\n        }\n        else {\n            const stave = firstNote.checkStave();\n            lastX = stave.getTieEndX();\n            lastY = firstNote.getStemExtents()[endMetric];\n        }\n        if (this.renderOptions.openingDirection === 'up') {\n            stemDirection = 1;\n        }\n        if (this.renderOptions.openingDirection === 'down') {\n            stemDirection = -1;\n        }\n        this.renderCurve({\n            firstX,\n            lastX,\n            firstY,\n            lastY,\n            direction: stemDirection * (this.renderOptions.invert === true ? -1 : 1),\n        });\n        return true;\n    }\n}\n","import { Glyphs } from './glyphs.js';\nimport { Metrics } from './metrics.js';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier.js';\nimport { log } from './util.js';\nfunction L(...args) {\n    if (Clef.DEBUG)\n        log('VexFlow.Clef', args);\n}\nexport class Clef extends StaveModifier {\n    static get CATEGORY() {\n        return \"Clef\";\n    }\n    static get types() {\n        const { gClef, fClef, cClef, unpitchedPercussionClef1, sixStringTabClef } = Glyphs;\n        return {\n            treble: {\n                code: gClef,\n                line: 3,\n            },\n            bass: {\n                code: fClef,\n                line: 1,\n            },\n            alto: {\n                code: cClef,\n                line: 2,\n            },\n            tenor: {\n                code: cClef,\n                line: 1,\n            },\n            percussion: {\n                code: unpitchedPercussionClef1,\n                line: 2,\n            },\n            soprano: {\n                code: cClef,\n                line: 4,\n            },\n            'mezzo-soprano': {\n                code: cClef,\n                line: 3,\n            },\n            'baritone-c': {\n                code: cClef,\n                line: 0,\n            },\n            'baritone-f': {\n                code: fClef,\n                line: 2,\n            },\n            subbass: {\n                code: fClef,\n                line: 0,\n            },\n            french: {\n                code: gClef,\n                line: 4,\n            },\n            tab: {\n                code: sixStringTabClef,\n                line: 2.5,\n            },\n        };\n    }\n    constructor(type, size, annotation) {\n        super();\n        this.code = Clef.types['treble'].code;\n        this.line = Clef.types['treble'].line;\n        this.size = 'default';\n        this.type = 'treble';\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.setType(type, size, annotation);\n        L('Creating clef:', type);\n    }\n    setType(type, size = 'default', annotation) {\n        this.type = type;\n        this.code = Clef.types[type].code;\n        this.line = Clef.types[type].line;\n        this.size = size !== null && size !== void 0 ? size : 'default';\n        if (annotation === '8va') {\n            if (this.code === Glyphs.gClef) {\n                this.code = Glyphs.gClef8va;\n            }\n            if (this.code === Glyphs.fClef) {\n                this.code = Glyphs.fClef8va;\n            }\n        }\n        if (annotation === '8vb') {\n            if (this.code === Glyphs.gClef) {\n                this.code = Glyphs.gClef8vb;\n            }\n            if (this.code === Glyphs.fClef) {\n                this.code = Glyphs.fClef8vb;\n            }\n        }\n        this.text = this.code;\n        this.fontInfo.size = Math.floor(Clef.getPoint(this.size));\n        return this;\n    }\n    static getPoint(size) {\n        return size === 'default' ? Metrics.get('fontSize') : (Metrics.get('fontSize') * 2) / 3;\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.openGroup('clef', this.getAttribute('id'));\n        this.y = stave.getYForLine(this.line);\n        this.renderText(ctx, 0, 0);\n        ctx.closeGroup();\n    }\n}\nClef.DEBUG = false;\n","import { Clef } from './clef.js';\nimport { Note } from './note.js';\nexport class ClefNote extends Note {\n    static get CATEGORY() {\n        return \"ClefNote\";\n    }\n    constructor(type, size = 'default', annotation) {\n        super({ duration: 'b' });\n        this.setType(type, size, annotation);\n        this.ignoreTicks = true;\n    }\n    setType(type, size, annotation) {\n        this.clef = new Clef(type, size, annotation);\n        this.setWidth(this.clef.getWidth());\n        return this;\n    }\n    getClef() {\n        return this.clef;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = this.checkContext();\n        this.setRendered();\n        this.clef.setX(this.getAbsoluteX());\n        this.clef.setY(stave.getYForLine(this.clef.line));\n        this.clef.renderText(ctx, 0, 0);\n    }\n    getBoundingBox() {\n        return this.clef.getBoundingBox();\n    }\n}\n","import { Fraction } from './fraction.js';\nimport { RuntimeError, sumArray } from './util.js';\nexport class TickContext {\n    static getNextContext(tContext) {\n        const contexts = tContext.tContexts;\n        const index = contexts.indexOf(tContext);\n        if (index + 1 < contexts.length)\n            return contexts[index + 1];\n    }\n    constructor(options) {\n        var _a;\n        this.preFormatted = false;\n        this.postFormatted = false;\n        this.tickID = (_a = options === null || options === void 0 ? void 0 : options.tickID) !== null && _a !== void 0 ? _a : 0;\n        this.currentTick = new Fraction(0, 1);\n        this.maxTicks = new Fraction(0, 1);\n        this.maxTickable = undefined;\n        this.minTicks = undefined;\n        this.minTickable = undefined;\n        this.padding = 1;\n        this.x = 0;\n        this.xBase = 0;\n        this.xOffset = 0;\n        this.tickables = [];\n        this.tickablesByVoice = {};\n        this.notePx = 0;\n        this.glyphPx = 0;\n        this.leftDisplacedHeadPx = 0;\n        this.rightDisplacedHeadPx = 0;\n        this.modLeftPx = 0;\n        this.modRightPx = 0;\n        this.totalLeftPx = 0;\n        this.totalRightPx = 0;\n        this.tContexts = [];\n        this.width = 0;\n        this.formatterMetrics = {\n            freedom: { left: 0, right: 0 },\n        };\n    }\n    getTickID() {\n        return this.tickID;\n    }\n    getX() {\n        return this.x;\n    }\n    setX(x) {\n        this.x = x;\n        this.xBase = x;\n        this.xOffset = 0;\n        return this;\n    }\n    getXBase() {\n        return this.xBase;\n    }\n    setXBase(xBase) {\n        this.xBase = xBase;\n        this.x = xBase + this.xOffset;\n    }\n    getXOffset() {\n        return this.xOffset;\n    }\n    setXOffset(xOffset) {\n        this.xOffset = xOffset;\n        this.x = this.xBase + xOffset;\n    }\n    getWidth() {\n        return this.width + this.padding * 2;\n    }\n    setPadding(padding) {\n        this.padding = padding;\n        return this;\n    }\n    getMaxTicks() {\n        return this.maxTicks;\n    }\n    getMinTicks() {\n        return this.minTicks;\n    }\n    getMaxTickable() {\n        return this.maxTickable;\n    }\n    getMinTickable() {\n        return this.minTickable;\n    }\n    getTickables() {\n        return this.tickables;\n    }\n    getTickableForVoice(voiceIndex) {\n        return this.tickablesByVoice[voiceIndex];\n    }\n    getTickablesByVoice() {\n        return this.tickablesByVoice;\n    }\n    getCenterAlignedTickables() {\n        return this.tickables.filter((tickable) => tickable.isCenterAligned());\n    }\n    getMetrics() {\n        const { width, glyphPx, notePx, leftDisplacedHeadPx, rightDisplacedHeadPx, modLeftPx, modRightPx, totalLeftPx, totalRightPx, } = this;\n        return {\n            width,\n            glyphPx,\n            notePx,\n            leftDisplacedHeadPx,\n            rightDisplacedHeadPx,\n            modLeftPx,\n            modRightPx,\n            totalLeftPx,\n            totalRightPx,\n        };\n    }\n    getCurrentTick() {\n        return this.currentTick;\n    }\n    setCurrentTick(tick) {\n        this.currentTick = tick;\n        this.preFormatted = false;\n    }\n    addTickable(tickable, voiceIndex) {\n        if (!tickable) {\n            throw new RuntimeError('BadArgument', 'Invalid tickable added.');\n        }\n        if (!tickable.shouldIgnoreTicks()) {\n            const ticks = tickable.getTicks();\n            if (ticks.greaterThan(this.maxTicks)) {\n                this.maxTicks = ticks.clone();\n                this.maxTickable = tickable;\n            }\n            if (this.minTicks === undefined) {\n                this.minTicks = ticks.clone();\n                this.minTickable = tickable;\n            }\n            else if (ticks.lessThan(this.minTicks)) {\n                this.minTicks = ticks.clone();\n                this.minTickable = tickable;\n            }\n        }\n        tickable.setTickContext(this);\n        this.tickables.push(tickable);\n        this.tickablesByVoice[voiceIndex !== null && voiceIndex !== void 0 ? voiceIndex : 0] = tickable;\n        this.preFormatted = false;\n        return this;\n    }\n    preFormat() {\n        var _a;\n        if (this.preFormatted)\n            return this;\n        for (let i = 0; i < this.tickables.length; ++i) {\n            const tickable = this.tickables[i];\n            tickable.preFormat();\n            const metrics = tickable.getMetrics();\n            this.leftDisplacedHeadPx = Math.max(this.leftDisplacedHeadPx, metrics.leftDisplacedHeadPx);\n            this.rightDisplacedHeadPx = Math.max(this.rightDisplacedHeadPx, metrics.rightDisplacedHeadPx);\n            this.notePx = Math.max(this.notePx, metrics.notePx);\n            this.glyphPx = Math.max(this.glyphPx, (_a = metrics.glyphWidth) !== null && _a !== void 0 ? _a : 0);\n            this.modLeftPx = Math.max(this.modLeftPx, metrics.modLeftPx);\n            this.modRightPx = Math.max(this.modRightPx, metrics.modRightPx);\n            this.totalLeftPx = Math.max(this.totalLeftPx, metrics.modLeftPx + metrics.leftDisplacedHeadPx);\n            this.totalRightPx = Math.max(this.totalRightPx, metrics.modRightPx + metrics.rightDisplacedHeadPx);\n            this.width = this.notePx + this.totalLeftPx + this.totalRightPx;\n        }\n        return this;\n    }\n    postFormat() {\n        if (this.postFormatted)\n            return this;\n        this.postFormatted = true;\n        return this;\n    }\n    getFormatterMetrics() {\n        return this.formatterMetrics;\n    }\n    move(shift, prev, next) {\n        this.setX(this.getX() + shift);\n        this.getFormatterMetrics().freedom.left += shift;\n        this.getFormatterMetrics().freedom.right -= shift;\n        if (prev)\n            prev.getFormatterMetrics().freedom.right += shift;\n        if (next)\n            next.getFormatterMetrics().freedom.left -= shift;\n    }\n    getDeviationCost() {\n        return sumArray(this.tickables.map((t) => t.getFormatterMetrics().space.deviation));\n    }\n    getAverageDeviationCost() {\n        if (!this.tickables.length)\n            return 0;\n        return this.getDeviationCost() / this.tickables.length;\n    }\n}\n","import { Note } from './note.js';\nimport { TickContext } from './tickcontext.js';\nimport { log } from './util.js';\nfunction L(...args) {\n    if (Crescendo.DEBUG)\n        log('VexFlow.Crescendo', args);\n}\nfunction renderHairpin(ctx, params) {\n    const beginX = params.beginX;\n    const endX = params.endX;\n    const y = params.y;\n    const halfHeight = params.height / 2;\n    ctx.beginPath();\n    if (params.reverse) {\n        ctx.moveTo(beginX, y - halfHeight);\n        ctx.lineTo(endX, y);\n        ctx.lineTo(beginX, y + halfHeight);\n    }\n    else {\n        ctx.moveTo(endX, y - halfHeight);\n        ctx.lineTo(beginX, y);\n        ctx.lineTo(endX, y + halfHeight);\n    }\n    ctx.stroke();\n    ctx.closePath();\n}\nexport class Crescendo extends Note {\n    static get CATEGORY() {\n        return \"Crescendo\";\n    }\n    constructor(noteStruct) {\n        var _a;\n        super(noteStruct);\n        this.options = {\n            extendLeft: 0,\n            extendRight: 0,\n            yShift: 0,\n        };\n        this.decrescendo = false;\n        this.line = (_a = noteStruct.line) !== null && _a !== void 0 ? _a : 0;\n        this.height = 15;\n    }\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    setHeight(height) {\n        this.height = height;\n        return this;\n    }\n    setDecrescendo(decresc) {\n        this.decrescendo = decresc;\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const stave = this.checkStave();\n        this.setRendered();\n        const tickContext = this.getTickContext();\n        const nextContext = TickContext.getNextContext(tickContext);\n        const beginX = this.getAbsoluteX();\n        const endX = nextContext ? nextContext.getX() : stave.getX() + stave.getWidth();\n        const y = stave.getYForLine(this.line + -3) + 1;\n        L('Drawing ', this.decrescendo ? 'decrescendo ' : 'crescendo ', this.height, 'x', beginX - endX);\n        renderHairpin(ctx, {\n            beginX: beginX - this.options.extendLeft,\n            endX: endX + this.options.extendRight,\n            y: y + this.options.yShift,\n            height: this.height,\n            reverse: this.decrescendo,\n        });\n    }\n}\nCrescendo.DEBUG = false;\n","import { Glyphs } from './glyphs.js';\nimport { Modifier } from './modifier.js';\nimport { isStaveNote, isTabNote } from './typeguard.js';\nimport { RuntimeError } from './util.js';\nexport class Dot extends Modifier {\n    static get CATEGORY() {\n        return \"Dot\";\n    }\n    static getDots(note) {\n        return note.getModifiersByType(Dot.CATEGORY);\n    }\n    static buildAndAttach(notes, options) {\n        for (const note of notes) {\n            if (options === null || options === void 0 ? void 0 : options.all) {\n                for (let i = 0; i < note.keys.length; i++) {\n                    const dot = new Dot();\n                    note.addModifier(dot, i);\n                }\n            }\n            else if ((options === null || options === void 0 ? void 0 : options.index) !== undefined) {\n                const dot = new Dot();\n                note.addModifier(dot, options === null || options === void 0 ? void 0 : options.index);\n            }\n            else {\n                const dot = new Dot();\n                note.addModifier(dot, 0);\n            }\n        }\n    }\n    static format(dots, state) {\n        const rightShift = state.rightShift;\n        const dotSpacing = 1;\n        if (!dots || dots.length === 0)\n            return false;\n        const dotList = [];\n        const maxShiftMap = {};\n        for (let i = 0; i < dots.length; ++i) {\n            const dot = dots[i];\n            const note = dot.getNote();\n            let props;\n            let shift;\n            if (isStaveNote(note)) {\n                const index = dot.checkIndex();\n                props = note.getKeyProps()[index];\n                shift = note.getFirstDotPx();\n            }\n            else if (isTabNote(note)) {\n                props = { line: 0.5 };\n                shift = rightShift;\n            }\n            else {\n                throw new RuntimeError('Internal', 'Unexpected instance.');\n            }\n            const noteId = note.getAttribute('id');\n            dotList.push({ line: props.line, note, noteId, dot });\n            maxShiftMap[noteId] = Math.max(maxShiftMap[noteId] || shift, shift);\n        }\n        dotList.sort((a, b) => b.line - a.line);\n        let dotShift = rightShift;\n        let xWidth = 0;\n        let lastLine = null;\n        let lastNote = null;\n        let prevDottedSpace = null;\n        let halfShiftY = 0;\n        for (let i = 0; i < dotList.length; ++i) {\n            const { dot, note, noteId, line } = dotList[i];\n            if (line !== lastLine || note !== lastNote) {\n                dotShift = maxShiftMap[noteId];\n            }\n            if (!note.isRest() && line !== lastLine) {\n                if (Math.abs(line % 1) === 0.5) {\n                    halfShiftY = 0;\n                }\n                else {\n                    halfShiftY = 0.5;\n                    if (lastNote !== null && !lastNote.isRest() && lastLine !== null && lastLine - line === 0.5) {\n                        halfShiftY = -0.5;\n                    }\n                    else if (line + halfShiftY === prevDottedSpace) {\n                        halfShiftY = -0.5;\n                    }\n                }\n            }\n            if (note.isRest()) {\n                dot.dotShiftY += -halfShiftY;\n            }\n            else {\n                dot.dotShiftY = -halfShiftY;\n            }\n            prevDottedSpace = line + halfShiftY;\n            dot.setXShift(dotShift);\n            dotShift += dot.getWidth() + dotSpacing;\n            xWidth = dotShift > xWidth ? dotShift : xWidth;\n            lastLine = line;\n            lastNote = note;\n        }\n        state.rightShift += xWidth;\n        return true;\n    }\n    constructor() {\n        super();\n        this.position = Modifier.Position.RIGHT;\n        this.setText(Glyphs.augmentationDot);\n        this.dotShiftY = 0;\n    }\n    setNote(note) {\n        this.note = note;\n        this.font = note.font;\n        return this;\n    }\n    setDotShiftY(y) {\n        this.dotShiftY = y;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stave = note.checkStave();\n        const lineSpace = stave.getSpacingBetweenLines();\n        const start = note.getModifierStartXY(this.position, this.index, { forceFlagRight: true });\n        if (isTabNote(note)) {\n            start.y = note.getStemExtents().baseY;\n        }\n        this.x = start.x;\n        this.y = start.y + this.dotShiftY * lineSpace;\n        this.renderText(ctx, 0, 0);\n    }\n}\n","import { Metrics } from './metrics.js';\nimport { Modifier, ModifierPosition } from './modifier.js';\nimport { Tables } from './tables.js';\nimport { RuntimeError } from './util.js';\nexport class FretHandFinger extends Modifier {\n    static get CATEGORY() {\n        return \"FretHandFinger\";\n    }\n    static format(nums, state) {\n        const { leftShift, rightShift } = state;\n        const numSpacing = 1;\n        if (!nums || nums.length === 0)\n            return false;\n        const numsList = [];\n        let prevNote = null;\n        let shiftLeft = 0;\n        let shiftRight = 0;\n        for (let i = 0; i < nums.length; ++i) {\n            const num = nums[i];\n            const note = num.getNote();\n            const pos = num.getPosition();\n            const index = num.checkIndex();\n            const props = note.getKeyProps()[index];\n            const textHeight = Metrics.get('FretHandFinger.fontSize');\n            if (num.position === ModifierPosition.ABOVE) {\n                state.topTextLine += textHeight / Tables.STAVE_LINE_DISTANCE + 0.5;\n            }\n            if (num.position === ModifierPosition.BELOW) {\n                state.textLine += textHeight / Tables.STAVE_LINE_DISTANCE + 0.5;\n            }\n            if (note !== prevNote) {\n                for (let n = 0; n < note.keys.length; ++n) {\n                    if (leftShift === 0) {\n                        shiftLeft = Math.max(note.getLeftDisplacedHeadPx(), shiftLeft);\n                    }\n                    if (rightShift === 0) {\n                        shiftRight = Math.max(note.getRightDisplacedHeadPx(), shiftRight);\n                    }\n                }\n                prevNote = note;\n            }\n            numsList.push({\n                note,\n                num,\n                pos,\n                line: props.line,\n                shiftL: shiftLeft,\n                shiftR: shiftRight,\n            });\n        }\n        numsList.sort((a, b) => b.line - a.line);\n        let numShiftL = 0;\n        let numShiftR = 0;\n        let xWidthL = 0;\n        let xWidthR = 0;\n        let lastLine = null;\n        let lastNote = null;\n        for (let i = 0; i < numsList.length; ++i) {\n            let numShift = 0;\n            const { note, pos, num, line, shiftL, shiftR } = numsList[i];\n            if (line !== lastLine || note !== lastNote) {\n                numShiftL = leftShift + shiftL;\n                numShiftR = rightShift + shiftR;\n            }\n            const numWidth = num.getWidth() + numSpacing;\n            if (pos === Modifier.Position.LEFT) {\n                num.setXShift(leftShift + numShiftL);\n                numShift = leftShift + numWidth;\n                xWidthL = numShift > xWidthL ? numShift : xWidthL;\n            }\n            else if (pos === Modifier.Position.RIGHT) {\n                num.setXShift(numShiftR);\n                numShift = shiftRight + numWidth;\n                xWidthR = numShift > xWidthR ? numShift : xWidthR;\n            }\n            lastLine = line;\n            lastNote = note;\n        }\n        state.leftShift += xWidthL;\n        state.rightShift += xWidthR;\n        return true;\n    }\n    static easyScoreHook({ fingerings } = {}, note, builder) {\n        fingerings === null || fingerings === void 0 ? void 0 : fingerings.split(',').map((fingeringString) => {\n            const split = fingeringString.trim().split('.');\n            const params = { number: split[0] };\n            if (split[1])\n                params.position = split[1];\n            return builder.getFactory().Fingering(params);\n        }).map((fingering, index) => note.addModifier(fingering, index));\n    }\n    constructor(finger) {\n        super();\n        this.setFretHandFinger(finger);\n        this.position = Modifier.Position.LEFT;\n        this.xOffset = 0;\n        this.yOffset = 0;\n    }\n    setFretHandFinger(finger) {\n        this.text = finger;\n        return this;\n    }\n    getFretHandFinger() {\n        return this.text;\n    }\n    setOffsetX(x) {\n        this.xOffset = x;\n        return this;\n    }\n    setOffsetY(y) {\n        this.yOffset = y;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index);\n        let dotX = start.x + this.xOffset;\n        let dotY = start.y + this.yOffset + 5;\n        switch (this.position) {\n            case Modifier.Position.ABOVE:\n                dotX -= 4;\n                dotY -= 12;\n                break;\n            case Modifier.Position.BELOW:\n                dotX -= 2;\n                dotY += 10;\n                break;\n            case Modifier.Position.LEFT:\n                dotX -= this.width;\n                break;\n            case Modifier.Position.RIGHT:\n                dotX += 1;\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} does not exist`);\n        }\n        this.renderText(ctx, dotX, dotY);\n    }\n}\n","import { log, RuntimeError } from './util.js';\nfunction L(...args) {\n    if (Parser.DEBUG)\n        log('VexFlow.Parser', args);\n}\nconst NO_ERROR_POS = -1;\nfunction flattenMatches(r) {\n    if ('matchedString' in r)\n        return r.matchedString;\n    if ('results' in r)\n        return flattenMatches(r.results);\n    const results = r;\n    if (results.length === 1)\n        return flattenMatches(results[0]);\n    if (results.length === 0)\n        return null;\n    return results.map(flattenMatches);\n}\nexport class Parser {\n    constructor(grammar) {\n        this.grammar = grammar;\n        this.line = '';\n        this.pos = 0;\n        this.errorPos = NO_ERROR_POS;\n    }\n    parse(line) {\n        this.line = line;\n        this.pos = 0;\n        this.errorPos = NO_ERROR_POS;\n        const result = this.expect(this.grammar.begin());\n        result.errorPos = this.errorPos;\n        return result;\n    }\n    matchFail(returnPos) {\n        if (this.errorPos === NO_ERROR_POS)\n            this.errorPos = this.pos;\n        this.pos = returnPos;\n    }\n    matchSuccess() {\n        this.errorPos = NO_ERROR_POS;\n    }\n    matchToken(token, noSpace = false) {\n        const regexp = noSpace ? new RegExp('^((' + token + '))') : new RegExp('^((' + token + ')\\\\s*)');\n        const workingLine = this.line.slice(this.pos);\n        const result = workingLine.match(regexp);\n        if (result !== null) {\n            return {\n                success: true,\n                matchedString: result[2],\n                incrementPos: result[1].length,\n                pos: this.pos,\n            };\n        }\n        else {\n            return { success: false, pos: this.pos };\n        }\n    }\n    expectOne(rule, maybe = false) {\n        const results = [];\n        const pos = this.pos;\n        let allMatches = true;\n        let oneMatch = false;\n        maybe = maybe === true || rule.maybe === true;\n        if (rule.expect) {\n            for (const next of rule.expect) {\n                const localPos = this.pos;\n                const result = this.expect(next);\n                if (result.success) {\n                    results.push(result);\n                    oneMatch = true;\n                    if (rule.or)\n                        break;\n                }\n                else {\n                    allMatches = false;\n                    if (!rule.or) {\n                        this.pos = localPos;\n                        break;\n                    }\n                }\n            }\n        }\n        const gotOne = (rule.or && oneMatch) || allMatches;\n        const success = gotOne || maybe === true;\n        const numMatches = gotOne ? 1 : 0;\n        if (maybe && !gotOne)\n            this.pos = pos;\n        if (success) {\n            this.matchSuccess();\n        }\n        else {\n            this.matchFail(pos);\n        }\n        return { success, results, numMatches };\n    }\n    expectOneOrMore(rule, maybe = false) {\n        const results = [];\n        const pos = this.pos;\n        let numMatches = 0;\n        let more = true;\n        do {\n            const result = this.expectOne(rule);\n            if (result.success && result.results) {\n                numMatches++;\n                results.push(result.results);\n            }\n            else {\n                more = false;\n            }\n        } while (more);\n        const success = numMatches > 0 || maybe === true;\n        if (maybe && !(numMatches > 0))\n            this.pos = pos;\n        if (success) {\n            this.matchSuccess();\n        }\n        else {\n            this.matchFail(pos);\n        }\n        return { success, results, numMatches };\n    }\n    expectZeroOrMore(rule) {\n        return this.expectOneOrMore(rule, true);\n    }\n    expect(ruleFunc) {\n        L('Evaluating rule function:', ruleFunc);\n        if (!ruleFunc) {\n            throw new RuntimeError('Invalid rule function');\n        }\n        let result;\n        const rule = ruleFunc.bind(this.grammar)();\n        if (rule.token) {\n            result = this.matchToken(rule.token, rule.noSpace === true);\n            if (result.success) {\n                this.pos += result.incrementPos;\n            }\n        }\n        else if (rule.expect) {\n            if (rule.oneOrMore) {\n                result = this.expectOneOrMore(rule);\n            }\n            else if (rule.zeroOrMore) {\n                result = this.expectZeroOrMore(rule);\n            }\n            else {\n                result = this.expectOne(rule);\n            }\n        }\n        else {\n            L(rule);\n            throw new RuntimeError('Bad grammar! No `token` or `expect` property ' + rule);\n        }\n        const matches = [];\n        result.matches = matches;\n        if (result.results) {\n            result.results.forEach((r) => matches.push(flattenMatches(r)));\n        }\n        if (rule.run && result.success) {\n            rule.run({ matches });\n        }\n        return result;\n    }\n}\nParser.DEBUG = false;\n","import { Articulation } from './articulation.js';\nimport { Dot } from './dot.js';\nimport { FretHandFinger } from './frethandfinger.js';\nimport { Music } from './music.js';\nimport { Parser } from './parser.js';\nimport { Stem } from './stem.js';\nimport { defined, log, RuntimeError } from './util.js';\nfunction L(...args) {\n    if (EasyScore.DEBUG)\n        log('VexFlow.EasyScore', args);\n}\nexport class EasyScoreGrammar {\n    constructor(builder) {\n        this.builder = builder;\n    }\n    begin() {\n        return this.LINE;\n    }\n    LINE() {\n        return {\n            expect: [this.PIECE, this.PIECES, this.EOL],\n        };\n    }\n    PIECE() {\n        return {\n            expect: [this.CHORDORNOTE, this.PARAMS],\n            run: () => this.builder.commitPiece(),\n        };\n    }\n    PIECES() {\n        return {\n            expect: [this.COMMA, this.PIECE],\n            zeroOrMore: true,\n        };\n    }\n    PARAMS() {\n        return {\n            expect: [this.DURATION, this.TYPE, this.DOTS, this.OPTS],\n        };\n    }\n    CHORDORNOTE() {\n        return {\n            expect: [this.CHORD, this.SINGLENOTE],\n            or: true,\n        };\n    }\n    CHORD() {\n        return {\n            expect: [this.LPAREN, this.NOTES, this.RPAREN],\n            run: (state) => this.builder.addChord(state.matches[1]),\n        };\n    }\n    NOTES() {\n        return {\n            expect: [this.NOTE],\n            oneOrMore: true,\n        };\n    }\n    NOTE() {\n        return {\n            expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n        };\n    }\n    SINGLENOTE() {\n        return {\n            expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n            run: (state) => {\n                const s = state;\n                this.builder.addSingleNote(s.matches[0], s.matches[1], s.matches[2]);\n            },\n        };\n    }\n    ACCIDENTAL() {\n        return {\n            expect: [this.MICROTONES, this.ACCIDENTALS],\n            maybe: true,\n            or: true,\n        };\n    }\n    DOTS() {\n        return {\n            expect: [this.DOT],\n            zeroOrMore: true,\n            run: (state) => this.builder.setNoteDots(state.matches),\n        };\n    }\n    TYPE() {\n        return {\n            expect: [this.SLASH, this.MAYBESLASH, this.TYPES],\n            maybe: true,\n            run: (state) => this.builder.setNoteType(state.matches[2]),\n        };\n    }\n    DURATION() {\n        return {\n            expect: [this.SLASH, this.DURATIONS],\n            maybe: true,\n            run: (state) => this.builder.setNoteDuration(state.matches[1]),\n        };\n    }\n    OPTS() {\n        return {\n            expect: [this.LBRACKET, this.KEYVAL, this.KEYVALS, this.RBRACKET],\n            maybe: true,\n        };\n    }\n    KEYVALS() {\n        return {\n            expect: [this.COMMA, this.KEYVAL],\n            zeroOrMore: true,\n        };\n    }\n    KEYVAL() {\n        const unquote = (str) => str.slice(1, -1);\n        return {\n            expect: [this.KEY, this.EQUALS, this.VAL],\n            run: (state) => this.builder.addNoteOption(state.matches[0], unquote(state.matches[2])),\n        };\n    }\n    VAL() {\n        return {\n            expect: [this.SVAL, this.DVAL],\n            or: true,\n        };\n    }\n    KEY() {\n        return { token: '[a-zA-Z][a-zA-Z0-9]*' };\n    }\n    DVAL() {\n        return { token: '[\"][^\"]*[\"]' };\n    }\n    SVAL() {\n        return { token: \"['][^']*[']\" };\n    }\n    NOTENAME() {\n        return { token: '[a-gA-G]' };\n    }\n    OCTAVE() {\n        return { token: '[0-9]+' };\n    }\n    ACCIDENTALS() {\n        return { token: 'bb|b|##|#|n' };\n    }\n    MICROTONES() {\n        return { token: 'bbs|bss|bs|db|d|\\\\+\\\\+-|\\\\+-|\\\\+\\\\+|\\\\+|k|o' };\n    }\n    DURATIONS() {\n        return { token: '[0-9whq]+' };\n    }\n    TYPES() {\n        return { token: '[rRsSmMhHgG]' };\n    }\n    LPAREN() {\n        return { token: '[(]' };\n    }\n    RPAREN() {\n        return { token: '[)]' };\n    }\n    COMMA() {\n        return { token: '[,]' };\n    }\n    DOT() {\n        return { token: '[.]' };\n    }\n    SLASH() {\n        return { token: '[/]' };\n    }\n    MAYBESLASH() {\n        return { token: '[/]?' };\n    }\n    EQUALS() {\n        return { token: '[=]' };\n    }\n    LBRACKET() {\n        return { token: '\\\\[' };\n    }\n    RBRACKET() {\n        return { token: '\\\\]' };\n    }\n    EOL() {\n        return { token: '$' };\n    }\n}\nexport class Piece {\n    constructor(duration) {\n        this.chord = [];\n        this.dots = 0;\n        this.options = {};\n        this.duration = duration;\n    }\n}\nexport class Builder {\n    constructor(factory) {\n        this.commitHooks = [];\n        this.factory = factory;\n        this.reset();\n    }\n    reset(options) {\n        this.options = Object.assign({ stem: 'auto', clef: 'treble' }, options);\n        this.elements = { notes: [], accidentals: [] };\n        this.rollingDuration = '8';\n        this.resetPiece();\n    }\n    getFactory() {\n        return this.factory;\n    }\n    getElements() {\n        return this.elements;\n    }\n    addCommitHook(commitHook) {\n        this.commitHooks.push(commitHook);\n    }\n    resetPiece() {\n        L('resetPiece');\n        this.piece = new Piece(this.rollingDuration);\n    }\n    setNoteDots(dots) {\n        L('setNoteDots:', dots);\n        if (dots)\n            this.piece.dots = dots.length;\n    }\n    setNoteDuration(duration) {\n        L('setNoteDuration:', duration);\n        this.rollingDuration = this.piece.duration = duration || this.rollingDuration;\n    }\n    setNoteType(type) {\n        L('setNoteType:', type);\n        if (type)\n            this.piece.type = type;\n    }\n    addNoteOption(key, value) {\n        L('addNoteOption: key:', key, 'value:', value);\n        this.piece.options[key] = value;\n    }\n    addNote(key, accid, octave) {\n        L('addNote:', key, accid, octave);\n        this.piece.chord.push({\n            key: key,\n            accid,\n            octave,\n        });\n    }\n    addSingleNote(key, accid, octave) {\n        L('addSingleNote:', key, accid, octave);\n        this.addNote(key, accid, octave);\n    }\n    addChord(notes) {\n        L('startChord');\n        if (typeof notes[0] !== 'object') {\n            this.addSingleNote(notes[0]);\n        }\n        else {\n            notes.forEach((n) => {\n                if (n)\n                    this.addNote(...n);\n            });\n        }\n        L('endChord');\n    }\n    commitPiece() {\n        L('commitPiece');\n        const { factory } = this;\n        if (!factory)\n            return;\n        const options = Object.assign(Object.assign({}, this.options), this.piece.options);\n        const stem = defined(options.stem, 'BadArguments', 'options.stem is not defined').toLowerCase();\n        const clef = defined(options.clef, 'BadArguments', 'options.clef is not defined').toLowerCase();\n        const { chord, duration, dots, type } = this.piece;\n        const standardAccidentals = Music.accidentals;\n        const keys = chord.map((notePiece) => {\n            var _a;\n            return notePiece.key +\n                (standardAccidentals.includes((_a = notePiece.accid) !== null && _a !== void 0 ? _a : '') ? notePiece.accid : '') +\n                '/' +\n                notePiece.octave;\n        });\n        const autoStem = stem === 'auto';\n        const note = (type === null || type === void 0 ? void 0 : type.toLowerCase()) === 'g'\n            ? factory.GhostNote({ duration, dots })\n            : factory.StaveNote({ keys, duration, dots, type, clef, autoStem });\n        if (!autoStem)\n            note.setStemDirection(stem === 'up' ? Stem.UP : Stem.DOWN);\n        const accidentals = [];\n        chord.forEach((notePiece, index) => {\n            const accid = notePiece.accid;\n            if (typeof accid === 'string') {\n                const accidental = factory.Accidental({ type: accid });\n                note.addModifier(accidental, index);\n                accidentals.push(accidental);\n            }\n            else {\n                accidentals.push(undefined);\n            }\n        });\n        for (let i = 0; i < dots; i++)\n            Dot.buildAndAttach([note], { all: true });\n        this.commitHooks.forEach((commitHook) => commitHook(options, note, this));\n        this.elements.notes.push(note);\n        this.elements.accidentals.push(accidentals);\n        this.resetPiece();\n    }\n}\nfunction setId(options, note) {\n    if (options.id === undefined)\n        return;\n    note.setAttribute('id', options.id);\n}\nconst commaSeparatedRegex = /\\s*,\\s*/;\nfunction setClass(options, note) {\n    if (options.class === undefined)\n        return;\n    options.class.split(commaSeparatedRegex).forEach((className) => note.addClass(className));\n}\nexport class EasyScore {\n    constructor(options = {}) {\n        this.defaults = {\n            clef: 'treble',\n            time: '4/4',\n            stem: 'auto',\n        };\n        this.setOptions(options);\n    }\n    set(defaults) {\n        this.defaults = Object.assign(Object.assign({}, this.defaults), defaults);\n        return this;\n    }\n    setOptions(options) {\n        var _a, _b;\n        const factory = options.factory;\n        const builder = (_a = options.builder) !== null && _a !== void 0 ? _a : new Builder(factory);\n        this.options = Object.assign(Object.assign({ commitHooks: [setId, setClass, Articulation.easyScoreHook, FretHandFinger.easyScoreHook], throwOnError: false }, options), { factory,\n            builder });\n        this.factory = factory;\n        this.builder = builder;\n        this.grammar = new EasyScoreGrammar(this.builder);\n        this.parser = new Parser(this.grammar);\n        (_b = this.options.commitHooks) === null || _b === void 0 ? void 0 : _b.forEach((commitHook) => this.addCommitHook(commitHook));\n        return this;\n    }\n    setContext(context) {\n        this.factory.setContext(context);\n        return this;\n    }\n    parse(line, options = {}) {\n        this.builder.reset(options);\n        const result = this.parser.parse(line);\n        if (!result.success && this.options.throwOnError) {\n            L(result);\n            throw new RuntimeError('Error parsing line: ' + line);\n        }\n        return result;\n    }\n    beam(notes, options) {\n        this.factory.Beam({ notes, options });\n        return notes;\n    }\n    tuplet(notes, options) {\n        this.factory.Tuplet({ notes, options });\n        return notes;\n    }\n    notes(line, options = {}) {\n        options = Object.assign({ clef: this.defaults.clef, stem: this.defaults.stem }, options);\n        this.parse(line, options);\n        return this.builder.getElements().notes;\n    }\n    voice(notes, options = {}) {\n        options = Object.assign({ time: this.defaults.time }, options);\n        return this.factory.Voice(options).addTickables(notes);\n    }\n    addCommitHook(commitHook) {\n        this.builder.addCommitHook(commitHook);\n    }\n}\nEasyScore.DEBUG = false;\n","import { Note } from './note.js';\nimport { Stem } from './stem.js';\nimport { defined, log } from './util.js';\nfunction L(...args) {\n    if (NoteHead.DEBUG)\n        log('VexFlow.NoteHead', args);\n}\nexport class NoteHead extends Note {\n    static get CATEGORY() {\n        return \"NoteHead\";\n    }\n    constructor(noteStruct) {\n        var _a;\n        super(noteStruct);\n        this.customGlyph = false;\n        this.ledger = {\n            '\\ue4e3': '\\ue4f4',\n            '\\ue4e4': '\\ue4f5',\n        };\n        this.index = noteStruct.index;\n        this.x = noteStruct.x || 0;\n        this.y = noteStruct.y || 0;\n        if (noteStruct.noteType)\n            this.noteType = noteStruct.noteType;\n        this.displaced = noteStruct.displaced || false;\n        this.stemDirection = noteStruct.stemDirection || Stem.UP;\n        this.line = noteStruct.line || 0;\n        this.glyphProps = Note.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyphProps, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        if ((this.line > 5 || this.line < 0) && this.ledger[this.glyphProps.codeHead]) {\n            this.glyphProps.codeHead = this.ledger[this.glyphProps.codeHead];\n        }\n        this.text = this.glyphProps.codeHead;\n        if (noteStruct.customGlyphCode) {\n            this.customGlyph = true;\n            this.text = noteStruct.customGlyphCode;\n        }\n        this.setStyle((_a = noteStruct.style) !== null && _a !== void 0 ? _a : {});\n        this.slashed = noteStruct.slashed || false;\n        this.renderOptions = Object.assign({}, this.renderOptions);\n    }\n    getWidth() {\n        return this.width;\n    }\n    isDisplaced() {\n        return this.displaced === true;\n    }\n    getLine() {\n        return this.line;\n    }\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    getAbsoluteX() {\n        const x = !this.preFormatted ? this.x : super.getAbsoluteX();\n        const displacementStemAdjustment = Stem.WIDTH / 2;\n        return x + (this.displaced ? (this.width - displacementStemAdjustment) * this.stemDirection : 0);\n    }\n    setStave(stave) {\n        const line = this.getLine();\n        this.stave = stave;\n        if (this.stave) {\n            this.setY(this.stave.getYForNote(line));\n            this.setContext(this.stave.getContext());\n        }\n        return this;\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return this;\n        this.preFormatted = true;\n        return this;\n    }\n    draw() {\n        var _a;\n        const ctx = this.checkContext();\n        this.setRendered();\n        ctx.openGroup('notehead', this.getAttribute('id'));\n        L(\"Drawing note head '\", this.noteType, this.duration, \"' at\", this.x, this.y);\n        this.x = this.getAbsoluteX();\n        this.renderText(ctx, 0, 0);\n        (_a = this.parent) === null || _a === void 0 ? void 0 : _a.drawModifiers(this);\n        ctx.closeGroup();\n    }\n}\nNoteHead.DEBUG = false;\n","import { Element } from './element.js';\nimport { log } from './util.js';\nfunction L(...args) {\n    if (Flag.DEBUG)\n        log('VexFlow.Flag', args);\n}\nexport class Flag extends Element {\n    static get CATEGORY() {\n        return \"Flag\";\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        ctx.openGroup('flag', this.getAttribute('id'));\n        L(\"Drawing flag '\", this.text, \"' at\", this.x, this.y);\n        this.renderText(ctx, 0, 0);\n        ctx.closeGroup();\n    }\n}\nFlag.DEBUG = false;\n","import { Flag } from './flag.js';\nimport { Glyphs } from './glyphs.js';\nimport { Note } from './note.js';\nimport { Stem } from './stem.js';\nimport { Tables } from './tables.js';\nimport { RuntimeError } from './util.js';\nexport class StemmableNote extends Note {\n    static get CATEGORY() {\n        return \"StemmableNote\";\n    }\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.flag = new Flag();\n    }\n    getStem() {\n        return this.stem;\n    }\n    checkStem() {\n        if (!this.stem) {\n            throw new RuntimeError('NoStem', 'No stem attached to instance');\n        }\n        return this.stem;\n    }\n    setStem(stem) {\n        this.stem = stem;\n        this.addChild(stem);\n        return this;\n    }\n    buildStem() {\n        const stem = new Stem();\n        this.setStem(stem);\n        return this;\n    }\n    buildFlag() {\n        var _a, _b, _c;\n        const { glyphProps } = this;\n        if (this.hasFlag()) {\n            const flagCode = this.getStemDirection() === Stem.DOWN\n                ? String.fromCodePoint(((_b = (_a = glyphProps.codeFlagUp) === null || _a === void 0 ? void 0 : _a.codePointAt(0)) !== null && _b !== void 0 ? _b : -1) + 1)\n                : ((_c = glyphProps.codeFlagUp) !== null && _c !== void 0 ? _c : Glyphs.null);\n            this.flag.setText(flagCode);\n            this.flag.fontInfo = this.fontInfo;\n        }\n    }\n    getBaseCustomNoteHeadGlyphProps() {\n        if (this.getStemDirection() === Stem.DOWN) {\n            return this.customGlyphs[this.customGlyphs.length - 1];\n        }\n        else {\n            return this.customGlyphs[0];\n        }\n    }\n    getStemLength() {\n        return Stem.HEIGHT + this.getStemExtension();\n    }\n    getBeamCount() {\n        const glyphProps = this.getGlyphProps();\n        if (glyphProps) {\n            return glyphProps.beamCount;\n        }\n        else {\n            return 0;\n        }\n    }\n    getStemMinimumLength() {\n        const frac = Tables.durationToFraction(this.duration);\n        const beamIsUndefined = this.beam === undefined;\n        let length = frac.value() <= 1 ? 0 : 20;\n        switch (this.duration) {\n            case '8':\n            case '16':\n                length = beamIsUndefined ? 35 : 25;\n                break;\n            case '32':\n                length = beamIsUndefined ? 45 : 35;\n                break;\n            case '64':\n                length = beamIsUndefined ? 50 : 40;\n                break;\n            case '128':\n                length = beamIsUndefined ? 55 : 45;\n                break;\n            default:\n                break;\n        }\n        return length;\n    }\n    getStemDirection() {\n        if (!this.stemDirection)\n            throw new RuntimeError('NoStem', 'No stem attached to this note.');\n        return this.stemDirection;\n    }\n    setStemDirection(direction) {\n        if (!direction)\n            direction = Stem.UP;\n        if (direction !== Stem.UP && direction !== Stem.DOWN) {\n            throw new RuntimeError('BadArgument', `Invalid stem direction: ${direction}`);\n        }\n        this.stemDirection = direction;\n        this.reset();\n        if (this.hasFlag()) {\n            this.buildFlag();\n        }\n        this.beam = undefined;\n        if (this.stem) {\n            this.stem.setDirection(direction);\n            this.stem.setExtension(this.getStemExtension());\n        }\n        if (this.preFormatted) {\n            this.preFormat();\n        }\n        return this;\n    }\n    getStemX() {\n        const xBegin = this.getAbsoluteX() + this.xShift;\n        const xEnd = this.getAbsoluteX() + this.xShift + this.getGlyphWidth();\n        const stemX = this.stemDirection === Stem.DOWN ? xBegin : xEnd;\n        return stemX;\n    }\n    getCenterGlyphX() {\n        return this.getAbsoluteX() + this.xShift + this.getGlyphWidth() / 2;\n    }\n    getStemExtension() {\n        const glyphProps = this.getGlyphProps();\n        const flagHeight = this.flag.getHeight();\n        const scale = this.getFontScale();\n        if (this.stemExtensionOverride !== undefined) {\n            return this.stemExtensionOverride;\n        }\n        if (this.beam) {\n            return glyphProps.stemBeamExtension * scale;\n        }\n        return flagHeight > Stem.HEIGHT * scale ? flagHeight - Stem.HEIGHT * scale : 0;\n    }\n    setStemLength(height) {\n        this.stemExtensionOverride = height - Stem.HEIGHT;\n        return this;\n    }\n    getStemExtents() {\n        if (!this.stem)\n            throw new RuntimeError('NoStem', 'No stem attached to this note.');\n        return this.stem.getExtents();\n    }\n    getYForTopText(textLine) {\n        const stave = this.checkStave();\n        if (this.hasStem()) {\n            const extents = this.getStemExtents();\n            if (!extents)\n                throw new RuntimeError('InvalidState', 'Stem does not have extents.');\n            return Math.min(stave.getYForTopText(textLine), extents.topY - this.renderOptions.annotationSpacing * (textLine + 1));\n        }\n        else {\n            return stave.getYForTopText(textLine);\n        }\n    }\n    getYForBottomText(textLine) {\n        const stave = this.checkStave();\n        if (this.hasStem()) {\n            const extents = this.getStemExtents();\n            if (!extents)\n                throw new RuntimeError('InvalidState', 'Stem does not have extents.');\n            return Math.max(stave.getYForTopText(textLine), extents.baseY + this.renderOptions.annotationSpacing * textLine);\n        }\n        else {\n            return stave.getYForBottomText(textLine);\n        }\n    }\n    hasFlag() {\n        return this.glyphProps.codeFlagUp !== undefined && !this.beam && !this.isRest();\n    }\n    postFormat() {\n        var _a;\n        (_a = this.beam) === null || _a === void 0 ? void 0 : _a.postFormat();\n        this.postFormatted = true;\n        return this;\n    }\n    drawStem(stemOptions) {\n        var _a;\n        this.checkContext();\n        this.setRendered();\n        this.setStem(new Stem(stemOptions));\n        (_a = this.stem) === null || _a === void 0 ? void 0 : _a.setContext(this.getContext()).drawWithStyle();\n    }\n}\n","import { BoundingBox } from './boundingbox.js';\nimport { Glyphs } from './glyphs.js';\nimport { Metrics } from './metrics.js';\nimport { Modifier } from './modifier.js';\nimport { Note } from './note.js';\nimport { NoteHead } from './notehead.js';\nimport { Stem } from './stem.js';\nimport { StemmableNote } from './stemmablenote.js';\nimport { Tables } from './tables.js';\nimport { defined, log, midLine, RuntimeError } from './util.js';\nfunction L(...args) {\n    if (StaveNote.DEBUG)\n        log('VexFlow.StaveNote', args);\n}\nconst isInnerNoteIndex = (note, index) => index === (note.getStemDirection() === Stem.UP ? note.keyProps.length - 1 : 0);\nfunction shiftRestVertical(rest, note, dir) {\n    const delta = dir;\n    rest.line += delta;\n    rest.maxLine += delta;\n    rest.minLine += delta;\n    rest.note.setKeyLine(0, rest.note.getKeyLine(0) + delta);\n}\nfunction centerRest(rest, noteU, noteL) {\n    const delta = rest.line - midLine(noteU.minLine, noteL.maxLine);\n    rest.note.setKeyLine(0, rest.note.getKeyLine(0) - delta);\n    rest.line -= delta;\n    rest.maxLine -= delta;\n    rest.minLine -= delta;\n}\nexport class StaveNote extends StemmableNote {\n    static get CATEGORY() {\n        return \"StaveNote\";\n    }\n    static get LEDGER_LINE_OFFSET() {\n        return 3;\n    }\n    static get minNoteheadPadding() {\n        return Metrics.get('NoteHead.minPadding');\n    }\n    static format(notes, state) {\n        if (!notes || notes.length < 2)\n            return false;\n        const notesList = [];\n        for (let i = 0; i < notes.length; i++) {\n            const props = notes[i].sortedKeyProps;\n            const line = props[0].keyProps.line;\n            let minL = props[props.length - 1].keyProps.line;\n            const stemDirection = notes[i].getStemDirection();\n            const stemMax = notes[i].getStemLength() / 10;\n            const stemMin = notes[i].getStemMinimumLength() / 10;\n            let maxL;\n            if (notes[i].isRest()) {\n                maxL =\n                    line +\n                        Math.ceil(notes[i]._noteHeads[0].getTextMetrics().actualBoundingBoxAscent / Tables.STAVE_LINE_DISTANCE);\n                minL =\n                    line -\n                        Math.ceil(notes[i]._noteHeads[0].getTextMetrics().actualBoundingBoxDescent / Tables.STAVE_LINE_DISTANCE);\n            }\n            else {\n                maxL =\n                    stemDirection === 1 ? props[props.length - 1].keyProps.line + stemMax : props[props.length - 1].keyProps.line;\n                minL = stemDirection === 1 ? props[0].keyProps.line : props[0].keyProps.line - stemMax;\n            }\n            notesList.push({\n                line: props[0].keyProps.line,\n                maxLine: maxL,\n                minLine: minL,\n                isrest: notes[i].isRest(),\n                stemDirection,\n                stemMax,\n                stemMin,\n                voiceShift: notes[i].getVoiceShiftWidth(),\n                isDisplaced: notes[i].isDisplaced(),\n                note: notes[i],\n            });\n        }\n        let voices = 0;\n        let noteU = undefined;\n        let noteM = undefined;\n        let noteL = undefined;\n        const draw = [false, false, false];\n        for (let i = 0; i < notesList.length; i++) {\n            draw[i] = notesList[i].note.renderOptions.draw !== false;\n        }\n        if (draw[0] && draw[1] && draw[2]) {\n            voices = 3;\n            noteU = notesList[0];\n            noteM = notesList[1];\n            noteL = notesList[2];\n        }\n        else if (draw[0] && draw[1]) {\n            voices = 2;\n            noteU = notesList[0];\n            noteL = notesList[1];\n        }\n        else if (draw[0] && draw[2]) {\n            voices = 2;\n            noteU = notesList[0];\n            noteL = notesList[2];\n        }\n        else if (draw[1] && draw[2]) {\n            voices = 2;\n            noteU = notesList[1];\n            noteL = notesList[2];\n        }\n        else {\n            return true;\n        }\n        if (voices === 2 && noteU.stemDirection === -1 && noteL.stemDirection === 1) {\n            noteU = notesList[1];\n            noteL = notesList[0];\n        }\n        const voiceXShift = Math.max(noteU.voiceShift, noteL.voiceShift);\n        let xShift = 0;\n        if (voices === 2) {\n            const lineSpacing = noteU.note.hasStem() && noteL.note.hasStem() && noteU.stemDirection === noteL.stemDirection ? 0.0 : 0.5;\n            if (noteL.isrest && noteU.isrest && noteU.note.duration === noteL.note.duration) {\n                noteL.note.renderOptions.draw = false;\n            }\n            else if (noteU.minLine <= noteL.maxLine + lineSpacing) {\n                if (noteU.isrest) {\n                    shiftRestVertical(noteU, noteL, 1);\n                }\n                else if (noteL.isrest) {\n                    shiftRestVertical(noteL, noteU, -1);\n                }\n                else {\n                    const lineDiff = Math.abs(noteU.line - noteL.line);\n                    if (noteU.note.hasStem() && noteL.note.hasStem()) {\n                        const noteUHead = noteU.note.sortedKeyProps[0].keyProps.code;\n                        const noteLHead = noteL.note.sortedKeyProps[noteL.note.sortedKeyProps.length - 1].keyProps.code;\n                        if (!Tables.UNISON ||\n                            noteUHead !== noteLHead ||\n                            noteU.note.getModifiers().filter((item) => item.getCategory() === \"Dot\" && item.getIndex() === 0)\n                                .length !==\n                                noteL.note.getModifiers().filter((item) => item.getCategory() === \"Dot\" && item.getIndex() === 0)\n                                    .length ||\n                            (lineDiff < 1 && lineDiff > 0) ||\n                            JSON.stringify(noteU.note.getStyle()) !== JSON.stringify(noteL.note.getStyle())) {\n                            xShift = voiceXShift + 2;\n                            if (noteU.stemDirection === noteL.stemDirection) {\n                                noteU.note.setXShift(xShift);\n                            }\n                            else {\n                                noteL.note.setXShift(xShift);\n                            }\n                        }\n                        else if (noteU.note.voice !== noteL.note.voice) {\n                            if (noteU.stemDirection === noteL.stemDirection) {\n                                if (noteU.line !== noteL.line) {\n                                    xShift = voiceXShift + 2;\n                                    noteU.note.setXShift(xShift);\n                                }\n                                else {\n                                    if (noteL.stemDirection === 1) {\n                                        noteL.stemDirection = -1;\n                                        noteL.note.setStemDirection(-1);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else if (lineDiff < 1) {\n                        xShift = voiceXShift + 2;\n                        if (noteU.note.duration < noteL.note.duration) {\n                            noteU.note.setXShift(xShift);\n                        }\n                        else {\n                            noteL.note.setXShift(xShift);\n                        }\n                    }\n                    else if (noteU.note.hasStem()) {\n                        noteU.stemDirection = -noteU.note.getStemDirection();\n                        noteU.note.setStemDirection(noteU.stemDirection);\n                    }\n                    else if (noteL.note.hasStem()) {\n                        noteL.stemDirection = -noteL.note.getStemDirection();\n                        noteL.note.setStemDirection(noteL.stemDirection);\n                    }\n                }\n            }\n            state.rightShift += xShift;\n            return true;\n        }\n        if (!noteM)\n            throw new RuntimeError('InvalidState', 'noteM not defined.');\n        if (noteM.isrest && !noteU.isrest && !noteL.isrest) {\n            if (noteU.minLine <= noteM.maxLine || noteM.minLine <= noteL.maxLine) {\n                const restHeight = noteM.maxLine - noteM.minLine;\n                const space = noteU.minLine - noteL.maxLine;\n                if (restHeight < space) {\n                    centerRest(noteM, noteU, noteL);\n                }\n                else {\n                    xShift = voiceXShift + 2;\n                    noteM.note.setXShift(xShift);\n                    if (noteL.note.hasBeam() === false) {\n                        noteL.stemDirection = -1;\n                        noteL.note.setStemDirection(-1);\n                    }\n                    if (noteU.minLine <= noteL.maxLine && noteU.note.hasBeam() === false) {\n                        noteU.stemDirection = 1;\n                        noteU.note.setStemDirection(1);\n                    }\n                }\n                state.rightShift += xShift;\n                return true;\n            }\n        }\n        if (noteU.isrest && noteM.isrest && noteL.isrest) {\n            noteU.note.renderOptions.draw = false;\n            noteL.note.renderOptions.draw = false;\n            state.rightShift += xShift;\n            return true;\n        }\n        if (noteM.isrest && noteU.isrest && noteM.minLine <= noteL.maxLine) {\n            noteM.note.renderOptions.draw = false;\n        }\n        if (noteM.isrest && noteL.isrest && noteU.minLine <= noteM.maxLine) {\n            noteM.note.renderOptions.draw = false;\n        }\n        if (noteU.isrest && noteU.minLine <= noteM.maxLine) {\n            shiftRestVertical(noteU, noteM, 1);\n        }\n        if (noteL.isrest && noteM.minLine <= noteL.maxLine) {\n            shiftRestVertical(noteL, noteM, -1);\n        }\n        if (noteU.minLine <= noteM.maxLine + 0.5 || noteM.minLine <= noteL.maxLine) {\n            xShift = voiceXShift + 2;\n            noteM.note.setXShift(xShift);\n            if (noteL.note.hasBeam() === false) {\n                noteL.stemDirection = -1;\n                noteL.note.setStemDirection(-1);\n            }\n            if (noteU.minLine <= noteL.maxLine && noteU.note.hasBeam() === false) {\n                noteU.stemDirection = 1;\n                noteU.note.setStemDirection(1);\n            }\n        }\n        state.rightShift += xShift;\n        return true;\n    }\n    static postFormat(notes) {\n        if (!notes)\n            return false;\n        notes.forEach((note) => note.postFormat());\n        return true;\n    }\n    constructor(noteStruct) {\n        var _a, _b, _c;\n        super(noteStruct);\n        this.minLine = 0;\n        this.maxLine = 0;\n        this.sortedKeyProps = [];\n        this.ledgerLineStyle = {};\n        this.clef = (_a = noteStruct.clef) !== null && _a !== void 0 ? _a : 'treble';\n        this.octaveShift = (_b = noteStruct.octaveShift) !== null && _b !== void 0 ? _b : 0;\n        this.glyphProps = Note.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyphProps, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        this.displaced = false;\n        this.dotShiftY = 0;\n        this.useDefaultHeadX = false;\n        this._noteHeads = [];\n        this.modifiers = [];\n        this.renderOptions = Object.assign(Object.assign({}, this.renderOptions), { strokePx: noteStruct.strokePx || StaveNote.LEDGER_LINE_OFFSET });\n        this.calculateKeyProps();\n        this.buildStem();\n        if (noteStruct.autoStem) {\n            this.autoStem();\n        }\n        else {\n            this.setStemDirection((_c = noteStruct.stemDirection) !== null && _c !== void 0 ? _c : Stem.UP);\n        }\n        this.reset();\n        this.buildFlag();\n    }\n    reset() {\n        super.reset();\n        const noteHeadStyles = this._noteHeads.map((noteHead) => noteHead.getStyle());\n        this.buildNoteHeads();\n        this._noteHeads.forEach((noteHead, index) => {\n            const noteHeadStyle = noteHeadStyles[index];\n            if (noteHeadStyle)\n                noteHead.setStyle(noteHeadStyle);\n        });\n        const stave = this.stave;\n        if (stave) {\n            this.setStave(stave);\n        }\n        this.calcNoteDisplacements();\n        return this;\n    }\n    setBeam(beam) {\n        this.beam = beam;\n        this.calcNoteDisplacements();\n        if (this.stem) {\n            this.stem.setExtension(this.getStemExtension());\n        }\n        return this;\n    }\n    buildStem() {\n        this.setStem(new Stem({ hide: this.isRest() }));\n        return this;\n    }\n    buildNoteHeads() {\n        this._noteHeads = [];\n        const stemDirection = this.getStemDirection();\n        const keys = this.getKeys();\n        let lastLine = undefined;\n        let lineDiff = undefined;\n        let displaced = false;\n        let start;\n        let end;\n        let step;\n        if (stemDirection === Stem.UP) {\n            start = 0;\n            end = keys.length;\n            step = 1;\n        }\n        else {\n            start = keys.length - 1;\n            end = -1;\n            step = -1;\n        }\n        for (let i = start; i !== end; i += step) {\n            const noteProps = this.sortedKeyProps[i].keyProps;\n            const line = noteProps.line;\n            if (lastLine === undefined) {\n                lastLine = line;\n            }\n            else {\n                lineDiff = Math.abs(lastLine - line);\n                if (lineDiff === 0 || lineDiff === 0.5) {\n                    displaced = !displaced;\n                }\n                else {\n                    displaced = false;\n                    this.useDefaultHeadX = true;\n                }\n            }\n            lastLine = line;\n            const notehead = new NoteHead({\n                duration: this.duration,\n                noteType: this.noteType,\n                displaced,\n                stemDirection,\n                customGlyphCode: noteProps.code,\n                line: noteProps.line,\n            });\n            notehead.fontInfo = this.fontInfo;\n            this.addChild(notehead);\n            this._noteHeads[this.sortedKeyProps[i].index] = notehead;\n        }\n        return this._noteHeads;\n    }\n    autoStem() {\n        this.setStemDirection(this.calculateOptimalStemDirection());\n    }\n    calculateOptimalStemDirection() {\n        this.minLine = this.sortedKeyProps[0].keyProps.line;\n        this.maxLine = this.sortedKeyProps[this.keyProps.length - 1].keyProps.line;\n        const MIDDLE_LINE = 3;\n        const decider = (this.minLine + this.maxLine) / 2;\n        const stemDirection = decider < MIDDLE_LINE ? Stem.UP : Stem.DOWN;\n        return stemDirection;\n    }\n    calculateKeyProps() {\n        var _a;\n        let lastLine;\n        for (let i = 0; i < this.keys.length; ++i) {\n            const key = this.keys[i];\n            const options = { octaveShift: (_a = this.octaveShift) !== null && _a !== void 0 ? _a : 0, duration: this.duration };\n            const props = Tables.keyProperties(key, this.clef, this.noteType, options);\n            if (!props) {\n                throw new RuntimeError('BadArguments', `Invalid key for note properties: ${key}`);\n            }\n            if (props.key === 'R') {\n                if (this.duration === '1' || this.duration === 'w') {\n                    props.line = 4;\n                }\n                else {\n                    props.line = 3;\n                }\n            }\n            const line = props.line;\n            if (lastLine === undefined) {\n                lastLine = line;\n            }\n            else {\n                if (Math.abs(lastLine - line) < 1) {\n                    this.displaced = true;\n                    props.displaced = true;\n                    if (this.keyProps.length > 0) {\n                        this.keyProps[i - 1].displaced = true;\n                    }\n                }\n            }\n            lastLine = line;\n            this.keyProps.push(props);\n        }\n        this.keyProps.forEach((keyProps, index) => {\n            this.sortedKeyProps.push({ keyProps, index });\n        });\n        this.sortedKeyProps.sort((a, b) => a.keyProps.line - b.keyProps.line);\n    }\n    getBoundingBox() {\n        const boundingBox = new BoundingBox(this.getAbsoluteX(), this.ys[0], 0, 0);\n        this._noteHeads.forEach((notehead) => {\n            boundingBox.mergeWith(notehead.getBoundingBox());\n        });\n        const { yTop, yBottom } = this.getNoteHeadBounds();\n        if (!this.isRest() && this.hasStem()) {\n            const noteStemHeight = this.stem.getHeight();\n            const stemY = this.getStemDirection() === Stem.DOWN\n                ? yTop - noteStemHeight - this.flag.getTextMetrics().actualBoundingBoxDescent\n                : yBottom - noteStemHeight + this.flag.getTextMetrics().actualBoundingBoxAscent;\n            boundingBox.mergeWith(new BoundingBox(this.getAbsoluteX(), stemY, 0, 0));\n        }\n        if (this.hasFlag()) {\n            const bbFlag = this.flag.getBoundingBox();\n            boundingBox.mergeWith(bbFlag);\n        }\n        for (let i = 0; i < this.modifiers.length; i++) {\n            boundingBox.mergeWith(this.modifiers[i].getBoundingBox());\n        }\n        return boundingBox;\n    }\n    getLineNumber(isTopNote) {\n        if (!this.keyProps.length) {\n            throw new RuntimeError('NoKeyProps', \"Can't get bottom note line, because note is not initialized properly.\");\n        }\n        let resultLine = this.keyProps[0].line;\n        for (let i = 0; i < this.keyProps.length; i++) {\n            const thisLine = this.keyProps[i].line;\n            if (isTopNote) {\n                if (thisLine > resultLine)\n                    resultLine = thisLine;\n            }\n            else {\n                if (thisLine < resultLine)\n                    resultLine = thisLine;\n            }\n        }\n        return resultLine;\n    }\n    isRest() {\n        const val = this.glyphProps.codeHead;\n        return val >= '\\ue4e0' && val <= '\\ue4ff';\n    }\n    isChord() {\n        return !this.isRest() && this.keys.length > 1;\n    }\n    hasStem() {\n        return this.glyphProps.stem;\n    }\n    hasFlag() {\n        return super.hasFlag() && !this.isRest();\n    }\n    getStemX() {\n        if (this.noteType === 'r') {\n            return this.getCenterGlyphX();\n        }\n        else {\n            return super.getStemX() + (this.stemDirection ? Stem.WIDTH / (2 * -this.stemDirection) : 0);\n        }\n    }\n    getYForTopText(textLine) {\n        const extents = this.getStemExtents();\n        return Math.min(this.checkStave().getYForTopText(textLine), extents.topY - this.renderOptions.annotationSpacing * (textLine + 1));\n    }\n    getYForBottomText(textLine) {\n        const extents = this.getStemExtents();\n        return Math.max(this.checkStave().getYForTopText(textLine), extents.baseY + this.renderOptions.annotationSpacing * textLine);\n    }\n    setStave(stave) {\n        super.setStave(stave);\n        const ys = this._noteHeads.map((notehead) => {\n            notehead.setStave(stave);\n            return notehead.getY();\n        });\n        this.setYs(ys);\n        if (this.stem) {\n            const { yTop, yBottom } = this.getNoteHeadBounds();\n            this.stem.setYBounds(yTop, yBottom);\n        }\n        return this;\n    }\n    isDisplaced() {\n        return this.displaced;\n    }\n    setNoteDisplaced(displaced) {\n        this.displaced = displaced;\n        return this;\n    }\n    getTieRightX() {\n        let tieStartX = this.getAbsoluteX();\n        tieStartX += this.getGlyphWidth() + this.xShift + this.rightDisplacedHeadPx;\n        if (this.modifierContext)\n            tieStartX += this.modifierContext.getRightShift();\n        return tieStartX;\n    }\n    getTieLeftX() {\n        let tieEndX = this.getAbsoluteX();\n        tieEndX += this.xShift - this.leftDisplacedHeadPx;\n        return tieEndX;\n    }\n    getLineForRest() {\n        let restLine = this.keyProps[0].line;\n        if (this.keyProps.length > 1) {\n            const lastLine = this.keyProps[this.keyProps.length - 1].line;\n            const top = Math.max(restLine, lastLine);\n            const bot = Math.min(restLine, lastLine);\n            restLine = midLine(top, bot);\n        }\n        return restLine;\n    }\n    getModifierStartXY(position, index, options = {}) {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', 'No Y-Values calculated for this note.');\n        }\n        const { ABOVE, BELOW, LEFT, RIGHT } = Modifier.Position;\n        let x = 0;\n        if (position === LEFT) {\n            x = -1 * 2;\n        }\n        else if (position === RIGHT) {\n            x = this.getGlyphWidth() + this.xShift + 2;\n            if (this.stemDirection === Stem.UP &&\n                this.hasFlag() &&\n                (options.forceFlagRight || isInnerNoteIndex(this, index))) {\n                x += this.flag.getWidth();\n            }\n        }\n        else if (position === BELOW || position === ABOVE) {\n            x = this.getGlyphWidth() / 2;\n        }\n        let restShift = 0;\n        switch (this._noteHeads[index].getText()) {\n            case Glyphs.restDoubleWhole:\n            case Glyphs.restWhole:\n                restShift += 0.5;\n                break;\n            case Glyphs.restHalf:\n            case Glyphs.restQuarter:\n            case Glyphs.rest8th:\n            case Glyphs.rest16th:\n                restShift -= 0.5;\n                break;\n            case Glyphs.rest32nd:\n            case Glyphs.rest64th:\n                restShift -= 1.5;\n                break;\n            case Glyphs.rest128th:\n                restShift -= 2.5;\n                break;\n        }\n        return {\n            x: this.getAbsoluteX() + x,\n            y: this.ys[index] + restShift * this.checkStave().getSpacingBetweenLines(),\n        };\n    }\n    setStyle(style) {\n        return super.setGroupStyle(style);\n    }\n    setStemStyle(style) {\n        const stem = this.getStem();\n        if (stem)\n            stem.setStyle(style);\n        return this;\n    }\n    getStemStyle() {\n        var _a;\n        return (_a = this.stem) === null || _a === void 0 ? void 0 : _a.getStyle();\n    }\n    setLedgerLineStyle(style) {\n        this.ledgerLineStyle = style;\n    }\n    getLedgerLineStyle() {\n        return this.ledgerLineStyle;\n    }\n    setFlagStyle(style) {\n        this.flag.setStyle(style);\n    }\n    getFlagStyle() {\n        return this.flag.getStyle();\n    }\n    getGlyphWidth() {\n        return this.noteHeads[0].getWidth();\n    }\n    setKeyStyle(index, style) {\n        this._noteHeads[index].setStyle(style);\n        return this;\n    }\n    setKeyLine(index, line) {\n        this.keyProps[index].line = line;\n        this.reset();\n        return this;\n    }\n    getKeyLine(index) {\n        return this.keyProps[index].line;\n    }\n    getVoiceShiftWidth() {\n        return this.getGlyphWidth() * (this.displaced ? 2 : 1);\n    }\n    calcNoteDisplacements() {\n        this.setLeftDisplacedHeadPx(this.displaced && this.stemDirection === Stem.DOWN ? this.getGlyphWidth() : 0);\n        this.setRightDisplacedHeadPx(!this.hasFlag() && this.displaced && this.stemDirection === Stem.UP ? this.getGlyphWidth() : 0);\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        let noteHeadPadding = 0;\n        if (this.modifierContext) {\n            this.modifierContext.preFormat();\n            if (this.modifierContext.getWidth() === 0) {\n                noteHeadPadding = StaveNote.minNoteheadPadding;\n            }\n        }\n        let width = this.getGlyphWidth() + this.leftDisplacedHeadPx + this.rightDisplacedHeadPx + noteHeadPadding;\n        if (this.shouldDrawFlag() && this.stemDirection === Stem.UP) {\n            width += this.getGlyphWidth();\n        }\n        this.setWidth(width);\n        this.preFormatted = true;\n    }\n    getNoteHeadBounds() {\n        let yTop = +Infinity;\n        let yBottom = -Infinity;\n        let nonDisplacedX;\n        let displacedX;\n        let highestLine = this.checkStave().getNumLines();\n        let lowestLine = 1;\n        let highestDisplacedLine;\n        let lowestDisplacedLine;\n        let highestNonDisplacedLine = highestLine;\n        let lowestNonDisplacedLine = lowestLine;\n        this._noteHeads.forEach((notehead) => {\n            const line = notehead.getLine();\n            const y = notehead.getY();\n            yTop = Math.min(y, yTop);\n            yBottom = Math.max(y, yBottom);\n            if (displacedX === undefined && notehead.isDisplaced()) {\n                displacedX = notehead.getAbsoluteX();\n            }\n            if (nonDisplacedX === undefined && !notehead.isDisplaced()) {\n                nonDisplacedX = notehead.getAbsoluteX();\n            }\n            highestLine = Math.max(line, highestLine);\n            lowestLine = Math.min(line, lowestLine);\n            if (notehead.isDisplaced()) {\n                highestDisplacedLine = highestDisplacedLine === undefined ? line : Math.max(line, highestDisplacedLine);\n                lowestDisplacedLine = lowestDisplacedLine === undefined ? line : Math.min(line, lowestDisplacedLine);\n            }\n            else {\n                highestNonDisplacedLine = Math.max(line, highestNonDisplacedLine);\n                lowestNonDisplacedLine = Math.min(line, lowestNonDisplacedLine);\n            }\n        }, this);\n        return {\n            yTop,\n            yBottom,\n            displacedX,\n            nonDisplacedX,\n            highestLine,\n            lowestLine,\n            highestDisplacedLine,\n            lowestDisplacedLine,\n            highestNonDisplacedLine,\n            lowestNonDisplacedLine,\n        };\n    }\n    getNoteHeadBeginX() {\n        return this.getAbsoluteX() + this.xShift;\n    }\n    getNoteHeadEndX() {\n        const xBegin = this.getNoteHeadBeginX();\n        return xBegin + this.getGlyphWidth();\n    }\n    get noteHeads() {\n        return this._noteHeads.slice();\n    }\n    drawLedgerLines() {\n        const stave = this.checkStave();\n        const { renderOptions: { strokePx }, } = this;\n        const ctx = this.checkContext();\n        const width = this.getGlyphWidth() + strokePx * 2;\n        const doubleWidth = 2 * (this.getGlyphWidth() + strokePx) - Stem.WIDTH / 2;\n        if (this.isRest())\n            return;\n        if (!ctx) {\n            throw new RuntimeError('NoCanvasContext', \"Can't draw without a canvas context.\");\n        }\n        const { highestLine, lowestLine, highestDisplacedLine, highestNonDisplacedLine, lowestDisplacedLine, lowestNonDisplacedLine, displacedX, nonDisplacedX, } = this.getNoteHeadBounds();\n        if (highestLine < 6 && lowestLine > 0)\n            return;\n        const minX = Math.min(displacedX !== null && displacedX !== void 0 ? displacedX : 0, nonDisplacedX !== null && nonDisplacedX !== void 0 ? nonDisplacedX : 0);\n        const drawLedgerLine = (y, normal, displaced) => {\n            let x;\n            if (displaced && normal)\n                x = minX - strokePx;\n            else if (normal)\n                x = (nonDisplacedX !== null && nonDisplacedX !== void 0 ? nonDisplacedX : 0) - strokePx;\n            else\n                x = (displacedX !== null && displacedX !== void 0 ? displacedX : 0) - strokePx;\n            const ledgerWidth = normal && displaced ? doubleWidth : width;\n            ctx.beginPath();\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + ledgerWidth, y);\n            ctx.stroke();\n        };\n        const style = Object.assign(Object.assign({}, stave.getDefaultLedgerLineStyle()), this.getLedgerLineStyle());\n        ctx.save();\n        this.applyStyle(ctx, style);\n        for (let line = 6; line <= highestLine; ++line) {\n            const normal = nonDisplacedX !== undefined && line <= highestNonDisplacedLine;\n            const displaced = highestDisplacedLine !== undefined && line <= highestDisplacedLine;\n            drawLedgerLine(stave.getYForNote(line), normal, displaced);\n        }\n        for (let line = 0; line >= lowestLine; --line) {\n            const normal = nonDisplacedX !== undefined && line >= lowestNonDisplacedLine;\n            const displaced = lowestDisplacedLine !== undefined && line >= lowestDisplacedLine;\n            drawLedgerLine(stave.getYForNote(line), normal, displaced);\n        }\n        ctx.restore();\n    }\n    drawModifiers(noteheadParam) {\n        const ctx = this.checkContext();\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            const index = modifier.checkIndex();\n            const notehead = this._noteHeads[index];\n            if (notehead === noteheadParam) {\n                modifier.setContext(ctx);\n                modifier.drawWithStyle();\n            }\n        }\n    }\n    shouldDrawFlag() {\n        const hasStem = this.stem !== undefined;\n        const hasFlag = this.glyphProps.codeFlagUp !== undefined;\n        const hasNoBeam = this.beam === undefined;\n        return hasStem && hasFlag && hasNoBeam && !this.isRest();\n    }\n    drawFlag() {\n        const ctx = this.checkContext();\n        if (!ctx) {\n            throw new RuntimeError('NoCanvasContext', \"Can't draw without a canvas context.\");\n        }\n        if (this.shouldDrawFlag()) {\n            const { yTop, yBottom } = this.getNoteHeadBounds();\n            const noteStemHeight = this.stem.getHeight();\n            const flagX = this.getStemX() - Tables.STEM_WIDTH / 2;\n            const flagY = this.getStemDirection() === Stem.DOWN\n                ?\n                    yTop - noteStemHeight - this.flag.getTextMetrics().actualBoundingBoxDescent\n                :\n                    yBottom - noteStemHeight + this.flag.getTextMetrics().actualBoundingBoxAscent;\n            this.flag.setContext(ctx).setX(flagX).setY(flagY).drawWithStyle();\n        }\n    }\n    drawNoteHeads() {\n        const ctx = this.checkContext();\n        this._noteHeads.forEach((notehead) => {\n            notehead.setContext(ctx).drawWithStyle();\n        });\n    }\n    drawStem(stemOptions) {\n        const ctx = this.checkContext();\n        if (stemOptions) {\n            this.setStem(new Stem(stemOptions));\n        }\n        if (this.shouldDrawFlag() && this.stem) {\n            this.stem.adjustHeightForFlag();\n        }\n        if (this.stem) {\n            this.stem.setContext(ctx).drawWithStyle();\n        }\n    }\n    getStemExtension() {\n        const superStemExtension = super.getStemExtension();\n        if (!this.glyphProps.stem) {\n            return superStemExtension;\n        }\n        const stemDirection = this.getStemDirection();\n        if (stemDirection !== this.calculateOptimalStemDirection()) {\n            return superStemExtension;\n        }\n        let midLineDistance;\n        const MIDDLE_LINE = 3;\n        if (stemDirection === Stem.UP) {\n            midLineDistance = MIDDLE_LINE - this.maxLine;\n        }\n        else {\n            midLineDistance = this.minLine - MIDDLE_LINE;\n        }\n        const linesOverOctaveFromMidLine = midLineDistance - 3.5;\n        if (linesOverOctaveFromMidLine <= 0) {\n            return superStemExtension;\n        }\n        const stave = this.getStave();\n        let spacingBetweenLines = 10;\n        if (stave !== undefined) {\n            spacingBetweenLines = stave.getSpacingBetweenLines();\n        }\n        return superStemExtension + linesOverOctaveFromMidLine * spacingBetweenLines;\n    }\n    draw() {\n        if (this.renderOptions.draw === false)\n            return;\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', \"Can't draw note without Y values.\");\n        }\n        const ctx = this.checkContext();\n        const xBegin = this.getNoteHeadBeginX();\n        const shouldRenderStem = this.hasStem() && !this.beam;\n        this._noteHeads.forEach((notehead) => notehead.setX(xBegin));\n        if (this.stem) {\n            const stemX = this.getStemX();\n            this.stem.setNoteHeadXBounds(stemX, stemX);\n        }\n        L('Rendering ', this.isChord() ? 'chord :' : 'note :', this.keys);\n        ctx.openGroup('stavenote', this.getAttribute('id'));\n        this.drawLedgerLines();\n        if (shouldRenderStem)\n            this.drawStem();\n        this.drawNoteHeads();\n        this.drawFlag();\n        const bb = this.getBoundingBox();\n        ctx.pointerRect(bb.getX(), bb.getY(), bb.getW(), bb.getH());\n        ctx.closeGroup();\n        this.setRendered();\n    }\n}\nStaveNote.DEBUG = false;\n","import { Element } from './element.js';\nimport { RuntimeError } from './util.js';\nexport class StaveTie extends Element {\n    static get CATEGORY() {\n        return \"StaveTie\";\n    }\n    constructor(notes, text = '') {\n        super();\n        this.setNotes(notes);\n        this.text = text;\n        this.renderOptions = {\n            cp1: 8,\n            cp2: 12,\n            shortTieCutoff: 10,\n            cp1Short: 2,\n            cp2Short: 8,\n            textShiftX: 0,\n            firstXShift: 0,\n            lastXShift: 0,\n            yShift: 7,\n            tieSpacing: 0,\n        };\n    }\n    getDirection() {\n        if (this.direction !== undefined && this.direction !== null) {\n            return this.direction;\n        }\n        else if (this.notes.lastNote) {\n            return this.notes.lastNote.getStemDirection();\n        }\n        else if (this.notes.firstNote) {\n            return this.notes.firstNote.getStemDirection();\n        }\n        else {\n            return 0;\n        }\n    }\n    setDirection(direction) {\n        this.direction = direction;\n        return this;\n    }\n    setNotes(notes) {\n        if (!notes.firstNote && !notes.lastNote) {\n            throw new RuntimeError('BadArguments', 'Tie needs to have either firstNote or lastNote set.');\n        }\n        if (!notes.firstIndexes) {\n            notes.firstIndexes = [0];\n        }\n        if (!notes.lastIndexes) {\n            notes.lastIndexes = [0];\n        }\n        if (notes.firstIndexes.length !== notes.lastIndexes.length) {\n            throw new RuntimeError('BadArguments', 'Tied notes must have same number of indexes.');\n        }\n        this.notes = notes;\n        return this;\n    }\n    isPartial() {\n        return !this.notes.firstNote || !this.notes.lastNote;\n    }\n    renderTie(params) {\n        if (params.firstYs.length === 0 || params.lastYs.length === 0) {\n            throw new RuntimeError('BadArguments', 'No Y-values to render');\n        }\n        const ctx = this.checkContext();\n        let cp1 = this.renderOptions.cp1;\n        let cp2 = this.renderOptions.cp2;\n        if (Math.abs(params.lastX - params.firstX) < this.renderOptions.shortTieCutoff) {\n            cp1 = this.renderOptions.cp1Short;\n            cp2 = this.renderOptions.cp2Short;\n        }\n        const firstXShift = this.renderOptions.firstXShift;\n        const lastXShift = this.renderOptions.lastXShift;\n        const yShift = this.renderOptions.yShift * params.direction;\n        const firstIndexes = this.notes.firstIndexes;\n        const lastIndexes = this.notes.lastIndexes;\n        ctx.openGroup('stavetie', this.getAttribute('id'));\n        for (let i = 0; i < firstIndexes.length; ++i) {\n            const cpX = (params.lastX + lastXShift + (params.firstX + firstXShift)) / 2;\n            const firstY = params.firstYs[firstIndexes[i]] + yShift;\n            const lastY = params.lastYs[lastIndexes[i]] + yShift;\n            if (isNaN(firstY) || isNaN(lastY)) {\n                throw new RuntimeError('BadArguments', 'Bad indexes for tie rendering.');\n            }\n            const topControlPointY = (firstY + lastY) / 2 + cp1 * params.direction;\n            const bottomControlPointY = (firstY + lastY) / 2 + cp2 * params.direction;\n            ctx.beginPath();\n            ctx.moveTo(params.firstX + firstXShift, firstY);\n            ctx.quadraticCurveTo(cpX, topControlPointY, params.lastX + lastXShift, lastY);\n            ctx.quadraticCurveTo(cpX, bottomControlPointY, params.firstX + firstXShift, firstY);\n            ctx.closePath();\n            ctx.fill();\n        }\n        ctx.closeGroup();\n    }\n    renderTieText(firstX, lastX) {\n        var _a, _b, _c;\n        const ctx = this.checkContext();\n        let centerX = (firstX + lastX) / 2;\n        centerX -= ctx.measureText(this.text).width / 2;\n        const stave = (_b = (_a = this.notes.firstNote) === null || _a === void 0 ? void 0 : _a.checkStave()) !== null && _b !== void 0 ? _b : (_c = this.notes.lastNote) === null || _c === void 0 ? void 0 : _c.checkStave();\n        if (stave) {\n            ctx.setFont(this.fontInfo);\n            ctx.fillText(this.text, centerX + this.renderOptions.textShiftX, stave.getYForTopText() - 1);\n        }\n    }\n    getNotes() {\n        return this.notes;\n    }\n    getFirstX() {\n        if (this.notes.firstNote) {\n            return this.notes.firstNote.getTieRightX() + this.renderOptions.tieSpacing;\n        }\n        else if (this.notes.lastNote) {\n            return this.notes.lastNote.checkStave().getTieStartX();\n        }\n        else {\n            return 0;\n        }\n    }\n    getLastX() {\n        if (this.notes.lastNote) {\n            return this.notes.lastNote.getTieLeftX() + this.renderOptions.tieSpacing;\n        }\n        else if (this.notes.firstNote) {\n            return this.notes.firstNote.checkStave().getTieEndX();\n        }\n        else {\n            return 0;\n        }\n    }\n    getFirstYs() {\n        if (this.notes.firstNote) {\n            return this.notes.firstNote.getYs();\n        }\n        else if (this.notes.lastNote) {\n            return this.notes.lastNote.getYs();\n        }\n        else {\n            return [0];\n        }\n    }\n    getLastYs() {\n        if (this.notes.lastNote) {\n            return this.notes.lastNote.getYs();\n        }\n        else if (this.notes.firstNote) {\n            return this.notes.firstNote.getYs();\n        }\n        else {\n            return [0];\n        }\n    }\n    synchronizeIndexes() {\n        if (this.notes.firstNote && this.notes.lastNote) {\n            return;\n        }\n        else if (!this.notes.firstNote && !this.notes.lastNote) {\n            return;\n        }\n        else if (this.notes.firstNote) {\n            this.notes.lastIndexes = this.notes.firstIndexes;\n        }\n        else {\n            this.notes.firstIndexes = this.notes.lastIndexes;\n        }\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        this.synchronizeIndexes();\n        const firstX = this.getFirstX();\n        const lastX = this.getLastX();\n        this.renderTie({\n            firstX,\n            lastX,\n            firstYs: this.getFirstYs(),\n            lastYs: this.getLastYs(),\n            direction: this.getDirection(),\n        });\n        this.renderTieText(firstX, lastX);\n        return true;\n    }\n}\n","import { StaveTie } from './stavetie.js';\nexport class TabTie extends StaveTie {\n    static get CATEGORY() {\n        return \"TabTie\";\n    }\n    static createHammeron(notes) {\n        return new TabTie(notes, 'H');\n    }\n    static createPulloff(notes) {\n        return new TabTie(notes, 'P');\n    }\n    constructor(notes, text) {\n        super(notes, text);\n        this.renderOptions.cp1 = 9;\n        this.renderOptions.cp2 = 11;\n        this.renderOptions.yShift = 3;\n        this.direction = -1;\n    }\n}\n","import { Element } from './element.js';\nimport { Fraction } from './fraction.js';\nimport { Tables } from './tables.js';\nimport { defined, RuntimeError, sumArray } from './util.js';\nexport var VoiceMode;\n(function (VoiceMode) {\n    VoiceMode[VoiceMode[\"STRICT\"] = 1] = \"STRICT\";\n    VoiceMode[VoiceMode[\"SOFT\"] = 2] = \"SOFT\";\n    VoiceMode[VoiceMode[\"FULL\"] = 3] = \"FULL\";\n})(VoiceMode || (VoiceMode = {}));\nexport class Voice extends Element {\n    static get CATEGORY() {\n        return \"Voice\";\n    }\n    static get Mode() {\n        return VoiceMode;\n    }\n    constructor(time) {\n        super();\n        this.resolutionMultiplier = 1;\n        this.mode = VoiceMode.STRICT;\n        this.preFormatted = false;\n        this.ticksUsed = new Fraction(0, 1);\n        this.largestTickWidth = 0;\n        this.tickables = [];\n        this.options = {\n            softmaxFactor: Tables.SOFTMAX_FACTOR,\n        };\n        let voiceTime;\n        if (typeof time === 'string') {\n            const match = time.match(/(\\d+)\\/(\\d+)/);\n            if (match) {\n                voiceTime = {\n                    numBeats: parseInt(match[1]),\n                    beatValue: parseInt(match[2]),\n                };\n            }\n        }\n        else {\n            voiceTime = time;\n        }\n        this.time = Object.assign({ numBeats: 4, beatValue: 4, resolution: Tables.RESOLUTION }, voiceTime);\n        this.totalTicks = new Fraction(this.time.numBeats * (this.time.resolution / this.time.beatValue), 1);\n        this.smallestTickCount = this.totalTicks.clone();\n    }\n    getTotalTicks() {\n        return this.totalTicks;\n    }\n    getTicksUsed() {\n        return this.ticksUsed;\n    }\n    getLargestTickWidth() {\n        return this.largestTickWidth;\n    }\n    getSmallestTickCount() {\n        return this.smallestTickCount;\n    }\n    getTickables() {\n        return this.tickables;\n    }\n    getMode() {\n        return this.mode;\n    }\n    setMode(mode) {\n        this.mode = mode;\n        return this;\n    }\n    getResolutionMultiplier() {\n        return this.resolutionMultiplier;\n    }\n    getActualResolution() {\n        return this.resolutionMultiplier * this.time.resolution;\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    getBoundingBox() {\n        const boundingBox = this.tickables[0].getBoundingBox();\n        for (let i = 1; i < this.tickables.length; ++i) {\n            const tickable = this.tickables[i];\n            if (!tickable.getStave() && this.stave)\n                tickable.setStave(this.stave);\n            const bb = tickable.getBoundingBox();\n            boundingBox.mergeWith(bb);\n        }\n        return boundingBox;\n    }\n    setStrict(strict) {\n        this.mode = strict ? VoiceMode.STRICT : VoiceMode.SOFT;\n        return this;\n    }\n    isComplete() {\n        if (this.mode === VoiceMode.STRICT || this.mode === VoiceMode.FULL) {\n            return this.ticksUsed.equals(this.totalTicks);\n        }\n        else {\n            return true;\n        }\n    }\n    setSoftmaxFactor(factor) {\n        this.options.softmaxFactor = factor;\n        this.expTicksUsed = 0;\n        return this;\n    }\n    reCalculateExpTicksUsed() {\n        const totalTicks = this.ticksUsed.value();\n        const exp = (tickable) => Math.pow(this.options.softmaxFactor, tickable.getTicks().value() / totalTicks);\n        this.expTicksUsed = sumArray(this.tickables.map(exp));\n        return this.expTicksUsed;\n    }\n    softmax(tickValue) {\n        if (!this.expTicksUsed) {\n            this.expTicksUsed = this.reCalculateExpTicksUsed();\n        }\n        const totalTicks = this.ticksUsed.value();\n        const exp = (v) => Math.pow(this.options.softmaxFactor, v / totalTicks);\n        const sm = exp(tickValue) / this.expTicksUsed;\n        return sm;\n    }\n    addTickable(tickable) {\n        if (!tickable.shouldIgnoreTicks()) {\n            const ticks = tickable.getTicks();\n            this.ticksUsed.add(ticks);\n            this.expTicksUsed = 0;\n            if ((this.mode === VoiceMode.STRICT || this.mode === VoiceMode.FULL) &&\n                this.ticksUsed.greaterThan(this.totalTicks)) {\n                this.ticksUsed.subtract(ticks);\n                throw new RuntimeError('BadArgument', 'Too many ticks.');\n            }\n            if (ticks.lessThan(this.smallestTickCount)) {\n                this.smallestTickCount = ticks.clone();\n            }\n            this.resolutionMultiplier = this.ticksUsed.denominator;\n            this.totalTicks.add(0, this.ticksUsed.denominator);\n        }\n        this.tickables.push(tickable);\n        tickable.setVoice(this);\n        return this;\n    }\n    addTickables(tickables) {\n        for (let i = 0; i < tickables.length; ++i) {\n            this.addTickable(tickables[i]);\n        }\n        return this;\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return this;\n        const stave = this.checkStave();\n        this.tickables.forEach((tickable) => {\n            if (!tickable.getStave()) {\n                tickable.setStave(stave);\n            }\n        });\n        this.preFormatted = true;\n        return this;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    draw(context = this.checkContext(), stave) {\n        stave = stave !== null && stave !== void 0 ? stave : this.stave;\n        this.setRendered();\n        for (let i = 0; i < this.tickables.length; ++i) {\n            const tickable = this.tickables[i];\n            if (stave) {\n                tickable.setStave(stave);\n            }\n            defined(tickable.getStave(), 'MissingStave', 'The voice cannot draw tickables without staves.');\n            tickable.setContext(context);\n            tickable.drawWithStyle();\n        }\n    }\n}\n","import { Beam } from './beam.js';\nimport { Formatter } from './formatter.js';\nimport { Modifier } from './modifier.js';\nimport { StaveNote } from './stavenote.js';\nimport { StaveTie } from './stavetie.js';\nimport { Tables } from './tables.js';\nimport { TabTie } from './tabtie.js';\nimport { isStaveNote } from './typeguard.js';\nimport { log } from './util.js';\nimport { Voice } from './voice.js';\nfunction L(...args) {\n    if (GraceNoteGroup.DEBUG)\n        log('VexFlow.GraceNoteGroup', args);\n}\nexport class GraceNoteGroup extends Modifier {\n    static get CATEGORY() {\n        return \"GraceNoteGroup\";\n    }\n    static format(gracenoteGroups, state) {\n        const groupSpacingStave = 4;\n        const groupSpacingTab = 0;\n        if (!gracenoteGroups || gracenoteGroups.length === 0)\n            return false;\n        const groupList = [];\n        let prevNote = null;\n        let shift = 0;\n        for (let i = 0; i < gracenoteGroups.length; ++i) {\n            const gracenoteGroup = gracenoteGroups[i];\n            const note = gracenoteGroup.getNote();\n            const isStavenote = isStaveNote(note);\n            const spacing = isStavenote ? groupSpacingStave : groupSpacingTab;\n            if (isStavenote && note !== prevNote) {\n                for (let n = 0; n < note.keys.length; ++n) {\n                    shift = Math.max(note.getLeftDisplacedHeadPx(), shift);\n                }\n                prevNote = note;\n            }\n            groupList.push({ shift: shift, gracenoteGroup, spacing });\n        }\n        let groupShift = groupList[0].shift;\n        let formatWidth;\n        let right = false;\n        let left = false;\n        for (let i = 0; i < groupList.length; ++i) {\n            const gracenoteGroup = groupList[i].gracenoteGroup;\n            if (gracenoteGroup.position === Modifier.Position.RIGHT)\n                right = true;\n            else\n                left = true;\n            gracenoteGroup.preFormat();\n            formatWidth = gracenoteGroup.getWidth() + groupList[i].spacing;\n            groupShift = Math.max(formatWidth, groupShift);\n        }\n        for (let i = 0; i < groupList.length; ++i) {\n            const gracenoteGroup = groupList[i].gracenoteGroup;\n            formatWidth = gracenoteGroup.getWidth() + groupList[i].spacing;\n            gracenoteGroup.setSpacingFromNextModifier(groupShift - Math.min(formatWidth, groupShift) + StaveNote.minNoteheadPadding);\n        }\n        if (right)\n            state.rightShift += groupShift;\n        if (left)\n            state.leftShift += groupShift;\n        return true;\n    }\n    constructor(graceNotes, showSlur) {\n        super();\n        this.preFormatted = false;\n        this.position = Modifier.Position.LEFT;\n        this.graceNotes = graceNotes;\n        this.width = 0;\n        this.showSlur = showSlur;\n        this.slur = undefined;\n        this.voice = new Voice({\n            numBeats: 4,\n            beatValue: 4,\n            resolution: Tables.RESOLUTION,\n        }).setStrict(false);\n        this.renderOptions = {\n            slurYShift: 0,\n        };\n        this.beams = [];\n        this.voice.addTickables(this.graceNotes);\n        return this;\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        if (!this.formatter) {\n            this.formatter = new Formatter();\n        }\n        this.formatter.joinVoices([this.voice]).format([this.voice], 0, {});\n        this.setWidth(this.formatter.getMinTotalWidth());\n        this.preFormatted = true;\n    }\n    beamNotes(graceNotes) {\n        graceNotes = graceNotes || this.graceNotes;\n        if (graceNotes.length > 1) {\n            const beam = new Beam(graceNotes);\n            beam.renderOptions.beamWidth = 3;\n            beam.renderOptions.partialBeamLength = 4;\n            this.beams.push(beam);\n        }\n        return this;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    getWidth() {\n        return this.width + StaveNote.minNoteheadPadding;\n    }\n    getGraceNotes() {\n        return this.graceNotes;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        L('Drawing grace note group for:', note);\n        this.alignSubNotesWithNote(this.getGraceNotes(), note, this.position);\n        this.graceNotes.forEach((graceNote) => graceNote.setContext(ctx).drawWithStyle());\n        this.beams.forEach((beam) => beam.setContext(ctx).drawWithStyle());\n        if (this.showSlur) {\n            const isStavenote = isStaveNote(note);\n            const TieClass = isStavenote ? StaveTie : TabTie;\n            this.slur = new TieClass({\n                lastNote: this.graceNotes[0],\n                firstNote: note,\n                firstIndexes: [0],\n                lastIndexes: [0],\n            });\n            this.slur.renderOptions.cp2 = 12;\n            this.slur.renderOptions.yShift = (isStavenote ? 7 : 5) + this.renderOptions.slurYShift;\n            this.slur.setContext(ctx).drawWithStyle();\n        }\n    }\n}\nGraceNoteGroup.DEBUG = false;\n","import { Formatter } from './formatter.js';\nimport { Modifier } from './modifier.js';\nimport { Tables } from './tables.js';\nimport { Voice } from './voice.js';\nexport class NoteSubGroup extends Modifier {\n    static get CATEGORY() {\n        return \"NoteSubGroup\";\n    }\n    static format(groups, state) {\n        if (!groups || groups.length === 0)\n            return false;\n        let width = 0;\n        for (let i = 0; i < groups.length; ++i) {\n            const group = groups[i];\n            group.preFormat();\n            width += group.getWidth();\n        }\n        state.leftShift += width;\n        return true;\n    }\n    constructor(subNotes) {\n        super();\n        this.preFormatted = false;\n        this.position = Modifier.Position.LEFT;\n        this.subNotes = subNotes;\n        this.subNotes.forEach((subNote) => {\n            subNote.setIgnoreTicks(false);\n        });\n        this.width = 0;\n        this.formatter = new Formatter();\n        this.voice = new Voice({\n            numBeats: 4,\n            beatValue: 4,\n            resolution: Tables.RESOLUTION,\n        }).setStrict(false);\n        this.voice.addTickables(this.subNotes);\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n        this.setWidth(this.formatter.getMinTotalWidth());\n        this.preFormatted = true;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    getWidth() {\n        return this.width;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        this.alignSubNotesWithNote(this.subNotes, note);\n        this.subNotes.forEach((subNote) => subNote.setContext(ctx).drawWithStyle());\n    }\n}\n","import { getBottomY, getInitialOffset, getTopY } from './articulation.js';\nimport { Element } from './element.js';\nimport { Metrics } from './metrics.js';\nimport { Modifier, ModifierPosition } from './modifier.js';\nimport { Stem } from './stem.js';\nimport { Tables } from './tables.js';\nimport { log } from './util.js';\nfunction L(...args) {\n    if (Ornament.DEBUG)\n        log('VexFlow.Ornament', args);\n}\nexport class Ornament extends Modifier {\n    static get CATEGORY() {\n        return \"Ornament\";\n    }\n    static get minPadding() {\n        return Metrics.get('NoteHead.minPadding');\n    }\n    static format(ornaments, state) {\n        var _a, _b;\n        if (!ornaments || ornaments.length === 0)\n            return false;\n        let width = 0;\n        let rightShift = state.rightShift;\n        let leftShift = state.leftShift;\n        for (let i = 0; i < ornaments.length; ++i) {\n            const ornament = ornaments[i];\n            const increment = 2;\n            if (ornament.position === ModifierPosition.RIGHT) {\n                ornament.xShift += rightShift + 2;\n                rightShift += ornament.width + Ornament.minPadding;\n            }\n            else if (ornament.position === ModifierPosition.LEFT) {\n                ornament.xShift -= leftShift + ornament.width + 2;\n                leftShift += ornament.width + Ornament.minPadding;\n            }\n            else if (ornament.position === ModifierPosition.ABOVE) {\n                width = Math.max(ornament.getWidth(), width);\n                const note = ornament.getNote();\n                let curTop = note.getLineNumber(true) + state.topTextLine;\n                const stem = note.getStem();\n                if (stem && note.getStemDirection() === Stem.UP) {\n                    curTop += Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                }\n                const numLines = (_b = (_a = note.getStave()) === null || _a === void 0 ? void 0 : _a.getNumLines()) !== null && _b !== void 0 ? _b : 0;\n                if (curTop < numLines)\n                    state.topTextLine += numLines - curTop;\n                ornament.setTextLine(state.topTextLine);\n                state.topTextLine += increment;\n            }\n            else {\n                width = Math.max(ornament.getWidth(), width);\n                ornament.setTextLine(state.textLine);\n                state.textLine += increment;\n            }\n        }\n        state.leftShift = leftShift + width / 2;\n        state.rightShift = rightShift + width / 2;\n        return true;\n    }\n    static get ornamentNoteTransition() {\n        return ['flip', 'jazzTurn', 'smear'];\n    }\n    static get ornamentAttack() {\n        return ['scoop'];\n    }\n    static get ornamentAlignWithNoteHead() {\n        return ['doit', 'fall', 'fallLong', 'doitLong', 'scoop'];\n    }\n    static get ornamentRelease() {\n        return ['doit', 'fall', 'fallLong', 'doitLong', 'jazzTurn', 'smear', 'flip'];\n    }\n    static get ornamentLeft() {\n        return ['scoop'];\n    }\n    static get ornamentRight() {\n        return ['doit', 'fall', 'fallLong', 'doitLong'];\n    }\n    static get ornamentYShift() {\n        return ['fallLong'];\n    }\n    static get ornamentArticulation() {\n        return ['bend', 'plungerClosed', 'plungerOpen'];\n    }\n    constructor(type) {\n        super();\n        this.position = ModifierPosition.ABOVE;\n        if (Ornament.ornamentRight.indexOf(type) >= 0) {\n            this.position = ModifierPosition.RIGHT;\n        }\n        if (Ornament.ornamentLeft.indexOf(type) >= 0) {\n            this.position = ModifierPosition.LEFT;\n        }\n        this.type = type;\n        this.delayed = false;\n        this.renderOptions = {\n            accidentalLowerPadding: 3,\n            accidentalUpperPadding: 3,\n        };\n        this.adjustForStemDirection = false;\n        this.ornamentAlignWithNoteHead = Ornament.ornamentAlignWithNoteHead.indexOf(this.type) >= 0;\n        if (Ornament.ornamentNoteTransition.indexOf(this.type) >= 0) {\n            this.delayed = true;\n        }\n        this.text = Tables.ornamentCodes(this.type);\n    }\n    setNote(note) {\n        super.setNote(note);\n        if (Ornament.ornamentArticulation.indexOf(this.type) >= 0) {\n            if (note.getLineNumber() >= 3) {\n                this.position = Modifier.Position.ABOVE;\n            }\n            else {\n                this.position = Modifier.Position.BELOW;\n            }\n        }\n        return this;\n    }\n    setDelayed(delayed) {\n        this.delayed = delayed;\n        return this;\n    }\n    setUpperAccidental(accid) {\n        this.accidentalUpper = new Element();\n        this.accidentalUpper.setText(Tables.accidentalCodes(accid));\n        return this;\n    }\n    setLowerAccidental(accid) {\n        this.accidentalLower = new Element();\n        this.accidentalLower.setText(Tables.accidentalCodes(accid));\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stave = note.checkStave();\n        ctx.openGroup('ornament', this.getAttribute('id'));\n        const start = note.getModifierStartXY(this.position, this.index);\n        let glyphX = start.x;\n        const staffSpace = stave.getSpacingBetweenLines();\n        const initialOffset = getInitialOffset(note, this.position);\n        let glyphY = this.ornamentAlignWithNoteHead ? start.y : 0;\n        if (this.position === ModifierPosition.ABOVE) {\n            glyphY = getTopY(note, this.textLine) - (this.textLine + initialOffset) * staffSpace;\n        }\n        if (this.position === ModifierPosition.BELOW) {\n            glyphY = getBottomY(note, this.textLine) + (this.textLine + initialOffset + 1.5) * staffSpace;\n        }\n        if (this.delayed) {\n            let delayXShift = 0;\n            const startX = note.getTickContext().getX();\n            if (this.delayXShift !== undefined) {\n                delayXShift = this.delayXShift;\n            }\n            else {\n                const tickables = note.getVoice().getTickables();\n                const index = tickables.indexOf(note);\n                const nextContext = index + 1 < tickables.length ? tickables[index + 1].checkTickContext() : undefined;\n                if (nextContext) {\n                    delayXShift += (nextContext.getX() - startX) * 0.5;\n                }\n                else {\n                    delayXShift += (stave.getX() + stave.getWidth() - glyphX) * 0.5;\n                }\n                this.delayXShift = delayXShift;\n            }\n            glyphX += delayXShift;\n        }\n        L('Rendering ornament: ', this.text.charCodeAt(0), glyphX, glyphY);\n        if (this.accidentalLower) {\n            this.accidentalLower.renderText(ctx, glyphX + this.xShift - this.accidentalLower.getWidth() * 0.5, glyphY + this.yShift - this.accidentalLower.getTextMetrics().actualBoundingBoxDescent);\n            glyphY -= this.accidentalLower.getHeight() + this.renderOptions.accidentalLowerPadding;\n        }\n        if (Ornament.ornamentYShift.indexOf(this.type) >= 0) {\n            this.yShift += this.getHeight();\n        }\n        this.x =\n            glyphX -\n                (this.position === ModifierPosition.ABOVE || this.position === ModifierPosition.BELOW ? this.width * 0.5 : 0);\n        this.y = glyphY;\n        this.renderText(ctx, 0, 0);\n        if (this.accidentalUpper) {\n            glyphY -= this.getHeight() + this.renderOptions.accidentalUpperPadding;\n            this.accidentalUpper.renderText(ctx, glyphX + this.xShift - this.accidentalUpper.getWidth() * 0.5, glyphY + this.yShift - this.accidentalUpper.getTextMetrics().actualBoundingBoxDescent);\n        }\n        ctx.closeGroup();\n    }\n}\nOrnament.DEBUG = false;\n","import { Modifier, ModifierPosition } from './modifier.js';\nexport class Parenthesis extends Modifier {\n    static get CATEGORY() {\n        return \"Parenthesis\";\n    }\n    static buildAndAttach(notes) {\n        for (const note of notes) {\n            for (let i = 0; i < note.keys.length; i++) {\n                note.addModifier(new Parenthesis(ModifierPosition.LEFT), i);\n                note.addModifier(new Parenthesis(ModifierPosition.RIGHT), i);\n            }\n        }\n    }\n    static format(parentheses, state) {\n        if (!parentheses || parentheses.length === 0)\n            return false;\n        let xWidthL = 0;\n        let xWidthR = 0;\n        for (let i = 0; i < parentheses.length; ++i) {\n            const parenthesis = parentheses[i];\n            const note = parenthesis.getNote();\n            const pos = parenthesis.getPosition();\n            const index = parenthesis.checkIndex();\n            let shift = 0;\n            if (pos === ModifierPosition.RIGHT) {\n                shift = note.getRightParenthesisPx(index);\n                xWidthR = xWidthR > shift + parenthesis.width ? xWidthR : shift + parenthesis.width;\n            }\n            if (pos === ModifierPosition.LEFT) {\n                shift = note.getLeftParenthesisPx(index) + parenthesis.width;\n                xWidthL = xWidthL > shift + parenthesis.width ? xWidthL : shift + parenthesis.width;\n            }\n            parenthesis.setXShift(shift);\n        }\n        state.leftShift += xWidthL;\n        state.rightShift += xWidthR;\n        return true;\n    }\n    constructor(position) {\n        super();\n        this.position = position !== null && position !== void 0 ? position : Modifier.Position.LEFT;\n        if (this.position === Modifier.Position.RIGHT) {\n            this.text = '\\uE0F6';\n        }\n        else if (this.position === Modifier.Position.LEFT) {\n            this.text = '\\uE0F5';\n        }\n    }\n    setNote(note) {\n        this.note = note;\n        this.setFont(note.getFont());\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index, { forceFlagRight: true });\n        this.renderText(ctx, start.x, start.y);\n    }\n}\n","import { Element } from './element.js';\nimport { Font, FontStyle, FontWeight } from './font.js';\nimport { Metrics } from './metrics.js';\nimport { RenderContext } from './rendercontext.js';\nimport { Tables } from './tables.js';\nimport { normalizeAngle, prefix, RuntimeError } from './util.js';\nconst ATTRIBUTES_TO_IGNORE = {\n    path: {\n        x: true,\n        y: true,\n        width: true,\n        height: true,\n        'font-family': true,\n        'font-weight': true,\n        'font-style': true,\n        'font-size': true,\n    },\n    rect: {\n        'font-family': true,\n        'font-weight': true,\n        'font-style': true,\n        'font-size': true,\n    },\n    text: {\n        width: true,\n        height: true,\n    },\n};\nconst SVG_NS = 'http://www.w3.org/2000/svg';\nconst TWO_PI = 2 * Math.PI;\nexport class SVGContext extends RenderContext {\n    constructor(element) {\n        super();\n        this.width = 0;\n        this.height = 0;\n        this.precision = 1;\n        this.backgroundFillStyle = 'white';\n        this.fontCSSString = '';\n        this.element = element;\n        this.precision = Math.pow(10, Tables.RENDER_PRECISION_PLACES);\n        const svg = this.create('svg');\n        svg.setAttribute('pointer-events', 'none');\n        this.element.appendChild(svg);\n        this.svg = svg;\n        this.parent = this.svg;\n        this.groups = [this.svg];\n        this.path = '';\n        this.pen = { x: NaN, y: NaN };\n        const defaultFontAttributes = {\n            'font-family': Metrics.get('fontFamily'),\n            'font-size': '10pt',\n            'font-weight': FontWeight.NORMAL,\n            'font-style': FontStyle.NORMAL,\n        };\n        this.state = Object.assign({ scaleX: 1, scaleY: 1 }, defaultFontAttributes);\n        this.attributes = Object.assign({ 'stroke-width': 1.0, 'stroke-dasharray': 'none', fill: 'black', stroke: 'black', shadowBlur: 0, shadowColor: 'black' }, defaultFontAttributes);\n        this.groupAttributes = [];\n        this.applyAttributes(svg, this.attributes);\n        this.groupAttributes.push(Object.assign({}, this.attributes));\n        this.stateStack = [];\n    }\n    round(n) {\n        return Math.round(n * this.precision) / this.precision;\n    }\n    create(svgElementType) {\n        return document.createElementNS(SVG_NS, svgElementType);\n    }\n    openGroup(cls, id) {\n        const group = this.create('g');\n        this.groups.push(group);\n        this.parent.appendChild(group);\n        this.parent = group;\n        if (cls)\n            group.setAttribute('class', prefix(cls));\n        if (id)\n            group.setAttribute('id', prefix(id));\n        this.applyAttributes(group, this.attributes);\n        this.groupAttributes.push(Object.assign(Object.assign({}, this.groupAttributes[this.groupAttributes.length - 1]), this.attributes));\n        return group;\n    }\n    closeGroup() {\n        this.groups.pop();\n        this.groupAttributes.pop();\n        this.parent = this.groups[this.groups.length - 1];\n    }\n    openRotation(angleDegrees, x, y) {\n        this.openGroup().setAttribute('transform', `translate(${x},${y}) rotate(${angleDegrees}) translate(-${x},-${y})`);\n    }\n    closeRotation() {\n        this.closeGroup();\n    }\n    add(elem) {\n        this.parent.appendChild(elem);\n    }\n    setFillStyle(style) {\n        this.attributes.fill = style;\n        return this;\n    }\n    setBackgroundFillStyle(style) {\n        this.backgroundFillStyle = style;\n        return this;\n    }\n    setStrokeStyle(style) {\n        this.attributes.stroke = style;\n        return this;\n    }\n    setShadowColor(color) {\n        this.attributes.shadowColor = color;\n        return this;\n    }\n    setShadowBlur(blur) {\n        this.attributes.shadowBlur = blur;\n        return this;\n    }\n    setLineWidth(width) {\n        this.attributes['stroke-width'] = width;\n        return this;\n    }\n    setLineDash(lineDash) {\n        if (Object.prototype.toString.call(lineDash) === '[object Array]') {\n            this.attributes['stroke-dasharray'] = lineDash.join(',');\n            return this;\n        }\n        else {\n            throw new RuntimeError('ArgumentError', 'lineDash must be an array of integers.');\n        }\n    }\n    setLineCap(capType) {\n        this.attributes['stroke-linecap'] = capType;\n        return this;\n    }\n    resize(width, height) {\n        this.width = width;\n        this.height = height;\n        this.element.style.width = width.toString();\n        this.svg.style.width = width.toString();\n        this.svg.style.height = height.toString();\n        const attributes = {\n            width,\n            height,\n        };\n        this.applyAttributes(this.svg, attributes);\n        this.scale(this.state.scaleX, this.state.scaleY);\n        return this;\n    }\n    scale(x, y) {\n        this.state.scaleX = this.state.scaleX ? this.state.scaleX * x : x;\n        this.state.scaleY = this.state.scaleY ? this.state.scaleY * y : y;\n        const visibleWidth = this.width / this.state.scaleX;\n        const visibleHeight = this.height / this.state.scaleY;\n        this.setViewBox(0, 0, visibleWidth, visibleHeight);\n        return this;\n    }\n    setViewBox(viewBoxOrMinX, minY, width, height) {\n        if (typeof viewBoxOrMinX === 'string') {\n            this.svg.setAttribute('viewBox', viewBoxOrMinX);\n        }\n        else {\n            const viewBoxString = viewBoxOrMinX + ' ' + minY + ' ' + width + ' ' + height;\n            this.svg.setAttribute('viewBox', viewBoxString);\n        }\n    }\n    applyAttributes(element, attributes) {\n        const attrNamesToIgnore = ATTRIBUTES_TO_IGNORE[element.nodeName];\n        for (const attrName in attributes) {\n            if (attrNamesToIgnore && attrNamesToIgnore[attrName]) {\n                continue;\n            }\n            if (attributes[attrName] &&\n                (this.groupAttributes.length === 0 ||\n                    attributes[attrName] != this.groupAttributes[this.groupAttributes.length - 1][attrName]))\n                element.setAttributeNS(null, attrName, attributes[attrName]);\n        }\n        return element;\n    }\n    clear() {\n        while (this.svg.lastChild) {\n            this.svg.removeChild(this.svg.lastChild);\n        }\n    }\n    rect(x, y, width, height, attributes) {\n        if (height < 0) {\n            y += height;\n            height *= -1;\n        }\n        const rectangle = this.create('rect');\n        attributes = attributes !== null && attributes !== void 0 ? attributes : { fill: 'none', 'stroke-width': this.attributes['stroke-width'], stroke: 'black' };\n        x = this.round(x);\n        y = this.round(y);\n        width = this.round(width);\n        height = this.round(height);\n        this.applyAttributes(rectangle, Object.assign({ x, y, width, height }, attributes));\n        this.add(rectangle);\n        return this;\n    }\n    fillRect(x, y, width, height) {\n        const attributes = { fill: this.attributes.fill, stroke: 'none' };\n        this.rect(x, y, width, height, attributes);\n        return this;\n    }\n    pointerRect(x, y, width, height) {\n        const attributes = { opacity: '0', 'pointer-events': 'auto' };\n        this.rect(x, y, width, height, attributes);\n        return this;\n    }\n    clearRect(x, y, width, height) {\n        this.rect(x, y, width, height, { fill: this.backgroundFillStyle, stroke: 'none' });\n        return this;\n    }\n    beginPath() {\n        this.path = '';\n        this.pen.x = NaN;\n        this.pen.y = NaN;\n        return this;\n    }\n    moveTo(x, y) {\n        x = this.round(x);\n        y = this.round(y);\n        this.path += 'M' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    lineTo(x, y) {\n        x = this.round(x);\n        y = this.round(y);\n        this.path += 'L' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    bezierCurveTo(x1, y1, x2, y2, x, y) {\n        x = this.round(x);\n        y = this.round(y);\n        x1 = this.round(x1);\n        y1 = this.round(y1);\n        x2 = this.round(x2);\n        y2 = this.round(y2);\n        this.path += 'C' + x1 + ' ' + y1 + ',' + x2 + ' ' + y2 + ',' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    quadraticCurveTo(x1, y1, x, y) {\n        x = this.round(x);\n        y = this.round(y);\n        x1 = this.round(x1);\n        y1 = this.round(y1);\n        this.path += 'Q' + x1 + ' ' + y1 + ',' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    arc(x, y, radius, startAngle, endAngle, counterclockwise) {\n        let x0 = x + radius * Math.cos(startAngle);\n        let y0 = y + radius * Math.sin(startAngle);\n        x0 = this.round(x0);\n        y0 = this.round(y0);\n        const tmpStartTest = normalizeAngle(startAngle);\n        const tmpEndTest = normalizeAngle(endAngle);\n        if ((!counterclockwise && endAngle - startAngle >= TWO_PI) ||\n            (counterclockwise && startAngle - endAngle >= TWO_PI) ||\n            tmpStartTest === tmpEndTest) {\n            let x1 = x + radius * Math.cos(startAngle + Math.PI);\n            let y1 = y + radius * Math.sin(startAngle + Math.PI);\n            x1 = this.round(x1);\n            y1 = this.round(y1);\n            radius = this.round(radius);\n            this.path += `M${x0} ${y0} A${radius} ${radius} 0 0 0 ${x1} ${y1} `;\n            this.path += `A${radius} ${radius} 0 0 0 ${x0} ${y0}`;\n            this.pen.x = x0;\n            this.pen.y = y0;\n        }\n        else {\n            let x1 = x + radius * Math.cos(endAngle);\n            let y1 = y + radius * Math.sin(endAngle);\n            startAngle = tmpStartTest;\n            endAngle = tmpEndTest;\n            let large;\n            if (Math.abs(endAngle - startAngle) < Math.PI) {\n                large = counterclockwise;\n            }\n            else {\n                large = !counterclockwise;\n            }\n            if (startAngle > endAngle) {\n                large = !large;\n            }\n            const sweep = !counterclockwise;\n            x1 = this.round(x1);\n            y1 = this.round(y1);\n            radius = this.round(radius);\n            this.path += `M${x0} ${y0} A${radius} ${radius} 0 ${+large} ${+sweep} ${x1} ${y1}`;\n            this.pen.x = x1;\n            this.pen.y = y1;\n        }\n        return this;\n    }\n    closePath() {\n        this.path += 'Z';\n        return this;\n    }\n    getShadowStyle() {\n        return `filter: drop-shadow(0 0 ${this.attributes.shadowBlur / 1.5}px ${this.attributes.shadowColor})`;\n    }\n    fill(attributes) {\n        const path = this.create('path');\n        if (typeof attributes === 'undefined') {\n            attributes = Object.assign(Object.assign({}, this.attributes), { stroke: 'none' });\n        }\n        attributes.d = this.path;\n        if (this.attributes.shadowBlur > 0) {\n            attributes.style = this.getShadowStyle();\n        }\n        this.applyAttributes(path, attributes);\n        this.add(path);\n        return this;\n    }\n    stroke() {\n        const path = this.create('path');\n        const attributes = Object.assign(Object.assign({}, this.attributes), { fill: 'none', d: this.path });\n        if (this.attributes.shadowBlur > 0) {\n            attributes.style = this.getShadowStyle();\n        }\n        this.applyAttributes(path, attributes);\n        this.add(path);\n        return this;\n    }\n    measureText(text) {\n        SVGContext.measureTextElement.setText(text);\n        SVGContext.measureTextElement.setFont(this.attributes['font-family'], this.attributes['font-size'], this.attributes['font-weight'], this.attributes['font-style']);\n        const bb = SVGContext.measureTextElement.getBoundingBox();\n        return { x: bb.x, y: bb.y, width: bb.w, height: bb.h };\n    }\n    fillText(text, x, y) {\n        if (!text || text.length <= 0) {\n            return this;\n        }\n        x = this.round(x);\n        y = this.round(y);\n        const attributes = Object.assign(Object.assign({}, this.attributes), { stroke: 'none', x,\n            y });\n        const txt = this.create('text');\n        txt.textContent = text;\n        this.applyAttributes(txt, attributes);\n        this.add(txt);\n        return this;\n    }\n    save() {\n        this.stateStack.push({\n            state: structuredClone(this.state),\n            attributes: structuredClone(this.attributes),\n        });\n        return this;\n    }\n    restore() {\n        const savedState = this.stateStack.pop();\n        if (savedState) {\n            const state = savedState;\n            this.state = structuredClone(state.state);\n            this.attributes = structuredClone(state.attributes);\n        }\n        return this;\n    }\n    set fillStyle(style) {\n        this.setFillStyle(style);\n    }\n    get fillStyle() {\n        return this.attributes.fill;\n    }\n    set strokeStyle(style) {\n        this.setStrokeStyle(style);\n    }\n    get strokeStyle() {\n        return this.attributes.stroke;\n    }\n    setFont(f, size, weight, style) {\n        const fontInfo = Font.validate(f, size, weight, style);\n        this.fontCSSString = Font.toCSSString(fontInfo);\n        const fontAttributes = {\n            'font-family': fontInfo.family,\n            'font-size': fontInfo.size,\n            'font-weight': fontInfo.weight,\n            'font-style': fontInfo.style,\n        };\n        this.attributes = Object.assign(Object.assign({}, this.attributes), fontAttributes);\n        this.state = Object.assign(Object.assign({}, this.state), fontAttributes);\n        return this;\n    }\n    getFont() {\n        return this.fontCSSString;\n    }\n}\nSVGContext.measureTextElement = new Element();\n","import { CanvasContext } from './canvascontext.js';\nimport { SVGContext } from './svgcontext.js';\nimport { isRenderContext } from './typeguard.js';\nimport { RuntimeError } from './util.js';\nimport { isHTMLCanvas, isHTMLDiv } from './web.js';\nexport var RendererBackends;\n(function (RendererBackends) {\n    RendererBackends[RendererBackends[\"CANVAS\"] = 1] = \"CANVAS\";\n    RendererBackends[RendererBackends[\"SVG\"] = 2] = \"SVG\";\n})(RendererBackends || (RendererBackends = {}));\nexport var RendererLineEndType;\n(function (RendererLineEndType) {\n    RendererLineEndType[RendererLineEndType[\"NONE\"] = 1] = \"NONE\";\n    RendererLineEndType[RendererLineEndType[\"UP\"] = 2] = \"UP\";\n    RendererLineEndType[RendererLineEndType[\"DOWN\"] = 3] = \"DOWN\";\n})(RendererLineEndType || (RendererLineEndType = {}));\nexport class Renderer {\n    static buildContext(elementId, backend, width, height, background = '#FFF') {\n        const renderer = new Renderer(elementId, backend);\n        if (width && height) {\n            renderer.resize(width, height);\n        }\n        const ctx = renderer.getContext();\n        ctx.setBackgroundFillStyle(background);\n        Renderer.lastContext = ctx;\n        return ctx;\n    }\n    static getCanvasContext(elementId, width, height, background) {\n        return Renderer.buildContext(elementId, Renderer.Backends.CANVAS, width, height, background);\n    }\n    static getSVGContext(elementId, width, height, background) {\n        return Renderer.buildContext(elementId, Renderer.Backends.SVG, width, height, background);\n    }\n    static drawDashedLine(context, fromX, fromY, toX, toY, dashPattern) {\n        context.beginPath();\n        const dx = toX - fromX;\n        const dy = toY - fromY;\n        const angle = Math.atan2(dy, dx);\n        let x = fromX;\n        let y = fromY;\n        context.moveTo(fromX, fromY);\n        let idx = 0;\n        let draw = true;\n        while (!((dx < 0 ? x <= toX : x >= toX) && (dy < 0 ? y <= toY : y >= toY))) {\n            const dashLength = dashPattern[idx++ % dashPattern.length];\n            const nx = x + Math.cos(angle) * dashLength;\n            x = dx < 0 ? Math.max(toX, nx) : Math.min(toX, nx);\n            const ny = y + Math.sin(angle) * dashLength;\n            y = dy < 0 ? Math.max(toY, ny) : Math.min(toY, ny);\n            if (draw) {\n                context.lineTo(x, y);\n            }\n            else {\n                context.moveTo(x, y);\n            }\n            draw = !draw;\n        }\n        context.closePath();\n        context.stroke();\n    }\n    constructor(arg0, arg1) {\n        if (isRenderContext(arg0)) {\n            this.ctx = arg0;\n        }\n        else {\n            if (arg1 === undefined) {\n                throw new RuntimeError('InvalidArgument', 'Missing backend argument');\n            }\n            const backend = arg1;\n            let element;\n            if (typeof arg0 === 'string') {\n                const maybeElement = document.getElementById(arg0);\n                if (!maybeElement) {\n                    throw new RuntimeError('BadElementId', `Can't find element with ID \"${maybeElement}\"`);\n                }\n                element = maybeElement;\n            }\n            else {\n                element = arg0;\n            }\n            if (backend === Renderer.Backends.CANVAS) {\n                if (!isHTMLCanvas(element)) {\n                    throw new RuntimeError('BadElement', 'CANVAS context requires an HTMLCanvasElement.');\n                }\n                const context = element.getContext('2d', { willReadFrequently: true });\n                if (!context) {\n                    throw new RuntimeError('BadElement', \"Can't get canvas context\");\n                }\n                this.ctx = new CanvasContext(context);\n            }\n            else if (backend === Renderer.Backends.SVG) {\n                if (!isHTMLDiv(element)) {\n                    throw new RuntimeError('BadElement', 'SVG context requires an HTMLDivElement.');\n                }\n                this.ctx = new SVGContext(element);\n            }\n            else {\n                throw new RuntimeError('InvalidBackend', `No support for backend: ${backend}`);\n            }\n        }\n    }\n    resize(width, height) {\n        this.ctx.resize(width, height);\n        return this;\n    }\n    getContext() {\n        return this.ctx;\n    }\n}\nRenderer.Backends = RendererBackends;\nRenderer.LineEndType = RendererLineEndType;\nRenderer.lastContext = undefined;\n","import { Element } from './element.js';\nimport { Font } from './font.js';\nimport { Glyphs } from './glyphs.js';\nimport { Metrics } from './metrics.js';\nimport { Note } from './note.js';\nexport var TextJustification;\n(function (TextJustification) {\n    TextJustification[TextJustification[\"LEFT\"] = 1] = \"LEFT\";\n    TextJustification[TextJustification[\"CENTER\"] = 2] = \"CENTER\";\n    TextJustification[TextJustification[\"RIGHT\"] = 3] = \"RIGHT\";\n})(TextJustification || (TextJustification = {}));\nexport class TextNote extends Note {\n    static get CATEGORY() {\n        return \"TextNote\";\n    }\n    static get GLYPHS() {\n        return {\n            segno: Glyphs.segno,\n            tr: Glyphs.ornamentTrill,\n            mordent: Glyphs.ornamentMordent,\n            mordentUpper: Glyphs.ornamentShortTrill,\n            mordentLower: Glyphs.ornamentMordent,\n            f: Glyphs.dynamicForte,\n            p: Glyphs.dynamicPiano,\n            m: Glyphs.dynamicMezzo,\n            s: Glyphs.dynamicSforzando,\n            z: Glyphs.dynamicZ,\n            coda: Glyphs.coda,\n            pedalOpen: Glyphs.keyboardPedalPed,\n            pedalClose: Glyphs.keyboardPedalUp,\n            caesuraStraight: Glyphs.caesura,\n            caesuraCurved: Glyphs.caesuraCurved,\n            breath: Glyphs.breathMarkComma,\n            tick: Glyphs.breathMarkTick,\n            turn: Glyphs.ornamentTurn,\n            turnInverted: Glyphs.ornamentTurnSlash,\n        };\n    }\n    constructor(noteStruct) {\n        var _a, _b;\n        super(noteStruct);\n        this.text = (_a = noteStruct.text) !== null && _a !== void 0 ? _a : '';\n        if (noteStruct.glyph) {\n            this.text += TextNote.GLYPHS[noteStruct.glyph] || noteStruct.glyph;\n        }\n        if (noteStruct.font) {\n            this.setFont(noteStruct.font);\n        }\n        else if (noteStruct.glyph === undefined) {\n            this.setFont(Metrics.getFontInfo('TextNote.text.fontSize'));\n        }\n        const smallerFontSize = Font.convertSizeToPointValue(this.fontInfo.size) * 0.769231;\n        if (noteStruct.superscript) {\n            this.superscript = new Element('TexNote.subSuper');\n            this.superscript.setText(noteStruct.superscript);\n            this.superscript.setFontSize(smallerFontSize);\n        }\n        if (noteStruct.subscript) {\n            this.subscript = new Element('TexNote.subSuper');\n            this.subscript.setText(noteStruct.subscript);\n            this.subscript.setFontSize(smallerFontSize);\n        }\n        this.line = (_b = noteStruct.line) !== null && _b !== void 0 ? _b : 0;\n        this.smooth = noteStruct.smooth || false;\n        this.ignoreTicks = noteStruct.ignoreTicks || false;\n        this.justification = TextJustification.LEFT;\n    }\n    setJustification(just) {\n        this.justification = just;\n        return this;\n    }\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    getLine() {\n        return this.line;\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        const tickContext = this.checkTickContext(`Can't preformat without a TickContext.`);\n        if (this.justification === TextJustification.CENTER) {\n            this.leftDisplacedHeadPx = this.width / 2;\n        }\n        else if (this.justification === TextJustification.RIGHT) {\n            this.leftDisplacedHeadPx = this.width;\n        }\n        this.rightDisplacedHeadPx = tickContext.getMetrics().glyphPx / 2;\n        this.preFormatted = true;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const stave = this.checkStave();\n        const tickContext = this.checkTickContext(`Can't draw without a TickContext.`);\n        this.setRendered();\n        let x = this.getAbsoluteX() + tickContext.getMetrics().glyphPx / 2;\n        const width = this.getWidth();\n        if (this.justification === TextJustification.CENTER) {\n            x -= width / 2;\n        }\n        else if (this.justification === TextJustification.RIGHT) {\n            x -= width;\n        }\n        const y = stave.getYForLine(this.line + -3);\n        this.renderText(ctx, x, y);\n        const height = this.getHeight();\n        if (this.superscript) {\n            this.superscript.renderText(ctx, x + this.width + 2, y - height / 2.2);\n        }\n        if (this.subscript) {\n            this.subscript.renderText(ctx, x + this.width + 2, y + height / 2.2 - 1);\n        }\n    }\n}\nTextNote.Justification = TextJustification;\n","import { StaveModifier } from './stavemodifier.js';\nexport var VoltaType;\n(function (VoltaType) {\n    VoltaType[VoltaType[\"NONE\"] = 1] = \"NONE\";\n    VoltaType[VoltaType[\"BEGIN\"] = 2] = \"BEGIN\";\n    VoltaType[VoltaType[\"MID\"] = 3] = \"MID\";\n    VoltaType[VoltaType[\"END\"] = 4] = \"END\";\n    VoltaType[VoltaType[\"BEGIN_END\"] = 5] = \"BEGIN_END\";\n})(VoltaType || (VoltaType = {}));\nexport class Volta extends StaveModifier {\n    static get CATEGORY() {\n        return \"Volta\";\n    }\n    static get type() {\n        return VoltaType;\n    }\n    constructor(type, label, x, yShift) {\n        super();\n        this.type = type;\n        this.x = x;\n        this.yShift = yShift;\n        this.text = label;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const x = stave.getModifierXShift(this.getPosition());\n        const ctx = stave.checkContext();\n        this.setRendered();\n        let width = stave.getWidth() - x;\n        const topY = stave.getYForTopText(stave.getNumLines()) + this.yShift;\n        const vertHeight = 1.5 * stave.getSpacingBetweenLines();\n        switch (this.type) {\n            case VoltaType.BEGIN:\n                ctx.fillRect(this.x + x, topY, 1, vertHeight);\n                break;\n            case VoltaType.END:\n                width -= 5;\n                ctx.fillRect(this.x + x + width, topY, 1, vertHeight);\n                break;\n            case VoltaType.BEGIN_END:\n                width -= 3;\n                ctx.fillRect(this.x + x, topY, 1, vertHeight);\n                ctx.fillRect(this.x + x + width, topY, 1, vertHeight);\n                break;\n            default:\n                break;\n        }\n        if (this.type === VoltaType.BEGIN || this.type === VoltaType.BEGIN_END) {\n            this.renderText(ctx, x + 5, topY - this.yShift + 15);\n        }\n        ctx.fillRect(this.x + x, topY, width, 1);\n    }\n}\n","import { Metrics } from './metrics.js';\nimport { Modifier, ModifierPosition } from './modifier.js';\nimport { Renderer } from './renderer.js';\nimport { Stem } from './stem.js';\nimport { Tables } from './tables.js';\nimport { isStaveNote, isStemmableNote } from './typeguard.js';\nimport { RuntimeError } from './util.js';\nexport class StringNumber extends Modifier {\n    static get CATEGORY() {\n        return \"StringNumber\";\n    }\n    static format(nums, state) {\n        const leftShift = state.leftShift;\n        const rightShift = state.rightShift;\n        const numSpacing = 1;\n        if (!nums || nums.length === 0)\n            return false;\n        const numsList = [];\n        let prevNote = null;\n        let extraXSpaceForDisplacedNotehead = 0;\n        let shiftRight = 0;\n        const modLines = 0;\n        for (let i = 0; i < nums.length; ++i) {\n            const num = nums[i];\n            const note = num.getNote();\n            const pos = num.getPosition();\n            if (!isStaveNote(note)) {\n                throw new RuntimeError('NoStaveNote');\n            }\n            const index = num.checkIndex();\n            const props = note.getKeyProps()[index];\n            const mc = note.getModifierContext();\n            const verticalSpaceNeeded = (num.radius * 2) / Tables.STAVE_LINE_DISTANCE + 0.5;\n            if (mc) {\n                if (pos === ModifierPosition.ABOVE) {\n                    num.textLine = mc.getState().topTextLine;\n                    state.topTextLine += verticalSpaceNeeded;\n                }\n                else if (pos === ModifierPosition.BELOW) {\n                    num.textLine = mc.getState().textLine;\n                    state.textLine += verticalSpaceNeeded;\n                }\n            }\n            if (note !== prevNote) {\n                for (let n = 0; n < note.keys.length; ++n) {\n                    if (pos === Modifier.Position.LEFT) {\n                        extraXSpaceForDisplacedNotehead = Math.max(note.getLeftDisplacedHeadPx(), extraXSpaceForDisplacedNotehead);\n                    }\n                    if (rightShift === 0) {\n                        shiftRight = Math.max(note.getRightDisplacedHeadPx(), shiftRight);\n                    }\n                }\n                prevNote = note;\n            }\n            const glyphLine = modLines === 0 ? props.line : modLines;\n            numsList.push({\n                pos,\n                note,\n                num,\n                line: glyphLine,\n                shiftL: extraXSpaceForDisplacedNotehead,\n                shiftR: shiftRight,\n            });\n        }\n        numsList.sort((a, b) => b.line - a.line);\n        let numShiftR = 0;\n        let xWidthL = 0;\n        let xWidthR = 0;\n        let lastLine = null;\n        let lastNote = null;\n        for (let i = 0; i < numsList.length; ++i) {\n            const note = numsList[i].note;\n            const pos = numsList[i].pos;\n            const num = numsList[i].num;\n            const line = numsList[i].line;\n            const shiftR = numsList[i].shiftR;\n            if (line !== lastLine || note !== lastNote) {\n                numShiftR = rightShift + shiftR;\n            }\n            const numWidth = num.getWidth() + numSpacing;\n            let numXShift = 0;\n            if (pos === Modifier.Position.LEFT) {\n                num.setXShift(leftShift + extraXSpaceForDisplacedNotehead);\n                numXShift = numWidth;\n                xWidthL = Math.max(numXShift, xWidthL);\n            }\n            else if (pos === Modifier.Position.RIGHT) {\n                num.setXShift(numShiftR);\n                numXShift += numWidth;\n                xWidthR = numXShift > xWidthR ? numXShift : xWidthR;\n            }\n            lastLine = line;\n            lastNote = note;\n        }\n        state.leftShift += xWidthL;\n        state.rightShift += xWidthR;\n        return true;\n    }\n    constructor(number) {\n        super();\n        this.stringNumber = number;\n        this.position = Modifier.Position.ABOVE;\n        this.xShift = 0;\n        this.yShift = 0;\n        this.textLine = 0;\n        this.stemOffset = 0;\n        this.xOffset = 0;\n        this.yOffset = 0;\n        this.dashed = true;\n        this.leg = Renderer.LineEndType.NONE;\n        this.radius = 8;\n        this.drawCircle = true;\n        this.setWidth(this.radius * 2 + 4);\n    }\n    setLineEndType(leg) {\n        if (leg >= Renderer.LineEndType.NONE && leg <= Renderer.LineEndType.DOWN) {\n            this.leg = leg;\n        }\n        return this;\n    }\n    setStringNumber(number) {\n        this.stringNumber = number;\n        return this;\n    }\n    setOffsetX(x) {\n        this.xOffset = x;\n        return this;\n    }\n    setOffsetY(y) {\n        this.yOffset = y;\n        return this;\n    }\n    setLastNote(note) {\n        this.lastNote = note;\n        return this;\n    }\n    setDashed(dashed) {\n        this.dashed = dashed;\n        return this;\n    }\n    setDrawCircle(drawCircle) {\n        this.drawCircle = drawCircle;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index);\n        const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n        let dotX = start.x + this.xShift + this.xOffset;\n        let stemExt = {};\n        if (note.hasStem()) {\n            stemExt = note.checkStem().getExtents();\n        }\n        let dotY = start.y + this.yShift + this.yOffset;\n        switch (this.position) {\n            case Modifier.Position.ABOVE:\n                {\n                    const ys = note.getYs();\n                    dotY = ys.reduce((a, b) => (a < b ? a : b));\n                    if (note.hasStem() && stemDirection === Stem.UP) {\n                        dotY = stemExt.topY + Metrics.get('StringNumber.stemPadding');\n                    }\n                    dotY -=\n                        this.radius + Metrics.get('StringNumber.verticalPadding') + this.textLine * Tables.STAVE_LINE_DISTANCE;\n                }\n                break;\n            case Modifier.Position.BELOW:\n                {\n                    const ys = note.getYs();\n                    dotY = ys.reduce((a, b) => (a > b ? a : b));\n                    if (note.hasStem() && stemDirection === Stem.DOWN) {\n                        dotY = stemExt.topY - Metrics.get('StringNumber.stemPadding');\n                    }\n                    dotY +=\n                        this.radius + Metrics.get('StringNumber.verticalPadding') + this.textLine * Tables.STAVE_LINE_DISTANCE;\n                }\n                break;\n            case Modifier.Position.LEFT:\n                dotX -= this.radius / 2 + Metrics.get('StringNumber.leftPadding');\n                break;\n            case Modifier.Position.RIGHT:\n                dotX += this.radius / 2 + Metrics.get('StringNumber.rightPadding');\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} is invalid`);\n        }\n        if (this.drawCircle) {\n            ctx.beginPath();\n            ctx.arc(dotX, dotY, this.radius, 0, Math.PI * 2, false);\n            ctx.setLineWidth(1.5);\n            ctx.stroke();\n        }\n        ctx.setFont(this.fontInfo);\n        const x = dotX - ctx.measureText(this.stringNumber).width / 2;\n        ctx.fillText('' + this.stringNumber, x, dotY + 4.5);\n        const lastNote = this.lastNote;\n        if (isStemmableNote(lastNote)) {\n            const end = lastNote.getStemX() - note.getX() + 5;\n            ctx.setStrokeStyle('#000000');\n            ctx.setLineCap('round');\n            ctx.setLineWidth(0.6);\n            if (this.dashed) {\n                Renderer.drawDashedLine(ctx, dotX + 10, dotY, dotX + end, dotY, [3, 3]);\n            }\n            else {\n                Renderer.drawDashedLine(ctx, dotX + 10, dotY, dotX + end, dotY, [3, 0]);\n            }\n            let len;\n            let pattern;\n            switch (this.leg) {\n                case Renderer.LineEndType.UP:\n                    len = -10;\n                    pattern = this.dashed ? [3, 3] : [3, 0];\n                    Renderer.drawDashedLine(ctx, dotX + end, dotY, dotX + end, dotY + len, pattern);\n                    break;\n                case Renderer.LineEndType.DOWN:\n                    len = 10;\n                    pattern = this.dashed ? [3, 3] : [3, 0];\n                    Renderer.drawDashedLine(ctx, dotX + end, dotY, dotX + end, dotY + len, pattern);\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n}\n","import { Element } from './element.js';\nimport { Glyphs } from './glyphs.js';\nimport { Metrics } from './metrics.js';\nimport { Modifier } from './modifier.js';\nimport { isNote, isStaveNote, isTabNote } from './typeguard.js';\nimport { RuntimeError } from './util.js';\nexport class Stroke extends Modifier {\n    static get CATEGORY() {\n        return \"Stroke\";\n    }\n    static format(strokes, state) {\n        const leftShift = state.leftShift;\n        const strokeSpacing = 5;\n        if (!strokes || strokes.length === 0)\n            return false;\n        const strokeList = strokes.map((stroke) => {\n            const note = stroke.getNote();\n            const index = stroke.checkIndex();\n            if (isStaveNote(note)) {\n                const { line } = note.getKeyProps()[index];\n                const shift = note.getLeftDisplacedHeadPx();\n                return { line, shift, stroke };\n            }\n            else if (isTabNote(note)) {\n                const { str: string } = note.getPositions()[index];\n                return { line: string, shift: 0, stroke };\n            }\n            else {\n                throw new RuntimeError('Internal', 'Unexpected instance.');\n            }\n        });\n        const strokeShift = leftShift;\n        const xShift = strokeList.reduce((xShift, { stroke, shift }) => {\n            stroke.setXShift(strokeShift + shift);\n            return Math.max(stroke.getWidth() + strokeSpacing, xShift);\n        }, 0);\n        state.leftShift += xShift;\n        return true;\n    }\n    constructor(type, options) {\n        super();\n        this.options = Object.assign({ allVoices: true }, options);\n        this.allVoices = this.options.allVoices;\n        this.type = type;\n        this.position = Modifier.Position.LEFT;\n        this.renderOptions = {\n            fontScale: Metrics.get('Stroke.fontSize'),\n        };\n        this.setXShift(0);\n        this.setWidth(10);\n    }\n    getPosition() {\n        return this.position;\n    }\n    addEndNote(note) {\n        this.noteEnd = note;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index);\n        let yPositions = note.getYs();\n        let topY = start.y;\n        let botY = start.y;\n        const x = start.x - 5;\n        const lineSpace = note.checkStave().getSpacingBetweenLines();\n        const notes = this.checkModifierContext().getMembers(note.getCategory());\n        for (let i = 0; i < notes.length; i++) {\n            const note = notes[i];\n            if (isNote(note)) {\n                yPositions = note.getYs();\n                for (let n = 0; n < yPositions.length; n++) {\n                    if (this.note === notes[i] || this.allVoices) {\n                        topY = Math.min(topY, yPositions[n]);\n                        botY = Math.max(botY, yPositions[n]);\n                    }\n                }\n            }\n        }\n        let arrow = '';\n        let arrowY = 0;\n        let textY = 0;\n        switch (this.type) {\n            case Stroke.Type.BRUSH_DOWN:\n            case Stroke.Type.ROLL_DOWN:\n            case Stroke.Type.RASGUEADO_DOWN:\n                arrow = Glyphs.arrowheadBlackUp;\n                arrowY = topY;\n                topY -= lineSpace / 2;\n                botY += lineSpace / 2;\n                break;\n            case Stroke.Type.BRUSH_UP:\n            case Stroke.Type.ROLL_UP:\n            case Stroke.Type.RASGUEADO_UP:\n                arrow = Glyphs.arrowheadBlackDown;\n                arrowY = botY + lineSpace;\n                topY -= lineSpace / 2;\n                break;\n            case Stroke.Type.ARPEGGIO_DIRECTIONLESS:\n                topY -= lineSpace / 2;\n                botY += lineSpace / 2;\n                break;\n            default:\n                throw new RuntimeError('InvalidType', `The stroke type ${this.type} does not exist`);\n        }\n        if (this.type === Stroke.Type.BRUSH_DOWN || this.type === Stroke.Type.BRUSH_UP) {\n            ctx.fillRect(x + this.xShift, topY, 1, botY - topY);\n        }\n        else {\n            const lineGlyph = arrow === Glyphs.arrowheadBlackDown ? Glyphs.wiggleArpeggiatoDown : Glyphs.wiggleArpeggiatoUp;\n            let txt = '';\n            const el = new Element();\n            while (el.getWidth() < botY - topY) {\n                txt += lineGlyph;\n                el.setText(txt);\n            }\n            if (this.type === Stroke.Type.RASGUEADO_DOWN ||\n                this.type === Stroke.Type.ROLL_DOWN ||\n                this.type === Stroke.Type.ARPEGGIO_DIRECTIONLESS) {\n                ctx.openRotation(90, x + this.xShift, topY);\n                el.renderText(ctx, x + this.xShift, topY - el.getTextMetrics().actualBoundingBoxDescent + el.getHeight() / 2);\n                ctx.closeRotation();\n                textY = topY + el.getWidth() + 5;\n            }\n            else {\n                ctx.openRotation(-90, x + this.xShift, botY);\n                el.renderText(ctx, x + this.xShift, botY - el.getTextMetrics().actualBoundingBoxDescent + el.getHeight() / 2);\n                ctx.closeRotation();\n                textY = botY - el.getWidth() - 5;\n            }\n        }\n        if (arrowY !== 0) {\n            const el = new Element();\n            el.setText(arrow);\n            el.renderText(ctx, x + this.xShift - el.getWidth() / 2, arrowY);\n        }\n        if (this.type === Stroke.Type.RASGUEADO_DOWN || this.type === Stroke.Type.RASGUEADO_UP) {\n            const el = new Element('Stroke.text');\n            el.setText('R');\n            el.renderText(ctx, x + this.xShift - el.getWidth() / 2, textY + (this.type === Stroke.Type.RASGUEADO_DOWN ? el.getHeight() : 0));\n        }\n    }\n}\nStroke.Type = {\n    BRUSH_DOWN: 1,\n    BRUSH_UP: 2,\n    ROLL_DOWN: 3,\n    ROLL_UP: 4,\n    RASGUEADO_DOWN: 5,\n    RASGUEADO_UP: 6,\n    ARPEGGIO_DIRECTIONLESS: 7,\n};\n","import { Bend } from './bend.js';\nimport { Modifier } from './modifier.js';\nimport { Tables } from './tables.js';\nimport { RuntimeError } from './util.js';\nexport class Vibrato extends Modifier {\n    static get CATEGORY() {\n        return \"Vibrato\";\n    }\n    static format(vibratos, state, context) {\n        if (!vibratos || vibratos.length === 0)\n            return false;\n        let textLine = state.topTextLine;\n        let width = 0;\n        let shift = state.rightShift - 7;\n        const bends = context.getMembers(Bend.CATEGORY);\n        if (bends && bends.length > 0) {\n            const bendHeight = bends.map((bb) => bb.getTextHeight()).reduce((a, b) => (a > b ? a : b)) / Tables.STAVE_LINE_DISTANCE;\n            textLine = textLine - (bendHeight + 1);\n        }\n        else {\n            state.topTextLine += 1;\n        }\n        for (let i = 0; i < vibratos.length; ++i) {\n            const vibrato = vibratos[i];\n            vibrato.setXShift(shift);\n            vibrato.setTextLine(textLine);\n            width += vibrato.getWidth();\n            shift += width;\n        }\n        state.rightShift += width;\n        return true;\n    }\n    constructor() {\n        super();\n        this.position = Modifier.Position.RIGHT;\n        this.renderOptions = {\n            code: 0xeab0,\n            width: 20,\n        };\n        this.setVibratoWidth(this.renderOptions.width);\n    }\n    setVibratoWidth(width) {\n        this.renderOptions.width = width;\n        this.text = String.fromCodePoint(this.renderOptions.code);\n        const myWidth = this.getWidth();\n        if (!myWidth) {\n            throw new RuntimeError('Cannot set vibrato width if width is 0');\n        }\n        const items = Math.round(this.renderOptions.width / myWidth);\n        for (let i = 1; i < items; i++) {\n            this.text += String.fromCodePoint(this.renderOptions.code);\n        }\n        return this;\n    }\n    setVibratoCode(code) {\n        this.renderOptions.code = code;\n        return this.setVibratoWidth(this.renderOptions.width);\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n        const vx = start.x;\n        const vy = note.getYForTopText(this.textLine) + 5;\n        this.renderText(ctx, vx, vy);\n    }\n}\n","import { Accidental } from './accidental.js';\nimport { Annotation } from './annotation.js';\nimport { Articulation } from './articulation.js';\nimport { Bend } from './bend.js';\nimport { ChordSymbol } from './chordsymbol.js';\nimport { Dot } from './dot.js';\nimport { FretHandFinger } from './frethandfinger.js';\nimport { GraceNoteGroup } from './gracenotegroup.js';\nimport { NoteSubGroup } from './notesubgroup.js';\nimport { Ornament } from './ornament.js';\nimport { Parenthesis } from './parenthesis.js';\nimport { StaveNote } from './stavenote.js';\nimport { StringNumber } from './stringnumber.js';\nimport { Stroke } from './strokes.js';\nimport { log, RuntimeError } from './util.js';\nimport { Vibrato } from './vibrato.js';\nfunction L(...args) {\n    if (ModifierContext.DEBUG)\n        log('VexFlow.ModifierContext', args);\n}\nexport class ModifierContext {\n    constructor() {\n        this.state = {\n            leftShift: 0,\n            rightShift: 0,\n            textLine: 0,\n            topTextLine: 0,\n        };\n        this.members = {};\n        this.preFormatted = false;\n        this.postFormatted = false;\n        this.formatted = false;\n        this.width = 0;\n        this.spacing = 0;\n    }\n    addModifier(member) {\n        L('addModifier is deprecated, use addMember instead.');\n        return this.addMember(member);\n    }\n    addMember(member) {\n        const category = member.getCategory();\n        if (!this.members[category]) {\n            this.members[category] = [];\n        }\n        this.members[category].push(member);\n        member.setModifierContext(this);\n        this.preFormatted = false;\n        return this;\n    }\n    getModifiers(category) {\n        L('getModifiers is deprecated, use getMembers instead.');\n        return this.getMembers(category);\n    }\n    getMembers(category) {\n        var _a;\n        return (_a = this.members[category]) !== null && _a !== void 0 ? _a : [];\n    }\n    getWidth() {\n        return this.width;\n    }\n    getLeftShift() {\n        return this.state.leftShift;\n    }\n    getRightShift() {\n        return this.state.rightShift;\n    }\n    getState() {\n        return this.state;\n    }\n    getMetrics() {\n        if (!this.formatted) {\n            throw new RuntimeError('UnformattedMember', 'Unformatted member has no metrics.');\n        }\n        return {\n            width: this.state.leftShift + this.state.rightShift + this.spacing,\n            spacing: this.spacing,\n        };\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        L('Preformatting ModifierContext');\n        const state = this.state;\n        const members = this.members;\n        StaveNote.format(members[\"StaveNote\"], state);\n        Parenthesis.format(members[\"Parenthesis\"], state);\n        Dot.format(members[\"Dot\"], state);\n        FretHandFinger.format(members[\"FretHandFinger\"], state);\n        Accidental.format(members[\"Accidental\"], state);\n        Stroke.format(members[\"Stroke\"], state);\n        GraceNoteGroup.format(members[\"GraceNoteGroup\"], state);\n        NoteSubGroup.format(members[\"NoteSubGroup\"], state);\n        StringNumber.format(members[\"StringNumber\"], state);\n        Articulation.format(members[\"Articulation\"], state);\n        Ornament.format(members[\"Ornament\"], state);\n        Annotation.format(members[\"Annotation\"], state);\n        ChordSymbol.format(members[\"ChordSymbol\"], state);\n        Bend.format(members[\"Bend\"], state);\n        Vibrato.format(members[\"Vibrato\"], state, this);\n        this.width = state.leftShift + state.rightShift;\n        this.preFormatted = true;\n    }\n    postFormat() {\n        if (this.postFormatted)\n            return;\n        L('Postformatting ModifierContext');\n        StaveNote.postFormat(this.getMembers(\"StaveNote\"));\n    }\n}\nModifierContext.DEBUG = false;\n","import { BoundingBox } from './boundingbox.js';\nimport { Element } from './element.js';\nimport { Glyphs } from './glyphs.js';\nimport { Stave } from './stave.js';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier.js';\nimport { Tables } from './tables.js';\nimport { defined } from './util.js';\nexport class KeySignature extends StaveModifier {\n    static get CATEGORY() {\n        return \"KeySignature\";\n    }\n    constructor(keySpec, cancelKeySpec, alterKeySpec) {\n        super();\n        this.accList = [];\n        this.setKeySig(keySpec, cancelKeySpec, alterKeySpec);\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.children = [];\n        this.paddingForced = false;\n    }\n    convertToGlyph(acc, nextAcc, stave) {\n        const code = Tables.accidentalCodes(acc.type);\n        const glyph = new Element(\"KeySignature\");\n        glyph.setText(code);\n        let extraWidth = 1;\n        glyph.setYShift(stave.getYForLine(acc.line));\n        if (this.children.length > 0) {\n            const prevGlyph = this.children[this.children.length - 1];\n            const isNatural = (el) => el.getText() === Glyphs.accidentalNatural;\n            const yShiftDiff = (el1, el2) => Math.abs(el2.getYShift() - el1.getYShift());\n            if ((isNatural(prevGlyph) || isNatural(glyph)) && yShiftDiff(prevGlyph, glyph) < 10) {\n                extraWidth = 2;\n            }\n            glyph.setXShift(prevGlyph.getXShift() + prevGlyph.getWidth() + extraWidth);\n        }\n        this.children.push(glyph);\n        this.width += glyph.getWidth() + extraWidth;\n    }\n    cancelKey(spec) {\n        this.formatted = false;\n        this.cancelKeySpec = spec;\n        return this;\n    }\n    convertToCancelAccList(spec) {\n        const cancelAccList = Tables.keySignature(spec);\n        const differentTypes = this.accList.length > 0 && cancelAccList.length > 0 && cancelAccList[0].type !== this.accList[0].type;\n        const naturals = differentTypes ? cancelAccList.length : cancelAccList.length - this.accList.length;\n        if (naturals < 1)\n            return undefined;\n        const cancelled = [];\n        for (let i = 0; i < naturals; i++) {\n            let index = i;\n            if (!differentTypes) {\n                index = cancelAccList.length - naturals + i;\n            }\n            const acc = cancelAccList[index];\n            cancelled.push({ type: 'n', line: acc.line });\n        }\n        this.accList = cancelled.concat(this.accList);\n        return {\n            accList: cancelled,\n            type: cancelAccList[0].type,\n        };\n    }\n    addToStave(stave) {\n        this.paddingForced = true;\n        stave.addModifier(this);\n        return this;\n    }\n    setStave(stave) {\n        this.formatted = false;\n        return super.setStave(stave);\n    }\n    getBoundingBox() {\n        if (!this.formatted)\n            this.format();\n        return super.getBoundingBox();\n    }\n    calculateDimensions() {\n        let boundingBox;\n        if (this.children.length > 0) {\n            boundingBox = this.children[0].getBoundingBox();\n        }\n        else {\n            boundingBox = new BoundingBox(this.x + this.xShift, this.y + this.yShift, 0, 0);\n        }\n        this.children.forEach((glyph) => {\n            boundingBox.mergeWith(glyph.getBoundingBox());\n        });\n        this.width = boundingBox.getW();\n        this.height = boundingBox.getH();\n        this.y = boundingBox.getY();\n    }\n    convertAccLines(clef, type, accList = this.accList) {\n        let offset = 0.0;\n        let customLines;\n        switch (clef) {\n            case 'soprano':\n                if (type === '#')\n                    customLines = [2.5, 0.5, 2, 0, 1.5, -0.5, 1];\n                else\n                    offset = -1;\n                break;\n            case 'mezzo-soprano':\n                if (type === 'b')\n                    customLines = [0, 2, 0.5, 2.5, 1, 3, 1.5];\n                else\n                    offset = 1.5;\n                break;\n            case 'alto':\n                offset = 0.5;\n                break;\n            case 'tenor':\n                if (type === '#')\n                    customLines = [3, 1, 2.5, 0.5, 2, 0, 1.5];\n                else\n                    offset = -0.5;\n                break;\n            case 'baritone-f':\n            case 'baritone-c':\n                if (type === 'b')\n                    customLines = [0.5, 2.5, 1, 3, 1.5, 3.5, 2];\n                else\n                    offset = 2;\n                break;\n            case 'bass':\n            case 'french':\n                offset = 1;\n                break;\n            default:\n                break;\n        }\n        let i;\n        if (typeof customLines !== 'undefined') {\n            for (i = 0; i < accList.length; ++i) {\n                accList[i].line = customLines[i];\n            }\n        }\n        else if (offset !== 0) {\n            for (i = 0; i < accList.length; ++i) {\n                accList[i].line += offset;\n            }\n        }\n    }\n    getPadding(index) {\n        if (!this.formatted)\n            this.format();\n        return this.children.length === 0 || (!this.paddingForced && index < 2) ? 0 : this.padding;\n    }\n    getWidth() {\n        if (!this.formatted)\n            this.format();\n        return this.width;\n    }\n    setKeySig(keySpec, cancelKeySpec, alterKeySpec) {\n        this.formatted = false;\n        this.keySpec = keySpec;\n        this.cancelKeySpec = cancelKeySpec;\n        this.alterKeySpec = alterKeySpec;\n        return this;\n    }\n    alterKey(alterKeySpec) {\n        this.formatted = false;\n        this.alterKeySpec = alterKeySpec;\n        return this;\n    }\n    convertToAlterAccList(alterKeySpec) {\n        const max = Math.min(alterKeySpec.length, this.accList.length);\n        for (let i = 0; i < max; ++i) {\n            if (alterKeySpec[i]) {\n                this.accList[i].type = alterKeySpec[i];\n            }\n        }\n    }\n    format() {\n        let stave = this.getStave();\n        if (!stave) {\n            stave = new Stave(0, 0, 100);\n            this.setStave(stave);\n        }\n        this.width = 0;\n        this.children = [];\n        this.accList = Tables.keySignature(defined(this.keySpec));\n        const accList = this.accList;\n        const firstAccidentalType = accList.length > 0 ? accList[0].type : undefined;\n        let cancelAccList;\n        if (this.cancelKeySpec) {\n            cancelAccList = this.convertToCancelAccList(this.cancelKeySpec);\n        }\n        if (this.alterKeySpec) {\n            this.convertToAlterAccList(this.alterKeySpec);\n        }\n        if (this.accList.length > 0) {\n            const clef = (this.position === StaveModifierPosition.END ? stave.getEndClef() : stave.getClef()) || stave.getClef();\n            if (cancelAccList) {\n                this.convertAccLines(clef, cancelAccList.type, cancelAccList.accList);\n            }\n            this.convertAccLines(clef, firstAccidentalType, accList);\n            for (let i = 0; i < this.accList.length; ++i) {\n                this.convertToGlyph(this.accList[i], this.accList[i + 1], stave);\n            }\n        }\n        this.calculateDimensions();\n        this.formatted = true;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        if (!this.formatted)\n            this.format();\n        this.setRendered();\n        ctx.openGroup('keysignature', this.getAttribute('id'));\n        for (let i = 0; i < this.children.length; i++) {\n            const glyph = this.children[i];\n            glyph.renderText(ctx, this.x, 0);\n        }\n        ctx.closeGroup();\n    }\n}\n","import { Glyphs } from './glyphs.js';\nimport { Metrics } from './metrics.js';\nimport { StaveModifier } from './stavemodifier.js';\nexport class Repetition extends StaveModifier {\n    static get CATEGORY() {\n        return \"Repetition\";\n    }\n    constructor(type, x, yShift) {\n        super();\n        this.symbolType = type;\n        this.x = x;\n        this.xShift = 0;\n        this.yShift = yShift;\n    }\n    setShiftX(x) {\n        this.xShift = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.yShift = y;\n        return this;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const x = stave.getModifierXShift(this.getPosition());\n        this.setRendered();\n        switch (this.symbolType) {\n            case Repetition.type.CODA_RIGHT:\n                this.drawCodaFixed(stave, x + stave.getWidth());\n                break;\n            case Repetition.type.CODA_LEFT:\n                this.drawSymbolText(stave, x, 'Coda', true);\n                break;\n            case Repetition.type.SEGNO_LEFT:\n                this.drawSegnoFixed(stave, x);\n                break;\n            case Repetition.type.SEGNO_RIGHT:\n                this.drawSegnoFixed(stave, x + stave.getWidth());\n                break;\n            case Repetition.type.DC:\n                this.drawSymbolText(stave, x, 'D.C.', false);\n                break;\n            case Repetition.type.DC_AL_CODA:\n                this.drawSymbolText(stave, x, 'D.C. al', true);\n                break;\n            case Repetition.type.DC_AL_FINE:\n                this.drawSymbolText(stave, x, 'D.C. al Fine', false);\n                break;\n            case Repetition.type.DS:\n                this.drawSymbolText(stave, x, 'D.S.', false);\n                break;\n            case Repetition.type.DS_AL_CODA:\n                this.drawSymbolText(stave, x, 'D.S. al', true);\n                break;\n            case Repetition.type.DS_AL_FINE:\n                this.drawSymbolText(stave, x, 'D.S. al Fine', false);\n                break;\n            case Repetition.type.FINE:\n                this.drawSymbolText(stave, x, 'Fine', false);\n                break;\n            case Repetition.type.TO_CODA:\n                this.drawSymbolText(stave, x, 'To', true);\n                break;\n            default:\n                break;\n        }\n    }\n    drawCodaFixed(stave, x) {\n        const y = stave.getYForTopText(stave.getNumLines());\n        this.text = Glyphs.coda;\n        this.renderText(stave.checkContext(), x, y + Metrics.get('Repetition.coda.offsetY'));\n        return this;\n    }\n    drawSegnoFixed(stave, x) {\n        const y = stave.getYForTopText(stave.getNumLines());\n        this.text = Glyphs.segno;\n        this.renderText(stave.checkContext(), x, y + Metrics.get('Repetition.segno.offsetY'));\n        return this;\n    }\n    drawSymbolText(stave, x, text, drawCoda) {\n        const ctx = stave.checkContext();\n        let textX = 0;\n        this.text = text;\n        if (drawCoda) {\n            this.text += ' \\ue048';\n        }\n        this.setFont(Metrics.getFontInfo('Repetition.text'));\n        switch (this.symbolType) {\n            case Repetition.type.CODA_LEFT:\n                textX = stave.getVerticalBarWidth();\n                break;\n            case Repetition.type.DC:\n            case Repetition.type.DC_AL_FINE:\n            case Repetition.type.DS:\n            case Repetition.type.DS_AL_FINE:\n            case Repetition.type.FINE:\n            default:\n                textX =\n                    x - (stave.getNoteStartX() - this.x) + stave.getWidth() - this.width - Metrics.get('Repetition.text.offsetX');\n        }\n        const y = stave.getYForTopText(stave.getNumLines()) + Metrics.get('Repetition.text.offsetY');\n        this.renderText(ctx, textX, y);\n        return this;\n    }\n}\nRepetition.type = {\n    NONE: 1,\n    CODA_LEFT: 2,\n    CODA_RIGHT: 3,\n    SEGNO_LEFT: 4,\n    SEGNO_RIGHT: 5,\n    DC: 6,\n    DC_AL_CODA: 7,\n    DC_AL_FINE: 8,\n    DS: 9,\n    DS_AL_CODA: 10,\n    DS_AL_FINE: 11,\n    FINE: 12,\n    TO_CODA: 13,\n};\n","import { Metrics } from './metrics.js';\nimport { StaveModifier } from './stavemodifier.js';\nexport class StaveSection extends StaveModifier {\n    static get CATEGORY() {\n        return \"StaveSection\";\n    }\n    constructor(section, x = 0, yShift = 0, drawRect = true) {\n        super();\n        this.setText(section);\n        this.x = x;\n        this.yShift = yShift;\n        this.drawRect = drawRect;\n        this.padding = Metrics.get('StaveSection.padding');\n    }\n    setDrawRect(drawRect) {\n        this.drawRect = drawRect;\n        return this;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        this.x = stave.getX() + stave.getModifierXShift(this.getPosition());\n        const headroom = -1 * this.textMetrics.actualBoundingBoxDescent;\n        const width = this.width + 2 * this.padding;\n        const height = this.height + 2 * this.padding;\n        const y = stave.getYForTopText(1.5) + this.yShift;\n        const x = this.x + this.xShift;\n        if (this.drawRect) {\n            ctx.beginPath();\n            ctx.rect(x, y - height + headroom, width, height);\n            ctx.stroke();\n        }\n        this.renderText(ctx, this.xShift + this.padding, y - this.padding);\n    }\n}\n","import { Element } from './element.js';\nimport { Glyphs } from './glyphs.js';\nimport { Metrics } from './metrics.js';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier.js';\nexport class StaveTempo extends StaveModifier {\n    static get CATEGORY() {\n        return \"StaveTempo\";\n    }\n    constructor(tempo, x, shiftY) {\n        super();\n        this.durationToCode = {\n            '1/4': Glyphs.metNoteDoubleWholeSquare,\n            long: Glyphs.metNoteDoubleWholeSquare,\n            '1/2': Glyphs.metNoteDoubleWhole,\n            breve: Glyphs.metNoteDoubleWhole,\n            1: Glyphs.metNoteWhole,\n            whole: Glyphs.metNoteWhole,\n            w: Glyphs.metNoteWhole,\n            2: Glyphs.metNoteHalfUp,\n            half: Glyphs.metNoteHalfUp,\n            h: Glyphs.metNoteHalfUp,\n            4: Glyphs.metNoteQuarterUp,\n            quarter: Glyphs.metNoteQuarterUp,\n            q: Glyphs.metNoteQuarterUp,\n            8: Glyphs.metNote8thUp,\n            eighth: Glyphs.metNote8thUp,\n            16: Glyphs.metNote16thUp,\n            '16th': Glyphs.metNote16thUp,\n            32: Glyphs.metNote32ndUp,\n            '32nd': Glyphs.metNote32ndUp,\n            64: Glyphs.metNote64thUp,\n            '64th': Glyphs.metNote64thUp,\n            128: Glyphs.metNote128thUp,\n            '128th': Glyphs.metNote128thUp,\n            256: Glyphs.metNote256thUp,\n            '256th': Glyphs.metNote256thUp,\n            512: Glyphs.metNote512thUp,\n            '512th': Glyphs.metNote512thUp,\n            1024: Glyphs.metNote1024thUp,\n            '1024th': Glyphs.metNote1024thUp,\n        };\n        this.tempo = tempo;\n        this.position = StaveModifierPosition.ABOVE;\n        this.x = x;\n        this.setXShift(10);\n        this.setYShift(shiftY);\n    }\n    setTempo(tempo) {\n        this.tempo = tempo;\n        return this;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const shiftX = stave.getModifierXShift(this.getPosition());\n        const ctx = stave.checkContext();\n        this.setRendered();\n        const { name, duration, dots, bpm, duration2, dots2, parenthesis } = this.tempo;\n        let x = this.x + shiftX;\n        const y = stave.getYForTopText(1);\n        const el = new Element('StaveTempo.glyph');\n        const elText = new Element('StaveTempo');\n        if (name) {\n            this.text = name;\n            this.fontInfo = Metrics.getFontInfo('StaveTempo.name');\n            this.renderText(ctx, shiftX, y);\n            x += this.getWidth() + 3;\n        }\n        if ((name && duration) || parenthesis) {\n            elText.setText('(');\n            elText.renderText(ctx, x + this.xShift, y + this.yShift);\n            x += elText.getWidth() + 3;\n        }\n        if (duration) {\n            el.setText(this.durationToCode[duration]);\n            el.renderText(ctx, x + this.xShift, y + this.yShift);\n            x += el.getWidth() + 3;\n            if (dots) {\n                el.setText(Glyphs.metAugmentationDot);\n                for (let i = 0; i < dots; i++) {\n                    el.renderText(ctx, x + this.xShift, y + 2 + this.yShift);\n                    x += el.getWidth() + 3;\n                }\n            }\n            elText.setText('=');\n            elText.renderText(ctx, x + this.xShift, y + this.yShift);\n            x += elText.getWidth() + 3;\n            if (duration2) {\n                el.setText(this.durationToCode[duration2]);\n                el.renderText(ctx, x + this.xShift, y + this.yShift);\n                x += el.getWidth() + 3;\n                if (dots2) {\n                    el.setText(Glyphs.metAugmentationDot);\n                    for (let i = 0; i < dots2; i++) {\n                        el.renderText(ctx, x + this.xShift, y + 2 + this.yShift);\n                        x += el.getWidth() + 3;\n                    }\n                }\n            }\n            else if (bpm) {\n                elText.setText('' + bpm);\n                elText.renderText(ctx, x + this.xShift, y + this.yShift);\n                x += elText.getWidth() + 3;\n            }\n            if (name || parenthesis) {\n                elText.setText(')');\n                elText.renderText(ctx, x + this.xShift, y + this.yShift);\n            }\n        }\n    }\n}\n","import { StaveModifier, StaveModifierPosition } from './stavemodifier.js';\nimport { TextJustification, TextNote } from './textnote.js';\nimport { RuntimeError } from './util.js';\nexport class StaveText extends StaveModifier {\n    static get CATEGORY() {\n        return \"StaveText\";\n    }\n    constructor(text, position, options = {}) {\n        var _a, _b, _c;\n        super();\n        this.setText(text);\n        this.setXShift((_a = options.shiftX) !== null && _a !== void 0 ? _a : 0);\n        this.setYShift((_b = options.shiftY) !== null && _b !== void 0 ? _b : 0);\n        this.position = position;\n        this.justification = (_c = options.justification) !== null && _c !== void 0 ? _c : TextNote.Justification.CENTER;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        let x;\n        let y;\n        switch (this.position) {\n            case StaveModifierPosition.LEFT:\n            case StaveModifierPosition.RIGHT:\n                y = (stave.getYForLine(0) + stave.getBottomLineY()) / 2;\n                if (this.position === StaveModifierPosition.LEFT) {\n                    x = stave.getX() - this.width - 24;\n                }\n                else {\n                    x = stave.getX() + stave.getWidth() + 24;\n                }\n                break;\n            case StaveModifierPosition.ABOVE:\n            case StaveModifierPosition.BELOW:\n                x = stave.getX();\n                if (this.justification === TextJustification.CENTER) {\n                    x += stave.getWidth() / 2 - this.width / 2;\n                }\n                else if (this.justification === TextJustification.RIGHT) {\n                    x += stave.getWidth() - this.width;\n                }\n                if (this.position === StaveModifierPosition.ABOVE) {\n                    y = stave.getYForTopText(2);\n                }\n                else {\n                    y = stave.getYForBottomText(2);\n                }\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', 'Value Must be in Modifier.Position.');\n        }\n        this.renderText(ctx, x, y + 4);\n    }\n}\n","import { Element } from './element.js';\nimport { Glyphs } from './glyphs.js';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier.js';\nimport { RuntimeError } from './util.js';\nconst assertIsValidTimeSig = (timeSpec) => {\n    const numbers = timeSpec.split('/');\n    numbers.forEach((number) => {\n        if (/^[0-9+\\-()]+$/.test(number) === false) {\n            throw new RuntimeError('BadTimeSignature', `Invalid time spec: ${timeSpec}. Must contain valid signatures.`);\n        }\n    });\n};\nexport class TimeSignature extends StaveModifier {\n    static get CATEGORY() {\n        return \"TimeSignature\";\n    }\n    constructor(timeSpec = '4/4', customPadding = 15, validateArgs = true) {\n        super();\n        this.timeSpec = '4/4';\n        this.line = 0;\n        this.isNumeric = true;\n        this.topStartX = 0;\n        this.botStartX = 0;\n        this.lineShift = 0;\n        this.topText = new Element();\n        this.botText = new Element();\n        this.validateArgs = validateArgs;\n        const padding = customPadding;\n        this.topLine = 1;\n        this.bottomLine = 3;\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.setTimeSig(timeSpec);\n        this.setPadding(padding);\n    }\n    static getTimeSigCode(key, smallSig = false) {\n        let code = Glyphs.null;\n        switch (key) {\n            case 'C':\n                code = Glyphs.timeSigCommon;\n                break;\n            case 'C|':\n                code = Glyphs.timeSigCutCommon;\n                break;\n            case '+':\n                code = smallSig ? Glyphs.timeSigPlusSmall : Glyphs.timeSigPlus;\n                break;\n            case '-':\n                code = Glyphs.timeSigMinus;\n                break;\n            case '(':\n                code = smallSig ? Glyphs.timeSigParensLeftSmall : Glyphs.timeSigParensLeft;\n                break;\n            case ')':\n                code = smallSig ? Glyphs.timeSigParensRightSmall : Glyphs.timeSigParensRight;\n                break;\n            default:\n                code = String.fromCodePoint(0xe080 + Number(key[0]));\n                break;\n        }\n        return code;\n    }\n    makeTimeSignatureGlyph(topDigits, botDigits) {\n        let txt = '';\n        let topWidth = 0;\n        let height = 0;\n        for (let i = 0; i < topDigits.length; ++i) {\n            const code = TimeSignature.getTimeSigCode(topDigits[i], botDigits.length > 0);\n            txt += code;\n        }\n        this.topText.setText(txt);\n        topWidth = this.topText.getWidth();\n        height = this.topText.getHeight();\n        let botWidth = 0;\n        txt = '';\n        for (let i = 0; i < botDigits.length; ++i) {\n            const code = TimeSignature.getTimeSigCode(botDigits[i], true);\n            txt += code;\n        }\n        this.botText.setText(txt);\n        botWidth = this.botText.getWidth();\n        height = Math.max(height, this.botText.getHeight());\n        this.lineShift = height > 30 ? 0.5 : 0;\n        this.width = Math.max(topWidth, botWidth);\n        this.topStartX = (this.width - topWidth) / 2.0;\n        this.botStartX = (this.width - botWidth) / 2.0;\n    }\n    setTimeSig(timeSpec) {\n        var _a, _b;\n        this.timeSpec = timeSpec;\n        if (timeSpec === 'C' || timeSpec === 'C|') {\n            const code = TimeSignature.getTimeSigCode(timeSpec);\n            this.line = 2;\n            this.text = code;\n            this.isNumeric = false;\n        }\n        else {\n            if (this.validateArgs) {\n                assertIsValidTimeSig(timeSpec);\n            }\n            const parts = timeSpec.split('/');\n            this.line = 0;\n            this.isNumeric = true;\n            this.makeTimeSignatureGlyph((_a = parts[0]) !== null && _a !== void 0 ? _a : '', (_b = parts[1]) !== null && _b !== void 0 ? _b : '');\n        }\n        return this;\n    }\n    getTimeSpec() {\n        return this.timeSpec;\n    }\n    getLine() {\n        return this.line;\n    }\n    setLine(line) {\n        this.line = line;\n    }\n    getIsNumeric() {\n        return this.isNumeric;\n    }\n    setIsNumeric(isNumeric) {\n        this.isNumeric = isNumeric;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.openGroup('timesignature', this.getAttribute('id'));\n        this.drawAt(ctx, stave, this.x);\n        ctx.closeGroup();\n    }\n    drawAt(ctx, stave, x) {\n        this.setRendered();\n        if (this.isNumeric) {\n            let startX = x + this.topStartX;\n            let y = 0;\n            if (this.botText.getText().length > 0)\n                y = stave.getYForLine(this.topLine - this.lineShift);\n            else\n                y = (stave.getYForLine(this.topLine) + stave.getYForLine(this.bottomLine)) / 2;\n            this.topText.renderText(ctx, startX, y);\n            startX = x + this.botStartX;\n            y = stave.getYForLine(this.bottomLine + this.lineShift);\n            this.botText.renderText(ctx, startX, y);\n        }\n        else {\n            this.renderText(ctx, x - this.x, stave.getYForLine(this.line));\n        }\n    }\n}\n","import { BoundingBox } from './boundingbox.js';\nimport { Clef } from './clef.js';\nimport { Element } from './element.js';\nimport { KeySignature } from './keysignature.js';\nimport { Metrics } from './metrics.js';\nimport { Barline, BarlineType } from './stavebarline.js';\nimport { StaveModifierPosition } from './stavemodifier.js';\nimport { Repetition } from './staverepetition.js';\nimport { StaveSection } from './stavesection.js';\nimport { StaveTempo } from './stavetempo.js';\nimport { StaveText } from './stavetext.js';\nimport { Volta } from './stavevolta.js';\nimport { Tables } from './tables.js';\nimport { TimeSignature } from './timesignature.js';\nimport { isBarline } from './typeguard.js';\nimport { RuntimeError } from './util.js';\nconst SORT_ORDER_BEG_MODIFIERS = {\n    [Barline.CATEGORY]: 0,\n    [Clef.CATEGORY]: 1,\n    [KeySignature.CATEGORY]: 2,\n    [TimeSignature.CATEGORY]: 3,\n};\nconst SORT_ORDER_END_MODIFIERS = {\n    [TimeSignature.CATEGORY]: 0,\n    [KeySignature.CATEGORY]: 1,\n    [Barline.CATEGORY]: 2,\n    [Clef.CATEGORY]: 3,\n};\nexport class Stave extends Element {\n    static get CATEGORY() {\n        return \"Stave\";\n    }\n    static get defaultPadding() {\n        return Metrics.get('Stave.padding') + Metrics.get('Stave.endPaddingMax');\n    }\n    static get rightPadding() {\n        return Metrics.get('Stave.endPaddingMax');\n    }\n    constructor(x, y, width, options) {\n        super();\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.formatted = false;\n        this.startX = x + 5;\n        this.endX = x + width;\n        this.modifiers = [];\n        this.measure = 0;\n        this.clef = 'treble';\n        this.endClef = undefined;\n        this.options = Object.assign({ verticalBarWidth: 10, numLines: 5, leftBar: true, rightBar: true, spacingBetweenLinesPx: Tables.STAVE_LINE_DISTANCE, spaceAboveStaffLn: 4, spaceBelowStaffLn: 4, topTextPosition: 1, bottomTextPosition: 4, lineConfig: [] }, options);\n        this.bounds = { x: this.x, y: this.y, w: this.width, h: 0 };\n        this.defaultLedgerLineStyle = { strokeStyle: '#444', lineWidth: 2 };\n        this.resetLines();\n        this.addModifier(new Barline(this.options.leftBar ? BarlineType.SINGLE : BarlineType.NONE));\n        this.addEndModifier(new Barline(this.options.rightBar ? BarlineType.SINGLE : BarlineType.NONE));\n    }\n    setDefaultLedgerLineStyle(style) {\n        this.defaultLedgerLineStyle = style;\n    }\n    getDefaultLedgerLineStyle() {\n        return Object.assign(Object.assign({}, this.getStyle()), this.defaultLedgerLineStyle);\n    }\n    space(spacing) {\n        return this.options.spacingBetweenLinesPx * spacing;\n    }\n    resetLines() {\n        this.options.lineConfig = [];\n        for (let i = 0; i < this.options.numLines; i++) {\n            this.options.lineConfig.push({ visible: true });\n        }\n        this.height = (this.options.numLines + this.options.spaceAboveStaffLn) * this.options.spacingBetweenLinesPx;\n        this.options.bottomTextPosition = this.options.numLines;\n    }\n    setNoteStartX(x) {\n        if (!this.formatted)\n            this.format();\n        this.startX = x;\n        return this;\n    }\n    getNoteStartX() {\n        if (!this.formatted)\n            this.format();\n        return this.startX;\n    }\n    getNoteEndX() {\n        if (!this.formatted)\n            this.format();\n        return this.endX;\n    }\n    getTieStartX() {\n        return this.startX;\n    }\n    getTieEndX() {\n        return this.endX;\n    }\n    getNumLines() {\n        return this.options.numLines;\n    }\n    setNumLines(n) {\n        this.options.numLines = n;\n        this.resetLines();\n        return this;\n    }\n    getTopLineTopY() {\n        return this.getYForLine(0);\n    }\n    getBottomLineBottomY() {\n        var _a;\n        return this.getYForLine(this.getNumLines() - 1) + ((_a = this.getStyle().lineWidth) !== null && _a !== void 0 ? _a : 1);\n    }\n    setX(x) {\n        const shift = x - this.x;\n        this.formatted = false;\n        this.x = x;\n        this.startX += shift;\n        this.endX += shift;\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const mod = this.modifiers[i];\n            mod.setX(mod.getX() + shift);\n        }\n        return this;\n    }\n    setWidth(width) {\n        this.formatted = false;\n        this.width = width;\n        this.endX = this.x + width;\n        return this;\n    }\n    setMeasure(measure) {\n        this.measure = measure;\n        return this;\n    }\n    getMeasure() {\n        return this.measure;\n    }\n    getModifierXShift(index = 0) {\n        if (typeof index !== 'number') {\n            throw new RuntimeError('InvalidIndex', 'Must be of number type');\n        }\n        if (!this.formatted)\n            this.format();\n        if (this.getModifiers(StaveModifierPosition.BEGIN).length === 1) {\n            return 0;\n        }\n        if (this.modifiers[index].getPosition() === StaveModifierPosition.RIGHT) {\n            return 0;\n        }\n        let startX = this.startX - this.x;\n        const begBarline = this.modifiers[0];\n        if (begBarline.getType() === BarlineType.REPEAT_BEGIN && startX > begBarline.getWidth()) {\n            startX -= begBarline.getWidth();\n        }\n        return startX;\n    }\n    setRepetitionType(type, yShift = 0) {\n        this.modifiers.push(new Repetition(type, this.x, yShift));\n        return this;\n    }\n    setVoltaType(type, label, y) {\n        this.modifiers.push(new Volta(type, label, this.x, y));\n        return this;\n    }\n    setSection(section, y, xOffset = 0, fontSize, drawRect = true) {\n        const staveSection = new StaveSection(section).setYShift(y).setXShift(xOffset).setDrawRect(drawRect);\n        if (fontSize) {\n            staveSection.setFontSize(fontSize);\n        }\n        this.addModifier(staveSection);\n        return this;\n    }\n    setTempo(tempo, y) {\n        this.modifiers.push(new StaveTempo(tempo, this.x, y));\n        return this;\n    }\n    setStaveText(text, position, options = {}) {\n        this.modifiers.push(new StaveText(text, position, options));\n        return this;\n    }\n    getSpacingBetweenLines() {\n        return this.options.spacingBetweenLinesPx;\n    }\n    getBoundingBox() {\n        return new BoundingBox(this.x, this.y, this.width, this.getBottomY() - this.y);\n    }\n    getBottomY() {\n        const options = this.options;\n        const spacing = options.spacingBetweenLinesPx;\n        const scoreBottom = this.getYForLine(options.numLines) + options.spaceBelowStaffLn * spacing;\n        return scoreBottom;\n    }\n    getBottomLineY() {\n        return this.getYForLine(this.options.numLines);\n    }\n    getYForLine(line) {\n        const options = this.options;\n        const spacing = options.spacingBetweenLinesPx;\n        const headroom = options.spaceAboveStaffLn;\n        const y = this.y + line * spacing + headroom * spacing;\n        return y;\n    }\n    getLineForY(y) {\n        const options = this.options;\n        const spacing = options.spacingBetweenLinesPx;\n        const headroom = options.spaceAboveStaffLn;\n        return (y - this.y) / spacing - headroom;\n    }\n    getYForTopText(line = 0) {\n        return this.getYForLine(-line - this.options.topTextPosition);\n    }\n    getYForBottomText(line = 0) {\n        return this.getYForLine(this.options.bottomTextPosition + line);\n    }\n    getYForNote(line) {\n        const options = this.options;\n        const spacing = options.spacingBetweenLinesPx;\n        const headroom = options.spaceAboveStaffLn;\n        return this.y + headroom * spacing + 5 * spacing - line * spacing;\n    }\n    getYForGlyphs() {\n        return this.getYForLine(3);\n    }\n    addModifier(modifier, position) {\n        if (position !== undefined) {\n            modifier.setPosition(position);\n        }\n        modifier.setStave(this);\n        this.formatted = false;\n        this.modifiers.push(modifier);\n        return this;\n    }\n    addEndModifier(modifier) {\n        this.addModifier(modifier, StaveModifierPosition.END);\n        return this;\n    }\n    setBegBarType(type) {\n        const { SINGLE, REPEAT_BEGIN, NONE } = BarlineType;\n        if (type === SINGLE || type === REPEAT_BEGIN || type === NONE) {\n            this.modifiers[0].setType(type);\n            this.formatted = false;\n        }\n        return this;\n    }\n    setEndBarType(type) {\n        if (type !== BarlineType.REPEAT_BEGIN) {\n            this.modifiers[1].setType(type);\n            this.formatted = false;\n        }\n        return this;\n    }\n    setClef(clefSpec, size, annotation, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        if (position === StaveModifierPosition.END) {\n            this.endClef = clefSpec;\n        }\n        else {\n            this.clef = clefSpec;\n        }\n        const clefs = this.getModifiers(position, Clef.CATEGORY);\n        if (clefs.length === 0) {\n            this.addClef(clefSpec, size, annotation, position);\n        }\n        else {\n            clefs[0].setType(clefSpec, size, annotation);\n        }\n        return this;\n    }\n    getClef() {\n        return this.clef;\n    }\n    setEndClef(clefSpec, size, annotation) {\n        this.setClef(clefSpec, size, annotation, StaveModifierPosition.END);\n        return this;\n    }\n    getEndClef() {\n        return this.endClef;\n    }\n    setKeySignature(keySpec, cancelKeySpec, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        const keySignatures = this.getModifiers(position, KeySignature.CATEGORY);\n        if (keySignatures.length === 0) {\n            this.addKeySignature(keySpec, cancelKeySpec, position);\n        }\n        else {\n            keySignatures[0].setKeySig(keySpec, cancelKeySpec);\n        }\n        return this;\n    }\n    setEndKeySignature(keySpec, cancelKeySpec) {\n        this.setKeySignature(keySpec, cancelKeySpec, StaveModifierPosition.END);\n        return this;\n    }\n    setTimeSignature(timeSpec, customPadding, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        const timeSignatures = this.getModifiers(position, TimeSignature.CATEGORY);\n        if (timeSignatures.length === 0) {\n            this.addTimeSignature(timeSpec, customPadding, position);\n        }\n        else {\n            timeSignatures[0].setTimeSig(timeSpec);\n        }\n        return this;\n    }\n    setEndTimeSignature(timeSpec, customPadding) {\n        this.setTimeSignature(timeSpec, customPadding, StaveModifierPosition.END);\n        return this;\n    }\n    addKeySignature(keySpec, cancelKeySpec, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        this.addModifier(new KeySignature(keySpec, cancelKeySpec).setPosition(position), position);\n        return this;\n    }\n    addClef(clef, size, annotation, position) {\n        if (position === undefined || position === StaveModifierPosition.BEGIN) {\n            this.clef = clef;\n        }\n        else if (position === StaveModifierPosition.END) {\n            this.endClef = clef;\n        }\n        this.addModifier(new Clef(clef, size, annotation), position);\n        return this;\n    }\n    addEndClef(clef, size, annotation) {\n        this.addClef(clef, size, annotation, StaveModifierPosition.END);\n        return this;\n    }\n    addTimeSignature(timeSpec, customPadding, position) {\n        this.addModifier(new TimeSignature(timeSpec, customPadding), position);\n        return this;\n    }\n    addEndTimeSignature(timeSpec, customPadding) {\n        this.addTimeSignature(timeSpec, customPadding, StaveModifierPosition.END);\n        return this;\n    }\n    addTrebleGlyph() {\n        this.addClef('treble');\n        return this;\n    }\n    getModifiers(position, category) {\n        const noPosition = position === undefined;\n        const noCategory = category === undefined;\n        if (noPosition && noCategory) {\n            return this.modifiers;\n        }\n        else if (noPosition) {\n            return this.modifiers.filter((m) => category === m.getCategory());\n        }\n        else if (noCategory) {\n            return this.modifiers.filter((m) => position === m.getPosition());\n        }\n        else {\n            return this.modifiers.filter((m) => position === m.getPosition() && category === m.getCategory());\n        }\n    }\n    sortByCategory(items, order) {\n        for (let i = items.length - 1; i >= 0; i--) {\n            for (let j = 0; j < i; j++) {\n                if (order[items[j].getCategory()] > order[items[j + 1].getCategory()]) {\n                    const temp = items[j];\n                    items[j] = items[j + 1];\n                    items[j + 1] = temp;\n                }\n            }\n        }\n    }\n    format() {\n        var _a, _b, _c, _d;\n        const begBarline = this.modifiers[0];\n        const endBarline = this.modifiers[1];\n        const begModifiers = this.getModifiers(StaveModifierPosition.BEGIN);\n        const endModifiers = this.getModifiers(StaveModifierPosition.END);\n        this.sortByCategory(begModifiers, SORT_ORDER_BEG_MODIFIERS);\n        this.sortByCategory(endModifiers, SORT_ORDER_END_MODIFIERS);\n        if (begModifiers.length > 1 && begBarline.getType() === BarlineType.REPEAT_BEGIN) {\n            begModifiers.push(begModifiers.splice(0, 1)[0]);\n            begModifiers.splice(0, 0, new Barline(BarlineType.SINGLE));\n        }\n        if (endModifiers.indexOf(endBarline) > 0) {\n            endModifiers.splice(0, 0, new Barline(BarlineType.NONE));\n        }\n        let width;\n        let padding;\n        let modifier;\n        let offset = 0;\n        let x = this.x;\n        for (let i = 0; i < begModifiers.length; i++) {\n            modifier = begModifiers[i];\n            padding = modifier.getPadding(i + offset);\n            width = modifier.getWidth();\n            x += padding;\n            modifier.setX(x);\n            x += width;\n            if (padding + width === 0)\n                offset--;\n        }\n        this.startX = x;\n        x = this.x + this.width;\n        const widths = {\n            left: 0,\n            right: 0,\n            paddingRight: 0,\n            paddingLeft: 0,\n        };\n        let lastBarlineIdx = 0;\n        for (let i = 0; i < endModifiers.length; i++) {\n            modifier = endModifiers[i];\n            lastBarlineIdx = isBarline(modifier) ? i : lastBarlineIdx;\n            widths.right = 0;\n            widths.left = 0;\n            widths.paddingRight = 0;\n            widths.paddingLeft = 0;\n            const layoutMetrics = modifier.getLayoutMetrics();\n            if (layoutMetrics) {\n                if (i !== 0) {\n                    widths.right = (_a = layoutMetrics.xMax) !== null && _a !== void 0 ? _a : 0;\n                    widths.paddingRight = (_b = layoutMetrics.paddingRight) !== null && _b !== void 0 ? _b : 0;\n                }\n                widths.left = -((_c = layoutMetrics.xMin) !== null && _c !== void 0 ? _c : 0);\n                widths.paddingLeft = (_d = layoutMetrics.paddingLeft) !== null && _d !== void 0 ? _d : 0;\n                if (i === endModifiers.length - 1) {\n                    widths.paddingLeft = 0;\n                }\n            }\n            else {\n                widths.paddingRight = modifier.getPadding(i - lastBarlineIdx);\n                if (i !== 0) {\n                    widths.right = modifier.getWidth();\n                }\n                if (i === 0) {\n                    widths.left = modifier.getWidth();\n                }\n            }\n            x -= widths.paddingRight;\n            x -= widths.right;\n            modifier.setX(x);\n            x -= widths.left;\n            x -= widths.paddingLeft;\n        }\n        this.endX = endModifiers.length === 1 ? this.x + this.width : x;\n        this.formatted = true;\n    }\n    draw() {\n        var _a;\n        const ctx = this.checkContext();\n        this.setRendered();\n        ctx.openGroup('stave', this.getAttribute('id'));\n        if (!this.formatted)\n            this.format();\n        const numLines = this.options.numLines;\n        const width = this.width;\n        const x = this.x;\n        let y;\n        const lineWidth = (_a = this.getStyle().lineWidth) !== null && _a !== void 0 ? _a : 1;\n        const lineWidthCorrection = lineWidth % 2 === 0 ? 0 : 0.5;\n        for (let line = 0; line < numLines; line++) {\n            y = this.getYForLine(line);\n            if (this.options.lineConfig[line].visible) {\n                ctx.beginPath();\n                ctx.moveTo(x, y + lineWidthCorrection);\n                ctx.lineTo(x + width, y + lineWidthCorrection);\n                ctx.stroke();\n            }\n        }\n        ctx.closeGroup();\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            modifier.setContext(ctx);\n            modifier.setStave(this);\n            modifier.drawWithStyle();\n        }\n        if (this.measure > 0) {\n            ctx.setFont(this.fontInfo);\n            const textWidth = ctx.measureText('' + this.measure).width;\n            y = this.getYForTopText(0) + 3;\n            ctx.fillText('' + this.measure, this.x - textWidth / 2, y);\n        }\n    }\n    getVerticalBarWidth() {\n        return this.options.verticalBarWidth;\n    }\n    getConfigForLines() {\n        return this.options.lineConfig;\n    }\n    setConfigForLine(lineNumber, lineConfig) {\n        if (lineNumber >= this.options.numLines || lineNumber < 0) {\n            throw new RuntimeError('StaveConfigError', 'The line number must be within the range of the number of lines in the Stave.');\n        }\n        if (lineConfig.visible === undefined) {\n            throw new RuntimeError('StaveConfigError', \"The line configuration object is missing the 'visible' property.\");\n        }\n        if (typeof lineConfig.visible !== 'boolean') {\n            throw new RuntimeError('StaveConfigError', \"The line configuration objects 'visible' property must be true or false.\");\n        }\n        this.options.lineConfig[lineNumber] = lineConfig;\n        return this;\n    }\n    setConfigForLines(linesConfiguration) {\n        if (linesConfiguration.length !== this.options.numLines) {\n            throw new RuntimeError('StaveConfigError', 'The length of the lines configuration array must match the number of lines in the Stave');\n        }\n        for (const lineConfig in linesConfiguration) {\n            if (linesConfiguration[lineConfig].visible === undefined) {\n                linesConfiguration[lineConfig] = this.options.lineConfig[lineConfig];\n            }\n            this.options.lineConfig[lineConfig] = Object.assign(Object.assign({}, this.options.lineConfig[lineConfig]), linesConfiguration[lineConfig]);\n        }\n        this.options.lineConfig = linesConfiguration;\n        return this;\n    }\n    static formatBegModifiers(staves) {\n        const adjustCategoryStartX = (category) => {\n            let minStartX = 0;\n            staves.forEach((stave) => {\n                const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, category);\n                if (modifiers.length > 0 && modifiers[0].getX() > minStartX)\n                    minStartX = modifiers[0].getX();\n            });\n            let adjustX = 0;\n            staves.forEach((stave) => {\n                adjustX = 0;\n                const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, category);\n                modifiers.forEach((modifier) => {\n                    if (minStartX - modifier.getX() > adjustX)\n                        adjustX = minStartX - modifier.getX();\n                });\n                const allModifiers = stave.getModifiers(StaveModifierPosition.BEGIN);\n                let bAdjust = false;\n                allModifiers.forEach((modifier) => {\n                    if (modifier.getCategory() === category)\n                        bAdjust = true;\n                    if (bAdjust && adjustX > 0)\n                        modifier.setX(modifier.getX() + adjustX);\n                });\n                stave.setNoteStartX(stave.getNoteStartX() + adjustX);\n            });\n        };\n        staves.forEach((stave) => {\n            if (!stave.formatted)\n                stave.format();\n        });\n        adjustCategoryStartX(\"Clef\");\n        adjustCategoryStartX(\"KeySignature\");\n        adjustCategoryStartX(\"TimeSignature\");\n        let maxX = 0;\n        staves.forEach((stave) => {\n            if (stave.getNoteStartX() > maxX)\n                maxX = stave.getNoteStartX();\n        });\n        staves.forEach((stave) => {\n            stave.setNoteStartX(maxX);\n        });\n        maxX = 0;\n        staves.forEach((stave) => {\n            const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, \"Barline\");\n            modifiers.forEach((modifier) => {\n                if (modifier.getType() === BarlineType.REPEAT_BEGIN)\n                    if (modifier.getX() > maxX)\n                        maxX = modifier.getX();\n            });\n        });\n        staves.forEach((stave) => {\n            const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, \"Barline\");\n            modifiers.forEach((modifier) => {\n                if (modifier.getType() === BarlineType.REPEAT_BEGIN)\n                    modifier.setX(maxX);\n            });\n        });\n    }\n}\n","import { Element } from './element.js';\nimport { Glyphs } from './glyphs.js';\nimport { Tables } from './tables.js';\nimport { RuntimeError } from './util.js';\nfunction drawBoldDoubleLine(ctx, type, topX, topY, botY) {\n    if (type !== StaveConnector.type.BOLD_DOUBLE_LEFT && type !== StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n        throw new RuntimeError('InvalidConnector', 'A REPEAT_BEGIN or REPEAT_END type must be provided.');\n    }\n    let xShift = 3;\n    let variableWidth = 3.5;\n    const thickLineOffset = 2;\n    if (type === StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n        xShift = -5;\n        variableWidth = 3;\n    }\n    ctx.fillRect(topX + xShift, topY, 1, botY - topY);\n    ctx.fillRect(topX - thickLineOffset, topY, variableWidth, botY - topY);\n}\nexport class StaveConnector extends Element {\n    static get CATEGORY() {\n        return \"StaveConnector\";\n    }\n    constructor(topStave, bottomStave) {\n        super();\n        this.thickness = Tables.STAVE_LINE_THICKNESS;\n        this.topStave = topStave;\n        this.bottomStave = bottomStave;\n        this.type = StaveConnector.type.DOUBLE;\n        this.xShift = 0;\n        this.texts = [];\n    }\n    setType(type) {\n        const newType = typeof type === 'string' ? StaveConnector.typeString[type] : type;\n        if (Object.values(StaveConnector.type).includes(newType)) {\n            this.type = newType;\n        }\n        return this;\n    }\n    getType() {\n        return this.type;\n    }\n    setText(text, options = {}) {\n        var _a, _b;\n        const textElement = new Element('StaveConnector.text');\n        textElement.setText(text);\n        textElement.setXShift((_a = options.shiftX) !== null && _a !== void 0 ? _a : 0);\n        textElement.setYShift((_b = options.shiftY) !== null && _b !== void 0 ? _b : 0);\n        this.texts.push(textElement);\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        let topY = this.topStave.getYForLine(0);\n        let botY = this.bottomStave.getYForLine(this.bottomStave.getNumLines() - 1) + this.thickness;\n        let width = 3;\n        let topX = this.topStave.getX();\n        const isRightSidedConnector = this.type === StaveConnector.type.SINGLE_RIGHT ||\n            this.type === StaveConnector.type.BOLD_DOUBLE_RIGHT ||\n            this.type === StaveConnector.type.THIN_DOUBLE;\n        if (isRightSidedConnector) {\n            topX = this.topStave.getX() + this.topStave.getWidth();\n        }\n        let attachmentHeight = botY - topY;\n        const element = new Element();\n        switch (this.type) {\n            case StaveConnector.type.SINGLE:\n                width = 1;\n                break;\n            case StaveConnector.type.SINGLE_LEFT:\n                width = 1;\n                break;\n            case StaveConnector.type.SINGLE_RIGHT:\n                width = 1;\n                break;\n            case StaveConnector.type.DOUBLE:\n                topX -= 5;\n                topY -= this.thickness;\n                attachmentHeight += 0.5;\n                break;\n            case StaveConnector.type.BRACE: {\n                width = 12;\n                const x1 = this.topStave.getX() - 2 + this.xShift;\n                const y1 = topY;\n                const x3 = x1;\n                const y3 = botY;\n                const x2 = x1 - width;\n                const y2 = y1 + attachmentHeight / 2.0;\n                const cpx1 = x2 - 0.9 * width;\n                const cpy1 = y1 + 0.2 * attachmentHeight;\n                const cpx2 = x1 + 1.1 * width;\n                const cpy2 = y2 - 0.135 * attachmentHeight;\n                const cpx3 = cpx2;\n                const cpy3 = y2 + 0.135 * attachmentHeight;\n                const cpx4 = cpx1;\n                const cpy4 = y3 - 0.2 * attachmentHeight;\n                const cpx5 = x2 - width;\n                const cpy5 = cpy4;\n                const cpx6 = x1 + 0.4 * width;\n                const cpy6 = y2 + 0.135 * attachmentHeight;\n                const cpx7 = cpx6;\n                const cpy7 = y2 - 0.135 * attachmentHeight;\n                const cpx8 = cpx5;\n                const cpy8 = cpy1;\n                ctx.beginPath();\n                ctx.moveTo(x1, y1);\n                ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n                ctx.bezierCurveTo(cpx3, cpy3, cpx4, cpy4, x3, y3);\n                ctx.bezierCurveTo(cpx5, cpy5, cpx6, cpy6, x2, y2);\n                ctx.bezierCurveTo(cpx7, cpy7, cpx8, cpy8, x1, y1);\n                ctx.fill();\n                ctx.stroke();\n                break;\n            }\n            case StaveConnector.type.BRACKET:\n                topY -= 6;\n                botY += 6;\n                attachmentHeight = botY - topY;\n                element.setText(Glyphs.bracketTop);\n                element.renderText(ctx, topX - 5, topY);\n                element.setText(Glyphs.bracketBottom);\n                element.renderText(ctx, topX - 5, botY);\n                topX -= 5;\n                break;\n            case StaveConnector.type.BOLD_DOUBLE_LEFT:\n                drawBoldDoubleLine(ctx, this.type, topX + this.xShift, topY, botY - this.thickness);\n                break;\n            case StaveConnector.type.BOLD_DOUBLE_RIGHT:\n                drawBoldDoubleLine(ctx, this.type, topX, topY, botY - this.thickness);\n                break;\n            case StaveConnector.type.THIN_DOUBLE:\n                width = 1;\n                attachmentHeight -= this.thickness;\n                break;\n            case StaveConnector.type.NONE:\n                break;\n            default:\n                throw new RuntimeError('InvalidType', `The provided StaveConnector.type (${this.type}) is invalid.`);\n        }\n        if (this.type !== StaveConnector.type.BRACE &&\n            this.type !== StaveConnector.type.BOLD_DOUBLE_LEFT &&\n            this.type !== StaveConnector.type.BOLD_DOUBLE_RIGHT &&\n            this.type !== StaveConnector.type.NONE) {\n            ctx.fillRect(topX, topY, width, attachmentHeight);\n        }\n        if (this.type === StaveConnector.type.THIN_DOUBLE) {\n            ctx.fillRect(topX - 3, topY, width, attachmentHeight);\n        }\n        for (let i = 0; i < this.texts.length; i++) {\n            const textElement = this.texts[i];\n            const x = this.topStave.getX() - textElement.getWidth() - 24;\n            const y = (this.topStave.getYForLine(0) + this.bottomStave.getBottomLineY()) / 2;\n            textElement.renderText(ctx, x, y + 4);\n        }\n    }\n}\nStaveConnector.type = {\n    SINGLE_RIGHT: 0,\n    SINGLE_LEFT: 1,\n    SINGLE: 1,\n    DOUBLE: 2,\n    BRACE: 3,\n    BRACKET: 4,\n    BOLD_DOUBLE_LEFT: 5,\n    BOLD_DOUBLE_RIGHT: 6,\n    THIN_DOUBLE: 7,\n    NONE: 8,\n};\nStaveConnector.typeString = {\n    singleRight: StaveConnector.type.SINGLE_RIGHT,\n    singleLeft: StaveConnector.type.SINGLE_LEFT,\n    single: StaveConnector.type.SINGLE,\n    double: StaveConnector.type.DOUBLE,\n    brace: StaveConnector.type.BRACE,\n    bracket: StaveConnector.type.BRACKET,\n    boldDoubleLeft: StaveConnector.type.BOLD_DOUBLE_LEFT,\n    boldDoubleRight: StaveConnector.type.BOLD_DOUBLE_RIGHT,\n    thinDouble: StaveConnector.type.THIN_DOUBLE,\n    none: StaveConnector.type.NONE,\n};\n","import { Beam } from './beam.js';\nimport { Fraction } from './fraction.js';\nimport { Metrics } from './metrics.js';\nimport { ModifierContext } from './modifiercontext.js';\nimport { Stave } from './stave.js';\nimport { StaveConnector } from './staveconnector.js';\nimport { Tables } from './tables.js';\nimport { TickContext } from './tickcontext.js';\nimport { isNote, isStaveNote } from './typeguard.js';\nimport { defined, log, midLine, RuntimeError, sumArray } from './util.js';\nimport { Voice } from './voice.js';\nfunction createContexts(voices, makeContext, addToContext) {\n    if (voices.length === 0)\n        return {\n            map: {},\n            array: [],\n            list: [],\n            resolutionMultiplier: 0,\n        };\n    const tickToContextMap = {};\n    const tickList = [];\n    const contexts = [];\n    const resolutionMultiplier = Formatter.getResolutionMultiplier(voices);\n    voices.forEach((voice, voiceIndex) => {\n        const ticksUsed = new Fraction(0, resolutionMultiplier);\n        voice.getTickables().forEach((tickable) => {\n            const integerTicks = ticksUsed.numerator;\n            if (!tickToContextMap[integerTicks]) {\n                const newContext = makeContext({ tickID: integerTicks });\n                contexts.push(newContext);\n                tickToContextMap[integerTicks] = newContext;\n                tickList.push(integerTicks);\n            }\n            addToContext(tickable, tickToContextMap[integerTicks], voiceIndex);\n            ticksUsed.add(tickable.getTicks());\n        });\n    });\n    return {\n        map: tickToContextMap,\n        array: contexts,\n        list: tickList.sort((a, b) => a - b),\n        resolutionMultiplier,\n    };\n}\nfunction L(...args) {\n    if (Formatter.DEBUG)\n        log('VexFlow.Formatter', args);\n}\nfunction getRestLineForNextNoteGroup(notes, currRestLine, currNoteIndex, compare) {\n    let nextRestLine = currRestLine;\n    for (let noteIndex = currNoteIndex + 1; noteIndex < notes.length; noteIndex++) {\n        const note = notes[noteIndex];\n        if (isNote(note) && !note.isRest() && !note.shouldIgnoreTicks()) {\n            nextRestLine = note.getLineForRest();\n            break;\n        }\n    }\n    if (compare && currRestLine !== nextRestLine) {\n        const top = Math.max(currRestLine, nextRestLine);\n        const bot = Math.min(currRestLine, nextRestLine);\n        nextRestLine = midLine(top, bot);\n    }\n    return nextRestLine;\n}\nexport class Formatter {\n    static SimpleFormat(notes, x = 0, { paddingBetween = 10 } = {}) {\n        notes.reduce((accumulator, note) => {\n            note.addToModifierContext(new ModifierContext());\n            const tickContext = new TickContext().addTickable(note).preFormat();\n            const metrics = tickContext.getMetrics();\n            tickContext.setX(accumulator + metrics.totalLeftPx);\n            return accumulator + tickContext.getWidth() + metrics.totalRightPx + paddingBetween;\n        }, x);\n    }\n    static plotDebugging(ctx, formatter, xPos, y1, y2, options) {\n        var _a, _b;\n        options = Object.assign({ stavePadding: Metrics.get('Stave.padding') }, options);\n        const x = xPos + options.stavePadding;\n        const contextGaps = formatter.contextGaps;\n        function stroke(x1, x2, color) {\n            ctx.beginPath();\n            ctx.setStrokeStyle(color);\n            ctx.setFillStyle(color);\n            ctx.setLineWidth(1);\n            ctx.fillRect(x1, y1, Math.max(x2 - x1, 0), y2 - y1);\n        }\n        ctx.save();\n        ctx.setFont(Metrics.get('fontFamily'), 8);\n        contextGaps.gaps.forEach((gap) => {\n            stroke(x + gap.x1, x + gap.x2, 'rgba(100,200,100,0.4)');\n            ctx.setFillStyle('green');\n            ctx.fillText(Math.round(gap.x2 - gap.x1).toString(), x + gap.x1, y2 + 12);\n        });\n        ctx.setFillStyle('red');\n        ctx.fillText(`Loss: ${((_a = formatter.totalCost) !== null && _a !== void 0 ? _a : 0).toFixed(2)} Shift: ${((_b = formatter.totalShift) !== null && _b !== void 0 ? _b : 0).toFixed(2)} Gap: ${contextGaps.total.toFixed(2)}`, x - 20, y2 + 27);\n        ctx.restore();\n    }\n    static FormatAndDraw(ctx, stave, notes, params) {\n        let options = {\n            autoBeam: false,\n            alignRests: false,\n        };\n        if (typeof params === 'object') {\n            options = Object.assign(Object.assign({}, options), params);\n        }\n        else if (typeof params === 'boolean') {\n            options.autoBeam = params;\n        }\n        const voice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(notes);\n        const beams = options.autoBeam ? Beam.applyAndGetBeams(voice) : [];\n        new Formatter()\n            .joinVoices([voice])\n            .formatToStave([voice], stave, { alignRests: options.alignRests, stave });\n        voice.setContext(ctx).setStave(stave).drawWithStyle();\n        beams.forEach((beam) => beam.setContext(ctx).drawWithStyle());\n        return voice.getBoundingBox();\n    }\n    static FormatAndDrawTab(ctx, tabstave, stave, tabnotes, notes, autoBeam, params) {\n        let opts = {\n            autoBeam,\n            alignRests: false,\n        };\n        if (typeof params === 'object') {\n            opts = Object.assign(Object.assign({}, opts), params);\n        }\n        else if (typeof params === 'boolean') {\n            opts.autoBeam = params;\n        }\n        const notevoice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(notes);\n        const tabvoice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(tabnotes);\n        const beams = opts.autoBeam ? Beam.applyAndGetBeams(notevoice) : [];\n        new Formatter()\n            .joinVoices([notevoice])\n            .joinVoices([tabvoice])\n            .formatToStave([notevoice, tabvoice], stave, { alignRests: opts.alignRests });\n        notevoice.draw(ctx, stave);\n        tabvoice.draw(ctx, tabstave);\n        beams.forEach((beam) => beam.setContext(ctx).drawWithStyle());\n        new StaveConnector(stave, tabstave).setContext(ctx).drawWithStyle();\n    }\n    static AlignRestsToNotes(tickables, alignAllNotes, alignTuplets) {\n        tickables.forEach((currTickable, index) => {\n            if (isStaveNote(currTickable) && currTickable.isRest()) {\n                if (currTickable.getTuplet() && !alignTuplets) {\n                    return;\n                }\n                const line = currTickable.getLineForRest();\n                if (line !== 3) {\n                    return;\n                }\n                if (alignAllNotes || currTickable.getBeam()) {\n                    const props = currTickable.getKeyProps()[0];\n                    if (index === 0) {\n                        props.line = getRestLineForNextNoteGroup(tickables, props.line, index, false);\n                    }\n                    else if (index > 0 && index < tickables.length) {\n                        const prevTickable = tickables[index - 1];\n                        if (isStaveNote(prevTickable)) {\n                            if (prevTickable.isRest()) {\n                                props.line = prevTickable.getKeyProps()[0].line;\n                            }\n                            else {\n                                const restLine = prevTickable.getLineForRest();\n                                props.line = getRestLineForNextNoteGroup(tickables, restLine, index, true);\n                            }\n                        }\n                    }\n                    currTickable.setKeyLine(0, props.line);\n                }\n            }\n        });\n    }\n    constructor(options) {\n        this.formatterOptions = Object.assign({ globalSoftmax: false, softmaxFactor: Tables.SOFTMAX_FACTOR, maxIterations: 5 }, options);\n        this.justifyWidth = 0;\n        this.totalCost = 0;\n        this.totalShift = 0;\n        this.durationStats = {};\n        this.minTotalWidth = 0;\n        this.hasMinTotalWidth = false;\n        this.tickContexts = {\n            map: {},\n            array: [],\n            list: [],\n            resolutionMultiplier: 0,\n        };\n        this.modifierContexts = [];\n        this.contextGaps = {\n            total: 0,\n            gaps: [],\n        };\n        this.voices = [];\n        this.lossHistory = [];\n    }\n    alignRests(voices, alignAllNotes) {\n        if (!voices || !voices.length) {\n            throw new RuntimeError('BadArgument', 'No voices to format rests');\n        }\n        voices.forEach((voice) => Formatter.AlignRestsToNotes(voice.getTickables(), alignAllNotes));\n    }\n    preCalculateMinTotalWidth(voices) {\n        const unalignedPadding = Metrics.get('Stave.unalignedNotePadding');\n        let unalignedCtxCount = 0;\n        let wsum = 0;\n        let dsum = 0;\n        const widths = [];\n        const durations = [];\n        if (this.hasMinTotalWidth)\n            return this.minTotalWidth;\n        if (!voices) {\n            throw new RuntimeError('BadArgument', \"'voices' required to run preCalculateMinTotalWidth\");\n        }\n        this.createTickContexts(voices);\n        const { list: contextList, map: contextMap } = this.tickContexts;\n        this.minTotalWidth = 0;\n        contextList.forEach((tick) => {\n            const context = contextMap[tick];\n            context.preFormat();\n            if (context.getTickables().length < voices.length) {\n                unalignedCtxCount += 1;\n            }\n            context.getTickables().forEach((t) => {\n                wsum += t.getMetrics().width;\n                dsum += t.getTicks().value();\n                widths.push(t.getMetrics().width);\n                durations.push(t.getTicks().value());\n            });\n            const width = context.getWidth();\n            this.minTotalWidth += width;\n        });\n        this.hasMinTotalWidth = true;\n        const wavg = wsum > 0 ? wsum / widths.length : 1 / widths.length;\n        const wvar = sumArray(widths.map((ll) => Math.pow(ll - wavg, 2)));\n        const wpads = Math.pow(wvar / widths.length, 0.5) / wavg;\n        const davg = dsum / durations.length;\n        const dvar = sumArray(durations.map((ll) => Math.pow(ll - davg, 2)));\n        const dpads = Math.pow(dvar / durations.length, 0.5) / davg;\n        const padmax = Math.max(dpads, wpads) * contextList.length * unalignedPadding;\n        const unalignedPad = unalignedPadding * unalignedCtxCount;\n        return this.minTotalWidth + Math.max(unalignedPad, padmax);\n    }\n    getMinTotalWidth() {\n        if (!this.hasMinTotalWidth) {\n            throw new RuntimeError('NoMinTotalWidth', \"Call 'preCalculateMinTotalWidth' or 'preFormat' before calling 'getMinTotalWidth'\");\n        }\n        return this.minTotalWidth;\n    }\n    static getResolutionMultiplier(voices) {\n        if (!voices || !voices.length) {\n            throw new RuntimeError('BadArgument', 'No voices to format');\n        }\n        const totalTicks = voices[0].getTotalTicks();\n        const resolutionMultiplier = voices.reduce((accumulator, voice) => {\n            if (!voice.getTotalTicks().equals(totalTicks)) {\n                throw new RuntimeError('TickMismatch', 'Voices should have same total note duration in ticks.');\n            }\n            if (voice.getMode() === Voice.Mode.STRICT && !voice.isComplete()) {\n                throw new RuntimeError('IncompleteVoice', 'Voice does not have enough notes.');\n            }\n            return Math.max(accumulator, Fraction.LCM(accumulator, voice.getResolutionMultiplier()));\n        }, 1);\n        return resolutionMultiplier;\n    }\n    createModifierContexts(voices) {\n        if (voices.length === 0)\n            return;\n        const resolutionMultiplier = Formatter.getResolutionMultiplier(voices);\n        const tickToContextMap = new Map();\n        const contexts = [];\n        voices.forEach((voice) => {\n            const ticksUsed = new Fraction(0, resolutionMultiplier);\n            voice.getTickables().forEach((tickable) => {\n                const integerTicks = ticksUsed.numerator;\n                let staveTickToContextMap = tickToContextMap.get(tickable.getStave());\n                if (!staveTickToContextMap) {\n                    tickToContextMap.set(tickable.getStave(), {});\n                    staveTickToContextMap = tickToContextMap.get(tickable.getStave());\n                }\n                if (!(staveTickToContextMap ? staveTickToContextMap[integerTicks] : undefined)) {\n                    const newContext = new ModifierContext();\n                    contexts.push(newContext);\n                    staveTickToContextMap[integerTicks] = newContext;\n                }\n                tickable.addToModifierContext(staveTickToContextMap[integerTicks]);\n                ticksUsed.add(tickable.getTicks());\n            });\n        });\n        this.modifierContexts.push({\n            map: tickToContextMap,\n            array: contexts,\n            resolutionMultiplier,\n        });\n    }\n    createTickContexts(voices) {\n        const fn = (tickable, context, voiceIndex) => context.addTickable(tickable, voiceIndex);\n        const contexts = createContexts(voices, (tick) => new TickContext(tick), fn);\n        this.tickContexts = contexts;\n        const contextArray = this.tickContexts.array;\n        contextArray.forEach((context) => {\n            context.tContexts = contextArray;\n        });\n        return contexts;\n    }\n    getTickContexts() {\n        return this.tickContexts;\n    }\n    preFormat(justifyWidth = 0, renderingContext, voicesParam, stave) {\n        const contexts = this.tickContexts;\n        if (!contexts) {\n            throw new RuntimeError('NoTickContexts', 'preFormat requires TickContexts');\n        }\n        const { list: contextList, map: contextMap } = contexts;\n        this.lossHistory = [];\n        if (voicesParam && stave) {\n            voicesParam.forEach((voice) => voice.setStave(stave).preFormat());\n        }\n        let x = 0;\n        let shift = 0;\n        this.minTotalWidth = 0;\n        let totalTicks = 0;\n        contextList.forEach((tick) => {\n            const context = contextMap[tick];\n            context.preFormat();\n            const width = context.getWidth();\n            this.minTotalWidth += width;\n            const maxTicks = context.getMaxTicks().value();\n            totalTicks += maxTicks;\n            const metrics = context.getMetrics();\n            x = x + shift + metrics.totalLeftPx;\n            context.setX(x);\n            shift = width - metrics.totalLeftPx;\n        });\n        const { globalSoftmax, softmaxFactor, maxIterations } = this.formatterOptions;\n        const exp = (tick) => Math.pow(softmaxFactor, (contextMap[tick].getMaxTicks().value() / totalTicks));\n        const expTicksUsed = sumArray(contextList.map(exp));\n        this.minTotalWidth = x + shift;\n        this.hasMinTotalWidth = true;\n        if (justifyWidth <= 0)\n            return this.evaluate();\n        const firstContext = contextMap[contextList[0]];\n        const lastContext = contextMap[contextList[contextList.length - 1]];\n        function calculateIdealDistances(adjustedJustifyWidth) {\n            const distances = contextList.map((tick, i) => {\n                const context = contextMap[tick];\n                const voices = context.getTickablesByVoice();\n                let backTickable;\n                if (i > 0) {\n                    const prevContext = contextMap[contextList[i - 1]];\n                    for (let j = i - 1; j >= 0; j--) {\n                        const backTick = contextMap[contextList[j]];\n                        const backVoices = backTick.getTickablesByVoice();\n                        const matchingVoices = [];\n                        Object.keys(voices).forEach((v) => {\n                            if (backVoices[v]) {\n                                matchingVoices.push(v);\n                            }\n                        });\n                        if (matchingVoices.length > 0) {\n                            let maxTicks = 0;\n                            let maxNegativeShiftPx = Infinity;\n                            let expectedDistance = 0;\n                            matchingVoices.forEach((v) => {\n                                const ticks = backVoices[v].getTicks().value();\n                                if (ticks > maxTicks) {\n                                    backTickable = backVoices[v];\n                                    maxTicks = ticks;\n                                }\n                                const thisTickable = voices[v];\n                                const insideLeftEdge = thisTickable.getX() -\n                                    (thisTickable.getMetrics().modLeftPx + thisTickable.getMetrics().leftDisplacedHeadPx);\n                                const backMetrics = backVoices[v].getMetrics();\n                                const insideRightEdge = backVoices[v].getX() + backMetrics.notePx + backMetrics.modRightPx + backMetrics.rightDisplacedHeadPx;\n                                maxNegativeShiftPx = Math.min(maxNegativeShiftPx, insideLeftEdge - insideRightEdge);\n                            });\n                            maxNegativeShiftPx = Math.min(maxNegativeShiftPx, context.getX() - (prevContext.getX() + adjustedJustifyWidth * 0.05));\n                            if (globalSoftmax) {\n                                const t = totalTicks;\n                                expectedDistance = (Math.pow(softmaxFactor, (maxTicks / t)) / expTicksUsed) * adjustedJustifyWidth;\n                            }\n                            else if (typeof backTickable !== 'undefined') {\n                                expectedDistance = backTickable.getVoice().softmax(maxTicks) * adjustedJustifyWidth;\n                            }\n                            return {\n                                expectedDistance,\n                                maxNegativeShiftPx,\n                                fromTickable: backTickable,\n                            };\n                        }\n                    }\n                }\n                return { expectedDistance: 0, fromTickablePx: 0, maxNegativeShiftPx: 0 };\n            });\n            return distances;\n        }\n        function shiftToIdealDistances(idealDistances) {\n            const centerX = adjustedJustifyWidth / 2;\n            let spaceAccum = 0;\n            contextList.forEach((tick, index) => {\n                const context = contextMap[tick];\n                if (index > 0) {\n                    const contextX = context.getX();\n                    const ideal = idealDistances[index];\n                    const errorPx = defined(ideal.fromTickable).getX() + ideal.expectedDistance - (contextX + spaceAccum);\n                    let negativeShiftPx = 0;\n                    if (errorPx > 0) {\n                        spaceAccum += errorPx;\n                    }\n                    else if (errorPx < 0) {\n                        negativeShiftPx = Math.min(ideal.maxNegativeShiftPx, Math.abs(errorPx));\n                        spaceAccum += -negativeShiftPx;\n                    }\n                    context.setX(contextX + spaceAccum);\n                }\n                context.getCenterAlignedTickables().forEach((tickable) => {\n                    tickable.setCenterXShift(centerX - context.getX());\n                });\n            });\n            return lastContext.getX() - firstContext.getX();\n        }\n        const adjustedJustifyWidth = justifyWidth -\n            lastContext.getMetrics().notePx -\n            lastContext.getMetrics().totalRightPx -\n            firstContext.getMetrics().totalLeftPx;\n        const configMinPadding = Metrics.get('Stave.endPaddingMin');\n        const configMaxPadding = Metrics.get('Stave.endPaddingMax');\n        const leftPadding = Metrics.get('Stave.padding');\n        let targetWidth = adjustedJustifyWidth;\n        const distances = calculateIdealDistances(targetWidth);\n        let actualWidth = shiftToIdealDistances(distances);\n        if (contextList.length === 1)\n            return 0;\n        const calcMinDistance = (targetWidth, distances) => {\n            let mdCalc = targetWidth / 2;\n            if (distances.length > 1) {\n                for (let di = 1; di < distances.length; ++di) {\n                    mdCalc = Math.min(distances[di].expectedDistance / 2, mdCalc);\n                }\n            }\n            return mdCalc;\n        };\n        const minDistance = calcMinDistance(targetWidth, distances);\n        const paddingMaxCalc = (curTargetWidth) => {\n            let lastTickablePadding = 0;\n            const lastTickable = lastContext && lastContext.getMaxTickable();\n            if (lastTickable) {\n                const voice = lastTickable.getVoice();\n                if (voice.getTicksUsed().value() > voice.getTotalTicks().value()) {\n                    return configMaxPadding * 2 < minDistance ? minDistance : configMaxPadding;\n                }\n                const tickWidth = lastTickable.getWidth();\n                lastTickablePadding =\n                    voice.softmax(lastContext.getMaxTicks().value()) * curTargetWidth - (tickWidth + leftPadding);\n            }\n            return configMaxPadding * 2 < lastTickablePadding ? lastTickablePadding : configMaxPadding;\n        };\n        let paddingMax = paddingMaxCalc(targetWidth);\n        let paddingMin = paddingMax - (configMaxPadding - configMinPadding);\n        const maxX = adjustedJustifyWidth - paddingMin;\n        let iterations = maxIterations;\n        while ((actualWidth > maxX && iterations > 0) || (actualWidth + paddingMax < maxX && iterations > 1)) {\n            targetWidth -= actualWidth - maxX;\n            paddingMax = paddingMaxCalc(targetWidth);\n            paddingMin = paddingMax - (configMaxPadding - configMinPadding);\n            actualWidth = shiftToIdealDistances(calculateIdealDistances(targetWidth));\n            iterations--;\n        }\n        this.justifyWidth = justifyWidth;\n        return this.evaluate();\n    }\n    evaluate() {\n        const contexts = this.tickContexts;\n        const justifyWidth = this.justifyWidth;\n        this.contextGaps = { total: 0, gaps: [] };\n        contexts.list.forEach((tick, index) => {\n            if (index === 0)\n                return;\n            const prevTick = contexts.list[index - 1];\n            const prevContext = contexts.map[prevTick];\n            const context = contexts.map[tick];\n            const prevMetrics = prevContext.getMetrics();\n            const currMetrics = context.getMetrics();\n            const insideRightEdge = prevContext.getX() + prevMetrics.notePx + prevMetrics.totalRightPx;\n            const insideLeftEdge = context.getX() - currMetrics.totalLeftPx;\n            const gap = insideLeftEdge - insideRightEdge;\n            this.contextGaps.total += gap;\n            this.contextGaps.gaps.push({ x1: insideRightEdge, x2: insideLeftEdge });\n            context.getFormatterMetrics().freedom.left = gap;\n            prevContext.getFormatterMetrics().freedom.right = gap;\n        });\n        this.durationStats = {};\n        const durationStats = this.durationStats;\n        function updateStats(duration, space) {\n            const stats = durationStats[duration];\n            if (stats === undefined) {\n                durationStats[duration] = { mean: space, count: 1, total: space };\n            }\n            else {\n                stats.count += 1;\n                stats.total += space;\n                stats.mean = stats.total / stats.count;\n            }\n        }\n        this.voices.forEach((voice) => {\n            voice.getTickables().forEach((note, i, notes) => {\n                const duration = note.getTicks().clone().simplify().toString();\n                const metrics = note.getMetrics();\n                const formatterMetrics = note.getFormatterMetrics();\n                const leftNoteEdge = note.getX() + metrics.notePx + metrics.modRightPx + metrics.rightDisplacedHeadPx;\n                let space = 0;\n                if (i < notes.length - 1) {\n                    const rightNote = notes[i + 1];\n                    const rightMetrics = rightNote.getMetrics();\n                    const rightNoteEdge = rightNote.getX() - rightMetrics.modLeftPx - rightMetrics.leftDisplacedHeadPx;\n                    space = rightNoteEdge - leftNoteEdge;\n                    formatterMetrics.space.used = rightNote.getX() - note.getX();\n                    rightNote.getFormatterMetrics().freedom.left = space;\n                }\n                else {\n                    space = justifyWidth - leftNoteEdge;\n                    formatterMetrics.space.used = justifyWidth - note.getX();\n                }\n                formatterMetrics.freedom.right = space;\n                updateStats(duration, formatterMetrics.space.used);\n            });\n        });\n        let totalDeviation = 0;\n        this.voices.forEach((voice) => {\n            voice.getTickables().forEach((note) => {\n                const duration = note.getTicks().clone().simplify().toString();\n                const metrics = note.getFormatterMetrics();\n                metrics.space.mean = durationStats[duration].mean;\n                metrics.duration = duration;\n                metrics.iterations += 1;\n                metrics.space.deviation = metrics.space.used - metrics.space.mean;\n                totalDeviation += Math.pow(metrics.space.deviation, 2);\n            });\n        });\n        this.totalCost = Math.sqrt(totalDeviation);\n        this.lossHistory.push(this.totalCost);\n        return this.totalCost;\n    }\n    tune(options) {\n        var _a;\n        const contexts = this.tickContexts;\n        if (!contexts) {\n            return 0;\n        }\n        const alpha = (_a = options === null || options === void 0 ? void 0 : options.alpha) !== null && _a !== void 0 ? _a : 0.5;\n        let shift = 0;\n        this.totalShift = 0;\n        contexts.list.forEach((tick, index, list) => {\n            const context = contexts.map[tick];\n            const prevContext = index > 0 ? contexts.map[list[index - 1]] : undefined;\n            const nextContext = index < list.length - 1 ? contexts.map[list[index + 1]] : undefined;\n            context.move(shift, prevContext, nextContext);\n            const cost = -context.getDeviationCost();\n            if (cost > 0) {\n                shift = -Math.min(context.getFormatterMetrics().freedom.right, Math.abs(cost));\n            }\n            else if (cost < 0) {\n                if (nextContext) {\n                    shift = Math.min(nextContext.getFormatterMetrics().freedom.right, Math.abs(cost));\n                }\n                else {\n                    shift = 0;\n                }\n            }\n            shift *= alpha;\n            this.totalShift += shift;\n        });\n        return this.evaluate();\n    }\n    postFormat() {\n        this.modifierContexts.forEach((modifierContexts) => {\n            modifierContexts.array.forEach((mc) => mc.postFormat());\n        });\n        this.tickContexts.list.forEach((tick) => {\n            this.tickContexts.map[tick].postFormat();\n        });\n        return this;\n    }\n    joinVoices(voices) {\n        this.createModifierContexts(voices);\n        this.hasMinTotalWidth = false;\n        return this;\n    }\n    format(voices, justifyWidth, options) {\n        const opts = Object.assign({ alignRests: false }, options);\n        this.voices = voices;\n        const softmaxFactor = this.formatterOptions.softmaxFactor;\n        if (softmaxFactor) {\n            this.voices.forEach((v) => v.setSoftmaxFactor(softmaxFactor));\n        }\n        this.alignRests(voices, opts.alignRests);\n        this.createTickContexts(voices);\n        this.preFormat(justifyWidth, opts.context, voices, opts.stave);\n        if (opts.stave)\n            this.postFormat();\n        return this;\n    }\n    formatToStave(voices, stave, optionsParam) {\n        const options = Object.assign({ context: stave.getContext() }, optionsParam);\n        const justifyWidth = stave.getNoteEndX() - stave.getNoteStartX() - Stave.defaultPadding;\n        L('Formatting voices to width: ', justifyWidth);\n        return this.format(voices, justifyWidth, options);\n    }\n    getTickContext(tick) {\n        var _a;\n        return (_a = this.tickContexts) === null || _a === void 0 ? void 0 : _a.map[tick];\n    }\n}\nFormatter.DEBUG = false;\n","import { StemmableNote } from './stemmablenote.js';\nimport { isAnnotation } from './typeguard.js';\nimport { RuntimeError } from './util.js';\nconst ERROR_MSG = 'Ghost note must have valid initialization data to identify duration.';\nexport class GhostNote extends StemmableNote {\n    static get CATEGORY() {\n        return \"GhostNote\";\n    }\n    constructor(parameter) {\n        if (!parameter) {\n            throw new RuntimeError('BadArguments', ERROR_MSG);\n        }\n        let noteStruct;\n        if (typeof parameter === 'string') {\n            noteStruct = { duration: parameter };\n        }\n        else if (typeof parameter === 'object') {\n            noteStruct = parameter;\n        }\n        else {\n            throw new RuntimeError('BadArguments', ERROR_MSG);\n        }\n        super(noteStruct);\n        this.setWidth(0);\n    }\n    isRest() {\n        return true;\n    }\n    setStave(stave) {\n        super.setStave(stave);\n        return this;\n    }\n    addToModifierContext(mc) {\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    draw() {\n        this.setRendered();\n        for (let i = 0; i < this.modifiers.length; ++i) {\n            const modifier = this.modifiers[i];\n            if (isAnnotation(modifier)) {\n                modifier.setContext(this.getContext());\n                modifier.drawWithStyle();\n            }\n        }\n    }\n}\n","import { Note } from './note.js';\nexport class GlyphNote extends Note {\n    static get CATEGORY() {\n        return \"GlyphNote\";\n    }\n    constructor(glyph, noteStruct, options) {\n        super(noteStruct);\n        this.options = Object.assign({ ignoreTicks: false, line: 2 }, options);\n        this.ignoreTicks = this.options.ignoreTicks;\n        this.setGlyph(glyph);\n    }\n    setGlyph(glyph) {\n        this.text = glyph;\n        return this;\n    }\n    preFormat() {\n        if (!this.preFormatted && this.modifierContext) {\n            this.modifierContext.preFormat();\n        }\n        this.preFormatted = true;\n        return this;\n    }\n    drawModifiers() {\n        const ctx = this.checkContext();\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            modifier.setContext(ctx);\n            modifier.drawWithStyle();\n        }\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.openGroup('glyphNote', this.getAttribute('id'));\n        this.x = this.isCenterAligned() ? this.getAbsoluteX() - this.getWidth() / 2 : this.getAbsoluteX();\n        this.y = stave.getYForLine(this.options.line);\n        this.renderText(ctx, 0, 0);\n        this.drawModifiers();\n        ctx.closeGroup();\n    }\n}\n","import { StaveNote } from './stavenote.js';\nimport { Stem } from './stem.js';\nimport { Tables } from './tables.js';\nimport { RuntimeError } from './util.js';\nexport class GraceNote extends StaveNote {\n    static get CATEGORY() {\n        return \"GraceNote\";\n    }\n    static get LEDGER_LINE_OFFSET() {\n        return 2;\n    }\n    constructor(noteStruct) {\n        super(Object.assign({ strokePx: GraceNote.LEDGER_LINE_OFFSET }, noteStruct));\n        this.slash = noteStruct.slash || false;\n        this.slur = true;\n        this.buildNoteHeads();\n        this.width = 3;\n    }\n    getStemExtension() {\n        if (this.stemExtensionOverride) {\n            return this.stemExtensionOverride;\n        }\n        let ret = super.getStemExtension();\n        ret = Stem.HEIGHT * this.getFontScale() - Stem.HEIGHT + ret;\n        return ret;\n    }\n    draw() {\n        super.draw();\n        this.setRendered();\n        const stem = this.stem;\n        if (this.slash && stem) {\n            const scale = this.getFontScale();\n            let slashBBox = undefined;\n            const beam = this.beam;\n            if (beam) {\n                if (!beam.postFormatted) {\n                    beam.postFormat();\n                }\n                slashBBox = this.calcBeamedNotesSlashBBox(8 * scale, 8 * scale, {\n                    stem: 6 * scale,\n                    beam: 5 * scale,\n                });\n            }\n            else {\n                const stemDirection = this.getStemDirection();\n                const noteHeadBounds = this.getNoteHeadBounds();\n                const noteHeadWidth = this.noteHeads[0].getWidth();\n                const x = stemDirection === Stem.DOWN ? this.getAbsoluteX() : this.getAbsoluteX() + noteHeadWidth;\n                const defaultOffsetY = (Tables.STEM_HEIGHT * scale) / 2;\n                const y = stemDirection === Stem.DOWN ? noteHeadBounds.yBottom + defaultOffsetY : noteHeadBounds.yTop - defaultOffsetY;\n                if (stemDirection === Stem.DOWN) {\n                    slashBBox = {\n                        x1: x - noteHeadWidth,\n                        y1: y - noteHeadWidth,\n                        x2: x + noteHeadWidth,\n                        y2: y + noteHeadWidth,\n                    };\n                }\n                else {\n                    slashBBox = {\n                        x1: x - noteHeadWidth,\n                        y1: y + noteHeadWidth,\n                        x2: x + noteHeadWidth,\n                        y2: y - noteHeadWidth,\n                    };\n                }\n            }\n            const ctx = this.checkContext();\n            ctx.setLineWidth(1 * scale);\n            ctx.beginPath();\n            ctx.moveTo(slashBBox.x1, slashBBox.y1);\n            ctx.lineTo(slashBBox.x2, slashBBox.y2);\n            ctx.closePath();\n            ctx.stroke();\n        }\n    }\n    calcBeamedNotesSlashBBox(slashStemOffset, slashBeamOffset, protrusions) {\n        const beam = this.beam;\n        if (!beam)\n            throw new RuntimeError('NoBeam', \"Can't calculate without a beam.\");\n        const beamSlope = beam.slope;\n        const isBeamEndNote = beam.notes[beam.notes.length - 1] === this;\n        const scaleX = isBeamEndNote ? -1 : 1;\n        const beamAngle = Math.atan(beamSlope * scaleX);\n        const iPointOnBeam = {\n            dx: Math.cos(beamAngle) * slashBeamOffset,\n            dy: Math.sin(beamAngle) * slashBeamOffset,\n        };\n        slashStemOffset *= this.getStemDirection();\n        const slashAngle = Math.atan((iPointOnBeam.dy - slashStemOffset) / iPointOnBeam.dx);\n        const protrusionStemDeltaX = Math.cos(slashAngle) * protrusions.stem * scaleX;\n        const protrusionStemDeltaY = Math.sin(slashAngle) * protrusions.stem;\n        const protrusionBeamDeltaX = Math.cos(slashAngle) * protrusions.beam * scaleX;\n        const protrusionBeamDeltaY = Math.sin(slashAngle) * protrusions.beam;\n        const stemX = this.getStemX();\n        const stem0X = beam.notes[0].getStemX();\n        const stemY = beam.getBeamYToDraw() + (stemX - stem0X) * beamSlope;\n        const ret = {\n            x1: stemX - protrusionStemDeltaX,\n            y1: stemY + slashStemOffset - protrusionStemDeltaY,\n            x2: stemX + iPointOnBeam.dx * scaleX + protrusionBeamDeltaX,\n            y2: stemY + iPointOnBeam.dy + protrusionBeamDeltaY,\n        };\n        return ret;\n    }\n}\n","import { KeySignature } from './keysignature.js';\nimport { Note } from './note.js';\nexport class KeySigNote extends Note {\n    static get CATEGORY() {\n        return \"KeySigNote\";\n    }\n    constructor(keySpec, cancelKeySpec, alterKeySpec) {\n        super({ duration: 'b' });\n        this.keySignature = new KeySignature(keySpec, cancelKeySpec, alterKeySpec);\n        this.ignoreTicks = true;\n    }\n    addToModifierContext(mc) {\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        this.keySignature.setStave(this.checkStave());\n        this.setWidth(this.keySignature.getWidth());\n        return this;\n    }\n    draw() {\n        const ctx = this.checkStave().checkContext();\n        this.setRendered();\n        this.keySignature.setX(this.getAbsoluteX());\n        this.keySignature.setContext(ctx);\n        this.keySignature.drawWithStyle();\n    }\n}\n","import { Element } from './element.js';\nimport { Glyphs } from './glyphs.js';\nimport { Metrics } from './metrics.js';\nimport { StaveModifierPosition } from './stavemodifier.js';\nimport { Tables } from './tables.js';\nimport { isBarline } from './typeguard.js';\nimport { defined, RuntimeError } from './util.js';\nexport class MultiMeasureRest extends Element {\n    static get CATEGORY() {\n        return \"MultiMeasureRest\";\n    }\n    constructor(numberOfMeasures, options) {\n        var _a;\n        super();\n        this.xs = { left: NaN, right: NaN };\n        this.hasPaddingLeft = false;\n        this.hasPaddingRight = false;\n        this.hasLineThickness = false;\n        this.hasSymbolSpacing = false;\n        const fontSize = (_a = options.numberGlyphPoint) !== null && _a !== void 0 ? _a : Metrics.get('MultiMeasureRest.fontSize');\n        this.fontInfo.size = fontSize;\n        this.numberOfMeasures = numberOfMeasures;\n        this.text = '';\n        const t = `${this.numberOfMeasures}`;\n        for (const digit of t) {\n            this.text += String.fromCodePoint(0xe080 + Number(digit));\n        }\n        this.hasPaddingLeft = typeof options.paddingLeft === 'number';\n        this.hasPaddingRight = typeof options.paddingRight === 'number';\n        this.hasLineThickness = typeof options.lineThickness === 'number';\n        this.hasSymbolSpacing = typeof options.symbolSpacing === 'number';\n        this.renderOptions = Object.assign({ useSymbols: false, showNumber: true, numberLine: -0.5, numberGlyphPoint: fontSize, line: 2, spacingBetweenLinesPx: Tables.STAVE_LINE_DISTANCE, serifThickness: 2, semibreveRestGlyphScale: Metrics.get('fontSize'), paddingLeft: 0, paddingRight: 0, lineThickness: 5, symbolSpacing: 0 }, options);\n    }\n    getXs() {\n        return this.xs;\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    drawLine(stave, ctx, left, right) {\n        const options = this.renderOptions;\n        const y = stave.getYForLine(options.line);\n        const padding = (right - left) * 0.1;\n        left += padding;\n        right -= padding;\n        let txt = '\\ue4ef';\n        const el = new Element();\n        el.setText(txt);\n        const elWidth = el.getWidth();\n        if (!elWidth) {\n            throw new RuntimeError('Cannot drawLine if width is 0');\n        }\n        for (let i = 1; (i + 2) * elWidth + left <= right; i++) {\n            txt += '\\ue4f0';\n        }\n        txt += '\\ue4f1';\n        el.setText(txt);\n        el.renderText(ctx, left + (right - left) * 0.5 - el.getWidth() * 0.5, y);\n    }\n    drawSymbols(stave, ctx, left, right) {\n        const n4 = Math.floor(this.numberOfMeasures / 4);\n        const n = this.numberOfMeasures % 4;\n        const n2 = Math.floor(n / 2);\n        const n1 = n % 2;\n        const options = this.renderOptions;\n        const elMiddle = new Element();\n        let txt = '';\n        for (let i = 0; i < n4; ++i) {\n            txt += Glyphs.restLonga + ' ';\n        }\n        for (let i = 0; i < n2; ++i) {\n            txt += Glyphs.restDoubleWhole + ' ';\n        }\n        elMiddle.setText(txt);\n        const elTop = new Element();\n        txt = '';\n        for (let i = 0; i < n1; ++i) {\n            txt += Glyphs.restWhole + ' ';\n        }\n        elTop.setText(txt);\n        const width = elMiddle.getWidth() + elTop.getWidth();\n        let x = left + (right - left) * 0.5 - width * 0.5;\n        const line = options.line;\n        const yTop = stave.getYForLine(line - 1);\n        const yMiddle = stave.getYForLine(line);\n        elMiddle.renderText(ctx, x, yMiddle);\n        x += elMiddle.getWidth();\n        elTop.renderText(ctx, x, yTop);\n        x += elTop.getWidth();\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const stave = this.checkStave();\n        let left = stave.getNoteStartX();\n        let right = stave.getNoteEndX();\n        const begModifiers = stave.getModifiers(StaveModifierPosition.BEGIN);\n        if (begModifiers.length === 1 && isBarline(begModifiers[0])) {\n            left -= begModifiers[0].getWidth();\n        }\n        const options = this.renderOptions;\n        if (this.hasPaddingLeft) {\n            left = stave.getX() + options.paddingLeft;\n        }\n        if (this.hasPaddingRight) {\n            right = stave.getX() + stave.getWidth() - options.paddingRight;\n        }\n        this.xs.left = left;\n        this.xs.right = right;\n        if (options.useSymbols) {\n            this.drawSymbols(stave, ctx, left, right);\n        }\n        else {\n            this.drawLine(stave, ctx, left, right);\n        }\n        if (options.showNumber) {\n            this.renderText(ctx, left + (right - left) * 0.5 - this.width * 0.5, stave.getYForLine(options.numberLine) - this.height * 0.5);\n        }\n    }\n}\n","import { Element } from './element.js';\nimport { Glyphs } from './glyphs.js';\nimport { Metrics } from './metrics.js';\nimport { log, RuntimeError } from './util.js';\nfunction L(...args) {\n    if (PedalMarking.DEBUG)\n        log('VexFlow.PedalMarking', args);\n}\nexport class PedalMarking extends Element {\n    static get CATEGORY() {\n        return \"PedalMarking\";\n    }\n    static createSustain(notes) {\n        const pedal = new PedalMarking(notes);\n        return pedal;\n    }\n    static createSostenuto(notes) {\n        const pedal = new PedalMarking(notes);\n        pedal.setType(PedalMarking.type.MIXED);\n        pedal.setCustomText('Sost. Ped.');\n        return pedal;\n    }\n    static createUnaCorda(notes) {\n        const pedal = new PedalMarking(notes);\n        pedal.setType(PedalMarking.type.TEXT);\n        pedal.setCustomText('una corda', 'tre corda');\n        return pedal;\n    }\n    constructor(notes) {\n        super();\n        this.notes = notes;\n        this.type = PedalMarking.type.TEXT;\n        this.line = 0;\n        this.depressText = PedalMarking.GLYPHS.pedalDepress;\n        this.releaseText = PedalMarking.GLYPHS.pedalRelease;\n        this.renderOptions = {\n            bracketHeight: 10,\n            textMarginRight: 6,\n            bracketLineWidth: 1,\n            color: 'black',\n        };\n    }\n    setType(type) {\n        type = typeof type === 'string' ? PedalMarking.typeString[type] : type;\n        if (type >= PedalMarking.type.TEXT && type <= PedalMarking.type.MIXED) {\n            this.type = type;\n        }\n        return this;\n    }\n    setCustomText(depress, release) {\n        this.depressText = depress || '';\n        this.releaseText = release || '';\n        this.setFont(Metrics.getFontInfo('PedalMarking.text'));\n        return this;\n    }\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    drawBracketed() {\n        const ctx = this.checkContext();\n        let isPedalDepressed = false;\n        let prevX;\n        let prevY;\n        let textWidth = 0;\n        this.notes.forEach((note, index, notes) => {\n            var _a, _b, _c, _d;\n            isPedalDepressed = !isPedalDepressed;\n            const x = note.getAbsoluteX();\n            const y = note.checkStave().getYForBottomText(this.line + 3);\n            if (x < prevX) {\n                throw new RuntimeError('InvalidConfiguration', 'The notes provided must be in order of ascending x positions');\n            }\n            const nextNoteIsSame = notes[index + 1] === note;\n            const prevNoteIsSame = notes[index - 1] === note;\n            let xShift = 0;\n            if (isPedalDepressed) {\n                xShift = prevNoteIsSame ? 5 : 0;\n                if (this.type === PedalMarking.type.MIXED && !prevNoteIsSame) {\n                    textWidth = ctx.measureText(this.depressText).width;\n                    ctx.fillText(this.depressText, x, y);\n                    xShift = textWidth + this.renderOptions.textMarginRight;\n                }\n                else {\n                    ctx.beginPath();\n                    ctx.moveTo(x, y - this.renderOptions.bracketHeight);\n                    ctx.lineTo(x + xShift, y);\n                    ctx.stroke();\n                    ctx.closePath();\n                }\n            }\n            else {\n                const noteNdx = note.getVoice().getTickables().indexOf(note);\n                const voiceNotes = note.getVoice().getTickables().length;\n                const noteEndX = noteNdx + 1 < voiceNotes\n                    ?\n                        note.getVoice().getTickables()[noteNdx + 1].getAbsoluteX()\n                    :\n                        ((_b = (_a = note.getStave()) === null || _a === void 0 ? void 0 : _a.getX()) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = note.getStave()) === null || _c === void 0 ? void 0 : _c.getWidth()) !== null && _d !== void 0 ? _d : 0);\n                ctx.beginPath();\n                ctx.moveTo(prevX, prevY);\n                ctx.lineTo(nextNoteIsSame ? x - 5 : noteEndX - 5, y);\n                ctx.lineTo(nextNoteIsSame ? x : noteEndX - 5, y - this.renderOptions.bracketHeight);\n                ctx.stroke();\n                ctx.closePath();\n            }\n            prevX = x + xShift;\n            prevY = y;\n        });\n    }\n    drawText() {\n        const ctx = this.checkContext();\n        let isPedalDepressed = false;\n        let textWidth = 0;\n        this.notes.forEach((note) => {\n            var _a, _b, _c, _d;\n            isPedalDepressed = !isPedalDepressed;\n            const stave = note.checkStave();\n            const x = note.getAbsoluteX();\n            const y = stave.getYForBottomText(this.line + 3);\n            if (isPedalDepressed) {\n                textWidth = ctx.measureText(this.depressText).width;\n                ctx.fillText(this.depressText, x, y);\n            }\n            else {\n                const noteNdx = note.getVoice().getTickables().indexOf(note);\n                const voiceNotes = note.getVoice().getTickables().length;\n                const noteEndX = noteNdx + 1 < voiceNotes\n                    ?\n                        note.getVoice().getTickables()[noteNdx + 1].getAbsoluteX()\n                    :\n                        ((_b = (_a = note.getStave()) === null || _a === void 0 ? void 0 : _a.getX()) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = note.getStave()) === null || _c === void 0 ? void 0 : _c.getWidth()) !== null && _d !== void 0 ? _d : 0);\n                textWidth = ctx.measureText(this.releaseText).width;\n                ctx.fillText(this.releaseText, noteEndX - textWidth, y);\n            }\n        });\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        ctx.setStrokeStyle(this.renderOptions.color);\n        ctx.setFillStyle(this.renderOptions.color);\n        ctx.setFont(this.font);\n        L('Rendering Pedal Marking');\n        if (this.type === PedalMarking.type.BRACKET || this.type === PedalMarking.type.MIXED) {\n            ctx.setLineWidth(this.renderOptions.bracketLineWidth);\n            this.drawBracketed();\n        }\n        else if (this.type === PedalMarking.type.TEXT) {\n            this.drawText();\n        }\n    }\n}\nPedalMarking.DEBUG = false;\nPedalMarking.GLYPHS = {\n    pedalDepress: Glyphs.keyboardPedalPed,\n    pedalRelease: Glyphs.keyboardPedalUp,\n};\nPedalMarking.type = {\n    TEXT: 1,\n    BRACKET: 2,\n    MIXED: 3,\n};\nPedalMarking.typeString = {\n    text: PedalMarking.type.TEXT,\n    bracket: PedalMarking.type.BRACKET,\n    mixed: PedalMarking.type.MIXED,\n};\n","import { GlyphNote } from './glyphnote.js';\nimport { Glyphs } from './glyphs.js';\nconst CODES = {\n    '1': Glyphs.repeat1Bar,\n    '2': Glyphs.repeat2Bars,\n    '4': Glyphs.repeat4Bars,\n    slash: Glyphs.repeatBarSlash,\n};\nexport class RepeatNote extends GlyphNote {\n    static get CATEGORY() {\n        return \"RepeatNote\";\n    }\n    constructor(type, noteStruct, options) {\n        const glyphCode = CODES[type] || '\\uE500';\n        super(glyphCode, Object.assign({ duration: 'q', alignCenter: type !== 'slash' }, noteStruct), options);\n    }\n}\n","import { Element } from './element.js';\nimport { Tables } from './tables.js';\nimport { TextJustification } from './textnote.js';\nimport { RuntimeError } from './util.js';\nfunction drawArrowHead(ctx, x0, y0, x1, y1, x2, y2) {\n    ctx.beginPath();\n    ctx.moveTo(x0, y0);\n    ctx.lineTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.lineTo(x0, y0);\n    ctx.closePath();\n    ctx.fill();\n}\nexport class StaveLine extends Element {\n    static get CATEGORY() {\n        return \"StaveLine\";\n    }\n    constructor(notes) {\n        super();\n        this.setNotes(notes);\n        this.text = '';\n        this.renderOptions = {\n            paddingLeft: 4,\n            paddingRight: 3,\n            lineWidth: 1,\n            lineDash: undefined,\n            roundedEnd: true,\n            color: undefined,\n            drawStartArrow: false,\n            drawEndArrow: false,\n            arrowheadLength: 10,\n            arrowheadAngle: Math.PI / 8,\n            textPositionVertical: StaveLine.TextVerticalPosition.TOP,\n            textJustification: StaveLine.TextJustification.CENTER,\n        };\n    }\n    setText(text) {\n        this.text = text;\n        return this;\n    }\n    setNotes(notes) {\n        if (!notes.firstNote && !notes.lastNote) {\n            throw new RuntimeError('BadArguments', 'Notes needs to have either firstNote or lastNote set.');\n        }\n        if (!notes.firstIndexes)\n            notes.firstIndexes = [0];\n        if (!notes.lastIndexes)\n            notes.lastIndexes = [0];\n        if (notes.firstIndexes.length !== notes.lastIndexes.length) {\n            throw new RuntimeError('BadArguments', 'Connected notes must have same number of indexes.');\n        }\n        this.notes = notes;\n        this.firstNote = notes.firstNote;\n        this.firstIndexes = notes.firstIndexes;\n        this.lastNote = notes.lastNote;\n        this.lastIndexes = notes.lastIndexes;\n        return this;\n    }\n    applyLineStyle() {\n        const ctx = this.checkContext();\n        const renderOptions = this.renderOptions;\n        if (renderOptions.lineDash) {\n            ctx.setLineDash(renderOptions.lineDash);\n        }\n        if (renderOptions.lineWidth) {\n            ctx.setLineWidth(renderOptions.lineWidth);\n        }\n        if (renderOptions.roundedEnd) {\n            ctx.setLineCap('round');\n        }\n        else {\n            ctx.setLineCap('square');\n        }\n    }\n    drawArrowLine(ctx, pt1, pt2) {\n        const bothArrows = this.renderOptions.drawStartArrow && this.renderOptions.drawEndArrow;\n        const x1 = pt1.x;\n        const y1 = pt1.y;\n        const x2 = pt2.x;\n        const y2 = pt2.y;\n        const distance = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        const ratio = (distance - this.renderOptions.arrowheadLength / 3) / distance;\n        let endX;\n        let endY;\n        let startX;\n        let startY;\n        if (this.renderOptions.drawEndArrow || bothArrows) {\n            endX = Math.round(x1 + (x2 - x1) * ratio);\n            endY = Math.round(y1 + (y2 - y1) * ratio);\n        }\n        else {\n            endX = x2;\n            endY = y2;\n        }\n        if (this.renderOptions.drawStartArrow || bothArrows) {\n            startX = x1 + (x2 - x1) * (1 - ratio);\n            startY = y1 + (y2 - y1) * (1 - ratio);\n        }\n        else {\n            startX = x1;\n            startY = y1;\n        }\n        if (this.renderOptions.color) {\n            ctx.setStrokeStyle(this.renderOptions.color);\n            ctx.setFillStyle(this.renderOptions.color);\n        }\n        ctx.beginPath();\n        ctx.moveTo(startX, startY);\n        ctx.lineTo(endX, endY);\n        ctx.stroke();\n        ctx.closePath();\n        const lineAngle = Math.atan2(y2 - y1, x2 - x1);\n        const h = Math.abs(this.renderOptions.arrowheadLength / Math.cos(this.renderOptions.arrowheadAngle));\n        let angle1;\n        let angle2;\n        let topX;\n        let topY;\n        let bottomX;\n        let bottomY;\n        if (this.renderOptions.drawEndArrow || bothArrows) {\n            angle1 = lineAngle + Math.PI + this.renderOptions.arrowheadAngle;\n            topX = x2 + Math.cos(angle1) * h;\n            topY = y2 + Math.sin(angle1) * h;\n            angle2 = lineAngle + Math.PI - this.renderOptions.arrowheadAngle;\n            bottomX = x2 + Math.cos(angle2) * h;\n            bottomY = y2 + Math.sin(angle2) * h;\n            drawArrowHead(ctx, topX, topY, x2, y2, bottomX, bottomY);\n        }\n        if (this.renderOptions.drawStartArrow || bothArrows) {\n            angle1 = lineAngle + this.renderOptions.arrowheadAngle;\n            topX = x1 + Math.cos(angle1) * h;\n            topY = y1 + Math.sin(angle1) * h;\n            angle2 = lineAngle - this.renderOptions.arrowheadAngle;\n            bottomX = x1 + Math.cos(angle2) * h;\n            bottomY = y1 + Math.sin(angle2) * h;\n            drawArrowHead(ctx, topX, topY, x1, y1, bottomX, bottomY);\n        }\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const firstNote = this.firstNote;\n        const lastNote = this.lastNote;\n        const renderOptions = this.renderOptions;\n        this.applyLineStyle();\n        let startPosition = { x: 0, y: 0 };\n        let endPosition = { x: 0, y: 0 };\n        this.firstIndexes.forEach((firstIndex, i) => {\n            const lastIndex = this.lastIndexes[i];\n            startPosition = firstNote.getModifierStartXY(2, firstIndex);\n            endPosition = lastNote.getModifierStartXY(1, lastIndex);\n            const upwardsSlope = startPosition.y > endPosition.y;\n            startPosition.x += firstNote.getMetrics().modRightPx + renderOptions.paddingLeft;\n            endPosition.x -= lastNote.getMetrics().modLeftPx + renderOptions.paddingRight;\n            const noteheadWidth = firstNote.getGlyphWidth();\n            const firstDisplaced = firstNote.getKeyProps()[firstIndex].displaced;\n            if (firstDisplaced && firstNote.getStemDirection() === 1) {\n                startPosition.x += noteheadWidth + renderOptions.paddingLeft;\n            }\n            const lastDisplaced = lastNote.getKeyProps()[lastIndex].displaced;\n            if (lastDisplaced && lastNote.getStemDirection() === -1) {\n                endPosition.x -= noteheadWidth + renderOptions.paddingRight;\n            }\n            startPosition.y += upwardsSlope ? -3 : 1;\n            endPosition.y += upwardsSlope ? 2 : 0;\n            this.drawArrowLine(ctx, startPosition, endPosition);\n        });\n        const textWidth = this.width;\n        const justification = renderOptions.textJustification;\n        let x = 0;\n        if (justification === StaveLine.TextJustification.LEFT) {\n            x = startPosition.x;\n        }\n        else if (justification === StaveLine.TextJustification.CENTER) {\n            const deltaX = endPosition.x - startPosition.x;\n            const centerX = deltaX / 2 + startPosition.x;\n            x = centerX - textWidth / 2;\n        }\n        else if (justification === StaveLine.TextJustification.RIGHT) {\n            x = endPosition.x - textWidth;\n        }\n        let y = 0;\n        const verticalPosition = renderOptions.textPositionVertical;\n        if (verticalPosition === StaveLine.TextVerticalPosition.TOP) {\n            y = firstNote.checkStave().getYForTopText();\n        }\n        else if (verticalPosition === StaveLine.TextVerticalPosition.BOTTOM) {\n            y = firstNote.checkStave().getYForBottomText(Tables.TEXT_HEIGHT_OFFSET_HACK);\n        }\n        const color = renderOptions.color;\n        this.applyStyle(ctx, { fillStyle: color, strokeStyle: color });\n        this.renderText(ctx, x, y);\n    }\n}\nStaveLine.TextVerticalPosition = {\n    TOP: 1,\n    BOTTOM: 2,\n};\nStaveLine.TextJustification = TextJustification;\n","import { BoundingBox } from './boundingbox.js';\nimport { Element } from './element.js';\nimport { Formatter } from './formatter.js';\nimport { Note } from './note.js';\nimport { Stave } from './stave.js';\nimport { RuntimeError } from './util.js';\nexport class System extends Element {\n    static get CATEGORY() {\n        return \"System\";\n    }\n    constructor(params = {}) {\n        super();\n        this.setOptions(params);\n        this.partStaves = [];\n        this.partStaveInfos = [];\n        this.partVoices = [];\n    }\n    setOptions(options = {}) {\n        if (!options.factory) {\n            throw new RuntimeError('NoFactory', 'System.setOptions(options) requires a factory.');\n        }\n        this.factory = options.factory;\n        this.options = Object.assign(Object.assign({ factory: this.factory, x: 10, y: 10, width: 500, spaceBetweenStaves: 12, autoWidth: false, noJustification: false, debugFormatter: false, formatIterations: 0, noPadding: false }, options), { details: Object.assign({ alpha: 0.5 }, options.details), formatOptions: Object.assign({}, options.formatOptions) });\n        if (this.options.noJustification === false && typeof options.width === 'undefined') {\n            this.options.autoWidth = true;\n        }\n    }\n    getX() {\n        return this.options.x;\n    }\n    setX(x) {\n        this.options.x = x;\n        this.partStaves.forEach((s) => {\n            s.setX(x);\n        });\n        return this;\n    }\n    getY() {\n        return this.options.y;\n    }\n    setY(y) {\n        this.options.y = y;\n        this.partStaves.forEach((s) => {\n            s.setY(y);\n        });\n        return this;\n    }\n    getStaves() {\n        return this.partStaves;\n    }\n    getVoices() {\n        return this.partVoices;\n    }\n    setContext(context) {\n        super.setContext(context);\n        this.factory.setContext(context);\n        return this;\n    }\n    addConnector(type = 'double') {\n        this.connector = this.factory.StaveConnector({\n            topStave: this.partStaves[0],\n            bottomStave: this.partStaves[this.partStaves.length - 1],\n            type,\n        });\n        return this.connector;\n    }\n    addStave(params) {\n        var _a;\n        const staveOptions = Object.assign({ leftBar: false }, params.options);\n        const stave = (_a = params.stave) !== null && _a !== void 0 ? _a : this.factory.Stave({ x: this.options.x, y: this.options.y, width: this.options.width, options: staveOptions });\n        const p = Object.assign(Object.assign({ spaceAbove: 0, spaceBelow: 0, debugNoteMetrics: false, noJustification: false }, params), { options: staveOptions });\n        const ctx = this.getContext();\n        p.voices.forEach((voice) => {\n            voice\n                .setContext(ctx)\n                .setStave(stave)\n                .getTickables()\n                .forEach((tickable) => tickable.setStave(stave));\n            this.partVoices.push(voice);\n        });\n        this.partStaves.push(stave);\n        this.partStaveInfos.push(p);\n        return stave;\n    }\n    addVoices(voices) {\n        const ctx = this.getContext();\n        voices.forEach((voice) => {\n            voice.setContext(ctx);\n            this.partVoices.push(voice);\n        });\n    }\n    format() {\n        const optionsDetails = this.options.details;\n        let justifyWidth = 0;\n        const formatter = new Formatter(optionsDetails);\n        this.formatter = formatter;\n        let y = this.options.y;\n        let startX = 0;\n        const debugNoteMetricsYs = [];\n        this.partStaves.forEach((part, index) => {\n            y = y + part.space(this.partStaveInfos[index].spaceAbove);\n            part.setY(y);\n            y = y + part.space(this.partStaveInfos[index].spaceBelow);\n            y = y + part.space(this.options.spaceBetweenStaves);\n            if (this.partStaveInfos[index].debugNoteMetrics) {\n                debugNoteMetricsYs.push({ y, stave: part });\n                y += 15;\n            }\n            startX = Math.max(startX, part.getNoteStartX());\n        });\n        this.partVoices.forEach((voice) => {\n            voice.getTickables().forEach((tickable) => {\n                const stave = tickable.getStave();\n                if (stave)\n                    tickable.setStave(stave);\n            });\n        });\n        formatter.joinVoices(this.partVoices);\n        this.partStaves.forEach((part) => part.setNoteStartX(startX));\n        if (this.options.autoWidth && this.partVoices.length > 0) {\n            justifyWidth = formatter.preCalculateMinTotalWidth(this.partVoices);\n            this.options.width = justifyWidth + Stave.rightPadding + (startX - this.options.x);\n            this.partStaves.forEach((part) => {\n                part.setWidth(this.options.width);\n            });\n        }\n        else {\n            justifyWidth = this.options.noPadding\n                ? this.options.width - (startX - this.options.x)\n                : this.options.width - (startX - this.options.x) - Stave.defaultPadding;\n        }\n        if (this.partVoices.length > 0) {\n            formatter.format(this.partVoices, this.options.noJustification ? 0 : justifyWidth, this.options.formatOptions);\n        }\n        formatter.postFormat();\n        for (let i = 0; i < this.options.formatIterations; i++) {\n            formatter.tune(optionsDetails);\n        }\n        this.startX = startX;\n        this.debugNoteMetricsYs = debugNoteMetricsYs;\n        this.lastY = y;\n        Stave.formatBegModifiers(this.partStaves);\n    }\n    getBoundingBox() {\n        var _a;\n        return new BoundingBox(this.options.x, this.options.y, this.options.width, ((_a = this.lastY) !== null && _a !== void 0 ? _a : 0) - this.options.y);\n    }\n    draw() {\n        const ctx = this.checkContext();\n        if (!this.formatter || !this.startX || !this.lastY || !this.debugNoteMetricsYs) {\n            throw new RuntimeError('NoFormatter', 'format() must be called before draw()');\n        }\n        this.setRendered();\n        if (this.options.debugFormatter) {\n            Formatter.plotDebugging(ctx, this.formatter, this.startX, this.options.y, this.lastY);\n        }\n        this.debugNoteMetricsYs.forEach((d) => {\n            this.partVoices.forEach((voice) => {\n                voice.getTickables().forEach((tickable) => {\n                    if (tickable.getStave() === d.stave)\n                        Note.plotMetrics(ctx, tickable, d.y);\n                });\n            });\n        });\n    }\n}\n","import { Element } from './element.js';\nimport { Glyphs } from './glyphs.js';\nimport { Modifier } from './modifier.js';\nimport { Note } from './note.js';\nimport { Stem } from './stem.js';\nimport { StemmableNote } from './stemmablenote.js';\nimport { isDot } from './typeguard.js';\nimport { defined, RuntimeError } from './util.js';\nfunction getUnusedStringGroups(numLines, stringsUsed) {\n    const stemThrough = [];\n    let group = [];\n    for (let string = 1; string <= numLines; string++) {\n        const isUsed = stringsUsed.indexOf(string) > -1;\n        if (!isUsed) {\n            group.push(string);\n        }\n        else {\n            stemThrough.push(group);\n            group = [];\n        }\n    }\n    if (group.length > 0)\n        stemThrough.push(group);\n    return stemThrough;\n}\nfunction getPartialStemLines(stemY, unusedStrings, stave, stemDirection) {\n    const upStem = stemDirection !== 1;\n    const downStem = stemDirection !== -1;\n    const lineSpacing = stave.getSpacingBetweenLines();\n    const totalLines = stave.getNumLines();\n    const stemLines = [];\n    unusedStrings.forEach((strings) => {\n        const containsLastString = strings.indexOf(totalLines) > -1;\n        const containsFirstString = strings.indexOf(1) > -1;\n        if ((upStem && containsFirstString) || (downStem && containsLastString)) {\n            return;\n        }\n        if (strings.length === 1) {\n            strings.push(strings[0]);\n        }\n        const lineYs = [];\n        strings.forEach((string, index, strings) => {\n            const isTopBound = string === 1;\n            const isBottomBound = string === totalLines;\n            let y = stave.getYForLine(string - 1);\n            if (index === 0 && !isTopBound) {\n                y -= lineSpacing / 2 - 1;\n            }\n            else if (index === strings.length - 1 && !isBottomBound) {\n                y += lineSpacing / 2 - 1;\n            }\n            lineYs.push(y);\n            if (stemDirection === 1 && isTopBound) {\n                lineYs.push(stemY - 2);\n            }\n            else if (stemDirection === -1 && isBottomBound) {\n                lineYs.push(stemY + 2);\n            }\n        });\n        stemLines.push(lineYs.sort((a, b) => a - b));\n    });\n    return stemLines;\n}\nexport class TabNote extends StemmableNote {\n    static get CATEGORY() {\n        return \"TabNote\";\n    }\n    constructor(noteStruct, drawStem = false) {\n        super(noteStruct);\n        this.fretElement = [];\n        this.greatestString = () => {\n            return this.positions.map((x) => x.str).reduce((a, b) => (a > b ? a : b));\n        };\n        this.leastString = () => {\n            return this.positions.map((x) => x.str).reduce((a, b) => (a < b ? a : b));\n        };\n        this.ghost = false;\n        this.positions = noteStruct.positions || [];\n        this.renderOptions = Object.assign(Object.assign({}, this.renderOptions), { drawStem, drawDots: drawStem, drawStemThroughStave: false, yShift: 0 });\n        this.glyphProps = Note.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyphProps, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        this.buildStem();\n        if (noteStruct.stemDirection) {\n            this.setStemDirection(noteStruct.stemDirection);\n        }\n        else {\n            this.setStemDirection(Stem.UP);\n        }\n        this.ghost = false;\n        this.updateWidth();\n    }\n    reset() {\n        super.reset();\n        if (this.stave)\n            this.setStave(this.stave);\n        return this;\n    }\n    setGhost(ghost) {\n        this.ghost = ghost;\n        this.updateWidth();\n        return this;\n    }\n    hasStem() {\n        if (this.renderOptions.drawStem)\n            return true;\n        return false;\n    }\n    getStemExtension() {\n        if (this.stemExtensionOverride !== undefined) {\n            return this.stemExtensionOverride;\n        }\n        return this.flag.getHeight() > Stem.HEIGHT ? this.flag.getHeight() - Stem.HEIGHT : 0;\n    }\n    static tabToElement(fret) {\n        let el;\n        if (fret.toUpperCase() === 'X') {\n            el = new Element('TabNote');\n            el.setText(Glyphs.accidentalDoubleSharp);\n        }\n        else {\n            el = new Element('TabNote.text');\n            el.setText(fret);\n            el.setYShift(el.getHeight() / 2);\n        }\n        return el;\n    }\n    updateWidth() {\n        this.fretElement = [];\n        this.width = 0;\n        for (let i = 0; i < this.positions.length; ++i) {\n            let fret = this.positions[i].fret;\n            if (this.ghost)\n                fret = '(' + fret + ')';\n            const el = TabNote.tabToElement(fret.toString());\n            this.fretElement.push(el);\n            this.width = Math.max(el.getWidth(), this.width);\n        }\n    }\n    setStave(stave) {\n        super.setStave(stave);\n        const ctx = stave.getContext();\n        this.setContext(ctx);\n        const ys = this.positions.map(({ str: line }) => stave.getYForLine(Number(line) - 1));\n        this.setYs(ys);\n        if (this.stem) {\n            this.stem.setYBounds(this.getStemY(), this.getStemY());\n        }\n        return this;\n    }\n    getPositions() {\n        return this.positions;\n    }\n    getModifierStartXY(position, index) {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', 'No Y-Values calculated for this note.');\n        }\n        let x = 0;\n        if (position === Modifier.Position.LEFT) {\n            x = -1 * 2;\n        }\n        else if (position === Modifier.Position.RIGHT) {\n            x = this.width + 2;\n        }\n        else if (position === Modifier.Position.BELOW || position === Modifier.Position.ABOVE) {\n            const noteGlyphWidth = this.width;\n            x = noteGlyphWidth / 2;\n        }\n        return {\n            x: this.getAbsoluteX() + x,\n            y: this.ys[index],\n        };\n    }\n    getLineForRest() {\n        return Number(this.positions[0].str);\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        if (this.modifierContext)\n            this.modifierContext.preFormat();\n        this.preFormatted = true;\n    }\n    getStemX() {\n        return this.getCenterGlyphX();\n    }\n    getStemY() {\n        const numLines = this.checkStave().getNumLines();\n        const stemUpLine = -0.5;\n        const stemDownLine = numLines - 0.5;\n        const stemStartLine = Stem.UP === this.stemDirection ? stemUpLine : stemDownLine;\n        return this.checkStave().getYForLine(stemStartLine);\n    }\n    getStemExtents() {\n        return this.checkStem().getExtents();\n    }\n    drawFlag() {\n        const { beam, glyphProps, renderOptions: { drawStem }, } = this;\n        const context = this.checkContext();\n        const shouldDrawFlag = beam === undefined && drawStem;\n        if (glyphProps.codeFlagUp && shouldDrawFlag) {\n            const flagX = this.getStemX();\n            const flagY = this.getStemDirection() === Stem.DOWN\n                ?\n                    this.getStemY() - this.checkStem().getHeight() - this.getStemExtension()\n                :\n                    this.getStemY() - this.checkStem().getHeight() + this.getStemExtension();\n            this.flag.setContext(context).setX(flagX).setY(flagY).drawWithStyle();\n        }\n    }\n    drawModifiers() {\n        this.modifiers.forEach((modifier) => {\n            if (isDot(modifier) && !this.renderOptions.drawDots) {\n                return;\n            }\n            modifier.setContext(this.getContext());\n            modifier.drawWithStyle();\n        });\n    }\n    drawStemThrough() {\n        const stemX = this.getStemX();\n        const stemY = this.getStemY();\n        const ctx = this.checkContext();\n        const drawStem = this.renderOptions.drawStem;\n        const stemThrough = this.renderOptions.drawStemThroughStave;\n        if (drawStem && stemThrough) {\n            const numLines = this.checkStave().getNumLines();\n            const stringsUsed = this.positions.map((position) => Number(position.str));\n            const unusedStrings = getUnusedStringGroups(numLines, stringsUsed);\n            const stemLines = getPartialStemLines(stemY, unusedStrings, this.checkStave(), this.getStemDirection());\n            ctx.setLineWidth(Stem.WIDTH);\n            stemLines.forEach((bounds) => {\n                if (bounds.length === 0)\n                    return;\n                ctx.beginPath();\n                ctx.moveTo(stemX, bounds[0]);\n                ctx.lineTo(stemX, bounds[bounds.length - 1]);\n                ctx.stroke();\n                ctx.closePath();\n            });\n        }\n    }\n    drawPositions() {\n        const ctx = this.checkContext();\n        const x = this.getAbsoluteX();\n        const ys = this.ys;\n        for (let i = 0; i < this.positions.length; ++i) {\n            const y = ys[i] + this.renderOptions.yShift;\n            const el = this.fretElement[i];\n            const tabX = x - el.getWidth() / 2;\n            ctx.clearRect(tabX - 2, y - 3, el.getWidth() + 4, 6);\n            el.renderText(ctx, tabX, y);\n        }\n    }\n    draw() {\n        const ctx = this.checkContext();\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', \"Can't draw note without Y values.\");\n        }\n        this.setRendered();\n        const renderStem = this.beam === undefined && this.renderOptions.drawStem;\n        ctx.openGroup('tabnote', this.getAttribute('id'));\n        this.drawPositions();\n        this.drawStemThrough();\n        if (this.stem && renderStem) {\n            const stemX = this.getStemX();\n            this.stem.setNoteHeadXBounds(stemX, stemX);\n            this.stem.setContext(ctx).drawWithStyle();\n        }\n        this.drawFlag();\n        this.drawModifiers();\n        ctx.closeGroup();\n    }\n}\n","import { Stave } from './stave.js';\nexport class TabStave extends Stave {\n    static get CATEGORY() {\n        return \"TabStave\";\n    }\n    constructor(x, y, width, options) {\n        const tabOptions = Object.assign({ spacingBetweenLinesPx: 13, numLines: 6, topTextPosition: 1 }, options);\n        super(x, y, width, tabOptions);\n    }\n    getYForGlyphs() {\n        return this.getYForLine(2.5);\n    }\n    addTabGlyph() {\n        this.addClef('tab');\n        return this;\n    }\n}\n","import { Element } from './element.js';\nimport { Font } from './font.js';\nimport { Renderer } from './renderer.js';\nimport { Tables } from './tables.js';\nimport { log, RuntimeError } from './util.js';\nfunction L(...args) {\n    if (TextBracket.DEBUG)\n        log('VexFlow.TextBracket', args);\n}\nexport var TextBracketPosition;\n(function (TextBracketPosition) {\n    TextBracketPosition[TextBracketPosition[\"TOP\"] = 1] = \"TOP\";\n    TextBracketPosition[TextBracketPosition[\"BOTTOM\"] = -1] = \"BOTTOM\";\n})(TextBracketPosition || (TextBracketPosition = {}));\nexport class TextBracket extends Element {\n    static get CATEGORY() {\n        return \"TextBracket\";\n    }\n    static get Position() {\n        return TextBracketPosition;\n    }\n    static get PositionString() {\n        return {\n            top: TextBracketPosition.TOP,\n            bottom: TextBracketPosition.BOTTOM,\n        };\n    }\n    constructor({ start, stop, text = '', superscript = '', position = TextBracketPosition.TOP }) {\n        super();\n        this.start = start;\n        this.stop = stop;\n        this.textElement = new Element('TextBracket');\n        this.textElement.setText(text);\n        this.superscriptElement = new Element('TextBracket');\n        this.superscriptElement.setText(superscript);\n        const smallerFontSize = Font.scaleSize(this.fontInfo.size, 0.714286);\n        this.superscriptElement.setFontSize(smallerFontSize);\n        this.position = typeof position === 'string' ? TextBracket.PositionString[position] : position;\n        this.line = 1;\n        this.renderOptions = {\n            dashed: true,\n            dash: [5],\n            color: 'black',\n            lineWidth: 1,\n            showBracket: true,\n            bracketHeight: 8,\n            underlineSuperscript: true,\n        };\n    }\n    applyStyle(ctx) {\n        this.textElement.setFont(this.fontInfo);\n        const { family, size, weight, style } = this.fontInfo;\n        const smallerFontSize = Font.scaleSize(size, 0.714286);\n        this.superscriptElement.setFont(family, smallerFontSize, weight, style);\n        const options = this.renderOptions;\n        ctx.setStrokeStyle(options.color);\n        ctx.setFillStyle(options.color);\n        ctx.setLineWidth(options.lineWidth);\n        return this;\n    }\n    setDashed(dashed, dash) {\n        this.renderOptions.dashed = dashed;\n        if (dash)\n            this.renderOptions.dash = dash;\n        return this;\n    }\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        let y = 0;\n        switch (this.position) {\n            case TextBracketPosition.TOP:\n                y = this.start.checkStave().getYForTopText(this.line);\n                break;\n            case TextBracketPosition.BOTTOM:\n                y = this.start.checkStave().getYForBottomText(this.line + Tables.TEXT_HEIGHT_OFFSET_HACK);\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} is invalid.`);\n        }\n        const start = { x: this.start.getAbsoluteX(), y };\n        const stop = { x: this.stop.getAbsoluteX(), y };\n        L('Rendering TextBracket: start:', start, 'stop:', stop, 'y:', y);\n        const bracketHeight = this.renderOptions.bracketHeight * this.position;\n        this.textElement.renderText(ctx, start.x, start.y);\n        const mainWidth = this.textElement.getWidth();\n        const mainHeight = this.textElement.getHeight();\n        const superY = start.y - mainHeight / 2.5;\n        this.superscriptElement.renderText(ctx, start.x + mainWidth + 1, superY);\n        const superWidth = this.superscriptElement.getWidth();\n        const superHeight = this.superscriptElement.getHeight();\n        let startX = start.x;\n        let lineY = superY;\n        const endX = stop.x + this.stop.getGlyphWidth();\n        if (this.position === TextBracketPosition.TOP) {\n            startX += mainWidth + superWidth + 5;\n            lineY -= superHeight / 2.7;\n        }\n        else if (this.position === TextBracketPosition.BOTTOM) {\n            lineY += superHeight / 2.7;\n            startX += mainWidth + 2;\n            if (!this.renderOptions.underlineSuperscript) {\n                startX += superWidth;\n            }\n        }\n        if (this.renderOptions.dashed) {\n            Renderer.drawDashedLine(ctx, startX, lineY, endX, lineY, this.renderOptions.dash);\n            if (this.renderOptions.showBracket) {\n                Renderer.drawDashedLine(ctx, endX, lineY + 1 * this.position, endX, lineY + bracketHeight, this.renderOptions.dash);\n            }\n        }\n        else {\n            ctx.beginPath();\n            ctx.moveTo(startX, lineY);\n            ctx.lineTo(endX, lineY);\n            if (this.renderOptions.showBracket) {\n                ctx.lineTo(endX, lineY + bracketHeight);\n            }\n            ctx.stroke();\n            ctx.closePath();\n        }\n    }\n}\nTextBracket.DEBUG = false;\n","import { Glyphs } from './glyphs.js';\nimport { Note } from './note.js';\nimport { log, RuntimeError } from './util.js';\nfunction L(...args) {\n    if (TextDynamics.DEBUG)\n        log('VexFlow.TextDynamics', args);\n}\nexport class TextDynamics extends Note {\n    static get CATEGORY() {\n        return \"TextDynamics\";\n    }\n    static get GLYPHS() {\n        return {\n            f: Glyphs.dynamicForte,\n            p: Glyphs.dynamicPiano,\n            m: Glyphs.dynamicMezzo,\n            s: Glyphs.dynamicSforzando,\n            z: Glyphs.dynamicZ,\n            r: Glyphs.dynamicRinforzando,\n        };\n    }\n    constructor(noteStruct) {\n        var _a, _b;\n        super(noteStruct);\n        this.sequence = ((_a = noteStruct.text) !== null && _a !== void 0 ? _a : '').toLowerCase();\n        this.line = (_b = noteStruct.line) !== null && _b !== void 0 ? _b : 0;\n        this.text = '';\n        L('New Dynamics Text: ', this.sequence);\n    }\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    preFormat() {\n        this.text = '';\n        this.sequence.split('').forEach((letter) => {\n            const glyph = TextDynamics.GLYPHS[letter];\n            if (!glyph)\n                throw new RuntimeError('Invalid dynamics character: ' + letter);\n            this.text += glyph;\n        });\n        this.preFormatted = true;\n        return this;\n    }\n    draw() {\n        this.setRendered();\n        const x = this.getAbsoluteX();\n        const y = this.checkStave().getYForLine(this.line + -3);\n        L('Rendering Dynamics: ', this.sequence);\n        this.renderText(this.checkContext(), x, y);\n    }\n}\nTextDynamics.DEBUG = false;\n","import { Note } from './note.js';\nimport { TimeSignature } from './timesignature.js';\nexport class TimeSigNote extends Note {\n    static get CATEGORY() {\n        return \"TimeSigNote\";\n    }\n    constructor(timeSpec, customPadding) {\n        super({ duration: 'b' });\n        this.timeSig = new TimeSignature(timeSpec, customPadding);\n        this.setWidth(this.timeSig.getWidth());\n        this.ignoreTicks = true;\n    }\n    addToModifierContext(mc) {\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = this.checkContext();\n        this.setRendered();\n        ctx.openGroup('timesignote', this.getAttribute('id'));\n        this.timeSig.drawAt(ctx, stave, this.getAbsoluteX());\n        ctx.closeGroup();\n    }\n}\n","import { Element } from './element.js';\nimport { Formatter } from './formatter.js';\nimport { Glyphs } from './glyphs.js';\nimport { Metrics } from './metrics.js';\nimport { Stem } from './stem.js';\nimport { Tables } from './tables.js';\nimport { RuntimeError } from './util.js';\nexport class Tuplet extends Element {\n    static get CATEGORY() {\n        return \"Tuplet\";\n    }\n    static get LOCATION_TOP() {\n        return 1;\n    }\n    static get LOCATION_BOTTOM() {\n        return -1;\n    }\n    static get NESTING_OFFSET() {\n        return 15;\n    }\n    constructor(notes, options = {}) {\n        super();\n        if (!notes || !notes.length) {\n            throw new RuntimeError('BadArguments', 'No notes provided for tuplet.');\n        }\n        this.notes = notes;\n        const numNotes = options.numNotes !== undefined ? options.numNotes : notes.length;\n        const notesOccupied = options.notesOccupied || 2;\n        const bracketed = options.bracketed !== undefined ? options.bracketed : notes.some((note) => !note.hasBeam());\n        const ratioed = options.ratioed !== undefined ? options.ratioed : Math.abs(notesOccupied - numNotes) > 1;\n        const location = options.location || Tuplet.LOCATION_TOP;\n        const yOffset = options.yOffset || Metrics.get('Tuplet.yOffset');\n        const textYOffset = options.textYOffset || Metrics.get('Tuplet.textYOffset');\n        this.options = {\n            bracketed,\n            location,\n            notesOccupied,\n            numNotes,\n            ratioed,\n            yOffset,\n            textYOffset,\n        };\n        this.textElement = new Element('Tuplet');\n        this.setTupletLocation(location || Tuplet.LOCATION_TOP);\n        Formatter.AlignRestsToNotes(notes, true, true);\n        this.resolveGlyphs();\n        this.attach();\n    }\n    attach() {\n        for (let i = 0; i < this.notes.length; i++) {\n            const note = this.notes[i];\n            note.setTuplet(this);\n        }\n    }\n    detach() {\n        for (let i = 0; i < this.notes.length; i++) {\n            const note = this.notes[i];\n            note.resetTuplet(this);\n        }\n    }\n    setBracketed(bracketed) {\n        this.options.bracketed = bracketed;\n        return this;\n    }\n    setRatioed(ratioed) {\n        this.options.ratioed = ratioed;\n        return this;\n    }\n    setTupletLocation(location) {\n        if (location !== Tuplet.LOCATION_TOP && location !== Tuplet.LOCATION_BOTTOM) {\n            console.warn(`Invalid tuplet location [${location}]. Using Tuplet.LOCATION_TOP.`);\n            location = Tuplet.LOCATION_TOP;\n        }\n        this.options.location = location;\n        return this;\n    }\n    getNotes() {\n        return this.notes;\n    }\n    getNoteCount() {\n        return this.options.numNotes;\n    }\n    getNotesOccupied() {\n        return this.options.notesOccupied;\n    }\n    setNotesOccupied(notes) {\n        this.detach();\n        this.options.notesOccupied = notes;\n        this.resolveGlyphs();\n        this.attach();\n    }\n    resolveGlyphs() {\n        let numerator = '';\n        let denominator = '';\n        let n = this.options.numNotes;\n        while (n >= 1) {\n            numerator = String.fromCharCode(0xe880 + (n % 10)) + numerator;\n            n = Math.floor(n / 10);\n        }\n        if (this.options.ratioed) {\n            n = this.options.notesOccupied;\n            while (n >= 1) {\n                denominator = String.fromCharCode(0xe880 + (n % 10)) + denominator;\n                n = Math.floor(n / 10);\n            }\n            denominator = Glyphs.tupletColon + denominator;\n        }\n        this.textElement.setText(numerator + denominator);\n    }\n    getNestedTupletCount() {\n        const { location } = this.options;\n        const firstNote = this.notes[0];\n        let maxTupletCount = countTuplets(firstNote, location);\n        let minTupletCount = countTuplets(firstNote, location);\n        function countTuplets(note, location) {\n            return note.getTupletStack().filter((tuplet) => tuplet.options.location === location).length;\n        }\n        this.notes.forEach((note) => {\n            const tupletCount = countTuplets(note, location);\n            maxTupletCount = tupletCount > maxTupletCount ? tupletCount : maxTupletCount;\n            minTupletCount = tupletCount < minTupletCount ? tupletCount : minTupletCount;\n        });\n        return maxTupletCount - minTupletCount;\n    }\n    getYPosition() {\n        var _a;\n        const nestedTupletYOffset = this.getNestedTupletCount() * Tuplet.NESTING_OFFSET * -this.options.location;\n        const yOffset = (_a = this.options.yOffset) !== null && _a !== void 0 ? _a : 0;\n        const firstNote = this.notes[0];\n        let yPosition;\n        if (this.options.location === Tuplet.LOCATION_TOP) {\n            yPosition = firstNote.checkStave().getYForLine(0) - 1.5 * Tables.STAVE_LINE_DISTANCE;\n            for (let i = 0; i < this.notes.length; ++i) {\n                const note = this.notes[i];\n                let modLines = 0;\n                const mc = note.getModifierContext();\n                if (mc) {\n                    modLines = Math.max(modLines, mc.getState().topTextLine);\n                }\n                const modY = note.getYForTopText(modLines) - 2 * Tables.STAVE_LINE_DISTANCE;\n                if (note.hasStem() || note.isRest()) {\n                    const topY = note.getStemDirection() === Stem.UP\n                        ? note.getStemExtents().topY - Tables.STAVE_LINE_DISTANCE\n                        : note.getStemExtents().baseY - 2 * Tables.STAVE_LINE_DISTANCE;\n                    yPosition = Math.min(topY, yPosition);\n                    if (modLines > 0) {\n                        yPosition = Math.min(modY, yPosition);\n                    }\n                }\n            }\n        }\n        else {\n            let lineCheck = 4;\n            this.notes.forEach((nn) => {\n                const mc = nn.getModifierContext();\n                if (mc) {\n                    lineCheck = Math.max(lineCheck, mc.getState().textLine + 1);\n                }\n            });\n            yPosition = firstNote.checkStave().getYForLine(lineCheck) + 2 * Tables.STAVE_LINE_DISTANCE;\n            for (let i = 0; i < this.notes.length; ++i) {\n                if (this.notes[i].hasStem() || this.notes[i].isRest()) {\n                    const bottomY = this.notes[i].getStemDirection() === Stem.UP\n                        ? this.notes[i].getStemExtents().baseY + 2 * Tables.STAVE_LINE_DISTANCE\n                        : this.notes[i].getStemExtents().topY + Tables.STAVE_LINE_DISTANCE;\n                    if (bottomY > yPosition) {\n                        yPosition = bottomY;\n                    }\n                }\n            }\n        }\n        return yPosition + nestedTupletYOffset + yOffset;\n    }\n    draw() {\n        const { location, bracketed, textYOffset } = this.options;\n        const ctx = this.checkContext();\n        let xPos = 0;\n        let yPos = 0;\n        const firstNote = this.notes[0];\n        const lastNote = this.notes[this.notes.length - 1];\n        if (!bracketed) {\n            xPos = firstNote.getStemX();\n            this.width = lastNote.getStemX() - xPos;\n        }\n        else {\n            xPos = firstNote.getTieLeftX() - 5;\n            this.width = lastNote.getTieRightX() - xPos + 5;\n        }\n        yPos = this.getYPosition();\n        const notationCenterX = xPos + this.width / 2;\n        const notationStartX = notationCenterX - this.textElement.getWidth() / 2;\n        ctx.openGroup('tuplet', this.getAttribute('id'));\n        if (bracketed) {\n            const lineWidth = this.width / 2 - this.textElement.getWidth() / 2 - 5;\n            if (lineWidth > 0) {\n                ctx.fillRect(xPos, yPos, lineWidth, 1);\n                ctx.fillRect(xPos + this.width / 2 + this.textElement.getWidth() / 2 + 5, yPos, lineWidth, 1);\n                ctx.fillRect(xPos, yPos + (location === Tuplet.LOCATION_BOTTOM ? 1 : 0), 1, location * 10);\n                ctx.fillRect(xPos + this.width, yPos + (location === Tuplet.LOCATION_BOTTOM ? 1 : 0), 1, location * 10);\n            }\n        }\n        this.textElement.renderText(ctx, notationStartX, yPos + this.textElement.getHeight() / 2 + (location === Tuplet.LOCATION_TOP ? -1 : 1) * textYOffset);\n        const bb = this.getBoundingBox();\n        ctx.pointerRect(bb.getX(), bb.getY(), bb.getW(), bb.getH());\n        ctx.closeGroup();\n        this.setRendered();\n    }\n}\n","import { Element } from './element.js';\nimport { log } from './util.js';\nimport { Vibrato } from './vibrato.js';\nfunction L(...args) {\n    if (VibratoBracket.DEBUG)\n        log('VexFlow.VibratoBracket', args);\n}\nexport class VibratoBracket extends Element {\n    static get CATEGORY() {\n        return \"VibratoBracket\";\n    }\n    constructor(bracketData) {\n        super();\n        this.vibrato = new Vibrato();\n        if (bracketData.start)\n            this.start = bracketData.start;\n        if (bracketData.stop)\n            this.stop = bracketData.stop;\n        this.line = 1;\n    }\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    setVibratoCode(code) {\n        this.vibrato.setVibratoCode(code);\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const y = (this.start && this.start.checkStave().getYForTopText(this.line)) ||\n            (this.stop && this.stop.checkStave().getYForTopText(this.line)) ||\n            0;\n        const startX = (this.start && this.start.getAbsoluteX()) || (this.stop && this.stop.checkStave().getTieStartX()) || 0;\n        const stopX = (this.stop && this.stop.getAbsoluteX() - this.stop.getWidth() - 5) ||\n            (this.start && this.start.checkStave().getTieEndX() - 10) ||\n            0;\n        this.vibrato.setVibratoWidth(stopX - startX);\n        L('Rendering VibratoBracket: startX:', startX, 'stopX:', stopX, 'y:', y);\n        this.vibrato.renderText(ctx, startX, y);\n    }\n}\nVibratoBracket.DEBUG = false;\n","import { Accidental } from './accidental.js';\nimport { Annotation, AnnotationHorizontalJustify, AnnotationVerticalJustify } from './annotation.js';\nimport { Articulation } from './articulation.js';\nimport { BarNote } from './barnote.js';\nimport { Beam } from './beam.js';\nimport { ChordSymbol } from './chordsymbol.js';\nimport { ClefNote } from './clefnote.js';\nimport { Curve } from './curve.js';\nimport { EasyScore } from './easyscore.js';\nimport { Formatter } from './formatter.js';\nimport { FretHandFinger } from './frethandfinger.js';\nimport { GhostNote } from './ghostnote.js';\nimport { GlyphNote } from './glyphnote.js';\nimport { GraceNote } from './gracenote.js';\nimport { GraceNoteGroup } from './gracenotegroup.js';\nimport { KeySigNote } from './keysignote.js';\nimport { ModifierContext } from './modifiercontext.js';\nimport { MultiMeasureRest } from './multimeasurerest.js';\nimport { NoteSubGroup } from './notesubgroup.js';\nimport { Ornament } from './ornament.js';\nimport { PedalMarking } from './pedalmarking.js';\nimport { Renderer } from './renderer.js';\nimport { RepeatNote } from './repeatnote.js';\nimport { Stave } from './stave.js';\nimport { StaveConnector } from './staveconnector.js';\nimport { StaveLine } from './staveline.js';\nimport { StaveNote } from './stavenote.js';\nimport { StaveTie } from './stavetie.js';\nimport { StringNumber } from './stringnumber.js';\nimport { System } from './system.js';\nimport { TabNote } from './tabnote.js';\nimport { TabStave } from './tabstave.js';\nimport { TextBracket } from './textbracket.js';\nimport { TextDynamics } from './textdynamics.js';\nimport { TextNote } from './textnote.js';\nimport { TickContext } from './tickcontext.js';\nimport { TimeSigNote } from './timesignote.js';\nimport { Tuplet } from './tuplet.js';\nimport { defined, log, RuntimeError } from './util.js';\nimport { VibratoBracket } from './vibratobracket.js';\nimport { Voice } from './voice.js';\nimport { isHTMLCanvas } from './web.js';\nfunction L(...args) {\n    if (Factory.DEBUG)\n        log('VexFlow.Factory', args);\n}\nexport class Factory {\n    static newFromElementId(elementId, width = 500, height = 200) {\n        return new Factory({ renderer: { elementId, width, height } });\n    }\n    constructor(options = {}) {\n        L('New factory: ', options);\n        this.options = {\n            stave: {\n                space: 10,\n            },\n            renderer: {\n                elementId: '',\n                width: 500,\n                height: 200,\n                background: '#FFF',\n            },\n        };\n        this.setOptions(options);\n    }\n    reset() {\n        this.renderQ = [];\n        this.systems = [];\n        this.staves = [];\n        this.voices = [];\n        this.stave = undefined;\n    }\n    setOptions(options) {\n        this.options = Object.assign(Object.assign({}, this.options), options);\n        this.initRenderer();\n        this.reset();\n    }\n    initRenderer() {\n        const { elementId, width, height, background } = this.options.renderer;\n        if (elementId === null) {\n            return;\n        }\n        if (elementId === '') {\n            L(this);\n            throw new RuntimeError('renderer.elementId not set in FactoryOptions');\n        }\n        let backend = this.options.renderer.backend;\n        if (backend === undefined) {\n            const elem = document.getElementById(elementId);\n            if (isHTMLCanvas(elem)) {\n                backend = Renderer.Backends.CANVAS;\n            }\n            else {\n                backend = Renderer.Backends.SVG;\n            }\n        }\n        this.context = Renderer.buildContext(elementId, backend, width, height, background);\n    }\n    getContext() {\n        return this.context;\n    }\n    setContext(context) {\n        this.context = context;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    getVoices() {\n        return this.voices;\n    }\n    Stave(params) {\n        const staveSpace = this.options.stave.space;\n        const p = Object.assign({ x: 0, y: 0, width: this.options.renderer.width - staveSpace * 1.0, options: { spacingBetweenLinesPx: staveSpace * 1.0 } }, params);\n        const stave = new Stave(p.x, p.y, p.width, p.options);\n        this.staves.push(stave);\n        stave.setContext(this.context);\n        this.stave = stave;\n        return stave;\n    }\n    TabStave(params) {\n        const staveSpace = this.options.stave.space;\n        const p = Object.assign({ x: 0, y: 0, width: this.options.renderer.width - staveSpace * 1.0, options: { spacingBetweenLinesPx: staveSpace * 1.3 } }, params);\n        const stave = new TabStave(p.x, p.y, p.width, p.options);\n        this.staves.push(stave);\n        stave.setContext(this.context);\n        this.stave = stave;\n        return stave;\n    }\n    StaveNote(noteStruct) {\n        const note = new StaveNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GlyphNote(glyph, noteStruct, options) {\n        const note = new GlyphNote(glyph, noteStruct, options);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    RepeatNote(type, noteStruct, options) {\n        const note = new RepeatNote(type, noteStruct, options);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GhostNote(noteStruct) {\n        const ghostNote = new GhostNote(noteStruct);\n        if (this.stave)\n            ghostNote.setStave(this.stave);\n        ghostNote.setContext(this.context);\n        this.renderQ.push(ghostNote);\n        return ghostNote;\n    }\n    TextNote(noteStruct) {\n        const textNote = new TextNote(noteStruct);\n        if (this.stave)\n            textNote.setStave(this.stave);\n        textNote.setContext(this.context);\n        this.renderQ.push(textNote);\n        return textNote;\n    }\n    BarNote(params = {}) {\n        const barNote = new BarNote(params.type);\n        if (this.stave)\n            barNote.setStave(this.stave);\n        barNote.setContext(this.context);\n        this.renderQ.push(barNote);\n        return barNote;\n    }\n    ClefNote(params) {\n        const p = Object.assign({ type: 'treble', options: {\n                size: 'default',\n                annotation: undefined,\n            } }, params);\n        const clefNote = new ClefNote(p.type, p.options.size, p.options.annotation);\n        if (this.stave)\n            clefNote.setStave(this.stave);\n        clefNote.setContext(this.context);\n        this.renderQ.push(clefNote);\n        return clefNote;\n    }\n    TimeSigNote(params) {\n        const p = Object.assign({ time: '4/4' }, params);\n        const timeSigNote = new TimeSigNote(p.time);\n        if (this.stave)\n            timeSigNote.setStave(this.stave);\n        timeSigNote.setContext(this.context);\n        this.renderQ.push(timeSigNote);\n        return timeSigNote;\n    }\n    KeySigNote(params) {\n        const keySigNote = new KeySigNote(params.key, params.cancelKey, params.alterKey);\n        if (this.stave)\n            keySigNote.setStave(this.stave);\n        keySigNote.setContext(this.context);\n        this.renderQ.push(keySigNote);\n        return keySigNote;\n    }\n    TabNote(noteStruct) {\n        const note = new TabNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GraceNote(noteStruct) {\n        const note = new GraceNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        return note;\n    }\n    GraceNoteGroup(params) {\n        const group = new GraceNoteGroup(params.notes, params.slur);\n        group.setContext(this.context);\n        return group;\n    }\n    Accidental(params) {\n        const accid = new Accidental(params.type);\n        accid.setContext(this.context);\n        return accid;\n    }\n    Annotation(params) {\n        const p = Object.assign({ text: 'p', hJustify: AnnotationHorizontalJustify.CENTER, vJustify: AnnotationVerticalJustify.BOTTOM }, params);\n        const annotation = new Annotation(p.text);\n        annotation.setJustification(p.hJustify);\n        annotation.setVerticalJustification(p.vJustify);\n        annotation.setFont(p.font);\n        annotation.setContext(this.context);\n        return annotation;\n    }\n    ChordSymbol(params) {\n        const p = Object.assign({ vJustify: 'top', hJustify: 'center' }, params);\n        const chordSymbol = new ChordSymbol();\n        chordSymbol.setHorizontal(p.hJustify);\n        chordSymbol.setVertical(p.vJustify);\n        if (typeof p.fontFamily === 'string' && typeof p.fontSize === 'number') {\n            if (typeof p.fontWeight === 'string')\n                chordSymbol.setFont(p.fontFamily, p.fontSize, p.fontWeight);\n            else\n                chordSymbol.setFont(p.fontFamily, p.fontSize, '');\n        }\n        else if (typeof p.fontSize === 'number') {\n            chordSymbol.setFontSize(p.fontSize);\n        }\n        chordSymbol.setContext(this.context);\n        return chordSymbol;\n    }\n    Articulation(params) {\n        var _a;\n        const articulation = new Articulation((_a = params === null || params === void 0 ? void 0 : params.type) !== null && _a !== void 0 ? _a : 'a.');\n        if ((params === null || params === void 0 ? void 0 : params.position) !== undefined)\n            articulation.setPosition(params.position);\n        if ((params === null || params === void 0 ? void 0 : params.betweenLines) !== undefined)\n            articulation.setBetweenLines(params.betweenLines);\n        articulation.setContext(this.context);\n        return articulation;\n    }\n    Ornament(type, params) {\n        const options = Object.assign({ type, accidental: '' }, params);\n        const ornament = new Ornament(type);\n        if ((params === null || params === void 0 ? void 0 : params.position) !== undefined) {\n            ornament.setPosition(params.position);\n        }\n        if (options.upperAccidental) {\n            ornament.setUpperAccidental(options.upperAccidental);\n        }\n        if (options.lowerAccidental) {\n            ornament.setLowerAccidental(options.lowerAccidental);\n        }\n        if (typeof options.delayed !== 'undefined') {\n            ornament.setDelayed(options.delayed);\n        }\n        ornament.setContext(this.context);\n        return ornament;\n    }\n    TextDynamics(params) {\n        const p = Object.assign({ text: 'p', duration: 'q', dots: 0, line: 0 }, params);\n        const text = new TextDynamics({\n            text: p.text,\n            line: p.line,\n            duration: p.duration,\n            dots: p.dots,\n        });\n        if (this.stave)\n            text.setStave(this.stave);\n        text.setContext(this.context);\n        this.renderQ.push(text);\n        return text;\n    }\n    Fingering(params) {\n        const p = Object.assign({ number: '0', position: 'left' }, params);\n        const fingering = new FretHandFinger(p.number);\n        fingering.setPosition(p.position);\n        fingering.setContext(this.context);\n        return fingering;\n    }\n    StringNumber(params, drawCircle = true) {\n        const stringNumber = new StringNumber(params.number);\n        stringNumber.setPosition(params.position);\n        stringNumber.setContext(this.context);\n        stringNumber.setDrawCircle(drawCircle);\n        return stringNumber;\n    }\n    TickContext() {\n        return new TickContext();\n    }\n    ModifierContext() {\n        return new ModifierContext();\n    }\n    MultiMeasureRest(params) {\n        const numMeasures = defined(params.numberOfMeasures, 'NoNumberOfMeasures');\n        const multiMeasureRest = new MultiMeasureRest(numMeasures, params);\n        multiMeasureRest.setContext(this.context);\n        this.renderQ.push(multiMeasureRest);\n        return multiMeasureRest;\n    }\n    Voice(params) {\n        const p = Object.assign({ time: '4/4' }, params);\n        const voice = new Voice(p.time);\n        this.voices.push(voice);\n        return voice;\n    }\n    StaveConnector(params) {\n        const connector = new StaveConnector(params.topStave, params.bottomStave);\n        connector.setType(params.type).setContext(this.context);\n        this.renderQ.push(connector);\n        return connector;\n    }\n    Formatter(options) {\n        return new Formatter(options);\n    }\n    Tuplet(params) {\n        const p = Object.assign({ notes: [], options: {} }, params);\n        const tuplet = new Tuplet(p.notes, p.options).setContext(this.context);\n        this.renderQ.push(tuplet);\n        return tuplet;\n    }\n    Beam(params) {\n        var _a, _b, _c, _d, _e;\n        const beam = new Beam(params.notes, (_a = params.options) === null || _a === void 0 ? void 0 : _a.autoStem).setContext(this.context);\n        beam.breakSecondaryAt((_c = (_b = params.options) === null || _b === void 0 ? void 0 : _b.secondaryBeamBreaks) !== null && _c !== void 0 ? _c : []);\n        if ((_d = params.options) === null || _d === void 0 ? void 0 : _d.partialBeamDirections) {\n            Object.entries((_e = params.options) === null || _e === void 0 ? void 0 : _e.partialBeamDirections).forEach(([noteIndex, direction]) => {\n                beam.setPartialBeamSideAt(Number(noteIndex), direction);\n            });\n        }\n        this.renderQ.push(beam);\n        return beam;\n    }\n    Curve(params) {\n        const curve = new Curve(params.from, params.to, params.options).setContext(this.context);\n        this.renderQ.push(curve);\n        return curve;\n    }\n    StaveTie(params) {\n        var _a;\n        const tie = new StaveTie({\n            firstNote: params.from,\n            lastNote: params.to,\n            firstIndexes: params.firstIndexes,\n            lastIndexes: params.lastIndexes,\n        }, params.text);\n        if ((_a = params.options) === null || _a === void 0 ? void 0 : _a.direction)\n            tie.setDirection(params.options.direction);\n        tie.setContext(this.context);\n        this.renderQ.push(tie);\n        return tie;\n    }\n    StaveLine(params) {\n        var _a, _b;\n        const line = new StaveLine({\n            firstNote: params.from,\n            lastNote: params.to,\n            firstIndexes: params.firstIndexes,\n            lastIndexes: params.lastIndexes,\n        });\n        if ((_a = params.options) === null || _a === void 0 ? void 0 : _a.text)\n            line.setText(params.options.text);\n        if ((_b = params.options) === null || _b === void 0 ? void 0 : _b.font)\n            line.setFont(params.options.font);\n        line.setContext(this.context);\n        this.renderQ.push(line);\n        return line;\n    }\n    VibratoBracket(params) {\n        const vibratoBracket = new VibratoBracket({\n            start: params.from,\n            stop: params.to,\n        });\n        if (params.options.line)\n            vibratoBracket.setLine(params.options.line);\n        if (params.options.code)\n            vibratoBracket.setVibratoCode(params.options.code);\n        vibratoBracket.setContext(this.context);\n        this.renderQ.push(vibratoBracket);\n        return vibratoBracket;\n    }\n    TextBracket(params) {\n        const textBracket = new TextBracket({\n            start: params.from,\n            stop: params.to,\n            text: params.text,\n            superscript: params.options.superscript,\n            position: params.options.position,\n        });\n        if (params.options.line)\n            textBracket.setLine(params.options.line);\n        if (params.options.font)\n            textBracket.setFont(params.options.font);\n        textBracket.setContext(this.context);\n        this.renderQ.push(textBracket);\n        return textBracket;\n    }\n    System(params = {}) {\n        params.factory = this;\n        const system = new System(params).setContext(this.context);\n        this.systems.push(system);\n        return system;\n    }\n    EasyScore(options = {}) {\n        options.factory = this;\n        return new EasyScore(options);\n    }\n    PedalMarking(params) {\n        const p = Object.assign({ notes: [], options: {\n                style: 'mixed',\n            } }, params);\n        const pedal = new PedalMarking(p.notes);\n        pedal.setType(PedalMarking.typeString[p.options.style]);\n        pedal.setContext(this.context);\n        this.renderQ.push(pedal);\n        return pedal;\n    }\n    NoteSubGroup(params) {\n        const p = Object.assign({ notes: [] }, params);\n        const group = new NoteSubGroup(p.notes);\n        group.setContext(this.context);\n        return group;\n    }\n    draw() {\n        const ctx = this.context;\n        this.systems.forEach((s) => s.setContext(ctx).format());\n        this.staves.forEach((s) => s.setContext(ctx).drawWithStyle());\n        this.voices.forEach((v) => v.setContext(ctx).drawWithStyle());\n        this.renderQ.forEach((e) => {\n            if (!e.isRendered())\n                e.setContext(ctx).drawWithStyle();\n        });\n        this.systems.forEach((s) => s.setContext(ctx).drawWithStyle());\n        this.reset();\n    }\n}\nFactory.DEBUG = false;\n","import { Element } from './element.js';\nimport { Modifier } from './modifier.js';\nimport { RuntimeError } from './util.js';\nexport class StaveHairpin extends Element {\n    static get CATEGORY() {\n        return \"StaveHairpin\";\n    }\n    static FormatByTicksAndDraw(ctx, formatter, notes, type, position, options) {\n        var _a, _b;\n        const ppt = formatter.pixelsPerTick;\n        if (ppt === null) {\n            throw new RuntimeError('BadArguments', 'A valid Formatter must be provide to draw offsets by ticks.');\n        }\n        const leftShiftPx = ppt * ((_a = options.leftShiftTicks) !== null && _a !== void 0 ? _a : 0);\n        const rightShiftPx = ppt * ((_b = options.rightShiftTicks) !== null && _b !== void 0 ? _b : 0);\n        const hairpinOptions = {\n            height: options.height,\n            yShift: options.yShift,\n            leftShiftPx,\n            rightShiftPx,\n            rightShiftTicks: 0,\n            leftShiftTicks: 0,\n        };\n        new StaveHairpin({\n            firstNote: notes.firstNote,\n            lastNote: notes.lastNote,\n        }, type)\n            .setContext(ctx)\n            .setRenderOptions(hairpinOptions)\n            .setPosition(position)\n            .drawWithStyle();\n    }\n    constructor(notes, type) {\n        super();\n        this.setNotes(notes);\n        this.hairpin = type;\n        this.position = Modifier.Position.BELOW;\n        this.renderOptions = {\n            height: 10,\n            yShift: 0,\n            leftShiftPx: 0,\n            rightShiftPx: 0,\n            rightShiftTicks: 0,\n            leftShiftTicks: 0,\n        };\n    }\n    setPosition(position) {\n        if (position === Modifier.Position.ABOVE || position === Modifier.Position.BELOW) {\n            this.position = position;\n        }\n        return this;\n    }\n    setRenderOptions(options) {\n        this.renderOptions = options;\n        return this;\n    }\n    setNotes(notes) {\n        if (!notes.firstNote && !notes.lastNote) {\n            throw new RuntimeError('BadArguments', 'Hairpin needs to have either firstNote or lastNote set.');\n        }\n        this.notes = notes;\n        this.firstNote = notes.firstNote;\n        this.lastNote = notes.lastNote;\n        return this;\n    }\n    renderHairpin(params) {\n        const ctx = this.checkContext();\n        let dis = this.renderOptions.yShift + 20;\n        let yShift = params.firstY;\n        if (this.position === Modifier.Position.ABOVE) {\n            dis = -dis + 30;\n            yShift = params.firstY - params.staffHeight;\n        }\n        const leftShiftPx = this.renderOptions.leftShiftPx;\n        const rightShiftPx = this.renderOptions.rightShiftPx;\n        ctx.beginPath();\n        switch (this.hairpin) {\n            case StaveHairpin.type.CRESC:\n                ctx.moveTo(params.lastX + rightShiftPx, yShift + dis);\n                ctx.lineTo(params.firstX + leftShiftPx, yShift + this.renderOptions.height / 2 + dis);\n                ctx.lineTo(params.lastX + rightShiftPx, yShift + this.renderOptions.height + dis);\n                break;\n            case StaveHairpin.type.DECRESC:\n                ctx.moveTo(params.firstX + leftShiftPx, yShift + dis);\n                ctx.lineTo(params.lastX + rightShiftPx, yShift + this.renderOptions.height / 2 + dis);\n                ctx.lineTo(params.firstX + leftShiftPx, yShift + this.renderOptions.height + dis);\n                break;\n            default:\n                break;\n        }\n        ctx.stroke();\n        ctx.closePath();\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        const firstNote = this.firstNote;\n        const lastNote = this.lastNote;\n        if (!firstNote || !lastNote)\n            throw new RuntimeError('NoNote', 'Notes required to draw');\n        const start = firstNote.getModifierStartXY(this.position, 0);\n        const end = lastNote.getModifierStartXY(this.position, 0);\n        this.renderHairpin({\n            firstX: start.x,\n            lastX: end.x,\n            firstY: firstNote.checkStave().getY() + firstNote.checkStave().getHeight(),\n            lastY: lastNote.checkStave().getY() + lastNote.checkStave().getHeight(),\n            staffHeight: firstNote.checkStave().getHeight(),\n        });\n    }\n}\nStaveHairpin.type = {\n    CRESC: 1,\n    DECRESC: 2,\n};\n","import { TabTie } from './tabtie.js';\nimport { RuntimeError } from './util.js';\nexport class TabSlide extends TabTie {\n    static get CATEGORY() {\n        return \"TabSlide\";\n    }\n    static get SLIDE_UP() {\n        return 1;\n    }\n    static get SLIDE_DOWN() {\n        return -1;\n    }\n    static createSlideUp(notes) {\n        return new TabSlide(notes, TabSlide.SLIDE_UP);\n    }\n    static createSlideDown(notes) {\n        return new TabSlide(notes, TabSlide.SLIDE_DOWN);\n    }\n    constructor(notes, direction) {\n        super(notes, 'sl.');\n        if (!direction) {\n            let firstFret = notes.firstNote.getPositions()[0].fret;\n            if (typeof firstFret === 'string') {\n                firstFret = parseInt(firstFret, 10);\n            }\n            let lastFret = notes.lastNote.getPositions()[0].fret;\n            if (typeof lastFret === 'string') {\n                lastFret = parseInt(lastFret, 10);\n            }\n            if (isNaN(firstFret) || isNaN(lastFret)) {\n                direction = TabSlide.SLIDE_UP;\n            }\n            else {\n                direction = firstFret > lastFret ? TabSlide.SLIDE_DOWN : TabSlide.SLIDE_UP;\n            }\n        }\n        this.direction = direction;\n        this.renderOptions.cp1 = 11;\n        this.renderOptions.cp2 = 14;\n        this.renderOptions.yShift = 0.5;\n    }\n    renderTie(params) {\n        if (params.firstYs.length === 0 || params.lastYs.length === 0) {\n            throw new RuntimeError('BadArguments', 'No Y-values to render');\n        }\n        const ctx = this.checkContext();\n        const firstX = params.firstX;\n        const firstYs = params.firstYs;\n        const lastX = params.lastX;\n        const direction = params.direction;\n        if (direction !== TabSlide.SLIDE_UP && direction !== TabSlide.SLIDE_DOWN) {\n            throw new RuntimeError('BadSlide', 'Invalid slide direction');\n        }\n        const firstIndexes = this.notes.firstIndexes;\n        for (let i = 0; i < firstIndexes.length; ++i) {\n            const slideY = firstYs[firstIndexes[i]] + this.renderOptions.yShift;\n            if (isNaN(slideY)) {\n                throw new RuntimeError('BadArguments', 'Bad indexes for slide rendering.');\n            }\n            ctx.beginPath();\n            ctx.moveTo(firstX, slideY + 3 * direction);\n            ctx.lineTo(lastX, slideY - 3 * direction);\n            ctx.closePath();\n            ctx.stroke();\n        }\n        this.setRendered();\n    }\n}\n","import { Tables } from './tables.js';\nimport { RuntimeError } from './util.js';\nexport class Tuning {\n    static get names() {\n        return {\n            standard: 'E/5,B/4,G/4,D/4,A/3,E/3',\n            dagdad: 'D/5,A/4,G/4,D/4,A/3,D/3',\n            dropd: 'E/5,B/4,G/4,D/4,A/3,D/3',\n            eb: 'Eb/5,Bb/4,Gb/4,Db/4,Ab/3,Db/3',\n            standardBanjo: 'D/5,B/4,G/4,D/4,G/5',\n        };\n    }\n    constructor(tuningString = 'E/5,B/4,G/4,D/4,A/3,E/3,B/2,E/2') {\n        this.tuningValues = [];\n        this.setTuning(tuningString);\n    }\n    noteToInteger(noteString) {\n        var _a;\n        return (_a = Tables.keyProperties(noteString).intValue) !== null && _a !== void 0 ? _a : -1;\n    }\n    setTuning(tuningString) {\n        if (Tuning.names[tuningString]) {\n            tuningString = Tuning.names[tuningString];\n        }\n        this.tuningValues = [];\n        const keys = tuningString.split(/\\s*,\\s*/);\n        if (keys.length === 0) {\n            throw new RuntimeError('BadArguments', `Invalid tuning string: ${tuningString}`);\n        }\n        for (let i = 0; i < keys.length; ++i) {\n            this.tuningValues[i] = this.noteToInteger(keys[i]);\n        }\n    }\n    getValueForString(stringNum) {\n        const s = Number(stringNum);\n        if (s < 1 || s > this.tuningValues.length) {\n            throw new RuntimeError('BadArguments', `String number must be between 1 and ${this.tuningValues.length}:${stringNum}`);\n        }\n        return this.tuningValues[s - 1];\n    }\n    getValueForFret(fretNum, stringNum) {\n        const stringValue = this.getValueForString(stringNum);\n        const f = Number(fretNum);\n        if (f < 0) {\n            throw new RuntimeError('BadArguments', `Fret number must be 0 or higher: ${fretNum}`);\n        }\n        return stringValue + f;\n    }\n    getNoteForFret(fretNum, stringNum) {\n        const noteValue = this.getValueForFret(fretNum, stringNum);\n        const octave = Math.floor(noteValue / 12);\n        const value = noteValue % 12;\n        return `${Tables.integerToNote(value)}/${octave}`;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Accidental } from './accidental.js';\nimport { Annotation, AnnotationHorizontalJustify, AnnotationVerticalJustify } from './annotation.js';\nimport { Articulation } from './articulation.js';\nimport { BarNote } from './barnote.js';\nimport { Beam } from './beam.js';\nimport { Bend } from './bend.js';\nimport { BoundingBox } from './boundingbox.js';\nimport { CanvasContext } from './canvascontext.js';\nimport { ChordSymbol, ChordSymbolHorizontalJustify, ChordSymbolVerticalJustify, SymbolModifiers } from './chordsymbol.js';\nimport { Clef } from './clef.js';\nimport { ClefNote } from './clefnote.js';\nimport { Crescendo } from './crescendo.js';\nimport { Curve, CurvePosition } from './curve.js';\nimport { Dot } from './dot.js';\nimport { EasyScore } from './easyscore.js';\nimport { Element } from './element.js';\nimport { Factory } from './factory.js';\nimport { Font, FontStyle, FontWeight } from './font.js';\nimport { Formatter } from './formatter.js';\nimport { Fraction } from './fraction.js';\nimport { FretHandFinger } from './frethandfinger.js';\nimport { GhostNote } from './ghostnote.js';\nimport { GlyphNote } from './glyphnote.js';\nimport { Glyphs } from './glyphs.js';\nimport { GraceNote } from './gracenote.js';\nimport { GraceNoteGroup } from './gracenotegroup.js';\nimport { GraceTabNote } from './gracetabnote.js';\nimport { KeyManager } from './keymanager.js';\nimport { KeySignature } from './keysignature.js';\nimport { KeySigNote } from './keysignote.js';\nimport { Metrics, MetricsDefaults } from './metrics.js';\nimport { Modifier, ModifierPosition } from './modifier.js';\nimport { ModifierContext } from './modifiercontext.js';\nimport { MultiMeasureRest } from './multimeasurerest.js';\nimport { Music } from './music.js';\nimport { Note } from './note.js';\nimport { NoteHead } from './notehead.js';\nimport { NoteSubGroup } from './notesubgroup.js';\nimport { Ornament } from './ornament.js';\nimport { Parenthesis } from './parenthesis.js';\nimport { Parser } from './parser.js';\nimport { PedalMarking } from './pedalmarking.js';\nimport { Registry } from './registry.js';\nimport { RenderContext } from './rendercontext.js';\nimport { Renderer, RendererBackends, RendererLineEndType } from './renderer.js';\nimport { RepeatNote } from './repeatnote.js';\nimport { Stave } from './stave.js';\nimport { Barline, BarlineType } from './stavebarline.js';\nimport { StaveConnector } from './staveconnector.js';\nimport { StaveHairpin } from './stavehairpin.js';\nimport { StaveLine } from './staveline.js';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier.js';\nimport { StaveNote } from './stavenote.js';\nimport { Repetition } from './staverepetition.js';\nimport { StaveTempo } from './stavetempo.js';\nimport { StaveText } from './stavetext.js';\nimport { StaveTie } from './stavetie.js';\nimport { Volta, VoltaType } from './stavevolta.js';\nimport { Stem } from './stem.js';\nimport { StringNumber } from './stringnumber.js';\nimport { Stroke } from './strokes.js';\nimport { SVGContext } from './svgcontext.js';\nimport { System } from './system.js';\nimport { Tables } from './tables.js';\nimport { TabNote } from './tabnote.js';\nimport { TabSlide } from './tabslide.js';\nimport { TabStave } from './tabstave.js';\nimport { TabTie } from './tabtie.js';\nimport { TextBracket, TextBracketPosition } from './textbracket.js';\nimport { TextDynamics } from './textdynamics.js';\nimport { TextJustification, TextNote } from './textnote.js';\nimport { TickContext } from './tickcontext.js';\nimport { TimeSignature } from './timesignature.js';\nimport { TimeSigNote } from './timesignote.js';\nimport { Tremolo } from './tremolo.js';\nimport { Tuning } from './tuning.js';\nimport { Tuplet } from './tuplet.js';\nimport { RuntimeError } from './util.js';\nimport { DATE, ID, VERSION } from './version.js';\nimport { Vibrato } from './vibrato.js';\nimport { VibratoBracket } from './vibratobracket.js';\nimport { Voice, VoiceMode } from './voice.js';\nexport class VexFlow {\n    static loadFonts(...fontNames) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!fontNames) {\n                fontNames = Object.keys(Font.FILES);\n            }\n            const fontLoadPromises = [];\n            for (const fontName of fontNames) {\n                fontLoadPromises.push(Font.load(fontName));\n            }\n            yield Promise.all(fontLoadPromises);\n        });\n    }\n    static setFonts(...fontNames) {\n        MetricsDefaults.fontFamily = fontNames.join(',');\n        Metrics.clear();\n    }\n    static getFonts() {\n        return Metrics.get('fontFamily').split(',');\n    }\n    static get RENDER_PRECISION_PLACES() {\n        return Tables.RENDER_PRECISION_PLACES;\n    }\n    static set RENDER_PRECISION_PLACES(precision) {\n        Tables.RENDER_PRECISION_PLACES = precision;\n    }\n    static get SOFTMAX_FACTOR() {\n        return Tables.SOFTMAX_FACTOR;\n    }\n    static set SOFTMAX_FACTOR(factor) {\n        Tables.SOFTMAX_FACTOR = factor;\n    }\n    static get UNISON() {\n        return Tables.UNISON;\n    }\n    static set UNISON(unison) {\n        Tables.UNISON = unison;\n    }\n    static get NOTATION_FONT_SCALE() {\n        return Tables.NOTATION_FONT_SCALE;\n    }\n    static set NOTATION_FONT_SCALE(value) {\n        Tables.NOTATION_FONT_SCALE = value;\n    }\n    static get TABLATURE_FONT_SCALE() {\n        return Tables.TABLATURE_FONT_SCALE;\n    }\n    static set TABLATURE_FONT_SCALE(value) {\n        Tables.TABLATURE_FONT_SCALE = value;\n    }\n    static get RESOLUTION() {\n        return Tables.RESOLUTION;\n    }\n    static set RESOLUTION(value) {\n        Tables.RESOLUTION = value;\n    }\n    static get SLASH_NOTEHEAD_WIDTH() {\n        return Tables.SLASH_NOTEHEAD_WIDTH;\n    }\n    static set SLASH_NOTEHEAD_WIDTH(value) {\n        Tables.SLASH_NOTEHEAD_WIDTH = value;\n    }\n    static get STAVE_LINE_DISTANCE() {\n        return Tables.STAVE_LINE_DISTANCE;\n    }\n    static set STAVE_LINE_DISTANCE(value) {\n        Tables.STAVE_LINE_DISTANCE = value;\n    }\n    static get STAVE_LINE_THICKNESS() {\n        return MetricsDefaults.Stave.lineWidth;\n    }\n    static set STAVE_LINE_THICKNESS(value) {\n        MetricsDefaults.Stave.lineWidth = value;\n        MetricsDefaults.TabStave.lineWidth = value;\n        Metrics.clear('Stave');\n        Metrics.clear('TabStave');\n    }\n    static get STEM_HEIGHT() {\n        return Tables.STEM_HEIGHT;\n    }\n    static set STEM_HEIGHT(value) {\n        Tables.STEM_HEIGHT = value;\n    }\n    static get STEM_WIDTH() {\n        return Tables.STEM_WIDTH;\n    }\n    static set STEM_WIDTH(value) {\n        Tables.STEM_WIDTH = value;\n    }\n    static get TIME4_4() {\n        return Tables.TIME4_4;\n    }\n    static get unicode() {\n        return Tables.unicode;\n    }\n    static keySignature(spec) {\n        return Tables.keySignature(spec);\n    }\n    static hasKeySignature(spec) {\n        return Tables.hasKeySignature(spec);\n    }\n    static getKeySignatures() {\n        return Tables.getKeySignatures();\n    }\n    static clefProperties(clef) {\n        return Tables.clefProperties(clef);\n    }\n    static keyProperties(key, clef, params) {\n        return Tables.keyProperties(key, clef, params);\n    }\n    static durationToTicks(duration) {\n        return Tables.durationToTicks(duration);\n    }\n}\nVexFlow.BUILD = {\n    VERSION: VERSION,\n    ID: ID,\n    DATE: DATE,\n    INFO: '',\n};\nVexFlow.Accidental = Accidental;\nVexFlow.Annotation = Annotation;\nVexFlow.Articulation = Articulation;\nVexFlow.Barline = Barline;\nVexFlow.BarNote = BarNote;\nVexFlow.Beam = Beam;\nVexFlow.Bend = Bend;\nVexFlow.BoundingBox = BoundingBox;\nVexFlow.CanvasContext = CanvasContext;\nVexFlow.ChordSymbol = ChordSymbol;\nVexFlow.Clef = Clef;\nVexFlow.ClefNote = ClefNote;\nVexFlow.Crescendo = Crescendo;\nVexFlow.Curve = Curve;\nVexFlow.Dot = Dot;\nVexFlow.EasyScore = EasyScore;\nVexFlow.Element = Element;\nVexFlow.Factory = Factory;\nVexFlow.Font = Font;\nVexFlow.Formatter = Formatter;\nVexFlow.Fraction = Fraction;\nVexFlow.FretHandFinger = FretHandFinger;\nVexFlow.GhostNote = GhostNote;\nVexFlow.GlyphNote = GlyphNote;\nVexFlow.GraceNote = GraceNote;\nVexFlow.GraceNoteGroup = GraceNoteGroup;\nVexFlow.GraceTabNote = GraceTabNote;\nVexFlow.KeyManager = KeyManager;\nVexFlow.KeySignature = KeySignature;\nVexFlow.KeySigNote = KeySigNote;\nVexFlow.Modifier = Modifier;\nVexFlow.ModifierContext = ModifierContext;\nVexFlow.MultiMeasureRest = MultiMeasureRest;\nVexFlow.Music = Music;\nVexFlow.Note = Note;\nVexFlow.NoteHead = NoteHead;\nVexFlow.NoteSubGroup = NoteSubGroup;\nVexFlow.Ornament = Ornament;\nVexFlow.Parenthesis = Parenthesis;\nVexFlow.Parser = Parser;\nVexFlow.PedalMarking = PedalMarking;\nVexFlow.Registry = Registry;\nVexFlow.RenderContext = RenderContext;\nVexFlow.Renderer = Renderer;\nVexFlow.RepeatNote = RepeatNote;\nVexFlow.Repetition = Repetition;\nVexFlow.Stave = Stave;\nVexFlow.StaveConnector = StaveConnector;\nVexFlow.StaveHairpin = StaveHairpin;\nVexFlow.StaveLine = StaveLine;\nVexFlow.StaveModifier = StaveModifier;\nVexFlow.StaveNote = StaveNote;\nVexFlow.StaveTempo = StaveTempo;\nVexFlow.StaveText = StaveText;\nVexFlow.StaveTie = StaveTie;\nVexFlow.Stem = Stem;\nVexFlow.StringNumber = StringNumber;\nVexFlow.Stroke = Stroke;\nVexFlow.SVGContext = SVGContext;\nVexFlow.System = System;\nVexFlow.TabNote = TabNote;\nVexFlow.TabSlide = TabSlide;\nVexFlow.TabStave = TabStave;\nVexFlow.TabTie = TabTie;\nVexFlow.TextBracket = TextBracket;\nVexFlow.TextDynamics = TextDynamics;\nVexFlow.TextNote = TextNote;\nVexFlow.TickContext = TickContext;\nVexFlow.TimeSignature = TimeSignature;\nVexFlow.TimeSigNote = TimeSigNote;\nVexFlow.Tremolo = Tremolo;\nVexFlow.Tuning = Tuning;\nVexFlow.Tuplet = Tuplet;\nVexFlow.Vibrato = Vibrato;\nVexFlow.VibratoBracket = VibratoBracket;\nVexFlow.Voice = Voice;\nVexFlow.Volta = Volta;\nVexFlow.RuntimeError = RuntimeError;\nVexFlow.Test = undefined;\nVexFlow.AnnotationHorizontalJustify = AnnotationHorizontalJustify;\nVexFlow.AnnotationVerticalJustify = AnnotationVerticalJustify;\nVexFlow.ChordSymbolHorizontalJustify = ChordSymbolHorizontalJustify;\nVexFlow.ChordSymbolVerticalJustify = ChordSymbolVerticalJustify;\nVexFlow.SymbolModifiers = SymbolModifiers;\nVexFlow.CurvePosition = CurvePosition;\nVexFlow.FontWeight = FontWeight;\nVexFlow.FontStyle = FontStyle;\nVexFlow.Glyphs = Glyphs;\nVexFlow.ModifierPosition = ModifierPosition;\nVexFlow.RendererBackends = RendererBackends;\nVexFlow.RendererLineEndType = RendererLineEndType;\nVexFlow.BarlineType = BarlineType;\nVexFlow.StaveModifierPosition = StaveModifierPosition;\nVexFlow.VoltaType = VoltaType;\nVexFlow.TextBracketPosition = TextBracketPosition;\nVexFlow.TextJustification = TextJustification;\nVexFlow.VoiceMode = VoiceMode;\n","export const VERSION = '5.0.0';\nexport const ID = '0ca6f889545c33cce851b420c24945f6eb685aeb';\nexport const DATE = '2025-03-05T17:05:43.991Z';","import { TabNote } from './tabnote.js';\nexport class GraceTabNote extends TabNote {\n    static get CATEGORY() {\n        return \"GraceTabNote\";\n    }\n    constructor(noteStruct) {\n        super(noteStruct, false);\n        this.renderOptions = Object.assign(Object.assign({}, this.renderOptions), { yShift: 0.3 });\n        this.updateWidth();\n    }\n}\n","import { Music } from './music.js';\nimport { RuntimeError } from './util.js';\nexport class KeyManager {\n    constructor(key) {\n        this.music = new Music();\n        this.setKey(key);\n    }\n    setKey(key) {\n        this.key = key;\n        this.reset();\n        return this;\n    }\n    getKey() {\n        return this.key;\n    }\n    reset() {\n        this.keyParts = this.music.getKeyParts(this.key);\n        this.keyString = this.keyParts.root;\n        if (this.keyParts.accidental)\n            this.keyString += this.keyParts.accidental;\n        const isSupportedType = Music.scaleTypes[this.keyParts.type];\n        if (!isSupportedType) {\n            throw new RuntimeError('BadArguments', `Unsupported key type: ${this.key}`);\n        }\n        this.scale = this.music.getScaleTones(this.music.getNoteValue(this.keyString), Music.scaleTypes[this.keyParts.type]);\n        this.scaleMap = {};\n        this.scaleMapByValue = {};\n        this.originalScaleMapByValue = {};\n        const noteLocation = Music.rootIndexes[this.keyParts.root];\n        for (let i = 0; i < Music.roots.length; ++i) {\n            const index = (noteLocation + i) % Music.roots.length;\n            const rootName = Music.roots[index];\n            const noteName = this.music.getRelativeNoteName(rootName, this.scale[i]);\n            this.scaleMap[rootName] = noteName;\n            this.scaleMapByValue[this.scale[i]] = noteName;\n            this.originalScaleMapByValue[this.scale[i]] = noteName;\n        }\n        return this;\n    }\n    getAccidental(key) {\n        const root = this.music.getKeyParts(key).root;\n        const parts = this.music.getNoteParts(this.scaleMap[root]);\n        return {\n            note: this.scaleMap[root],\n            accidental: parts.accidental,\n        };\n    }\n    selectNote(note) {\n        note = note.toLowerCase();\n        const parts = this.music.getNoteParts(note);\n        const scaleNote = this.scaleMap[parts.root];\n        const modparts = this.music.getNoteParts(scaleNote);\n        if (scaleNote === note) {\n            return {\n                note: scaleNote,\n                accidental: parts.accidental,\n                change: false,\n            };\n        }\n        const valueNote = this.scaleMapByValue[this.music.getNoteValue(note)];\n        if (valueNote !== undefined) {\n            return {\n                note: valueNote,\n                accidental: this.music.getNoteParts(valueNote).accidental,\n                change: false,\n            };\n        }\n        const originalValueNote = this.originalScaleMapByValue[this.music.getNoteValue(note)];\n        if (originalValueNote !== undefined) {\n            this.scaleMap[modparts.root] = originalValueNote;\n            delete this.scaleMapByValue[this.music.getNoteValue(scaleNote)];\n            this.scaleMapByValue[this.music.getNoteValue(note)] = originalValueNote;\n            return {\n                note: originalValueNote,\n                accidental: this.music.getNoteParts(originalValueNote).accidental,\n                change: true,\n            };\n        }\n        if (modparts.root === note) {\n            delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n            this.scaleMapByValue[this.music.getNoteValue(modparts.root)] = modparts.root;\n            this.scaleMap[modparts.root] = modparts.root;\n            return {\n                note: modparts.root,\n                accidental: undefined,\n                change: true,\n            };\n        }\n        delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n        this.scaleMapByValue[this.music.getNoteValue(note)] = note;\n        delete this.scaleMap[modparts.root];\n        this.scaleMap[modparts.root] = note;\n        return {\n            note,\n            accidental: parts.accidental,\n            change: true,\n        };\n    }\n}\n","import { Glyphs } from './glyphs.js';\nimport { Metrics } from './metrics.js';\nimport { Modifier } from './modifier.js';\nimport { Stem } from './stem.js';\nexport class Tremolo extends Modifier {\n    static get CATEGORY() {\n        return \"Tremolo\";\n    }\n    constructor(num) {\n        super();\n        this.num = num;\n        this.position = Modifier.Position.CENTER;\n        this.text = Glyphs.tremolo1;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stemDirection = note.getStemDirection();\n        const scale = note.getFontScale();\n        const ySpacing = Metrics.get(`Tremolo.spacing`) * stemDirection * scale;\n        const x = note.getAbsoluteX() + (stemDirection === Stem.UP ? note.getGlyphWidth() - Stem.WIDTH / 2 : Stem.WIDTH / 2);\n        let y = note.getStemExtents().topY + (this.num <= 3 ? ySpacing : 0);\n        this.fontInfo.size = Metrics.get(`Tremolo.fontSize`) * scale;\n        for (let i = 0; i < this.num; ++i) {\n            this.renderText(ctx, x, y);\n            y += ySpacing;\n        }\n    }\n}\n","export const Academico = 'data:font/woff2;charset=utf-8;base64,';\n","import { VexFlow } from '../src/vexflow.js';\nimport { Font } from '../src/font.js';\nimport { Academico } from '../src/fonts/academico.js';\nimport { AcademicoBold } from '../src/fonts/academicobold.js';\nimport { Bravura } from '../src/fonts/bravura.js';\nimport { Gonville } from '../src/fonts/gonville.js';\nimport { Petaluma } from '../src/fonts/petaluma.js';\nimport { PetalumaScript } from '../src/fonts/petalumascript.js';\nconst block = { display: 'block' };\nconst swap = { display: 'swap' };\nconst swapBold = { display: 'swap', weight: 'bold' };\nconst fontBravura = Font.load('Bravura', Bravura, block);\nconst fontAcademico = Font.load('Academico', Academico, swap);\nconst fontAcademicoBold = Font.load('Academico', AcademicoBold, swapBold);\nconst fontGonville = Font.load('Gonville', Gonville, block);\nconst fontPetaluma = Font.load('Petaluma', Petaluma, block);\nconst fontPetalumaScript = Font.load('Petaluma Script', PetalumaScript, swap);\nconst fontLoadPromises = [\n    fontBravura,\n    fontAcademico,\n    fontAcademicoBold,\n    fontGonville,\n    fontPetaluma,\n    fontPetalumaScript,\n];\nVexFlow.BUILD.INFO = 'vexflow';\nVexFlow.setFonts('Bravura', 'Academico');\nPromise.allSettled(fontLoadPromises).then(() => {\n});\nexport * from '../src/index.js';\nexport default VexFlow;\n","export const Bravura = 'data:font/woff2;charset=utf-8;base64,';\n","export const AcademicoBold = 'data:font/woff2;charset=utf-8;base64,';\n","export const Gonville = 'data:font/woff2;charset=utf-8;base64,';\n","export const Petaluma = 'data:font/woff2;charset=utf-8;base64,';\n","export const PetalumaScript = 'data:font/woff2;charset=utf-8;base64,';\n","import { Renderer, Stave, StaveNote, Formatter, Accidental } from 'vexflow';\nimport React, { useEffect, useRef } from 'react';\nimport \"./In-Stave.css\";\n\ninterface InStaveProps {\n  activeNotes: string[];         // e.g. ['C4', 'E#4', 'G4']\n  keySignature?: string;         // e.g. 'C', 'G', 'F#', 'Bb', 'Am'\n}\n\nconst InStave: React.FC<InStaveProps> = ({ activeNotes, keySignature }) => {\n  const containerRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    if (!containerRef.current) return;\n    containerRef.current.innerHTML = ''; // Clear previous render\n\n    const renderer = new Renderer(containerRef.current, Renderer.Backends.SVG);\n    renderer.resize(240, 112); // WIDTH (30 more than Container WIDTH), HEIGHT (100)\n    const context = renderer.getContext();\n\n    const stave = new Stave(5, 0, 210); // 5-leftmargin, 0-Top, Container WIDTH\n    if (keySignature) {\n      stave.addClef('treble').addKeySignature(keySignature);\n    } else {\n      stave.addClef('treble');\n    }\n    stave.setContext(context).draw();\n\n    if (activeNotes.length > 0) {\n      const notes = activeNotes.map((note) => {\n        const [, letter, accidental = '', octave] = note.match(/^([A-Ga-g])([#b]?)(\\d)$/) || [];\n        const key = `${letter.toLowerCase()}${accidental}/${octave}`;\n        const staveNote = new StaveNote({ keys: [key], duration: 'q' });\n        if (accidental) {\n          staveNote.addModifier(new Accidental(accidental), 0);\n        }\n        return staveNote;\n      });\n\n      Formatter.FormatAndDraw(context, stave, notes);\n    }\n  }, [activeNotes, keySignature]);\n\n  return <div className=\"stave-container\" ref={containerRef}></div>;\n};\n\nexport default InStave;","import React, { createContext, useContext, useState, useEffect } from 'react';\n\ninterface Song {\n  title: string;\n  artist: string;\n  key: string;\n  sig: string;\n  bpm: string;\n  body: string[];\n  user: string;\n}\n\ninterface LlamaInsight {\n  type: 'tritone' | 'secondary' | 'borrowed';\n  chord: string;\n  resolvesTo?: string;\n  roman?: string;\n  target?: string;\n  tritoneSub?: string;\n  fromMode?: string;\n  inKey?: string;\n  showSevenths?: boolean;\n}\n\ninterface LlamaContextProps {\n  selectedMode: string;\n  setSelectedMode: (mode: string) => void;\n  selectedSong: Song;\n  setSelectedSong: (song: Song) => void;\n  llamaInsight: LlamaInsight | null;\n  setLlamaInsight: (insight: LlamaInsight | null) => void;\n}\n\nconst defaultSong: Song = {\n  title: 'Default Song',\n  artist: 'Unknown',\n  key: 'C',\n  sig: '4/4',\n  bpm: '120',\n  body: [],\n  user: 'System',\n};\n\nconst LlamaContext = createContext<LlamaContextProps>({\n  selectedMode: 'Ionian',\n  setSelectedMode: () => {},\n  selectedSong: defaultSong,\n  setSelectedSong: () => {},\n  llamaInsight: null,\n  setLlamaInsight: () => {},\n});\n\n\nexport const useLlama = () => useContext(LlamaContext);\n\nexport const chordTypeWisdoms: Record<string, string> = {\n\n};\n\nexport const LlamaProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [selectedMode, setSelectedMode] = useState('Ionian');\n  const [selectedSong, setSelectedSong] = useState<Song>(defaultSong);\n  const [llamaInsight, setLlamaInsight] = useState<LlamaInsight | null>(null);\n\n  useEffect(() => {\n    console.log('selectedSong updated in LlamaProvider:', selectedSong);\n  }, [selectedSong]);\n\n  return (\n    <LlamaContext.Provider\n      value={{\n        selectedMode,\n        setSelectedMode,\n        selectedSong,\n        setSelectedSong,\n        llamaInsight,\n        setLlamaInsight\n      }}\n    >\n      {children}\n    </LlamaContext.Provider>\n  );\n};","import React, { useState } from 'react';\nimport './CoF.css';\nimport InStave from './In-Stave.tsx';\nimport { useLlama } from './LlamaContext.tsx';\n\nconst enharmonicKeys: Record<string, string> = {\n\n};\n\nconst keys = [\n  { major: 'C', minor: 'Am' },\n  { major: 'G', minor: 'Em' },\n  { major: 'D', minor: 'Bm' },\n  { major: 'A', minor: 'F#m' },\n  { major: 'E', minor: 'C#m' },\n  { major: 'B', minor: 'G#m' },\n  { major: 'F#', minor: 'D#m' },\n  { major: 'Db', minor: 'Bbm' },\n  { major: 'Ab', minor: 'Fm' },\n  { major: 'Eb', minor: 'Cm' },\n  { major: 'Bb', minor: 'Gm' },\n  { major: 'F', minor: 'Dm' },\n];\n\n\nconst harmonicFunctions: Record<string, {\n  tonic: string;\n  subdominant: string;\n  dominant: string;\n  supertonic: string;\n  submediant: string;\n  mediant: string;\n  subtonic: string;\n}> = {\n  A: { tonic: 'A', subdominant: 'D', dominant: 'E', supertonic: 'Bm', submediant: 'F#m', mediant: 'C#m', subtonic: 'G#dim' },\n  Ab: { tonic: 'Ab', subdominant: 'Db', dominant: 'Eb', supertonic: 'Bbm', submediant: 'Fm', mediant: 'Cm', subtonic: 'Gdim' },\n  Am: { tonic: 'Am', subdominant: 'Dm', dominant: 'Em', supertonic: 'Bdim', submediant: 'F', mediant: 'C', subtonic: 'G' },\n  B: { tonic: 'B', subdominant: 'E', dominant: 'F#', supertonic: 'C#m', submediant: 'G#m', mediant: 'D#m', subtonic: 'A#dim' },\n  Bb: { tonic: 'Bb', subdominant: 'Eb', dominant: 'F', supertonic: 'Cm', submediant: 'Gm', mediant: 'Dm', subtonic: 'Adim' },\n  Bbm: { tonic: 'Bbm', subdominant: 'D#m', dominant: 'Fm', supertonic: 'Cdim', submediant: 'F#', mediant: 'Db', subtonic: 'Ab' },\n  Bm: { tonic: 'Bm', subdominant: 'Em', dominant: 'F#m', supertonic: 'C#dim', submediant: 'G', mediant: 'D', subtonic: 'A' },\n  C: { tonic: 'C', subdominant: 'F', dominant: 'G', supertonic: 'Dm', submediant: 'Am', mediant: 'Em', subtonic: 'Bdim' },\n  'C#m': { tonic: 'C#m', subdominant: 'F#m', dominant: 'G#m', supertonic: 'D#dim', submediant: 'A', mediant: 'E', subtonic: 'B' },\n  Cm: { tonic: 'Cm', subdominant: 'Fm', dominant: 'Gm', supertonic: 'Ddim', submediant: 'Ab', mediant: 'Eb', subtonic: 'Bb' },\n  D: { tonic: 'D', subdominant: 'G', dominant: 'A', supertonic: 'Em', submediant: 'Bm', mediant: 'F#m', subtonic: 'C#dim' },\n  'D#m': { tonic: 'D#m', subdominant: 'G#m', dominant: 'Bbm', supertonic: 'Fdim', submediant: 'B', mediant: 'F#', subtonic: 'Db' },\n  Db: { tonic: 'Db', subdominant: 'F#', dominant: 'Ab', supertonic: 'D#m', submediant: 'Bbm', mediant: 'Fm', subtonic: 'Cdim' },\n  Dm: { tonic: 'Dm', subdominant: 'Gm', dominant: 'Am', supertonic: 'Edim', submediant: 'Bb', mediant: 'F', subtonic: 'C' },\n  E: { tonic: 'E', subdominant: 'A', dominant: 'B', supertonic: 'F#m', submediant: 'C#m', mediant: 'G#m', subtonic: 'D#dim' },\n  Eb: { tonic: 'Eb', subdominant: 'Ab', dominant: 'Bb', supertonic: 'Fm', submediant: 'Cm', mediant: 'Gm', subtonic: 'Ddim' },\n  Em: { tonic: 'Em', subdominant: 'Am', dominant: 'Bm', supertonic: 'F#dim', submediant: 'C', mediant: 'G', subtonic: 'D' },\n  F: { tonic: 'F', subdominant: 'Bb', dominant: 'C', supertonic: 'Gm', submediant: 'Dm', mediant: 'Am', subtonic: 'Edim' },\n  'F#': { tonic: 'F#', subdominant: 'B', dominant: 'Db', supertonic: 'G#m', submediant: 'D#m', mediant: 'Bbm', subtonic: 'Fdim' },\n  'F#m': { tonic: 'F#m', subdominant: 'Bm', dominant: 'C#m', supertonic: 'G#dim', submediant: 'D', mediant: 'A', subtonic: 'E' },\n  Fm: { tonic: 'Fm', subdominant: 'Bbm', dominant: 'Cm', supertonic: 'Gdim', submediant: 'Db', mediant: 'Ab', subtonic: 'Eb' },\n  G: { tonic: 'G', subdominant: 'C', dominant: 'D', supertonic: 'Am', submediant: 'Em', mediant: 'Bm', subtonic: 'F#dim' },\n  'G#m': { tonic: 'G#m', subdominant: 'C#m', dominant: 'D#m', supertonic: 'A#dim', submediant: 'E', mediant: 'B', subtonic: 'F#' },\n  Gm: { tonic: 'Gm', subdominant: 'Cm', dominant: 'Dm', supertonic: 'Adim', submediant: 'Eb', mediant: 'Bb', subtonic: 'F' },\n};\n\n\n\ntype CoFProps = {\n  onChordSelect: (chord: string) => void;\n};\n\nexport default function CoF({ onChordSelect }: CoFProps) {\n  const { setLlamaInsight } = useLlama();\n  const [selectedChordName, setSelectedChordName] = useState('C');\n  const [spinDeg, setSpinDeg] = useState(0);\n  const [minorSpinDeg, setMinorSpinDeg] = useState(0);\n\n  const canonicalName = enharmonicKeys[selectedChordName] || selectedChordName;\n  const info = harmonicFunctions[canonicalName];\n\n\n  const normalizeChord = (chord: string) =>\n    chord\n      .replace(/♯/g, '#')\n      .replace(/♭/g, 'b')\n      .replace(/°/g, 'dim')\n      .toLowerCase();\n\n\n  const normalizeInfo = {\n    tonic: info.tonic,\n    subdominant: info.subdominant,\n    dominant: info.dominant,\n    supertonic: info.supertonic,\n    submediant: info.submediant,\n    mediant: info.mediant,\n    subtonic: info.subtonic,\n  };\n\n  const getFillColor = (chord: string): string => {\n    const match = (target: string) =>\n      normalizeChord(chord) === normalizeChord(target);\n\n    if (match(normalizeInfo.tonic)) return 'green';\n    if (match(normalizeInfo.subdominant)) return 'blue';\n    if (match(normalizeInfo.dominant)) return 'red';\n    if (match(normalizeInfo.supertonic)) return 'teal';\n    if (match(normalizeInfo.submediant)) return 'orangered';\n    if (match(normalizeInfo.mediant)) return 'purple';\n    if (match(normalizeInfo.subtonic)) return 'saddlebrown';\n    return 'grey';\n  };\n\n  const handleClick = (chord: string) => {\n    const normalized = chord.toLowerCase();\n\n    const clickedIndex = keys.findIndex(\n      (key) =>\n        key.major.toLowerCase() === normalized ||\n        key.minor.toLowerCase() === normalized\n    );\n\n\n\n\n    if (clickedIndex === -1) {\n      console.warn(`Chord not found: ${chord}`);\n      return;\n    }\n\n\n    const isMinorClick = keys[clickedIndex].minor.toLowerCase() === normalized;\n    const targetIndex = isMinorClick\n      ? keys.findIndex((key) => key.major === keys[clickedIndex].major)\n      : clickedIndex;\n\n    const totalKeys = keys.length;\n    const anglePerStep = 360 / totalKeys;\n\n    const currentIndex = keys.findIndex(\n      (key) =>\n        key.major.toLowerCase() === selectedChordName.toLowerCase() ||\n        key.minor.toLowerCase() === selectedChordName.toLowerCase()\n    );\n\n\n\n    let deltaMajor = targetIndex - currentIndex;\n    if (Math.abs(deltaMajor) > totalKeys / 2) {\n      deltaMajor = deltaMajor > 0 ? deltaMajor - totalKeys : deltaMajor + totalKeys;\n    }\n\n\n    const degreesMajor = deltaMajor * anglePerStep;\n\n\n    let deltaMinor = -deltaMajor;\n    const degreesMinor = deltaMinor * anglePerStep;\n\n\n    setSelectedChordName(chord);\n    setSpinDeg((prev) => (prev + degreesMajor) % 360);\n    setMinorSpinDeg((prev) => (prev + degreesMinor) % 360);\n    onChordSelect(chord);\n\n  };\n\n  return (\n\n\n    <div className=\"container\">\n      <div className=\"tool-title\">⭕️ Circle of fifths</div>\n\n\n\n      {(() => {\n        const isMinorKey = selectedChordName.endsWith('m');\n        // For dominant, check if the chord is one of the major dominants in minor keys\n        const roman = {\n          tonic: isMinorKey ? 'i' : 'I',\n          subdominant: isMinorKey ? 'iv' : 'IV',\n          dominant: ['E', 'B', 'A', 'F', 'C', 'G', 'D'].includes(info.dominant) ? 'V' : 'v',\n        };\n\n\n        const handleNote = (note: string) => {\n          onChordSelect(note);\n        };\n\n\n        return (\n          <div>\n\n            <div className=\"three-columns-grid\">\n              <div className=\"submediant\">\n                <span>Submediant</span><br />\n                <button onClick={() => handleNote(info.submediant)}>{info.submediant}</button>\n                <span className=\"cof-roman\">{selectedChordName.endsWith('m') ? 'VI' : 'vi'}</span>\n              </div>\n              <div className=\"supertonic\">\n                <span>Supertonic</span><br />\n                <button onClick={() => handleNote(info.supertonic)}>{info.supertonic}</button>\n                <span className=\"cof-roman\">ii</span>\n              </div>\n              <div className=\"mediant\">\n                <span>Mediant</span><br />\n                <button onClick={() => handleNote(info.mediant)}>{info.mediant}</button>\n                <span className=\"cof-roman\">iii</span>\n              </div>\n            </div>\n            <div className=\"three-columns-grid\">\n              <div className=\"subdominant\"><span>Subdominant</span><br />\n                <button onClick={() => handleNote(info.subdominant)}>{info.subdominant}</button>\n                <span className=\"cof-roman\">{roman.subdominant}</span></div>\n              <div className=\"tonic\"><span>Tonic</span><br />\n                <button onClick={() => handleNote(info.tonic)}>{info.tonic}</button>\n                <span className=\"cof-roman\">{roman.tonic}</span></div>\n              <div className=\"dominant\"><span>Dominant</span><br />\n                <button onClick={() => handleNote(info.dominant)}>{info.dominant}</button>\n                <span className=\"cof-roman\">{roman.dominant}</span></div>\n            </div>\n            <div className=\"three-columns-grid\">\n\n              <div>\n                <div className='keySig'>Key of:\n                  <b>{selectedChordName}</b>\n                </div>\n                <div className=\"stave\">\n                  <InStave keySignature={selectedChordName} activeNotes={[]} />\n                </div>\n              </div>\n\n              <div className=\"subtonic\">\n                <span>Subtonic</span><br />\n                <button onClick={() => handleNote(info.subtonic)}>{info.subtonic}</button>\n                <span className=\"cof-roman\">♭VII</span>\n              </div>\n              <div className=\"secondary-dominants\">\n                <span className='SD-Label'>Secondary Dominants</span>\n                <ul>\n                  {(() => {\n                    const secondaries: { label: string; chord: string }[] = [];\n                    const semitoneUp = (note: string, steps: number): string => {\n                      const chromatic = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];\n                      const index = chromatic.indexOf(note.replace('m', '').replace('b', ''));\n                      if (index === -1) return '?';\n                      return chromatic[(index + steps) % 12];\n                    };\n\n\n\n                    const relativeChords = {\n                      C: ['Dm', 'Em', 'F', 'G', 'Am'],\n                      G: ['Am', 'Bm', 'C', 'D', 'Em'],\n                      D: ['Em', 'F#m', 'G', 'A', 'Bm'],\n                      A: ['Bm', 'C#m', 'D', 'E', 'F#m'],\n                      E: ['F#m', 'G#m', 'A', 'B', 'C#m'],\n                      B: ['G#m', 'A#m', 'B', 'C#', 'D#m'],\n                      'F#': ['G#m', 'A#m', 'B', 'C#', 'D#m'],\n                      Db: ['Ebm', 'Fm', 'Gb', 'Ab', 'Bbm'],\n                      Ab: ['Bbm', 'Cm', 'Db', 'Eb', 'Fm'],\n                      Eb: ['Fm', 'Gm', 'Ab', 'Bb', 'Cm'],\n                      Bb: ['Cm', 'Dm', 'Eb', 'F', 'Gm'],\n                      F: ['Gm', 'Am', 'Bb', 'C', 'Dm'],\n                      Am: ['Dm', 'Em', 'F', 'G', 'C'],\n                      Em: ['Am', 'Bm', 'C', 'D', 'G'],\n                      Bm: ['Em', 'F#m', 'G', 'A', 'D'],\n                      'F#m': ['Bm', 'C#m', 'D', 'E', 'A'],\n                      'C#m': ['F#m', 'G#m', 'A', 'B', 'E'],\n                      'G#m': ['C#m', 'D#m', 'E', 'F#', 'B'],\n                      'D#m': ['G#m', 'A#m', 'B', 'C#', 'F#'],\n                      Bbm: ['Ebm', 'Fm', 'Gb', 'Ab', 'Db'],\n                      Fm: ['Bbm', 'Cm', 'Db', 'Eb', 'Ab'],\n                      Cm: ['Fm', 'Gm', 'Ab', 'Bb', 'Eb'],\n                      Gm: ['Cm', 'Dm', 'Eb', 'F', 'Bb'],\n                      Dm: ['Gm', 'Am', 'Bb', 'C', 'F'],\n                    };\n\n                    const rels = relativeChords[selectedChordName as keyof typeof relativeChords];\n                    if (rels) {\n                      ['ii', 'iii', 'IV', 'V', 'vi'].forEach((roman, i) => {\n                        const target = rels[i];\n                        if (!target) return;\n                        const fifth = semitoneUp(target[0], 7);\n                        secondaries.push({ label: `V/${roman}`, chord: fifth });\n                      });\n                    }\n                    return secondaries.map((entry) => (\n                      <li key={entry.label}>\n                        <strong>{entry.label}</strong>: {entry.chord}\n                      </li>\n                    ));\n                  })()}\n                </ul>\n              </div>\n\n\n\n            </div>\n          </div>\n        );\n      })()}\n\n      <div className=\"pane1\">\n        <svg viewBox=\"0 0 760 760\" className=\"circle-svg\">\n          <g className=\"major-ring\" style={{ transform: `rotate(${-spinDeg}deg)` }}>\n            {keys.map((key, index) => {\n              const angle = (index / keys.length) * 2 * Math.PI - Math.PI / 2;\n              const x = 380 + 300 * Math.cos(angle);\n              const y = 380 + 300 * Math.sin(angle);\n              const angleDeg = (angle * 180) / Math.PI + 90;\n              return (\n                <g\n                  key={`major-${index}`}\n                  onClick={() => handleClick(key.major)}\n                  style={{ cursor: 'pointer' }}\n                >\n                  <circle\n                    cx={x}\n                    cy={y}\n                    r={45}\n                    fill={getFillColor(key.major)}\n                    stroke=\"var(--text-color)\"\n                  />\n                  <text\n                    x={x}\n                    y={y}\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"middle\"\n                    fontSize=\"45\"\n                    fill=\"white\"\n                    transform={`rotate(${angleDeg} ${x} ${y})`}\n                  >\n                    {key.major}\n                  </text>\n                </g>\n              );\n            })}\n          </g>\n          <g className=\"minor-ring\" style={{ transform: `rotate(${minorSpinDeg}deg)` }}>\n            {keys.map((key, index) => {\n              const angle = (index / keys.length) * 2 * Math.PI - Math.PI / 2;\n              const x = 380 + 200 * Math.cos(angle);\n              const y = 380 + 200 * Math.sin(angle);\n              const angleDeg = (angle * 180) / Math.PI + 90;\n              return (\n                <g\n                  key={`minor-${index}`}\n                  onClick={() => handleClick(key.minor)}\n                  style={{ cursor: 'pointer' }}\n                >\n                  <circle\n                    cx={x}\n                    cy={y}\n                    r={45}\n                    fill={getFillColor(key.minor)}\n                    stroke='var(--text-color)'\n                  />\n                  <text\n                    x={x}\n                    y={y}\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"middle\"\n                    fontSize=\"35\"\n                    fill=\"white\"\n                    transform={`rotate(${angleDeg} ${x} ${y})`}\n                  >\n                    {key.minor}\n                  </text>\n                </g>\n              );\n            })}\n          </g>\n          {(() => {\n\n            const current = keys.find(\n              (key) => key.major === selectedChordName || key.minor === selectedChordName\n            );\n            const dimMap: Record<string, string> = {\n              C: 'B°', G: 'F#°', D: 'C#°', A: 'G#°', E: 'D#°', B: 'A#°',\n              'F#': 'F°', Db: 'C°', Ab: 'G°', Eb: 'D°', Bb: 'A°', F: 'E°',\n            };\n            const resolved = current ? (dimMap[current.major] || '') : '';\n            return (\n              <g\n                onClick={() => {\n                  if (resolved) onChordSelect(resolved.replace('°', 'dim'));\n                }}\n                style={{ cursor: 'pointer' }}\n                className=\"diminished-display\"\n              >\n                <circle\n                  cx=\"380\"\n                  cy=\"380\"\n                  r=\"45\"\n                  fill={getFillColor(resolved.replace('°', 'dim'))}\n                  stroke=\"var(--text-color)\"\n                />\n                <text\n                  x=\"380\"\n                  y=\"380\"\n                  textAnchor=\"middle\"\n                  dominantBaseline=\"middle\"\n                  fontSize=\"45\"\n                  fill=\"white\"\n                >\n                  {resolved}\n                </text>\n              </g>\n            );\n          })()}\n        </svg>\n      </div>\n\n\n\n      <div className=\"substitution\">\n        <fieldset>\n          <legend>Tritone substitution for {selectedChordName}</legend>\n          <div>\n            Dominant → Tritone sub → Back to the Tonic\n          </div>\n          {(() => {\n            const chromatic = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];\n            const isMinor = selectedChordName.endsWith('m');\n            const root = selectedChordName.replace('m', '');\n            const tonicIndex = chromatic.indexOf(root);\n            if (tonicIndex === -1) return null;\n\n            let dominant: string;\n            let tritoneSub: string;\n            let resolution: string;\n\n            if (isMinor) {\n\n              const vIndex = (tonicIndex + 7) % 12;\n              const vChord = chromatic[vIndex];\n              const v7ofvIndex = (vIndex + 7) % 12;\n              dominant = chromatic[v7ofvIndex] + '7';\n              tritoneSub = chromatic[(v7ofvIndex + 6) % 12] + '7';\n              resolution = vChord + 'm';\n            } else {\n              const dominantIndex = (tonicIndex + 7) % 12;\n              dominant = chromatic[dominantIndex] + '7';\n              tritoneSub = chromatic[(dominantIndex + 6) % 12] + '7';\n              resolution = root + 'maj7';\n            }\n\n            return (\n              <>\n                <div>\n                  <button\n                    onClick={() => {\n                      onChordSelect(dominant);\n                      setLlamaInsight({ type: 'tritone', chord: dominant, resolvesTo: resolution });\n                    }}\n                  >\n                    {dominant}\n                  </button>\n                  →\n                  <button\n                    onClick={() => {\n                      onChordSelect(tritoneSub);\n                      setLlamaInsight({ type: 'tritone', chord: tritoneSub, resolvesTo: resolution });\n                    }}\n                  >\n                    {tritoneSub}\n                  </button>\n                  →\n                  <button\n                    onClick={() => {\n                      onChordSelect(resolution);\n                      setLlamaInsight(null); \n                    }}\n                  >\n                    {resolution}\n                  </button>\n                </div>\n\n                <span className='cof-roman'>{isMinor ? 'V7/v' : 'V7'}</span> →\n                <span className='cof-roman'>♭II7</span> →\n                <span className='cof-roman'>{isMinor ? 'v' : 'I'}</span>\n              </>\n            );\n          })()}\n        </fieldset>\n      </div>\n\n\n      <div className=\"substitution\">\n        <fieldset>\n          <legend>Secondary Dominants in {selectedChordName}</legend>\n          <div>\n            Secondary Dominant → Target Chord\n          </div>\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '0.5rem' }}>\n            {(() => {\n              const chromatic = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];\n              const secondaries: { label: string; chord: string; target: string }[] = [];\n              const semitoneUp = (note: string, steps: number): string => {\n                const index = chromatic.indexOf(note.replace('m', '').replace('b', ''));\n                if (index === -1) return '?';\n                return chromatic[(index + steps) % 12];\n              };\n\n              const relativeChords = {\n                C: ['Dm', 'Em', 'F', 'G', 'Am'],\n                G: ['Am', 'Bm', 'C', 'D', 'Em'],\n                D: ['Em', 'F#m', 'G', 'A', 'Bm'],\n                A: ['Bm', 'C#m', 'D', 'E', 'F#m'],\n                E: ['F#m', 'G#m', 'A', 'B', 'C#m'],\n                B: ['G#m', 'A#m', 'B', 'C#', 'D#m'],\n                'F#': ['G#m', 'A#m', 'B', 'C#', 'D#m'],\n                Db: ['Ebm', 'Fm', 'Gb', 'Ab', 'Bbm'],\n                Ab: ['Bbm', 'Cm', 'Db', 'Eb', 'Fm'],\n                Eb: ['Fm', 'Gm', 'Ab', 'Bb', 'Cm'],\n                Bb: ['Cm', 'Dm', 'Eb', 'F', 'Gm'],\n                F: ['Gm', 'Am', 'Bb', 'C', 'Dm'],\n                Am: ['Dm', 'Em', 'F', 'G', 'C'],\n                Em: ['Am', 'Bm', 'C', 'D', 'G'],\n                Bm: ['Em', 'F#m', 'G', 'A', 'D'],\n                'F#m': ['Bm', 'C#m', 'D', 'E', 'A'],\n                'C#m': ['F#m', 'G#m', 'A', 'B', 'E'],\n                'G#m': ['C#m', 'D#m', 'E', 'F#', 'B'],\n                'D#m': ['G#m', 'A#m', 'B', 'C#', 'F#'],\n                Bbm: ['Ebm', 'Fm', 'Gb', 'Ab', 'Db'],\n                Fm: ['Bbm', 'Cm', 'Db', 'Eb', 'Ab'],\n                Cm: ['Fm', 'Gm', 'Ab', 'Bb', 'Eb'],\n                Gm: ['Cm', 'Dm', 'Eb', 'F', 'Bb'],\n                Dm: ['Gm', 'Am', 'Bb', 'C', 'F'],\n              };\n\n              const rels = relativeChords[selectedChordName as keyof typeof relativeChords];\n              if (!rels) return null;\n\n              ['ii', 'iii', 'IV', 'V', 'vi'].forEach((roman, i) => {\n                const target = rels[i];\n                if (!target) return;\n                const fifth = semitoneUp(target[0], 7);\n                secondaries.push({ label: `V7/${roman}`, chord: fifth + '7', target });\n              });\n\n              return secondaries.map((entry) => (\n                <div key={entry.label}>\n                  <button\n                    onClick={() => {\n                      onChordSelect(entry.chord);\n                      setLlamaInsight({\n                        type: 'secondary',\n                        chord: entry.chord,\n                        resolvesTo: entry.target,\n                        roman: entry.label,\n                        target: entry.target\n                      });\n                    }}\n                  >\n                    {entry.chord}\n                  </button>\n                  →\n                  <button\n                    onClick={() => {\n                      onChordSelect(entry.target);\n                      setLlamaInsight(null); \n                    }}\n                  >\n                    {entry.target}\n                  </button>\n                  <span className=\"cof-roman\">{entry.label}</span>\n                </div>\n              ));\n            })()}\n          </div>\n        </fieldset>\n      </div>\n\n\n    </div >\n  );\n}","import React, { useState } from 'react';\nimport './Chart.css';\n\n\ninterface ChartProps {\n  onChordSelect: (chord: string) => void;\n}\n\nconst Chart: React.FC<ChartProps> = ({ onChordSelect }) => {\n  const [rootNote, setRootNote] = useState('C');\n\n\n  const groupedChordSuffixes: { group: string, chords: { label: string, suffix: string }[] }[] = [\n    {\n      group: 'Basic Triads',\n      chords: [\n        { label: '', suffix: '' },\n        { label: 'm', suffix: 'm' },\n        { label: '° (Dim)', suffix: 'dim' },\n        { label: '+ (Aug)', suffix: 'aug' }\n      ]\n    },\n    {\n      group: 'Suspended',\n      chords: [\n        { label: 'sus2', suffix: 'sus2' },\n        { label: 'sus4', suffix: 'sus4' }\n      ]\n    },\n    {\n      group: 'Sevenths',\n      chords: [\n        { label: '7', suffix: '7' },\n        { label: 'maj7', suffix: 'maj7' },\n        { label: 'm7', suffix: 'm7' },\n        { label: 'm7♭5 (ø)', suffix: 'm7b5' },\n        { label: '°7', suffix: 'dim7' }\n      ]\n    },\n    {\n      group: 'Extensions',\n      chords: [\n        { label: '9', suffix: '9' },\n        { label: 'maj9', suffix: 'maj9' },\n        { label: 'm9', suffix: 'm9' },\n        { label: '11', suffix: '11' },\n        { label: '13', suffix: '13' },\n        { label: 'maj13', suffix: 'maj13' },\n        { label: 'm11', suffix: 'm11' }\n      ]\n    },\n    {\n      group: 'Altered Dominants',\n      chords: [\n        { label: 'aug7 (7♯5)', suffix: 'aug7' },\n        { label: '7♭5', suffix: '7b5' },\n        { label: '7♯9', suffix: '7#9' },\n        { label: '7♭9', suffix: '7b9' }\n      ]\n    },\n    {\n      group: 'Added Tone',\n      chords: [\n        { label: 'add9', suffix: 'add9' },\n        { label: '5', suffix: '5' }\n      ]\n    }\n  ];\n\n  const handleNote = (note: string) => {\n    setRootNote(note);\n    onChordSelect(note); // Play basic note or chord with no suffix\n  };\n\n  return (\n    <div className=\"chord-chart\">\n      <div className=\"tool-title\">🎸 Chord Chart</div>\n      {/* Black Notes */}\n      <div className=\"piano-layout\">\n        <div className=\"half-gap\"></div>\n        <button\n          className={`black-note ${rootNote === 'C#' ? 'selected-note' : ''}`}\n          onClick={() => handleNote('C#')}\n        >\n          <b>C#</b> (Db)\n        </button>\n        <button className={`black-note ${rootNote === 'D#' ? 'selected-note' : ''}`} onClick={() => handleNote('D#')}>\n          <b>D#</b> (Eb)\n        </button>\n        <div className=\"full-gap\"></div>\n        <button className={`black-note ${rootNote === 'F#' ? 'selected-note' : ''}`} onClick={() => handleNote('F#')}>\n          <b>F#</b> (Gb)\n        </button>\n        <button className={`black-note ${rootNote === 'G#' ? 'selected-note' : ''}`} onClick={() => handleNote('G#')}>\n          <b>G#</b> (Ab)\n        </button>\n        <button className={`black-note ${rootNote === 'A#' ? 'selected-note' : ''}`} onClick={() => handleNote('A#')}>\n          <b>A#</b> (Bb)\n        </button>\n        <div className=\"half-gap\"></div>\n      </div>\n\n      {/* White Notes */}\n      <div className=\"piano-layout\">\n        <button\n          className={`white-note ${rootNote === 'C' ? 'selected-note' : ''}`}\n          onClick={() => handleNote('C')}\n        >\n          C\n        </button>\n        <button className={`white-note ${rootNote === 'D' ? 'selected-note' : ''}`} onClick={() => handleNote('D')}>\n          D\n        </button>\n        <button className={`white-note ${rootNote === 'E' ? 'selected-note' : ''}`} onClick={() => handleNote('E')}>\n          E\n        </button>\n        <button className={`white-note ${rootNote === 'F' ? 'selected-note' : ''}`} onClick={() => handleNote('F')}>\n          F\n        </button>\n        <button className={`white-note ${rootNote === 'G' ? 'selected-note' : ''}`} onClick={() => handleNote('G')}>\n          G\n        </button>\n        <button className={`white-note ${rootNote === 'A' ? 'selected-note' : ''}`} onClick={() => handleNote('A')}>\n          A\n        </button>\n        <button className={`white-note ${rootNote === 'B' ? 'selected-note' : ''}`} onClick={() => handleNote('B')}>\n          B\n        </button>\n      </div>\n\n      {/* Chord Types */}\n      <div className=\"chord-types\">\n        {groupedChordSuffixes.map(({ group, chords }) => (\n          <fieldset key={group} className=\"chord-group\">\n            <legend className=\"chord-group-title\">{group}</legend>\n            <div className=\"chord-group-buttons\">\n              {chords.map(({ label, suffix }) => {\n                const chordName = rootNote + suffix;\n                return (\n                  <button\n                    key={suffix}\n                    className=\"chord-type\"\n                    onClick={() => onChordSelect(chordName)}\n                  >\n                    {rootNote}{label}\n                  </button>\n                );\n              })}\n            </div>\n          </fieldset>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Chart;","import React from 'react';\n\ninterface TabsProps {\n  onChordSelect: (chord: string) => void;\n}\n\nconst Tabs: React.FC<TabsProps> = ({ onChordSelect }) => {\n  return null;\n};\n\nexport default Tabs;","import React from \"react\";\nimport './In-Nav.css';\n\ninterface InNavProps {\n  onTogglePiano: () => void;\n  onToggleGuitar: () => void;\n  onToggleStave: () => void;\n  // onToggleLlama: () => void;\n  showPiano: boolean;\n  showGuitar: boolean;\n  showStave: boolean;\n  // showLlama: boolean;\n}\n\nconst InNav: React.FC<InNavProps> = ({\n  onTogglePiano,\n  onToggleGuitar,\n  onToggleStave,\n  // onToggleLlama,\n  showPiano,\n  showGuitar,\n  showStave,\n  // showLlama,\n  \n}) => {\n  return (\n   \n    <div className=\"insight-buttons\">\n\n      <button\n        onClick={onToggleGuitar}\n        className={showGuitar ? \"selected\" : \"\"}\n      >\n        🎸\n      </button>\n\n      <button\n        onClick={onTogglePiano}\n        className={showPiano ? \"selected\" : \"\"}\n      >\n        🎹\n      </button>\n\n      <button\n        onClick={onToggleStave}\n        className={showStave ? \"selected\" : \"\"}\n      >\n        🎼\n      </button>\n\n      {/* <button\n        onClick={onToggleLlama}\n        className={showLlama ? \"selected\" : \"\"}\n      >\n        🦙\n      </button> */}\n\n    </div>\n  );\n};\n\nexport default InNav;","import React, { useEffect, useState, useCallback, useRef, useMemo } from \"react\";\nimport \"./In-Piano.css\";\n\n/**\n * @interface InPianoProps\n * @description Defines the props for the In-Piano component.\n * @param {string[]} activeNotes An array of note strings (e.g., 'C4', 'G5') to highlight.\n */\ninterface InPianoProps {\n  activeNotes?: string[];\n}\n\n// Global AudioContext and buffer map for performance.\n// These are outside the component to prevent re-creation on every render.\nconst audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\nconst bufferMap: { [note: string]: AudioBuffer } = {};\n\n/**\n * @component InPiano\n * @description A virtual piano keyboard component that plays notes and highlights active ones.\n * @param {InPianoProps} props The component's props.\n * @returns {JSX.Element} The rendered piano component.\n */\nconst InPiano: React.FC<InPianoProps> = ({ activeNotes = [] }) => {\n  // State to manage whether the sound is enabled.\n  const [soundEnabled, setSoundEnabled] = useState(false);\n  // Ref to track whether audio is loaded to avoid playing notes prematurely.\n  const audioLoadedRef = useRef(false);\n\n  /**\n   * @constant notes\n   * @description A memoized array of note strings representing the piano keys.\n   * This is wrapped in useMemo to prevent it from being re-created on every render,\n   * which satisfies the 'react-hooks/exhaustive-deps' linter rule.\n   */\n  const notes = useMemo(() => [\n    \"C4\", \"C#4\", \"D4\", \"D#4\", \"E4\", \"F4\", \"F#4\", \"G4\", \"G#4\", \"A4\", \"A#4\", \"B4\",\n    \"C5\", \"C#5\", \"D5\", \"D#5\", \"E5\", \"F5\", \"F#5\", \"G5\", \"G#5\", \"A5\", \"A#5\", \"B5\",\n  ], []); // Empty dependency array: this array is constant and never changes.\n\n  /**\n   * @function playNoteAudio\n   * @description A memoized callback function to play a specific note's audio.\n   * This is wrapped in useCallback to prevent it from being re-created on every render,\n   * which solves the 'react-hooks/exhaustive-deps' warning in the useEffect below.\n   * @param {string} note The note string to play.\n   */\n  const playNoteAudio = useCallback((note: string) => {\n    // If sound is disabled or the audio hasn't been loaded, do nothing.\n    if (!soundEnabled || !audioLoadedRef.current) return;\n    const buffer = bufferMap[note];\n    if (buffer) {\n      const source = audioContext.createBufferSource();\n      source.buffer = buffer;\n      source.connect(audioContext.destination);\n      source.start(0);\n    }\n  }, [soundEnabled]); // Only re-create this function if `soundEnabled` changes.\n\n  /**\n   * @useEffect\n   * @description Fetches and decodes the audio files for all notes.\n   * This effect runs only once because its dependency array contains a constant memoized array.\n   */\n  useEffect(() => {\n    // Keep track of the number of audio files to load.\n    let notesToLoad = notes.length;\n\n    notes.forEach((note) => {\n      if (!bufferMap[note]) {\n        fetch(`/media/${encodeURIComponent(note)}.mp3`)\n          .then((response) => response.arrayBuffer())\n          .then((arrayBuffer) => audioContext.decodeAudioData(arrayBuffer))\n          .then((audioBuffer) => {\n            bufferMap[note] = audioBuffer;\n            // Decrement the counter and set audioLoadedRef when all files are loaded.\n            notesToLoad--;\n            if (notesToLoad === 0) {\n              audioLoadedRef.current = true;\n            }\n          })\n          .catch((err) => {\n            console.warn(`Failed to load or decode audio for ${note}:`, err);\n          });\n      }\n    });\n  }, [notes]); // `notes` is added to the dependency array.\n\n  /**\n   * @useEffect\n   * @description Plays the audio for any notes that are active.\n   * This effect runs whenever the `activeNotes` prop or the `playNoteAudio` function changes.\n   */\n  useEffect(() => {\n    // Ensure the audio is loaded before attempting to play notes.\n    if (audioLoadedRef.current) {\n      activeNotes.forEach((note) => playNoteAudio(note));\n    }\n  }, [activeNotes, playNoteAudio, notes]); // `notes` is added to the dependency array here.\n\n  return (\n    <>\n      <div className=\"w3switch\">\n        <span><b>Piano Sound:</b></span>\n        <label className=\"switch\">\n          <input\n            type=\"checkbox\"\n            checked={soundEnabled}\n            onChange={() => setSoundEnabled(!soundEnabled)}\n          />\n          <span className=\"slider\" />\n        </label>\n        <span style={{ marginLeft: \"10px\" }}>{soundEnabled ? '🔊' : '�'}</span>\n      </div>\n\n      <div className=\"piano-container\">\n        <div className=\"in-piano\">\n          {notes.map((note) => {\n            const isSharp = note.includes(\"#\");\n            const isActive = activeNotes.includes(note);\n            return (\n              <div\n                key={note}\n                className={`key ${isSharp ? \"black\" : \"white\"} ${isActive ? \"active\" : \"\"}`}\n                onClick={() => playNoteAudio(note)}\n              >\n                {isActive && <div className=\"finger-dot\" />}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default InPiano;\n","import React, { useState } from \"react\";\nimport Chord from \"@tombatossals/react-chords/lib/Chord\";\nimport './In-Guitar.css';\nimport guitarChords from './guitar.json';\n\ninterface InGuitarProps {\n  guitarChordName: string; // e.g., 'Am'\n}\n\ninterface ChordsObject {\n  [key: string]: any[];\n}\n\n\n\nconst chordShapes: Record<string, any> = {};\n\nObject.entries(guitarChords.chords).forEach(([key, chordArray]: [string, any[]]) => {\n  chordArray.forEach((chord) => {\n    const suffix = chord.suffix;\n    const suffixMap: Record<string, string> = {\n      major: '',\n      minor: 'm',\n      dim: 'dim',\n      dim7: 'dim7',\n      sus: 'sus',\n      sus2: 'sus2',\n      sus4: 'sus4',\n      sus2sus4: 'sus2sus4',\n      '7sus4': '7sus4',\n      '7/G': '7/G',\n      alt: 'alt',\n      aug: 'aug',\n      '5': '5',\n      '6': '6',\n      '69': '69',\n      '7': '7',\n      '7b5': '7b5',\n      aug7: 'aug7',\n      '9': '9',\n      '9b5': '9b5',\n      aug9: 'aug9',\n      '7b9': '7b9',\n      '7#9': '7#9',\n      '11': '11',\n      '9#11': '9#11',\n      '13': '13',\n      maj7: 'maj7',\n      maj7b5: 'maj7b5',\n      'maj7#5': 'maj7#5',\n      maj7sus2: 'maj7sus2',\n      maj9: 'maj9',\n      maj11: 'maj11',\n      maj13: 'maj13',\n      m6: 'm6',\n      m69: 'm69',\n      m7: 'm7',\n      m7b5: 'm7b5',\n      m9: 'm9',\n      m11: 'm11',\n      mmaj7: 'mmaj7',\n      mmaj7b5: 'mmaj7b5',\n      mmaj9: 'mmaj9',\n      mmaj11: 'mmaj11',\n      add9: 'add9',\n      madd9: 'madd9',\n      add11: 'add11',\n      M7: 'maj7',\n    };\n\n    const normalized = suffixMap[suffix] ?? suffix;\n    const chordName = `${key}${normalized}`;\n    const position = chord.positions[0];\n\n    chordShapes[chordName] = {\n      frets: position.frets,\n      fingers: position.fingers,\n      barres: position.barres,\n      capo: position.capo || false,\n      baseFret: position.baseFret,\n    };\n  });\n});\n\nconst instrument = {\n  strings: 6,\n  fretsOnChord: 4,\n  name: \"Guitar\",\n  keys: [],\n  tunings: {\n    standard: [\"E\", \"A\", \"D\", \"G\", \"B\", \"E\"],\n  },\n};\n\nconst midiToNote = (midi: number): string => {\n  const noteNames = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n  return noteNames[midi % 12];\n};\n\nconst InGuitar: React.FC<InGuitarProps> = ({ guitarChordName }) => {\nconst [showNotes] = useState(true);\nconst chords = guitarChords.chords as ChordsObject;\n\nconst chordKeyMap: Record<string, string> = {\n  'C#': 'Csharp',\n  'D#': 'Eb',     // no Dsharp in the JSON, so fallback to Eb\n  'F#': 'Fsharp',\n  'G#': 'Ab',\n  'A#': 'Bb',\n  'Db': 'Csharp',\n  'Eb': 'Eb',\n  'Gb': 'Fsharp',\n  'Ab': 'Ab',\n  'Bb': 'Bb',\n};\n\nconst rootNoteMatch = guitarChordName.match(/^[A-G][b#]?/);\nconst rootNote = rootNoteMatch ? rootNoteMatch[0] : '';\nconst suffix = guitarChordName.slice(rootNote.length) || 'major';\n\nconst chordVariants = chords[chordKeyMap[rootNote] || rootNote] || [];\n\n// console.log('Resolved root note key:', chordKeyMap[rootNote] || rootNote);\n\nconst suffixMap: Record<string, string> = {\n  m: 'minor',\n  maj: 'major',\n  M7: 'maj7',\n};\n\nconst normalizedSuffix = suffixMap[suffix] || suffix;\n\nconst selectedVariants = chordVariants.filter(\n  (chord: any) => chord.suffix === normalizedSuffix\n);\n\n  // Add state for current variant index\n  const [variantIndex, setVariantIndex] = useState(0);\n\n  // Only show one chord position at a time\n  const positions = selectedVariants[0]?.positions?.slice(variantIndex, variantIndex + 2) || [];\n\n  return (\n    <>\n      \n      <div className={`guitar-fretboard ${showNotes ? 'show-notes' : 'show-fingers'}`}>\n        {/* <p>🎸 {guitarChordName} Chord (First 3 Shapes)</p> */}\n        {positions.map((position: any, index: number) => (\n          <div key={index} className=\"chord-shape-block\">\n            \n            <div className=\"fret-pos\">Fret {position.baseFret}</div>\n            \n            <Chord\n              chord={{\n                frets: position.frets,\n                fingers: position.fingers,\n                barres: position.barres,\n                capo: position.capo || false,\n                baseFret: position.baseFret,\n              }}\n              instrument={instrument}\n              lite={false}\n            />\n            <div className=\"chord-overlay\">\n              {(showNotes ? position.midi : position.fingers).map((val: any, i: number) => (\n                <span key={i} className=\"overlay-cell\">\n                  {val === 0 || val === undefined\n                    ? ''\n                    : showNotes\n                    ? midiToNote(val)\n                    : val}\n                </span>\n              ))}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"variant-navigation\">\n        <button\n          onClick={() => setVariantIndex((i) => Math.max(0, i - 1))}\n          disabled={variantIndex === 0}\n        >\n          ←\n        </button>\n        <br />\n          {variantIndex + 1} & {variantIndex + 2} of {selectedVariants[0]?.positions?.length || 0}\n        <br />\n        <button\n          onClick={() =>\n            setVariantIndex((i) =>\n              Math.min((selectedVariants[0]?.positions?.length || 1) - 1, i + 1)\n            )\n          }\n          disabled={variantIndex >= (selectedVariants[0]?.positions?.length || 1) - 2}\n        >\n          →\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default InGuitar;","import React from 'react';\n\ninterface InversionProps {\n  coreNotes: string[];\n  invertedNotes: string[];\n  inversion: number;\n  setInversion: (index: number) => void;\n}\n\nconst Inversion: React.FC<InversionProps> = ({\n  coreNotes,\n  invertedNotes,\n  inversion,\n  setInversion,\n}) => {\n  const voicingLabel =\n    inversion === 0 ? 'Root:'\n    : inversion === 1 ? '1st Inv:'\n    : inversion === 2 ? '2nd Inv:'\n    : inversion === 3 ? '3rd Inv:'\n    : inversion === 4 ? '4th Inv:'\n    : inversion === 5 ? '5th Inv:'\n    : `Inversion ${inversion}`;\n\n  return (\n    <div className=\"inversion\">\n      {Array.from({ length: coreNotes.length }, (_, i) => (\n        <button key={i} onClick={() => setInversion(i)}>\n          {i === 0 ? 'R' : `${i}`}\n        </button>\n      ))}\n      <div>\n        {voicingLabel}\n        {invertedNotes.length > 0 && (\n          <span> ({invertedNotes.join(' ')})</span>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Inversion;","import React, { useEffect, useState } from 'react';\nimport './Chord.css';\nimport InNav from './In-Nav.tsx';\nimport InPiano from './In-Piano.tsx';\nimport InGuitar from './In-Guitar.tsx';\nimport InStave from './In-Stave.tsx';\n// import InLlama from './In-Llama.tsx';\nimport Inversion from './Inversion.tsx';\n\ninterface ChordProps {\n  chord: string;\n}\n\ntype ChordType =\n  | 'major' | 'minor' | '7' | 'dim' | 'dim7' | '°' | 'ø' | '+' | 'aug'\n  | 'sus' | 'sus2' | 'sus4' | 'sus2sus4' | '7sus4'\n  | 'add9' | 'add11'\n  | '6' | '69'\n  | '9' | '9b5' | '11' | '13'\n  | 'M7' | 'Maj7' | 'maj7' | 'maj7b5' | 'maj7#5' | 'maj7sus2' | 'maj9' | 'maj11' | 'maj13'\n  | 'm6' | 'm69' | 'm7' | 'm7b5' | 'm9' | 'm11' | 'm13'\n  | 'mmaj7' | 'mmaj7b5' | 'mmaj9' | 'mmaj11'\n  | '7b5' | '7b9' | '7#9' | 'aug7' | 'alt' | '5';\n\nconst NOTES = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];\n\nconst FLAT_TO_SHARP: Record<string, string> = {\n  Ab: 'G#', Bb: 'A#', Db: 'C#', Eb: 'D#', Gb: 'F#',\n};\n\nconst parseChord = (chord: string): { root: string; type: ChordType } => {\n  const match = chord.match(/^([A-G]#?|[A-G]b?)(maj13|maj11|maj9|maj7b5|maj7#5|maj7sus2|M7|maj7|Maj7|mmaj11|mmaj9|mmaj7b5|mmaj7|m13|m11|m9|m7b5|m7|m69|m6|m|13|11|9b5|9|add11|add9|7#9|aug7|7b9|7b5|7sus4|7|sus2sus4|sus4|sus2|sus|dim7|dim|aug|5|6|69|alt|\\+|°|ø)?$/i);\n  if (!match) return { root: 'C', type: 'major' };\n  let [, root, suffix] = match;\n  root = FLAT_TO_SHARP[root] || root;\n  switch (suffix) {\n\n    case 'Maj7': return { root, type: 'Maj7' };\n\n\n    case 'M7': return { root, type: 'Maj7' };\n\n\n\n    case 'maj13': return { root, type: 'maj13' };\n    case 'maj11': return { root, type: 'maj11' };\n    case 'maj9': return { root, type: 'maj9' };\n    case 'maj7b5': return { root, type: 'maj7b5' };\n    case 'maj7#5': return { root, type: 'maj7#5' };\n    case 'maj7sus2': return { root, type: 'maj7sus2' };\n    case 'maj7': return { root, type: 'maj7' };\n    case 'mmaj11': return { root, type: 'mmaj11' };\n    case 'mmaj9': return { root, type: 'mmaj9' };\n    case 'mmaj7b5': return { root, type: 'mmaj7b5' };\n    case 'mmaj7': return { root, type: 'mmaj7' };\n    case 'm13': return { root, type: 'm13' };\n    case 'm11': return { root, type: 'm11' };\n    case 'm9': return { root, type: 'm9' };\n    case 'm7b5': return { root, type: 'm7b5' };\n    case 'm7': return { root, type: 'm7' };\n    case 'm69': return { root, type: 'm69' };\n    case 'm6': return { root, type: 'm6' };\n    case 'm': return { root, type: 'minor' };\n    case '13': return { root, type: '13' };\n    case '11': return { root, type: '11' };\n    case '9b5': return { root, type: '9b5' };\n    case '9': return { root, type: '9' };\n    case 'add11': return { root, type: 'add11' };\n    case 'add9': return { root, type: 'add9' };\n    case '7#9': return { root, type: '7#9' };\n    case 'aug7': return { root, type: 'aug7' };\n    case '7b9': return { root, type: '7b9' };\n    case '7b5': return { root, type: '7b5' };\n    case '7sus4': return { root, type: '7sus4' };\n    case '7': return { root, type: '7' };\n    case 'sus2sus4': return { root, type: 'sus2sus4' };\n    case 'sus4': return { root, type: 'sus4' };\n    case 'sus2': return { root, type: 'sus2' };\n    case 'sus': return { root, type: 'sus' };\n    case 'dim7': return { root, type: 'dim7' };\n    case 'dim': return { root, type: 'dim' };\n    case 'aug': return { root, type: 'aug' };\n    case '5': return { root, type: '5' };\n    case '6': return { root, type: '6' };\n    case '69': return { root, type: '69' };\n    case 'alt': return { root, type: 'alt' };\n    case '+': return { root, type: '+' };\n    case '°': return { root, type: '°' };\n    case 'ø': return { root, type: 'ø' };\n    default: return { root, type: 'major' };\n  }\n};\n\n\nconst chordToNotes = (root: string, type: ChordType): string[] => {\n  const rootIndex = NOTES.indexOf(root.toUpperCase());\n  if (rootIndex === -1) return [];\n  const intervals =\n    type === 'major' ? [0, 4, 7]\n    : type === 'minor' ? [0, 3, 7]\n    : type === '7' ? [0, 4, 7, 10]\n    : type === 'dim' || type === '°' ? [0, 3, 6]\n    : type === 'dim7' ? [0, 3, 6, 9]\n    : type === 'aug' || type === '+' ? [0, 4, 8]\n    : type === 'sus' ? [0, 5, 7]\n    : type === 'sus2' ? [0, 2, 7]\n    : type === 'sus4' ? [0, 5, 7]\n    : type === 'sus2sus4' ? [0, 2, 5, 7]\n    : type === '7sus4' ? [0, 5, 7, 10]\n    : type === 'add9' ? [0, 4, 7, 14]\n    : type === 'add11' ? [0, 4, 7, 17]\n    : type === '6' ? [0, 4, 7, 9]\n    : type === '69' ? [0, 4, 7, 9, 14]\n    : type === '5' ? [0, 7]\n    : type === '9' ? [0, 4, 7, 10, 14]\n    : type === '9b5' ? [0, 4, 6, 10, 14]\n    : type === '11' ? [0, 4, 7, 10, 14, 17]\n    : type === '13' ? [0, 4, 7, 10, 14, 21]\n    : type === 'maj7' || type === 'Maj7' || type === 'M7' ? [0, 4, 7, 11]\n    : type === 'maj7b5' ? [0, 4, 6, 11]\n    : type === 'maj7#5' ? [0, 4, 8, 11]\n    : type === 'maj7sus2' ? [0, 2, 7, 11]\n    : type === 'maj9' ? [0, 4, 7, 11, 14]\n    : type === 'maj11' ? [0, 4, 7, 11, 14, 17]\n    : type === 'maj13' ? [0, 4, 7, 11, 14, 21]\n    : type === 'm6' ? [0, 3, 7, 9]\n    : type === 'm69' ? [0, 3, 7, 9, 14]\n    : type === 'm7' ? [0, 3, 7, 10]\n    : type === 'm7b5' || type === 'ø' ? [0, 3, 6, 10]\n    : type === 'm9' ? [0, 3, 7, 10, 14]\n    : type === 'm11' ? [0, 3, 7, 10, 14, 17]\n    : type === 'm13' ? [0, 3, 7, 10, 14, 21]\n    : type === 'mmaj7' ? [0, 3, 7, 11]\n    : type === 'mmaj7b5' ? [0, 3, 6, 11]\n    : type === 'mmaj9' ? [0, 3, 7, 11, 14]\n    : type === 'mmaj11' ? [0, 3, 7, 11, 14, 17]\n    : type === '7b5' ? [0, 4, 6, 10]\n    : type === '7b9' ? [0, 4, 7, 10, 13]\n    : type === '7#9' ? [0, 4, 7, 10, 15]\n    : type === 'aug7' ? [0, 4, 8, 10]\n    : [0, 4, 7]; // default\n  return intervals.map(i => NOTES[(rootIndex + i) % 12]);\n};\n\nconst Chord: React.FC<ChordProps> = ({ chord }) => {\n  const [coreNotes, setCoreNotes] = useState<string[]>([]);\n  const [invertedNotes, setInvertedNotes] = useState<string[]>([]);\n  const [inversion, setInversion] = useState(0);\n\n  const [showStave, setShowStave] = useState(false);\n  const [showPiano, setShowPiano] = useState(false);\n  const [showGuitar, setShowGuitar] = useState(true);\n  const [showLlama, setShowLlama] = useState(false);\n\n  useEffect(() => {\n    const parsed = parseChord(chord);\n    const notes = chordToNotes(parsed.root, parsed.type);\n\n    const adjustedNotes = notes.reduce<string[]>((acc, note, idx) => {\n      let octave = 4;\n      if (idx > 0) {\n        const prevNote = acc[idx - 1].slice(0, -1);\n        const prevOct = parseInt(acc[idx - 1].slice(-1));\n        const prevIndex = NOTES.indexOf(prevNote);\n        const currIndex = NOTES.indexOf(note);\n        octave = currIndex <= prevIndex ? prevOct + 1 : prevOct;\n      }\n      acc.push(`${note}${octave}`);\n      return acc;\n    }, []);\n\n    \n    setCoreNotes(adjustedNotes);\n    setInversion(0);\n    setInvertedNotes(adjustedNotes);\n  }, [chord]);\n  \n\n  useEffect(() => {\n    if (coreNotes.length === 0) return;\n    const rotated = [...coreNotes.slice(inversion), ...coreNotes.slice(0, inversion)];\n    const octaveAdjusted = rotated.map((note, i) => {\n      const base = note.slice(0, -1);\n      let octave = parseInt(note.slice(-1));\n      return i < coreNotes.length - inversion\n        ? `${base}${octave}`\n        : `${base}${octave + 1}`;\n    });\n    \n    setInvertedNotes(octaveAdjusted);\n  }, [inversion, coreNotes]);\n  \n\n  return (\n    <div className=\"chord-container\">\n      \n      <InNav\n        onToggleStave={() => { setShowStave(true); setShowPiano(false); setShowGuitar(false); setShowLlama(false); }}\n        onTogglePiano={() => { setShowPiano(true); setShowStave(false); setShowGuitar(false); setShowLlama(false); }}\n        onToggleGuitar={() => { setShowGuitar(true); setShowStave(false); setShowPiano(false); setShowLlama(false); }}\n        onToggleLlama={() => { setShowLlama(true); setShowStave(false); setShowPiano(false); setShowGuitar(false); }}\n        showStave={showStave}\n        showPiano={showPiano}\n        showGuitar={showGuitar}\n        showLlama={showLlama}\n        \n      />\n\n      <div className=\"chord-info\">\n        {chord}\n        {coreNotes.length > 0 && (\n          <>\n            <span className=\"chord-notes\"> ({coreNotes.join(' ')})</span>\n            \n          </>\n        )}\n        {showPiano && showGuitar && showStave && showLlama && (\n          <>\n            <InGuitar guitarChordName={chord} />\n            \n          </>\n        )}\n      </div>\n\n      {showPiano && !showGuitar && !showStave && !showLlama && (<>\n        <Inversion\n              coreNotes={coreNotes}\n              invertedNotes={invertedNotes}\n              inversion={inversion}\n              setInversion={setInversion}\n        />\n        <InPiano activeNotes={invertedNotes} />\n        </>   \n      )}\n\n      {showGuitar && !showPiano && !showStave && !showLlama && \n      <InGuitar guitarChordName={chord} />}\n\n      {showStave && !showPiano && !showGuitar && !showLlama && (<>\n      <Inversion\n              coreNotes={coreNotes}\n              invertedNotes={invertedNotes}\n              inversion={inversion}\n              setInversion={setInversion}\n        />\n        <InStave activeNotes={invertedNotes} />\n      </> \n      )}  \n      {/* {showLlama && !showPiano && !showGuitar && !showStave && \n      <InLlama \n        chordName={chord}\n        notes={coreNotes}\n      />} */}\n\n    </div>\n  );\n};\n\nexport default Chord;","import React from 'react';\nimport './Progressions.css';\n\ninterface ProgressionsProps {\n  onChordSelect: (chord: string) => void;\n}\n\nconst Progressions: React.FC<ProgressionsProps> = ({ onChordSelect }) => {\n  const handleNote = (chord: string) => {\n    onChordSelect(chord);\n  };\n\n  // State for progression and key\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n  const [selectedKey, setSelectedKey] = React.useState(\"C\");\n\n  // Key and progression data\n  const keys = [\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\"];\n  const noteMap: { [key: string]: string[] } = {\n    C: [\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\"],\n    D: [\"D\", \"E\", \"F#\", \"G\", \"A\", \"B\", \"C#\"],\n    E: [\"E\", \"F#\", \"G#\", \"A\", \"B\", \"C#\", \"D#\"],\n    F: [\"F\", \"G\", \"A\", \"A#\", \"C\", \"D\", \"E\"],\n    G: [\"G\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F#\"],\n    A: [\"A\", \"B\", \"C#\", \"D\", \"E\", \"F#\", \"G#\"],\n    B: [\"B\", \"C#\", \"D#\", \"E\", \"F#\", \"G#\", \"A#\"],\n  };\n\n  const progressions = [\n    { label: \"Pop Classic\", roman: [\"I\", \"V\", \"vi\", \"IV\"], degrees: [0, 4, 5, 3] },\n    { label: \"Emotional Ballad\", roman: [\"vi\", \"IV\", \"I\", \"V\"], degrees: [5, 3, 0, 4] },\n    { label: \"Classic Rock\", roman: [\"I\", \"IV\", \"V\", \"IV\"], degrees: [0, 3, 4, 3] },\n    { label: \"Jazz Standard\", roman: [\"ii\", \"V\", \"I\"], degrees: [1, 4, 0] },\n    { label: \"50s Progression\", roman: [\"I\", \"vi\", \"IV\", \"V\"], degrees: [0, 5, 3, 4] },\n    { label: \"Jazz-Pop Turnaround\", roman: [\"I\", \"vi\", \"ii\", \"V\"], degrees: [0, 5, 1, 4] },\n    { label: \"Aeolian Rock\", roman: [\"i\", \"♭VII\", \"♭VI\", \"♭VII\"], degrees: [5, 4, 3, 4] },\n    { label: \"Mixolydian Rock\", roman: [\"I\", \"♭VII\", \"IV\"], degrees: [0, 6, 3] },\n    { label: \"Pop Gold\", roman: [\"I\", \"IV\", \"vi\", \"V\"], degrees: [0, 3, 5, 4] },\n    { label: \"Soulful Change\", roman: [\"I\", \"I7\", \"IV\", \"iv\"], degrees: [0, 0, 3, 1] },\n    { label: \"Dreamy Colors\", roman: [\"I\", \"iii\", \"IV\", \"ii\"], degrees: [0, 2, 3, 1] },\n    { label: \"Epic Final Battle\", roman: [\"i\", \"♭VI\", \"♭VII\", \"i\"], degrees: [5, 3, 4, 5] },\n    { label: \"Sensitive Songwriter\", roman: [\"vi\", \"IV\", \"I\", \"V\"], degrees: [5, 3, 0, 4] },\n    { label: \"Cinematic Minor\", roman: [\"i\", \"VI\", \"III\", \"VII\"], degrees: [5, 3, 2, 6] },\n  ];\n\n  return (\n    <div className=\"progressions\">\n      <div className=\"tool-title\">🎶 Chord Progressions</div>\n\n      <div className=\"progression-header\">\n        <label>Change Key:</label>\n        <select value={selectedKey} onChange={(e) => setSelectedKey(e.target.value)}>\n          {keys.map((k) => <option key={k} value={k}>{k}</option>)}\n        </select>\n      </div>\n\n      <div className=\"progression-list\">\n        {progressions.map((prog, i) => (\n          <div\n            key={i}\n            className={`progression-row ${i === selectedIndex ? \"selected\" : \"\"}`}\n            onClick={() => setSelectedIndex(i)}\n          >\n            <div className=\"prog-roman\">{prog.roman.join(\" – \")}</div>\n            <div className=\"prog-chords\">\n              {prog.degrees.map((degree, j) => {\n                const chord = noteMap[selectedKey][degree];\n                return (\n                  <button key={j} className=\"prog-chord-button\" onClick={() => handleNote(chord)}>\n                    {prog.roman[j].toLowerCase() === prog.roman[j] ? chord + \"m\" : chord}\n                  </button>\n                );\n              })}\n            </div>\n            {i === selectedIndex && (\n              <div className=\"progression-info inline\">\n                {progressions[selectedIndex].label}\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Progressions;","import React, { useState } from 'react';\nimport { useLlama } from './LlamaContext.tsx';\nimport './Chart.css';\nimport InStave from './In-Stave.tsx';\n\nconst modeFormulas: { [key: string]: number[] } = {\n  Ionian: [0, 2, 4, 5, 7, 9, 11],\n  Dorian: [0, 2, 3, 5, 7, 9, 10],\n  Phrygian: [0, 1, 3, 5, 7, 8, 10],\n  Lydian: [0, 2, 4, 6, 7, 9, 11],\n  Mixolydian: [0, 2, 4, 5, 7, 9, 10],\n  Aeolian: [0, 2, 3, 5, 7, 8, 10],\n  Locrian: [0, 1, 3, 5, 6, 8, 10],\n};\n\nconst noteNames = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];\n\nconst getNoteIndex = (note: string) => {\n  return noteNames.indexOf(note);\n};\n\nconst getNoteFromIndex = (index: number) => {\n  return noteNames[(index + 12) % 12];\n};\n\nconst getChordQuality = (intervals: number[]) => {\n  const [i1, i2, i3] = [\n    (intervals[1] - intervals[0] + 12) % 12,\n    (intervals[2] - intervals[1] + 12) % 12,\n    (intervals[3] - intervals[2] + 12) % 12,\n  ];\n  if (i1 === 3 && i2 === 4 && i3 === 3) return 'm7';     // minor 7th\n  if (i1 === 4 && i2 === 3 && i3 === 4) return '7';      // dominant 7th\n  if (i1 === 4 && i2 === 3 && i3 === 3) return 'maj7';     // major 7th\n  if (i1 === 3 && i2 === 3 && i3 === 3) return 'm7b5';   // half-diminished (minor 7 flat 5)\n  if (i1 === 3 && i2 === 3 && i3 === 6) return 'dim7';   // diminished 7th\n  if (i1 === 3 && i2 === 4) return 'm';                   // minor triad\n  if (i1 === 4 && i2 === 3) return '';                    // major triad\n  if (i1 === 3 && i2 === 3) return 'dim';                 // diminished triad\n  return '?'; // fallback\n};\n\nconst getModeChords = (root: string, mode: string, sevenths: boolean = false): string[] => {\n  const rootIndex = getNoteIndex(root);\n  const intervals = modeFormulas[mode];\n  if (!intervals) return [];\n\n  const scale = intervals.map(semitone => getNoteFromIndex(rootIndex + semitone));\n  const chords: string[] = [];\n\n  for (let i = 0; i < 7; i++) {\n    const rootNote = scale[i];\n    const third = scale[(i + 2) % 7];\n    const fifth = scale[(i + 4) % 7];\n\n    if (sevenths) {\n      const seventh = scale[(i + 6) % 7];\n      const rootIdx = getNoteIndex(rootNote);\n      const thirdIdx = getNoteIndex(third);\n      const fifthIdx = getNoteIndex(fifth);\n      const seventhIdx = getNoteIndex(seventh);\n\n      let chordType = getChordQuality([rootIdx, thirdIdx, fifthIdx, seventhIdx]);\n      switch (mode) {\n\n        case 'Ionian':\n          if (i === 0) chordType = 'maj7';\n          else if (i === 1 || i === 2 || i === 5) chordType = 'm7';\n          else if (i === 3) chordType = 'maj7'; //SubD\n          else if (i === 4) chordType = '7';    //Domi\n          else if (i === 6) chordType = 'm7b5'; //SubT\n          break;\n\n        case 'Dorian':\n          if (i === 0 || i === 1 || i === 4) chordType = 'm7';\n          else if (i === 2) chordType = 'maj7'; //Medi\n          else if (i === 3) chordType = '7';    //Domi\n          else if (i === 5) chordType = 'm7b5'; //SubM\n          else if (i === 6) chordType = 'maj7'; //SubT\n          break;\n\n        case 'Phrygian':\n          if (i === 0 || i === 3) chordType = 'm7';\n          else if (i === 1 || i === 5) chordType = 'maj7'; //SupT*SubT\n          else if (i === 2) chordType = '7';        //Medi\n          else if (i === 4) chordType = 'm7b5';     //Domi\n          break;\n\n        case 'Lydian':\n          if (i === 0 || i === 4) chordType = 'maj7';\n          else if (i === 1) chordType = '7';    //SupT\n          else if (i === 3) chordType = 'm7b5'; //SubD\n          else if (i === 6) chordType = 'm7'; //SubT\n          break;\n\n        case 'Mixolydian':\n          if (i === 0) chordType = '7';\n          else if (i === 3 || i === 6) chordType = 'maj7';\n          else if (i === 2) chordType = 'm7b5'; //Medi\n          break;\n\n        case 'Aeolian':\n          if (i === 0 || i === 3 || i === 4) chordType = 'm7';\n          else if (i === 1) chordType = 'm7b5';\n          else if (i === 2 || i === 5) chordType = 'maj7';\n          else if (i === 6) chordType = '7'; //SubT          \n          break;\n\n        case 'Locrian':\n          if (i === 3 || i === 2 || i === 6) chordType = 'm7';\n          else if (i === 1 || i === 4) chordType = 'maj7';\n          else if (i === 0) chordType = 'm7b5';\n          else if (i === 5) chordType = '7';\n          break;\n      }\n      chords.push(`${rootNote}${chordType}`);\n    } else {\n      const rootIdx = getNoteIndex(rootNote);\n      const thirdIdx = getNoteIndex(third);\n      const fifthIdx = getNoteIndex(fifth);\n\n      const chordType = getChordQuality([rootIdx, thirdIdx, fifthIdx]);\n      chords.push(`${rootNote}${chordType}`);\n    }\n  }\n\n  return chords;\n};\n\nconst getRomanNumeral = (index: number, mode: string, showSevenths: boolean): string => {\n  // Define base Roman numerals for scale degrees (1-based)\n  // Uppercase = major, lowercase = minor, diminished = dim symbol, etc.\n  // Also handle flats for subtonic (degree 7 in some modes)\n  // The numerals below are based on standard diatonic functions in Ionian mode,\n  // and adjusted per mode for sevenths.\n\n  // We'll map scale degrees to Roman numerals with accidentals if needed.\n  // Index is 0-based scale degree.\n\n  // Base roman numerals without sevenths\n  // const baseNumerals = ['I', 'ii', 'iii', 'IV', 'V', 'vi', 'vii'];\n\n  // Adjustments per mode and degree for sevenths\n  // We define a mapping for each mode of the numeral to use per degree with sevenths\n\n  // For Ionian\n  // const ionianSevenths = ['Imaj7', 'iim7', 'iiim7', 'IVmaj7', 'V7', 'vim7', 'viim7b5'];\n\n  // For Dorian\n  // const dorianSevenths = ['im7', 'iim7', 'IIImaj7', 'V7', 'vim7', 'viim7b5', 'VIImaj7'];\n\n  // For Phrygian\n  // const phrygianSevenths = ['im7', 'IImaj7', 'V7', 'vim7', 'viim7b5', 'IImaj7', 'V7'];\n\n  // For Lydian\n  // const lydianSevenths = ['Imaj7', 'V7', 'vim7b5', 'iiim7', 'IVmaj7', 'v7', 'vim7'];\n\n  // For Mixolydian\n  // const mixolydianSevenths = ['V7', 'iim7', 'vim7b5', 'IVmaj7', 'IIm7', 'v7', 'IVmaj7'];\n\n  // For Aeolian\n  // const aeolianSevenths = ['im7', 'vim7b5', 'IIImaj7', 'iv7', 'v7', 'VImaj7', 'VII7'];\n\n  // For Locrian\n  // const locrianSevenths = ['vim7b5', 'IImaj7', 'iv7', 'v7', 'VImaj7', 'VII7', 'im7'];\n\n  // Because the above arrays don't align perfectly with scale degrees, and some modes have flats,\n  // We'll instead hardcode the Roman numerals for the scale degrees used in the JSX:\n\n  // The JSX references these scale degrees and their Roman numerals:\n  // chords[5] -> Submediant (degree 6)\n  // chords[1] -> Supertonic (degree 2)\n  // chords[2] -> Mediant (degree 3)\n  // chords[3] -> Subdominant (degree 4)\n  // chords[0] -> Tonic (degree 1)\n  // chords[4] -> Dominant (degree 5)\n  // chords[6] -> Subtonic (degree 7)\n\n  // We'll define a lookup table per mode and showSevenths for these degrees:\n\n  const numeralsMap: { [mode: string]: { [degree: number]: string } } = {\n    Ionian: {\n      0: showSevenths ? 'Imaj7' : 'I',\n      1: showSevenths ? 'iim7' : 'ii',\n      2: showSevenths ? 'iiim7' : 'iii',\n      3: showSevenths ? 'IVmaj7' : 'IV',\n      4: showSevenths ? 'V7' : 'V',\n      5: showSevenths ? 'vim7' : 'vi',\n      6: showSevenths ? 'viim7b5' : 'vii',\n    },\n    Dorian: {\n      0: showSevenths ? 'im7' : 'i',\n      1: showSevenths ? 'iim7' : 'ii',\n      2: showSevenths ? 'IIImaj7' : 'III',\n      3: showSevenths ? 'V7' : 'V',\n      4: showSevenths ? 'vim7' : 'vi',\n      5: showSevenths ? 'viim7b5' : 'vii',\n      6: showSevenths ? 'VIImaj7' : 'VII',\n    },\n    Phrygian: {\n      0: showSevenths ? 'im7' : 'i',\n      1: showSevenths ? 'IImaj7' : 'II',\n      2: showSevenths ? 'V7' : 'V',\n      3: showSevenths ? 'vim7' : 'vi',\n      4: showSevenths ? 'viim7b5' : 'vii',\n      5: showSevenths ? 'IImaj7' : 'II',\n      6: showSevenths ? 'V7' : 'V',\n    },\n    Lydian: {\n      0: showSevenths ? 'Imaj7' : 'I',\n      1: showSevenths ? 'V7' : 'V',\n      2: showSevenths ? 'vim7b5' : 'vii',\n      3: showSevenths ? 'iiim7' : 'iii',\n      4: showSevenths ? 'IVmaj7' : 'IV',\n      5: showSevenths ? 'v7' : 'v',\n      6: showSevenths ? 'vim7' : 'vi',\n    },\n    Mixolydian: {\n      0: showSevenths ? 'V7' : 'V',\n      1: showSevenths ? 'iim7' : 'ii',\n      2: showSevenths ? 'vim7b5' : 'vii',\n      3: showSevenths ? 'IVmaj7' : 'IV',\n      4: showSevenths ? 'IIm7' : 'ii',\n      5: showSevenths ? 'v7' : 'v',\n      6: showSevenths ? 'IVmaj7' : 'IV',\n    },\n    Aeolian: {\n      0: showSevenths ? 'im7' : 'i',\n      1: showSevenths ? 'vim7b5' : 'vii',\n      2: showSevenths ? 'IIImaj7' : 'III',\n      3: showSevenths ? 'iv7' : 'iv',\n      4: showSevenths ? 'v7' : 'v',\n      5: showSevenths ? 'VImaj7' : 'VI',\n      6: showSevenths ? 'VII7' : 'VII',\n    },\n    Locrian: {\n      0: showSevenths ? 'vim7b5' : 'vii',\n      1: showSevenths ? 'IImaj7' : 'II',\n      2: showSevenths ? 'iv7' : 'iv',\n      3: showSevenths ? 'v7' : 'v',\n      4: showSevenths ? 'VImaj7' : 'VI',\n      5: showSevenths ? 'VII7' : 'VII',\n      6: showSevenths ? 'im7' : 'i',\n    },\n  };\n\n  // If mode or index is not in map, fall back to basic roman numerals\n  if (numeralsMap[mode] && numeralsMap[mode][index] !== undefined) {\n    return numeralsMap[mode][index];\n  }\n\n  // Fallback for no sevenths: uppercase for 1,4,5; lowercase for 2,3,6; diminished for 7th\n  if (!showSevenths) {\n    const romanNumerals = ['I', 'ii', 'iii', 'IV', 'V', 'vi', 'vii'];\n    return romanNumerals[index] || '?';\n  }\n\n  return '?';\n};\n\ninterface ModesProps {\n  onChordSelect: (chord: string) => void;\n}\n\nconst Modes: React.FC<ModesProps> = ({ onChordSelect }) => {\n  const [rootNote, setRootNote] = useState('C');\n  const [showSevenths, setShowSevenths] = useState(false);\n  const { setSelectedMode: setGlobalSelectedMode, setLlamaInsight } = useLlama();\n\n  const modeList = [\n    { label: 'Ionian', offset: 0 },\n    { label: 'Dorian', offset: -2 },\n    { label: 'Phrygian', offset: -4 },\n    { label: 'Lydian', offset: -5 },\n    { label: 'Mixolydian', offset: -7 },\n    { label: 'Aeolian', offset: -9 },\n    { label: 'Locrian', offset: -11 },\n  ];\n\n  const normalizeKeySignature = (note: string) => {\n    const enharmonicMap: { [note: string]: string } = {\n      'A#': 'Bb',\n      'D#': 'Eb',\n      'G#': 'Ab',\n      'C#': 'Db',\n      'F#': 'Gb',\n      'B': 'Cb',     // optional, depending on your notation\n      'E#': 'F',\n      'B#': 'C',\n    };\n    return enharmonicMap[note] || note;\n  };\n\n  const [selectedMode, setSelectedMode] = useState('Ionian');\n\n  const selectedModeOffset = modeList.find(m => m.label === selectedMode)?.offset || 0;\n  const rootIndex = getNoteIndex(rootNote);\n  const parentIndex =\n    selectedMode === 'Aeolian'\n      ? (rootIndex + 3) % 12 // relative major: up 3 semitones\n      : selectedMode === 'Ionian'\n        ? rootIndex // Ionian is its own key\n        : (rootIndex + selectedModeOffset + 12) % 12;\n  const parentKey = getNoteFromIndex(parentIndex);\n\n  const handleNote = (note: string) => {\n    setRootNote(note);\n    onChordSelect(note);\n  };\n\n  const handleModeSelect = (mode: string) => {\n    setSelectedMode(mode);\n    setGlobalSelectedMode(mode);\n    onChordSelect(rootNote); // Refresh chords with the new mode\n    // chords will update via useMemo below\n  };\n\n  const chords = React.useMemo(\n    () => getModeChords(rootNote, selectedMode, showSevenths),\n    [rootNote, selectedMode, showSevenths]\n  );\n\n  // Gather all borrowed chords for additional mode borrowing\n  const borrowedChordsWithLabels: { [mode: string]: { chord: string, mode: string }[] } = {};\n  const additionalBorrowModes = ['Dorian', 'Phrygian', 'Mixolydian', 'Lydian', 'Locrian'].filter(mode => mode !== selectedMode);\n  additionalBorrowModes.forEach(mode => {\n    const modeChords = getModeChords(rootNote, mode, showSevenths)\n      .filter(chord => !chords.includes(chord));\n    borrowedChordsWithLabels[mode] = modeChords.map(chord => ({ chord, mode }));\n  });\n\n  return (\n    <div className=\"chord-chart\">\n      <div className=\"tool-title\">🎨 Modes</div>\n\n      {/* Black Notes */}\n      <div className=\"piano-layout\">\n        <div className=\"half-gap\"></div>\n        <button\n          className={`black-note ${rootNote === 'C#' ? 'selected-note' : ''}`}\n          onClick={() => handleNote('C#')}\n        >\n          <b>C#</b> (Db)\n        </button>\n        <button className={`black-note ${rootNote === 'D#' ? 'selected-note' : ''}`} onClick={() => handleNote('D#')}>\n          <b>D#</b> (Eb)\n        </button>\n        <div className=\"full-gap\"></div>\n        <button className={`black-note ${rootNote === 'F#' ? 'selected-note' : ''}`} onClick={() => handleNote('F#')}>\n          <b>F#</b> (Gb)\n        </button>\n        <button className={`black-note ${rootNote === 'G#' ? 'selected-note' : ''}`} onClick={() => handleNote('G#')}>\n          <b>G#</b> (Ab)\n        </button>\n        <button className={`black-note ${rootNote === 'A#' ? 'selected-note' : ''}`} onClick={() => handleNote('A#')}>\n          <b>A#</b> (Bb)\n        </button>\n        <div className=\"half-gap\"></div>\n      </div>\n\n      {/* White Notes */}\n      <div className=\"piano-layout\">\n        <button\n          className={`white-note ${rootNote === 'C' ? 'selected-note' : ''}`}\n          onClick={() => handleNote('C')}\n        >\n          C\n        </button>\n        <button className={`white-note ${rootNote === 'D' ? 'selected-note' : ''}`} onClick={() => handleNote('D')}>\n          D\n        </button>\n        <button className={`white-note ${rootNote === 'E' ? 'selected-note' : ''}`} onClick={() => handleNote('E')}>\n          E\n        </button>\n        <button className={`white-note ${rootNote === 'F' ? 'selected-note' : ''}`} onClick={() => handleNote('F')}>\n          F\n        </button>\n        <button className={`white-note ${rootNote === 'G' ? 'selected-note' : ''}`} onClick={() => handleNote('G')}>\n          G\n        </button>\n        <button className={`white-note ${rootNote === 'A' ? 'selected-note' : ''}`} onClick={() => handleNote('A')}>\n          A\n        </button>\n        <button className={`white-note ${rootNote === 'B' ? 'selected-note' : ''}`} onClick={() => handleNote('B')}>\n          B\n        </button>\n      </div>\n\n      <div className=\"mode-list\">\n        {modeList.map(({ label }) => {\n\n          return (\n            <button\n              key={label}\n              className={`chord-type${selectedMode === label ? ' selected' : ''}`}\n              onClick={() => handleModeSelect(label)}\n            >{label}</button>\n          );\n        })}\n      </div>\n\n      <div className=\"three-columns-grid\">\n        <div className=\"submediant\">\n          <span>Submediant</span><br />\n          <button className=\"modeChord\" onClick={() => onChordSelect(chords[5])}>{chords[5]}</button>\n          <span className=\"cof-roman\">{getRomanNumeral(5, selectedMode, showSevenths)}</span>\n        </div>\n        <div className=\"supertonic\">\n          <span>Supertonic</span><br />\n          <button className=\"modeChord\" onClick={() => onChordSelect(chords[1])}>{chords[1]}</button>\n          <span className=\"cof-roman\">{getRomanNumeral(1, selectedMode, showSevenths)}</span>\n        </div>\n        <div className=\"mediant\">\n          <span>Mediant</span><br />\n          <button className=\"modeChord\" onClick={() => onChordSelect(chords[2])}>{chords[2]}</button>\n          <span className=\"cof-roman\">{getRomanNumeral(2, selectedMode, showSevenths)}</span>\n        </div>\n      </div>\n\n      <div className=\"three-columns-grid\">\n        <div className=\"subdominant\"><span>Subdominant</span><br />\n          <button className=\"modeChord\" onClick={() => onChordSelect(chords[3])}>{chords[3]}</button>\n          <span className=\"cof-roman\">{getRomanNumeral(3, selectedMode, showSevenths)}</span>\n        </div>\n        <div className=\"tonic\"><span>Tonic</span><br />\n          <button className=\"modeChord\" onClick={() => onChordSelect(chords[0])}>{chords[0]}</button>\n          <span className=\"cof-roman\">{getRomanNumeral(0, selectedMode, showSevenths)}</span>\n        </div>\n        <div className=\"dominant\"><span>Dominant</span><br />\n          <button className=\"modeChord\" onClick={() => onChordSelect(chords[4])}>{chords[4]}</button>\n          <span className=\"cof-roman\">{getRomanNumeral(4, selectedMode, showSevenths)}</span></div>\n      </div>\n\n      <div className=\"three-columns-grid\">\n\n\n\n        <div>\n\n          <div>\n            <div className='keySig'>Key: <b>{parentKey}\n              {parentKey === normalizeKeySignature(parentKey) ? \"\" : <> / {normalizeKeySignature(parentKey)}</>}</b></div>\n            <div className=\"stave\">\n              <InStave keySignature={normalizeKeySignature(parentKey)} activeNotes={[]} />\n            </div>\n\n<div className='modeTitle'>{rootNote} {selectedMode}</div>\n\n          </div>\n\n\n\n        </div>\n\n        <div className=\"subtonic\">\n          <span>Subtonic</span><br />\n          <button className=\"modeChord\" onClick={() => onChordSelect(chords[6])}>{chords[6]}</button>\n          <span className=\"cof-roman\">{getRomanNumeral(6, selectedMode, showSevenths)}</span>\n        </div>\n\n        <label className='seventh-tick'>\n          <input\n            type=\"checkbox\"\n            checked={showSevenths}\n            onChange={() => setShowSevenths(!showSevenths)}\n          />\n          Show 7th Chords\n        </label>\n\n\n      </div>\n\n\n\n      {/* Relative Major/Minor Borrowing */}\n      <div className=\"borrowed-group\">\n        <fieldset className='chord-group'>\n          <legend className=\"chord-group-title\">\n            {selectedMode === 'Aeolian' && (\n              <>Relative Major: {parentKey} Ionian</>\n            )}\n            {selectedMode === 'Ionian' && (\n              <>Relative Minor: {parentKey} Aeolian</>\n            )}\n            {(selectedMode !== 'Aeolian' && selectedMode !== 'Ionian') && (\n              <>Borrowed from {parentKey} Aeolian</>\n            )}\n          </legend>\n          <div className=\"borrowed-chords\">\n            {(() => {\n              const relativeMode = selectedMode === 'Aeolian' ? 'Ionian'\n                                : selectedMode === 'Ionian' ? 'Aeolian'\n                                : 'Aeolian';\n              const relativeRoot = parentKey;\n              const relativeChords = getModeChords(relativeRoot, relativeMode, showSevenths);\n\n              return relativeChords.map((chord, index) => (\n                <button className='modeChord' key={index} onClick={() => onChordSelect(chord)}>\n                  {chord}\n                </button>\n              ));\n            })()}\n          </div>\n        </fieldset>\n      </div>\n\n      {/* Additional Mode Borrowing */}\n      {additionalBorrowModes.map((mode) => (\n        <div className=\"borrowed-group\" key={mode}>\n          <fieldset className='chord-group'>\n            <legend className=\"chord-group-title\">Borrowed from {rootNote} {mode}</legend>\n            <div className=\"borrowed-chords\">\n              {borrowedChordsWithLabels[mode].map(({ chord }, index) => (\n                <button\n                  className='modeChord'\n                  key={index}\n                  onClick={() => {\n                    setLlamaInsight({\n                      type: 'borrowed',\n                      chord: chord,\n                      fromMode: mode,\n                      inKey: rootNote,\n                      showSevenths: showSevenths\n                    });\n                    onChordSelect(chord);\n                  }}\n                >\n                  {chord}\n                </button>\n              ))}\n            </div>\n          </fieldset>\n        </div>\n      ))}\n\n\n    </div>\n  );\n};\nexport default Modes;","import React from 'react';\n\ninterface ToolButtonProps {\n  label: string;\n  onClick: () => void;\n  selected?: boolean;\n}\n\nconst ToolButton: React.FC<ToolButtonProps> = ({ label, onClick, selected }) => {\n  return (\n    <button\n      className={`tool-button ${selected ? 'selected' : ''}`}\n      onClick={onClick}\n    >\n      {label}\n    </button>\n  );\n};\n\nexport default ToolButton;","import React, { useState, useEffect } from 'react';\nimport './ThemeToggle.css';\n\nconst ThemeToggle: React.FC = () => {\n  const [theme, setTheme] = useState(localStorage.getItem('theme') || 'dark');\n\n  useEffect(() => {\n    document.documentElement.setAttribute('data-theme', theme);\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n\n  const toggleTheme = () => {\n    setTheme(theme === 'light' ? 'dark' : 'light');\n  };\n\n  return (\n    <button onClick={toggleTheme} className=\"theme-toggle\">\n      {theme === 'light' ? '🌙' : '☀️'}\n    </button>\n  );\n};\n\nexport default ThemeToggle;","import React, { useState } from 'react';\nimport './App.css';\nimport CoF from './components/CoF.tsx';\nimport Chart from './components/Chart.tsx';\nimport Tabs from './components/Tabs.tsx';\nimport Chord from './components/Chord.tsx';\nimport Progressions from './components/Progressions.tsx';\nimport Modes from './components/Modes.tsx';\nimport ToolButton from './components/ToolButton.tsx';\nimport ThemeToggle from './components/ThemeToggle.tsx';\nimport { LlamaProvider } from './components/LlamaContext.tsx';\n\nfunction App() {\n\n  const [selectedChord, setSelectedChord] = useState<string>('C');\n  const [activeTool, setActiveTool] = useState<'cof' | 'progressions' | 'chart' | 'tabs' | 'modes'>('tabs');\n\n  const renderTool = () => {\n    switch (activeTool) {\n      case 'cof':\n        return <CoF onChordSelect={setSelectedChord} />;\n      case 'chart':\n        return <Chart onChordSelect={setSelectedChord} />;\n      case 'tabs':\n        return <Tabs onChordSelect={setSelectedChord} />;\n      case 'modes':\n        return <Modes onChordSelect={setSelectedChord} />;\n      case 'progressions':\n        return <Progressions onChordSelect={setSelectedChord} />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <LlamaProvider>\n      <div className=\"App\">\n\n        <div className=\"tool-buttons\">\n          <ToolButton\n            label=\"📝 Tabs\"\n            onClick={() => setActiveTool('tabs')}\n            selected={activeTool === 'tabs'}\n          />\n          <ToolButton\n            label=\"🎸 Chart\"\n            onClick={() => setActiveTool('chart')}\n            selected={activeTool === 'chart'}\n          />\n          <ToolButton\n            label=\"⭕️ CoF\"\n            onClick={() => setActiveTool('cof')}\n            selected={activeTool === 'cof'}\n          />\n          <ToolButton\n            label=\"🎨 Modes\"\n            onClick={() => setActiveTool('modes')}\n            selected={activeTool === 'modes'}\n          />\n          <ToolButton\n            label=\"🎶 Progs\"\n            onClick={() => setActiveTool('progressions')}\n            selected={activeTool === 'progressions'}\n          />\n        </div>\n        <div className=\"main-content\">\n          <div className=\"pane-1\">{renderTool()}\n          </div>\n          <div className=\"pane-2\">\n            <Chord chord={selectedChord} />\n          </div>\n         \n        </div>\n\n  <div className=\"title-row\">\n    <div className=\"title\">De♭ussy <button className=\"version\">(v0.93)</button></div>\n   <button id=\"menuBtn\">🎶</button>\n    <button id=\"darkModeBtn\">🌙</button>\n  </div>\n\n  <ThemeToggle />\n\n      </div>\n    </LlamaProvider>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App.tsx';\nimport { register } from './serviceWorkerRegistration.ts';\n\nconst rootElement = document.getElementById('root');\nif (rootElement) {\n  const root = ReactDOM.createRoot(rootElement);\n  root.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  );\n}\nregister();","export function register() {\n  if ('serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      navigator.serviceWorker\n        .register('/sw.js')\n        .then((registration) => {\n          console.log('✅ Service Worker registered with scope:', registration.scope);\n        })\n        .catch((error) => {\n          console.error('❌ Service Worker registration failed:', error);\n        });\n    });\n  }\n}\n"],"names":["module","exports","_react","_interopRequireDefault","require","_propTypes","_Neck","_Dot","_Barre","_propTypes2","obj","__esModule","Chord","_ref","chord","instrument","lite","createElement","width","xmlns","preserveAspectRatio","viewBox","transform","tuning","tunings","standard","strings","frets","capo","fretsOnChord","baseFret","barres","map","barre","index","key","finger","fingers","indexOf","f","position","value","filter","onlyDots","fret","string","propTypes","any","instrumentPropTypes","bool","defaultProps","_default","getOwnPropertySymbols","Object","hasOwnProperty","prototype","propIsEnumerable","propertyIsEnumerable","assign","test1","String","getOwnPropertyNames","test2","i","fromCharCode","n","join","test3","split","forEach","letter","keys","err","shouldUseNative","target","source","from","symbols","to","val","undefined","TypeError","toObject","s","arguments","length","call","k","Symbol","for","l","m","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","ref","__self","__source","q","c","a","g","b","d","e","h","$$typeof","type","props","_owner","current","Fragment","jsx","jsxs","r","t","u","v","w","x","y","z","iterator","B","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","C","D","E","this","context","refs","updater","F","G","isReactComponent","setState","Error","forceUpdate","H","constructor","isPureReactComponent","I","Array","isArray","J","K","L","M","children","O","P","Q","replace","escape","toString","R","N","push","A","next","done","S","T","_status","_result","then","default","U","V","transition","W","ReactCurrentDispatcher","ReactCurrentBatchConfig","X","Children","apply","count","toArray","only","Component","Profiler","PureComponent","StrictMode","Suspense","act","cloneElement","createContext","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","_context","createFactory","bind","createRef","forwardRef","render","isValidElement","lazy","_payload","_init","memo","compare","startTransition","unstable_act","useCallback","useContext","useDebugValue","useDeferredValue","useEffect","useId","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useSyncExternalStore","useTransition","version","pop","sortIndex","id","performance","now","unstable_now","Date","setTimeout","clearTimeout","setImmediate","callback","startTime","expirationTime","priorityLevel","navigator","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","postMessage","unstable_IdlePriority","unstable_ImmediatePriority","unstable_LowPriority","unstable_NormalPriority","unstable_Profiling","unstable_UserBlockingPriority","unstable_cancelCallback","unstable_continueExecution","unstable_forceFrameRate","console","error","Math","floor","unstable_getCurrentPriorityLevel","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_requestPaint","unstable_runWithPriority","unstable_scheduleCallback","delay","unstable_shouldYield","unstable_wrapCallback","defineProperty","offsets","getNeckPath","_","pos","concat","getNeckHorizonalLine","getNeckVerticalLine","getBarreOffset","Neck","stroke","strokeWidth","strokeLinecap","strokeLinejoin","fontSize","fill","fontFamily","slice","note","textAnchor","array","number","isRequired","oneOf","createRoot","hydrateRoot","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","location","propFullName","secret","name","getShim","ReactPropTypes","bigint","func","object","symbol","arrayOf","element","elementType","instanceOf","node","objectOf","oneOfType","shape","exact","checkPropTypes","PropTypes","positions","offset","getStringPosition","radius","Dot","cx","cy","aa","ca","encodeURIComponent","da","Set","ea","fa","ha","add","ia","window","document","ja","ka","la","ma","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","toLowerCase","ra","sa","toUpperCase","ta","pa","isNaN","qa","test","oa","removeAttribute","setAttribute","setAttributeNS","xlinkHref","ua","va","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","Ka","La","Ma","stack","trim","match","Na","Oa","prepareStackTrace","set","Reflect","construct","displayName","includes","Pa","tag","Qa","Ra","Sa","Ta","nodeName","Va","_valueTracker","getOwnPropertyDescriptor","get","configurable","enumerable","getValue","setValue","stopTracking","Ua","Wa","checked","Xa","activeElement","body","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","cb","db","ownerDocument","eb","fb","options","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","valueOf","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","qb","rb","sb","style","setProperty","charAt","substring","tb","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","track","wbr","ub","vb","is","wb","xb","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","addEventListener","removeEventListener","Nb","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","flags","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","Yb","$b","ac","bc","cc","dc","ec","fc","gc","hc","ic","jc","kc","lc","oc","clz32","pc","qc","log","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Map","Pc","Qc","Rc","Sc","delete","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","dispatchEvent","shift","Zc","$c","ad","bd","cd","dd","ed","fd","gd","hd","Uc","stopPropagation","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","data","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","code","repeat","locale","which","Rd","Td","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","password","range","search","tel","text","time","url","week","me","ne","oe","event","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","href","Ne","contentEditable","Oe","focusedElem","selectionRange","documentElement","start","end","selectionStart","selectionEnd","min","defaultView","getSelection","extend","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","scrollTop","focus","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","animation","$e","af","bf","cf","df","ef","ff","gf","hf","lf","mf","nf","Ub","instance","listener","of","has","pf","qf","rf","random","sf","capture","passive","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","je","char","ke","unshift","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","Gf","Hf","Promise","Jf","queueMicrotask","resolve","catch","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","Vf","Wf","Xf","Yf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","childContextTypes","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","zg","Ag","Bg","deletions","Cg","pendingProps","overflow","treeContext","retryLane","Dg","mode","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","_stringRef","Mg","Ng","Og","Pg","Qg","Rg","implementation","Sg","Tg","Ug","Vg","Wg","Xg","Yg","Zg","$g","ah","bh","childLanes","ch","dependencies","firstContext","lanes","dh","eh","memoizedValue","fh","gh","hh","interleaved","ih","jh","kh","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","lh","mh","eventTime","lane","payload","nh","oh","ph","qh","rh","sh","th","uh","vh","wh","xh","yh","tagName","zh","Ah","Bh","Ch","revealOrder","Dh","Eh","_workInProgressVersionPrimary","Fh","Gh","Hh","Ih","Jh","Kh","Lh","Mh","Nh","Oh","Ph","Qh","Rh","Sh","Th","baseQueue","queue","Uh","Vh","Wh","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","Xh","Yh","Zh","$h","ai","getSnapshot","bi","ci","di","lastEffect","stores","ei","fi","gi","hi","ii","create","destroy","deps","ji","ki","li","mi","ni","oi","pi","qi","ri","si","ti","ui","vi","wi","xi","yi","zi","Ai","Bi","readContext","useMutableSource","unstable_isNewReconciler","identifierPrefix","Ci","Di","Ei","_reactInternals","Fi","shouldComponentUpdate","Gi","contextType","state","Hi","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Ii","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Ji","message","digest","Ki","Li","Mi","WeakMap","Ni","Oi","Pi","Qi","getDerivedStateFromError","componentDidCatch","Ri","componentStack","Si","pingCache","Ti","Ui","Vi","Wi","Xi","Yi","Zi","$i","aj","bj","cj","dj","baseLanes","cachePool","transitions","ej","fj","gj","hj","ij","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","jj","kj","pendingContext","lj","zj","Aj","Bj","Cj","mj","nj","oj","fallback","pj","qj","sj","dataset","dgst","tj","uj","_reactRetry","rj","subtreeFlags","vj","wj","isBackwards","rendering","renderingStartTime","last","tail","tailMode","xj","Dj","Ej","Fj","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","size","createElementNS","autoFocus","createTextNode","Gj","Hj","Ij","Jj","Kj","WeakSet","Lj","Mj","Nj","Pj","Qj","Rj","Sj","Tj","Uj","Vj","insertBefore","_reactRootContainer","Wj","Xj","Yj","Zj","onCommitFiberUnmount","componentWillUnmount","ak","bk","ck","dk","ek","isHidden","fk","gk","display","hk","ik","jk","kk","__reactInternalSnapshotBeforeUpdate","src","Vk","lk","ceil","mk","nk","ok","Y","Z","pk","qk","rk","sk","tk","Infinity","uk","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Ek","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","finishedWork","finishedLanes","Pk","timeoutHandle","Qk","Rk","Sk","Tk","Uk","mutableReadLanes","Bc","Oj","onCommitFiberRoot","mc","onRecoverableError","Wk","onPostCommitFiberRoot","Xk","Yk","$k","pendingChildren","al","mutableSourceEagerHydrationData","bl","cache","pendingSuspenseBoundaries","dl","el","fl","gl","hl","il","yj","Zk","kl","reportError","ll","_internalRoot","ml","nl","ol","pl","rl","ql","unmount","unstable_scheduleHydration","splice","querySelectorAll","JSON","stringify","form","sl","usingClientEntryPoint","Events","tl","findFiberByHostInstance","bundleType","rendererPackageName","ul","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","vl","isDisabled","supportsFiber","inject","createPortal","cl","unstable_strictMode","findDOMNode","flushSync","hydrate","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","result","keyPrefix","suspense","IsSomeRendererActing","_calculateChangedBits","_ctor","checkDCE","fretXPosition","fretYPosition","Barre","barreFrets","onlyBarres","string1","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","RuntimeError","super","globalObject","globalThis","self","global","Function","defined","block","_len","args","_key","line","midLine","parseInt","prefix","normalizeAngle","PI","sumArray","arr","reduce","Fraction","CATEGORY","GCD","Number","LCM","LCMM","numerator","denominator","simplify","gcd","param1","param2","otherNumerator","otherDenominator","getNumeratorAndDenominator","lcm","subtract","multiply","divide","equals","fractionA","copy","fractionB","greaterThan","greaterThanEquals","lessThan","lessThanEquals","clone","other","quotient","remainder","makeAbs","abs","toSimplifiedString","toMixedString","parse","str","Metrics","clear","cacheFont","cacheStyle","getFontInfo","font","family","weight","structuredClone","getStyle","fillStyle","strokeStyle","lineWidth","lineDash","shadowBlur","shadowColor","_a","keyParts","lastKeyPart","curr","MetricsDefaults","retVal","keyPart","fontScale","fontStyle","Accidental","cautionary","grace","noteheadAccidentalPadding","leftPadding","accidentalSpacing","Annotation","Bend","ChordSymbol","spacing","subscriptOffset","superscriptOffset","superSubRatio","FretHandFinger","GraceNote","GraceTabNote","NoteHead","minPadding","PedalMarking","Repetition","offsetX","offsetY","coda","segno","Stave","padding","endPaddingMax","endPaddingMin","unalignedNotePadding","StaveConnector","StaveLine","StaveSection","StaveTempo","glyph","StaveText","StaveTie","Stem","StringNumber","verticalPadding","stemPadding","rightPadding","Stroke","TabNote","TabSlide","TabStave","TabTie","TextBracket","TextNote","Tremolo","Tuplet","yOffset","textYOffset","Volta","BoundingBox","that","getX","getY","getW","getH","setX","setY","setW","setH","move","mergeWith","boundingBox","newX","newY","newW","max","newH","FontWeight","FontStyle","__awaiter","thisArg","_arguments","generator","reject","fulfilled","step","rejected","fontParser","Font","convertSizeToPixelValue","scaleToPxFrom","pt","parseFloat","unit","convertSizeToPointValue","validate","fromCSSString","NORMAL","cssFontShorthand","toCSSString","fontInfo","st","wt","sz","scaleSize","scaleFactor","isBold","parsedWeight","isItalic","ITALIC","load","fontName","descriptors","FontFace","files","FILES","HOST_URL","fontFace","fontFaceLoadPromise","fontFaceSet","fonts","getURLForFont","px","em","in","mm","cm","Academico","Bravura","Edwin","Gonville","Gootville","Leipzig","Leland","MuseJazz","Nepomuk","Petaluma","Sebastian","Index","class","Registry","getDefaultRegistry","defaultRegistry","enableDefaultRegistry","registry","disableDefaultRegistry","setIndexValue","elem","updateIndex","oldValue","getElementById","getAttribute","register","onRegister","_b","getElementsByAttribute","attribute","indexAttr","indexAttrVal","getElementsByType","getElementsByClass","className","onUpdate","info","Element","newID","ID","setTextMeasurementCanvas","canvas","txtCanvas","getTextMeasurementCanvas","OffscreenCanvas","category","_text","metricsValid","_textMetrics","fontBoundingBoxAscent","fontBoundingBoxDescent","actualBoundingBoxAscent","actualBoundingBoxDescent","actualBoundingBoxLeft","actualBoundingBoxRight","alphabeticBaseline","emHeightAscent","emHeightDescent","hangingBaseline","ideographicBaseline","_height","_width","xShift","yShift","attrs","rendered","_fontInfo","addChild","parent","getCategory","setStyle","setGroupStyle","applyStyle","setShadowColor","setShadowBlur","setFillStyle","setStrokeStyle","setLineWidth","setLineDash","drawWithStyle","ctx","checkContext","save","draw","restore","hasClass","addClass","removeClass","isRendered","setRendered","getAttributes","getSVGElement","suffix","oldID","getBoundingBox","textMetrics","getContext","setContext","setFont","defaultTextFont","fontIsObject","fontIsString","sizeWeightStyleAreUndefined","getFont","setFontSize","getFontSize","getFontScale","fontSizeInPoints","fontSizeInPixels","getWidth","measureText","setWidth","setYShift","getYShift","setXShift","getXShift","setText","getText","renderText","xPos","yPos","fillText","warn","measureWidth","getTextMetrics","getHeight","setOriginX","bbox","setOriginY","setOrigin","ModifierPosition","Glyphs","Modifier","Position","PositionString","center","CENTER","above","ABOVE","below","BELOW","LEFT","right","RIGHT","textLine","spacingFromNextModifier","reset","getNote","checkAttachedNote","setNote","getIndex","checkIndex","setIndex","getModifierContext","modifierContext","checkModifierContext","setModifierContext","getPosition","setPosition","setTextLine","setSpacingFromNextModifier","getSpacingFromNextModifier","alignSubNotesWithNote","subNotes","tickContext","getTickContext","metrics","getMetrics","stave","getStave","subNoteXOffset","modLeftPx","modRightPx","subNote","subTickContext","setStave","setXOffset","Music","NUM_TONES","canonicalNotes","roots","rootValues","rootIndexes","diatonicIntervals","diatonicAccidentals","unison","accidental","m2","M2","m3","M3","p4","dim5","p5","m6","M6","b7","M7","octave","intervals","b2","min2","maj2","b3","min3","maj3","b5","aug4","b6","aug5","maj6","m7","min7","dom7","maj7","scales","major","minor","ionian","dorian","phyrgian","lydian","mixolydian","aeolian","locrian","scaleTypes","accidentals","noteValues","rootIndex","intVal","cn","cbb","dn","dbb","en","ebb","fn","fbb","gn","gbb","an","abb","bn","bbb","isValidNoteValue","isValidIntervalValue","interval","getNoteParts","noteString","exec","root","getKeyParts","keyString","getNoteValue","getIntervalValue","intervalString","getCanonicalNoteName","noteValue","getCanonicalIntervalName","intervalValue","getRelativeNoteValue","direction","sum","getRelativeNoteName","parts","rootValue","multiplier","reverseInterval","relativeNoteName","getScaleTones","tones","nextNote","getIntervalBetween","note1","note2","difference","createScaleMap","keySignature","keySigParts","scaleName","keySigString","scale","noteLocation","scaleMap","rootName","noteName","RESOLUTION","durations","durationAliases","keySignatures","num","Am","Dm","Gm","Cm","Fm","Bbm","Ebm","Abm","Em","Bm","clefs","treble","lineShift","bass","tenor","alto","soprano","percussion","subbass","french","notesInfo","CN","CB","CBB","DN","DB","DBB","EN","EB","EBB","FN","FB","FBB","GN","GB","GBB","AN","AB","ABB","BN","BB","BBB","accidentalSharp","accidentalDoubleSharp","accidentalFlat","accidentalDoubleFlat","accidentalNatural","accidentalParensLeft","accidentalParensRight","accidentalThreeQuarterTonesFlatZimmermann","accidentalQuarterToneFlatStein","accidentalThreeQuarterTonesSharpStein","accidentalQuarterToneSharpStein","accidentalKucukMucennebSharp","bs","accidentalBakiyeFlat","bss","accidentalBuyukMucennebFlat","o","accidentalSori","accidentalKoron","bbs","accidentalBuyukMucennebSharp","ashs","afhf","articulations","augmentationDot","betweenLines","av","aboveCode","articStaccatissimoAbove","belowCode","articStaccatissimoBelow","articAccentAbove","articAccentBelow","articTenutoAbove","articTenutoBelow","articMarcatoAbove","articMarcatoBelow","pluckedLeftHandPizzicato","ao","pluckedSnapPizzicatoAbove","pluckedSnapPizzicatoBelow","stringsHarmonic","fermataAbove","fermataBelow","fermataShortAbove","fermataShortBelow","fermataLongAbove","fermataLongBelow","fermataVeryLongAbove","fermataVeryLongBelow","stringsUpBow","am","stringsDownBow","pictChokeCymbal","ornaments","mordent","ornamentShortTrill","mordentInverted","ornamentMordent","turn","ornamentTurn","turnInverted","ornamentTurnSlash","tr","ornamentTrill","upprall","ornamentPrecompSlideTrillDAnglebert","downprall","ornamentPrecompDoubleCadenceUpperPrefix","prallup","ornamentPrecompTrillSuffixDandrieu","pralldown","ornamentPrecompTrillLowerSuffix","upmordent","ornamentPrecompSlideTrillBach","downmordent","ornamentPrecompDoubleCadenceUpperPrefixTurn","lineprall","ornamentPrecompAppoggTrill","prallprall","ornamentTremblement","scoop","brassScoop","doit","brassDoitMedium","fall","brassFallLipShort","doitLong","brassLiftMedium","fallLong","brassFallRoughMedium","bend","brassBend","plungerClosed","brassMuteClosed","plungerOpen","brassMuteOpen","flip","brassFlip","jazzTurn","brassJazzTurn","smear","brassSmear","Tables","clefProperties","clef","keyProperties","keyOctaveGlyph","params","octaveShift","duration","sanitizeDuration","pieces","intValue","glyphName","codeNoteHead","displaced","integerToNote","integer","textWidth","articulationCodes","artic","accidentalCodes","ornamentCodes","ornament","spec","keySpec","notes","accList","getKeySignatures","hasKeySignature","durationNumber","durationToFraction","durationToNumber","durationToTicks","ticks","noteheadDiamondWhole","noteheadDiamondHalf","noteheadDiamondBlack","noteheadTriangleUpWhole","noteheadTriangleUpHalf","noteheadTriangleUpBlack","noteheadXWhole","noteheadXHalf","noteheadXBlack","noteheadCircleX","noteheadSquareWhite","noteheadSquareBlack","noteheadMoonBlack","noteheadTriangleLeftBlack","noteheadTriangleRightBlack","noteheadBlack","noteheadTriangleRoundDownBlack","noteheadDiamondDoubleWhole","noteheadXDoubleWhole","noteheadCircleXDoubleWhole","noteheadCircleXWhole","noteheadCircleXHalf","noteheadCircledDoubleWhole","noteheadCircledWhole","noteheadCircledHalf","noteheadCircledBlack","noteheadDoubleWholeSquare","noteheadTriangleUpDoubleWhole","noteheadTriangleDownDoubleWhole","noteheadTriangleDownWhole","noteheadTriangleDownHalf","noteheadTriangleDownBlack","noteheadSlashedDoubleWhole1","noteheadSlashedWhole1","noteheadSlashedHalf1","noteheadSlashedBlack1","noteheadSlashedDoubleWhole2","noteheadSlashedWhole2","noteheadSlashedHalf2","noteheadSlashedBlack2","restDoubleWhole","restWhole","restHalf","restQuarter","rest8th","rest16th","rest32nd","rest64th","rest128th","noteheadSlashWhiteDoubleWhole","noteheadSlashWhiteWhole","noteheadSlashWhiteHalf","noteheadSlashVerticalEnds","noteheadDoubleWhole","noteheadWhole","noteheadHalf","null","isCategory","checkAncestors","constructorFcn","getPrototypeOf","UNISON","SOFTMAX_FACTOR","STEM_WIDTH","STEM_HEIGHT","STAVE_LINE_THICKNESS","RENDER_PRECISION_PLACES","durationCodes","stem","beamCount","stemBeamExtension","codeFlagUp","flag8thUp","flag16thUp","flag32ndUp","flag64thUp","flag128thUp","NOTATION_FONT_SCALE","TABLATURE_FONT_SCALE","SLASH_NOTEHEAD_WIDTH","STAVE_LINE_DISTANCE","TEXT_HEIGHT_OFFSET_HACK","accidentalColumnsTable","secondOnBottom","spacedOutTetrachord","spacedOutPentachord","verySpacedOutPentachord","spacedOutHexachord","verySpacedOutHexachord","unicode","sharp","flat","natural","triangle","degrees","circle","validTypes","sq","tu","TIME4_4","numBeats","beatValue","resolution","isBarline","isGraceNote","isNote","isStaveNote","isStemmableNote","isTabNote","DEBUG","format","_this","leftShift","additionalPadding","accidentalLinePositionsAndSpaceNeeds","prevNote","extraXSpaceNeededForLeftDisplacedNotehead","getKeyProps","getLeftDisplacedHeadPx","lineSpace","getSpacingBetweenLines","getYForLine","accLine","round","extraXSpaceNeeded","spacingBetweenStaveLines","sort","staveLineAccidentalLayoutMetrics","maxExtraXSpaceNeeded","accidentalLinePositionAndSpaceNeeds","accidentalType","priorLineMetric","currentLineMetric","flatLine","dblSharpLine","numAcc","column","totalColumns","noFurtherConflicts","groupStart","groupEnd","checkCollision","getGroupLine","getGroupLines","indexes","lineDifference","indexA","indexB","item","notColliding","_len2","indexPairs","_key2","every","line1","line2","groupLength","groupMember","endCase","patternLength","collisionDetected","columnWidths","columnXOffsets","totalShift","accCount","lastAccOnLine","clearance","clearanceRequired","collision","applyAccidentals","voices","tickPositions","tickNoteMap","voice","tickPosition","getTickables","shouldIgnoreTicks","notesAtPosition","getTicks","music","scaleMapKey","tickPos","tickables","modifiedPitches","processNote","isRest","staveNote","keyIndex","accidentalString","pitch","sameAccidental","previouslyModified","getModifiers","modifier","addModifier","getGraceNotes","setAsCautionary","getModifierStartXY","UP","DOWN","WIDTH","HEIGHT","_c","_d","_e","_f","_g","stemUpYOffset","stemDownYOffset","stemUpYBaseOffset","stemDownYBaseOffset","xBegin","xEnd","yTop","yBottom","stemExtension","stemDirection","hide","isStemlet","stemletHeight","renderHeightAdjustment","setOptions","setNoteHeadXBounds","setDirection","setExtension","ext","getExtension","setYBounds","getExtents","isStemUp","ys","stemHeight","innerMostNoteheadY","outerMostNoteheadY","topY","baseY","setVisibility","isVisible","setStemlet","adjustHeightForFlag","adjustHeightForBeam","stemX","stemY","yBaseOffset","stemletYOffset","openGroup","beginPath","moveTo","lineTo","closeGroup","AnnotationHorizontalJustify","AnnotationVerticalJustify","minAnnotationPadding","annotations","leftWidth","rightWidth","maxLeftGlyphWidth","maxRightGlyphWidth","annotation","verticalSpaceNeeded","glyphWidth","getGlyphWidth","horizontalJustification","hasStem","getStemDirection","lines","renderOptions","drawStem","getStem","getNoteType","getNumLines","verticalJustification","VerticalJustify","TOP","noteLine","getLineNumber","leastString","topTextLine","BOTTOM","greatestString","curBottom","rightOverlap","rightShift","leftOverlap","setVerticalJustification","just","VerticalJustifyString","getJustification","setJustification","HorizontalJustifyString","textHeight","getStemX","stemExt","checkStave","checkStem","getYs","yt","getYForTopText","getYForBottomText","getTopLineTopY","extents","getStemExtents","HorizontalJustify","centerStem","CENTER_STEM","bottom","roundToNearestHalf","mathFn","isWithinLines","getRoundingFunction","isStaveOrGraceNote","getTopY","stemTipY","stemBaseY","getBottomY","getInitialOffset","isOnStemTip","Articulation","maxGlyphWidth","getIncrement","articulation","increment","curTop","maxWidth","articWidth","overlap","easyScoreHook","builder","articNameToCode","staccato","tenuto","accent","articString","_ref2","getFactory","heightShift","codePointAt","setBetweenLines","canSitBetweenLines","staffSpace","isTab","shouldSitOutsideStaff","initialOffset","INITIAL_OFFSET","offsetDirection","articLine","snappedLine","snapLineToStaff","RenderContext","Tickable","_preFormatted","_postFormatted","intrinsicTicks","tickMultiplier","modifiers","tupletStack","alignCenter","centerXShift","ignoreTicks","formatterMetrics","freedom","iterations","space","used","mean","deviation","setIgnoreTicks","flag","checkTickContext","getFormatterMetrics","getCenterXShift","isCenterAligned","setCenterXShift","setCenterAlignment","getVoice","setVoice","getTuplet","tuplet","getTupletStack","resetTuplet","noteCount","notesOccupied","getNoteCount","getNotesOccupied","applyTickMultiplier","setTuplet","addToModifierContext","addMember","setTickContext","preFormat","preFormatted","postFormat","postFormatted","getIntrinsicTicks","setIntrinsicTicks","getTickMultiplier","setDuration","getAbsoluteX","Note","getGlyphProps","codeHead","plotMetrics","xStart","leftDisplacedHeadPx","xPre1","xAbs","xPost1","notePx","xPost2","rightDisplacedHeadPx","xFreedomRight","xWidth","x1","x2","yy","arc","closePath","drawDot","spaceDeviation","parseDuration","durationString","dots","parseNoteStruct","noteStruct","durationProps","customTypes","currentTicks","parsedNoteStruct","keyProps","noteType","durationOverride","glyphProps","customGlyphs","playNote","annotationSpacing","strokePx","getPlayNote","setPlayNote","addStroke","setYs","getRightDisplacedHeadPx","setLeftDisplacedHeadPx","setRightDisplacedHeadPx","isTopNote","getLineForRest","getDuration","isDotted","getModifiersByType","getBeam","beam","checkBeam","hasBeam","setBeam","signature","getRightParenthesisPx","getLeftParenthesisPx","getFirstDotPx","parentheses","getMembers","getState","glyphPx","getNoteStartX","getTieRightX","tieStartX","getTieLeftX","tieEndX","getKeys","StaveModifierPosition","BarlineType","StaveModifier","getPadding","setPadding","setLayoutMetrics","layoutMetrics","getLayoutMetrics","Barline","typeString","single","SINGLE","double","DOUBLE","END","repeatBegin","REPEAT_BEGIN","repeatEnd","REPEAT_END","repeatBoth","REPEAT_BOTH","none","NONE","thickness","TYPE","widths","paddings","layoutMetricsMap","xMin","xMax","paddingLeft","paddingRight","BEGIN","setType","getType","drawVerticalBar","drawVerticalEndBar","drawRepeatBar","doubleBar","staveCtx","botY","getBottomLineBottomY","fillRect","begin","dotX","dotRadius","dotY","BarNote","barline","calculateStemDirection","lineSum","keyProp","BEAM_LEFT","BEAM_BOTH","Beam","_stemDirection","getDefaultBeamGroups","timeSig","groups","group","beatTotal","applyAndGetBeams","generateBeams","config","tickGroups","unprocessedNotes","currentTickGroup","noteGroups","currentGroup","nextTickGroup","nextGroup","currentGroupTotalTicks","unprocessedNote","ticksPerGroup","totalTicks","getTotalTicks","unbeamable","createGroups","sanitizedGroups","tempGroup","isFirstOrLast","breaksOnEachRest","beamRests","breaksOnFirstOrLastRest","beamMiddleOnly","breakOnStemChange","maintainStemDirections","prevDirection","isUnbeamableDuration","sanitizeGroups","findFirstNote","setStemDirection","applyStemDirection","beamedNoteGroups","beamable","allTuplets","uniqueTuplets","noteTuplet","getTuplets","beams","showStemlets","secondaryBreaks","secondaryBreakTicks","flatBeams","flatBeamOffset","setTupletLocation","bracketed","setBracketed","autoStem","slope","forcedPartialDirections","_ticks","stemWeight","_beamCount","getBeamCount","breakOnIndexes","beamWidth","maxSlope","minSlope","slopeIterations","slopeCost","stemletExtension","partialBeamLength","minFlatBeamOffset","getNotes","breakSecondaryAt","setPartialBeamSideAt","noteIndex","side","unsetPartialBeamSideAt","getSlopeY","firstX","firstY","calculateSlope","firstNote","initialSlope","lastNote","firstStemTipY","firstStemX","getStemSlope","minCost","MAX_VALUE","bestSlope","totalStemExtension","yShiftTemp","adjustedStemTipY","diff","idealSlope","cost","calculateFlatSlope","total","extremeY","extremeBeamCount","currentExtreme","extremeTest","newOffset","getBeamYToDraw","beamY","applyStemExtensions","beamedStemTipY","preBeamExtension","beamExtension","crossStemExtension","totalBeamWidth","lookupBeamDirection","prevTick","tick","nextTick","forcedBeamDirection","lookupDuration","prevNoteGetsBeam","nextNoteGetsBeam","noteGetsBeam","getBeamLines","tickOfDuration","beamStarted","beamLines","currentBeam","previousShouldBreak","tickTally","shouldBreak","beamAlone","beamDirection","lastBeam","drawStems","drawBeamLines","validBeamDurations","beamThickness","j","beamLine","startBeamX","startBeamY","lastBeamX","lastBeamY","bends","lastWidth","stringPos","setStyleLine","styleLine","getStyleLine","phrase","tap","bendWidth","releaseWidth","updateWidth","setTap","getTextHeight","totalWidth","additionalWidth","drawWidth","lowestY","bendHeight","annotationY","renderBend","cpX","cpY","quadraticCurveTo","renderRelease","renderArrowHead","yBase","renderX","lastBend","lastBendDrawWidth","lastDrawnWidth","isHTMLCanvas","HTMLCanvasElement","toDataURL","CanvasContext","CANVAS_BROWSER_SIZE_LIMIT","sanitizeCanvasDims","limit","context2D","curTransfrom","getTransform","clearRect","cls","openRotation","angleDegrees","translate","rotate","closeRotation","setTransform","setBackgroundFillStyle","blur","sqrt","setLineCap","capType","lineCap","dash","resize","devicePixelRatio","dpr","rect","pointerRect","bezierCurveTo","cp1x","cp1y","cp2x","cp2y","cpx","cpy","startAngle","endAngle","counterclockwise","ChordSymbolBlock","symbolModifier","vAlign","isSuperscript","SymbolModifiers","SUPERSCRIPT","isSubscript","SUBSCRIPT","ChordSymbolHorizontalJustify","ChordSymbolVerticalJustify","CurvePosition","spacingBetweenBlocks","lineSpaces","symbolBlocks","sup","sub","prev","getVertical","getReportWidth","getHorizontal","horizontal","vertical","reportWidth","setReportWidth","getSymbolBlock","symbolBlock","smallerFontSize","addSymbolBlock","parameters","addText","addTextSuperscript","addTextSubscript","addGlyphSuperscript","glyphs","addGlyph","addGlyphOrText","addLine","setVertical","setHorizontal","stemBase","diminished","csymDiminished","dim","halfDiminished","csymHalfDiminished","csymAugmented","augmented","majorSeventh","csymMajorSeventh","csymMinor","leftParen","rightParen","leftBracket","csymBracketLeftTall","rightBracket","csymBracketRightTall","leftParenTall","rightParenTall","csymDiagonalArrangementSlash","over","csymAccidentalSharp","csymAccidentalFlat","symbolModifiers","Clef","types","gClef","fClef","cClef","unpitchedPercussionClef1","sixStringTabClef","tab","gClef8va","fClef8va","gClef8vb","fClef8vb","getPoint","ClefNote","getClef","TickContext","getNextContext","tContext","contexts","tContexts","tickID","currentTick","maxTicks","maxTickable","minTicks","minTickable","xBase","xOffset","tickablesByVoice","totalLeftPx","totalRightPx","getTickID","getXBase","setXBase","getXOffset","getMaxTicks","getMinTicks","getMaxTickable","getMinTickable","getTickableForVoice","voiceIndex","getTickablesByVoice","getCenterAlignedTickables","tickable","getCurrentTick","setCurrentTick","addTickable","getDeviationCost","getAverageDeviationCost","Crescendo","extendLeft","extendRight","decrescendo","setLine","setHeight","setDecrescendo","decresc","nextContext","beginX","endX","halfHeight","reverse","renderHairpin","Curve","nearHead","NEAR_HEAD","nearTop","NEAR_TOP","positionEnd","invert","cps","openingDirection","setNotes","isPartial","renderCurve","lastX","lastY","cp0x","cp0y","controlPointSpacing","metric","endMetric","getTieStartX","getTieEndX","getDots","buildAndAttach","all","dot","dotList","maxShiftMap","noteId","dotShift","lastLine","prevDottedSpace","halfShiftY","dotShiftY","setDotShiftY","forceFlagRight","nums","numsList","shiftLeft","shiftRight","shiftL","shiftR","numShiftL","numShiftR","xWidthL","xWidthR","numShift","numWidth","fingerings","fingeringString","Fingering","fingering","setFretHandFinger","getFretHandFinger","setOffsetX","setOffsetY","Parser","flattenMatches","matchedString","results","grammar","errorPos","expect","matchFail","returnPos","matchSuccess","matchToken","token","regexp","RegExp","success","incrementPos","expectOne","rule","maybe","allMatches","oneMatch","localPos","or","gotOne","numMatches","expectOneOrMore","more","expectZeroOrMore","ruleFunc","noSpace","oneOrMore","zeroOrMore","matches","run","EasyScore","EasyScoreGrammar","LINE","PIECE","PIECES","EOL","CHORDORNOTE","PARAMS","commitPiece","COMMA","DURATION","DOTS","OPTS","CHORD","SINGLENOTE","LPAREN","NOTES","RPAREN","addChord","NOTE","NOTENAME","ACCIDENTAL","OCTAVE","addSingleNote","MICROTONES","ACCIDENTALS","DOT","setNoteDots","SLASH","MAYBESLASH","TYPES","setNoteType","DURATIONS","setNoteDuration","LBRACKET","KEYVAL","KEYVALS","RBRACKET","KEY","EQUALS","VAL","addNoteOption","SVAL","DVAL","Piece","Builder","factory","commitHooks","elements","rollingDuration","resetPiece","getElements","addCommitHook","commitHook","piece","addNote","accid","standardAccidentals","notePiece","GhostNote","StaveNote","setId","commaSeparatedRegex","setClass","defaults","throwOnError","parser","Voice","addTickables","customGlyph","ledger","customGlyphCode","slashed","isDisplaced","getLine","displacementStemAdjustment","getYForNote","drawModifiers","Flag","StemmableNote","setStem","buildStem","buildFlag","hasFlag","flagCode","fromCodePoint","getBaseCustomNoteHeadGlyphProps","getStemLength","getStemExtension","getStemMinimumLength","frac","beamIsUndefined","getCenterGlyphX","flagHeight","stemExtensionOverride","setStemLength","stemOptions","shiftRestVertical","rest","dir","delta","maxLine","minLine","setKeyLine","getKeyLine","LEDGER_LINE_OFFSET","minNoteheadPadding","notesList","sortedKeyProps","minL","stemMax","stemMin","maxL","_noteHeads","isrest","voiceShift","getVoiceShiftWidth","noteU","noteM","noteL","voiceXShift","lineSpacing","lineDiff","noteUHead","noteLHead","centerRest","ledgerLineStyle","useDefaultHeadX","calculateKeyProps","noteHeadStyles","noteHead","buildNoteHeads","noteHeadStyle","calcNoteDisplacements","noteProps","notehead","calculateOptimalStemDirection","getNoteHeadBounds","noteStemHeight","bbFlag","resultLine","thisLine","isChord","setNoteDisplaced","getRightShift","restLine","isInnerNoteIndex","restShift","setStemStyle","getStemStyle","setLedgerLineStyle","getLedgerLineStyle","setFlagStyle","getFlagStyle","noteHeads","setKeyStyle","noteHeadPadding","shouldDrawFlag","nonDisplacedX","displacedX","highestDisplacedLine","lowestDisplacedLine","highestLine","lowestLine","highestNonDisplacedLine","lowestNonDisplacedLine","getNoteHeadBeginX","getNoteHeadEndX","drawLedgerLines","doubleWidth","minX","drawLedgerLine","normal","ledgerWidth","getDefaultLedgerLineStyle","noteheadParam","hasNoBeam","drawFlag","flagX","flagY","drawNoteHeads","superStemExtension","midLineDistance","linesOverOctaveFromMidLine","spacingBetweenLines","shouldRenderStem","cp1","cp2","shortTieCutoff","cp1Short","cp2Short","textShiftX","firstXShift","lastXShift","tieSpacing","getDirection","firstIndexes","lastIndexes","renderTie","firstYs","lastYs","topControlPointY","bottomControlPointY","renderTieText","centerX","getFirstX","getLastX","getFirstYs","getLastYs","synchronizeIndexes","createHammeron","createPulloff","VoiceMode","Mode","voiceTime","resolutionMultiplier","STRICT","ticksUsed","largestTickWidth","softmaxFactor","smallestTickCount","getTicksUsed","getLargestTickWidth","getSmallestTickCount","getMode","setMode","getResolutionMultiplier","getActualResolution","setStrict","strict","SOFT","isComplete","FULL","setSoftmaxFactor","factor","expTicksUsed","reCalculateExpTicksUsed","pow","softmax","tickValue","exp","GraceNoteGroup","gracenoteGroups","groupList","gracenoteGroup","isStavenote","formatWidth","groupShift","graceNotes","showSlur","slur","slurYShift","formatter","Formatter","joinVoices","getMinTotalWidth","beamNotes","graceNote","TieClass","NoteSubGroup","Ornament","numLines","ornamentNoteTransition","ornamentAttack","ornamentAlignWithNoteHead","ornamentRelease","ornamentLeft","ornamentRight","ornamentYShift","ornamentArticulation","delayed","accidentalLowerPadding","accidentalUpperPadding","adjustForStemDirection","setDelayed","setUpperAccidental","accidentalUpper","setLowerAccidental","accidentalLower","glyphX","glyphY","delayXShift","startX","charCodeAt","Parenthesis","parenthesis","ATTRIBUTES_TO_IGNORE","path","TWO_PI","SVGContext","precision","backgroundFillStyle","fontCSSString","svg","pen","NaN","defaultFontAttributes","scaleX","scaleY","attributes","groupAttributes","applyAttributes","stateStack","svgElementType","visibleWidth","visibleHeight","setViewBox","viewBoxOrMinX","minY","viewBoxString","attrNamesToIgnore","attrName","rectangle","y1","y2","x0","cos","y0","sin","tmpStartTest","tmpEndTest","large","sweep","getShadowStyle","measureTextElement","txt","savedState","fontAttributes","RendererBackends","RendererLineEndType","TextJustification","VoltaType","Renderer","buildContext","elementId","backend","background","renderer","lastContext","getCanvasContext","Backends","CANVAS","getSVGContext","SVG","drawDashedLine","fromX","fromY","toX","toY","dashPattern","dx","dy","angle","atan2","idx","dashLength","nx","ny","arg0","arg1","maybeElement","willReadFrequently","HTMLDivElement","isHTMLDiv","LineEndType","extraXSpaceForDisplacedNotehead","glyphLine","numXShift","stringNumber","stemOffset","dashed","leg","drawCircle","setLineEndType","setStringNumber","setLastNote","setDashed","setDrawCircle","len","pattern","strokes","strokeList","getPositions","strokeShift","allVoices","addEndNote","noteEnd","yPositions","arrow","arrowY","textY","Type","BRUSH_DOWN","ROLL_DOWN","RASGUEADO_DOWN","arrowheadBlackUp","BRUSH_UP","ROLL_UP","RASGUEADO_UP","arrowheadBlackDown","ARPEGGIO_DIRECTIONLESS","lineGlyph","wiggleArpeggiatoDown","wiggleArpeggiatoUp","Vibrato","vibratos","vibrato","setVibratoWidth","myWidth","items","setVibratoCode","vx","vy","ModifierContext","members","formatted","member","getLeftShift","KeySignature","cancelKeySpec","alterKeySpec","setKeySig","paddingForced","convertToGlyph","acc","nextAcc","extraWidth","prevGlyph","isNatural","yShiftDiff","el1","el2","cancelKey","convertToCancelAccList","cancelAccList","differentTypes","naturals","cancelled","addToStave","calculateDimensions","convertAccLines","customLines","alterKey","convertToAlterAccList","firstAccidentalType","getEndClef","symbolType","setShiftX","setShiftY","getModifierXShift","CODA_RIGHT","drawCodaFixed","CODA_LEFT","drawSymbolText","SEGNO_LEFT","drawSegnoFixed","SEGNO_RIGHT","DC","DC_AL_CODA","DC_AL_FINE","DS","DS_AL_CODA","DS_AL_FINE","FINE","TO_CODA","drawCoda","textX","getVerticalBarWidth","section","drawRect","setDrawRect","headroom","tempo","shiftY","durationToCode","metNoteDoubleWholeSquare","long","metNoteDoubleWhole","breve","metNoteWhole","whole","metNoteHalfUp","half","metNoteQuarterUp","quarter","metNote8thUp","eighth","metNote16thUp","metNote32ndUp","metNote64thUp","metNote128thUp","metNote256thUp","metNote512thUp","metNote1024thUp","setTempo","shiftX","bpm","duration2","dots2","elText","metAugmentationDot","GLYPHS","mordentUpper","mordentLower","dynamicForte","dynamicPiano","dynamicMezzo","dynamicSforzando","dynamicZ","pedalOpen","keyboardPedalPed","pedalClose","keyboardPedalUp","caesuraStraight","caesura","caesuraCurved","breath","breathMarkComma","breathMarkTick","superscript","subscript","smooth","justification","Justification","getBottomLineY","label","vertHeight","BEGIN_END","TimeSignature","timeSpec","customPadding","validateArgs","isNumeric","topStartX","botStartX","topText","botText","topLine","bottomLine","setTimeSig","getTimeSigCode","smallSig","timeSigCommon","timeSigCutCommon","timeSigPlusSmall","timeSigPlus","timeSigMinus","timeSigParensLeftSmall","timeSigParensLeft","timeSigParensRightSmall","timeSigParensRight","makeTimeSignatureGlyph","topDigits","botDigits","topWidth","botWidth","assertIsValidTimeSig","getTimeSpec","getIsNumeric","setIsNumeric","drawAt","SORT_ORDER_BEG_MODIFIERS","SORT_ORDER_END_MODIFIERS","defaultPadding","measure","endClef","verticalBarWidth","leftBar","rightBar","spacingBetweenLinesPx","spaceAboveStaffLn","spaceBelowStaffLn","topTextPosition","bottomTextPosition","lineConfig","bounds","defaultLedgerLineStyle","resetLines","addEndModifier","setDefaultLedgerLineStyle","visible","setNoteStartX","getNoteEndX","setNumLines","mod","setMeasure","getMeasure","begBarline","setRepetitionType","setVoltaType","setSection","staveSection","setStaveText","getLineForY","getYForGlyphs","setBegBarType","setEndBarType","setClef","clefSpec","addClef","setEndClef","setKeySignature","addKeySignature","setEndKeySignature","setTimeSignature","timeSignatures","addTimeSignature","setEndTimeSignature","addEndClef","addEndTimeSignature","addTrebleGlyph","noPosition","noCategory","sortByCategory","temp","endBarline","begModifiers","endModifiers","lastBarlineIdx","lineWidthCorrection","getConfigForLines","setConfigForLine","lineNumber","setConfigForLines","linesConfiguration","formatBegModifiers","staves","adjustCategoryStartX","minStartX","adjustX","allModifiers","bAdjust","maxX","drawBoldDoubleLine","topX","BOLD_DOUBLE_LEFT","BOLD_DOUBLE_RIGHT","variableWidth","topStave","bottomStave","texts","newType","values","textElement","SINGLE_RIGHT","THIN_DOUBLE","attachmentHeight","SINGLE_LEFT","BRACE","x3","y3","cpx1","cpy1","cpx2","cpy2","cpx3","cpy3","cpx4","cpy4","cpx5","cpy5","cpx6","cpy6","cpx7","cpy7","cpx8","cpy8","BRACKET","bracketTop","bracketBottom","getRestLineForNextNoteGroup","currRestLine","currNoteIndex","nextRestLine","singleRight","singleLeft","brace","bracket","boldDoubleLeft","boldDoubleRight","thinDouble","SimpleFormat","paddingBetween","accumulator","plotDebugging","stavePadding","contextGaps","gaps","gap","totalCost","toFixed","FormatAndDraw","autoBeam","alignRests","formatToStave","FormatAndDrawTab","tabstave","tabnotes","opts","notevoice","tabvoice","AlignRestsToNotes","alignAllNotes","alignTuplets","currTickable","prevTickable","formatterOptions","globalSoftmax","maxIterations","justifyWidth","durationStats","minTotalWidth","hasMinTotalWidth","tickContexts","list","modifierContexts","lossHistory","preCalculateMinTotalWidth","unalignedPadding","unalignedCtxCount","wsum","dsum","createTickContexts","contextList","contextMap","wavg","wvar","wpads","davg","dvar","dpads","padmax","unalignedPad","createModifierContexts","tickToContextMap","integerTicks","staveTickToContextMap","newContext","makeContext","addToContext","tickList","createContexts","contextArray","getTickContexts","voicesParam","evaluate","calculateIdealDistances","adjustedJustifyWidth","backTickable","prevContext","backVoices","matchingVoices","maxNegativeShiftPx","expectedDistance","thisTickable","insideLeftEdge","backMetrics","insideRightEdge","fromTickable","fromTickablePx","shiftToIdealDistances","idealDistances","spaceAccum","contextX","ideal","errorPx","negativeShiftPx","configMinPadding","configMaxPadding","targetWidth","distances","actualWidth","minDistance","calcMinDistance","mdCalc","paddingMaxCalc","curTargetWidth","lastTickablePadding","lastTickable","tickWidth","paddingMax","paddingMin","prevMetrics","currMetrics","leftNoteEdge","rightNote","rightMetrics","stats","updateStats","totalDeviation","tune","alpha","optionsParam","ERROR_MSG","parameter","GlyphNote","setGlyph","slash","ret","slashBBox","calcBeamedNotesSlashBBox","noteHeadBounds","noteHeadWidth","defaultOffsetY","slashStemOffset","slashBeamOffset","protrusions","beamSlope","beamAngle","atan","iPointOnBeam","slashAngle","protrusionStemDeltaX","protrusionStemDeltaY","protrusionBeamDeltaX","protrusionBeamDeltaY","stem0X","KeySigNote","MultiMeasureRest","numberOfMeasures","xs","hasPaddingLeft","hasPaddingRight","hasLineThickness","hasSymbolSpacing","numberGlyphPoint","digit","lineThickness","symbolSpacing","useSymbols","showNumber","numberLine","serifThickness","semibreveRestGlyphScale","getXs","drawLine","elWidth","drawSymbols","n4","n2","n1","elMiddle","restLonga","elTop","yMiddle","createSustain","createSostenuto","pedal","MIXED","setCustomText","createUnaCorda","TEXT","depressText","pedalDepress","releaseText","pedalRelease","bracketHeight","textMarginRight","bracketLineWidth","depress","release","drawBracketed","prevX","prevY","isPedalDepressed","nextNoteIsSame","prevNoteIsSame","noteNdx","noteEndX","drawText","mixed","CODES","repeat1Bar","repeat2Bars","repeat4Bars","repeatBarSlash","RepeatNote","drawArrowHead","roundedEnd","drawStartArrow","drawEndArrow","arrowheadLength","arrowheadAngle","textPositionVertical","TextVerticalPosition","textJustification","applyLineStyle","drawArrowLine","pt1","pt2","bothArrows","distance","ratio","endY","startY","lineAngle","angle1","angle2","bottomX","bottomY","startPosition","endPosition","firstIndex","lastIndex","upwardsSlope","noteheadWidth","verticalPosition","System","partStaves","partStaveInfos","partVoices","spaceBetweenStaves","autoWidth","noJustification","debugFormatter","formatIterations","noPadding","details","formatOptions","getStaves","getVoices","addConnector","connector","addStave","staveOptions","spaceAbove","spaceBelow","debugNoteMetrics","addVoices","optionsDetails","debugNoteMetricsYs","part","fretElement","ghost","drawDots","drawStemThroughStave","setGhost","tabToElement","getStemY","stemDownLine","stemStartLine","drawStemThrough","stemThrough","unusedStrings","stringsUsed","getUnusedStringGroups","stemLines","upStem","downStem","totalLines","containsLastString","containsFirstString","lineYs","isTopBound","isBottomBound","getPartialStemLines","drawPositions","tabX","renderStem","addTabGlyph","TextBracketPosition","stop","superscriptElement","showBracket","underlineSuperscript","mainWidth","mainHeight","superY","superWidth","superHeight","lineY","TextDynamics","dynamicRinforzando","sequence","TimeSigNote","LOCATION_TOP","LOCATION_BOTTOM","NESTING_OFFSET","numNotes","some","ratioed","resolveGlyphs","attach","detach","setRatioed","setNotesOccupied","tupletColon","getNestedTupletCount","maxTupletCount","countTuplets","minTupletCount","tupletCount","getYPosition","nestedTupletYOffset","yPosition","modLines","modY","lineCheck","nn","notationStartX","VibratoBracket","bracketData","stopX","Factory","newFromElementId","renderQ","systems","initRenderer","staveSpace","ghostNote","textNote","barNote","clefNote","timeSigNote","keySigNote","hJustify","vJustify","chordSymbol","upperAccidental","lowerAccidental","numMeasures","multiMeasureRest","secondaryBeamBreaks","partialBeamDirections","entries","curve","tie","vibratoBracket","textBracket","system","StaveHairpin","FormatByTicksAndDraw","ppt","pixelsPerTick","leftShiftPx","leftShiftTicks","rightShiftPx","rightShiftTicks","hairpinOptions","setRenderOptions","hairpin","dis","staffHeight","CRESC","DECRESC","SLIDE_UP","SLIDE_DOWN","createSlideUp","createSlideDown","firstFret","lastFret","slideY","Tuning","names","dagdad","dropd","standardBanjo","tuningString","tuningValues","setTuning","noteToInteger","getValueForString","stringNum","getValueForFret","fretNum","stringValue","getNoteForFret","VexFlow","loadFonts","fontNames","fontLoadPromises","setFonts","getFonts","BUILD","VERSION","DATE","INFO","KeyManager","setKey","getKey","scaleMapByValue","originalScaleMapByValue","getAccidental","selectNote","scaleNote","modparts","change","valueNote","originalValueNote","tremolo1","ySpacing","Test","swap","allSettled","activeNotes","containerRef","_jsx","defaultSong","title","artist","sig","user","LlamaContext","selectedMode","setSelectedMode","selectedSong","setSelectedSong","llamaInsight","setLlamaInsight","useLlama","LlamaProvider","enharmonicKeys","harmonicFunctions","tonic","subdominant","dominant","supertonic","submediant","mediant","subtonic","CoF","onChordSelect","selectedChordName","setSelectedChordName","spinDeg","setSpinDeg","minorSpinDeg","setMinorSpinDeg","normalizeChord","normalizeInfo","getFillColor","handleClick","normalized","clickedIndex","findIndex","targetIndex","totalKeys","anglePerStep","deltaMajor","degreesMajor","degreesMinor","_jsxs","isMinorKey","endsWith","roman","handleNote","InStave","secondaries","rels","fifth","semitoneUp","steps","chromatic","entry","angleDeg","cursor","dominantBaseline","find","resolved","isMinor","tonicIndex","tritoneSub","vIndex","vChord","v7ofvIndex","dominantIndex","_Fragment","resolvesTo","flexDirection","rootNote","setRootNote","chords","_ref3","chordName","onTogglePiano","onToggleGuitar","onToggleStave","showPiano","showGuitar","showStave","audioContext","AudioContext","webkitAudioContext","bufferMap","soundEnabled","setSoundEnabled","audioLoadedRef","playNoteAudio","buffer","createBufferSource","connect","destination","notesToLoad","fetch","response","arrayBuffer","decodeAudioData","audioBuffer","onChange","marginLeft","isSharp","isActive","chordShapes","guitarChords","chordArray","_suffixMap$suffix","dim7","sus","sus2","sus4","sus2sus4","alt","aug","aug7","aug9","maj7b5","maj7sus2","maj9","maj11","maj13","m69","m7b5","m9","m11","mmaj7","mmaj7b5","mmaj9","mmaj11","add9","madd9","add11","_selectedVariants$","_selectedVariants$$po","_selectedVariants$2","_selectedVariants$2$p","_selectedVariants$4","_selectedVariants$4$p","guitarChordName","showNotes","rootNoteMatch","chordVariants","normalizedSuffix","maj","selectedVariants","variantIndex","setVariantIndex","midi","_selectedVariants$3","_selectedVariants$3$p","coreNotes","invertedNotes","inversion","setInversion","voicingLabel","FLAT_TO_SHARP","setCoreNotes","setInvertedNotes","setShowStave","setShowPiano","setShowGuitar","showLlama","setShowLlama","parsed","parseChord","adjustedNotes","chordToNotes","prevOct","prevIndex","octaveAdjusted","InNav","onToggleLlama","InGuitar","Inversion","InPiano","selectedIndex","setSelectedIndex","React","selectedKey","setSelectedKey","noteMap","progressions","prog","degree","modeFormulas","Ionian","Dorian","Phrygian","Lydian","Mixolydian","Aeolian","Locrian","noteNames","getNoteIndex","getNoteFromIndex","getChordQuality","i1","i2","i3","getModeChords","sevenths","semitone","third","seventh","rootIdx","thirdIdx","fifthIdx","seventhIdx","chordType","getRomanNumeral","showSevenths","numeralsMap","_modeList$find","setShowSevenths","setGlobalSelectedMode","modeList","normalizeKeySignature","selectedModeOffset","parentKey","borrowedChordsWithLabels","additionalBorrowModes","modeChords","handleModeSelect","fromMode","inKey","ThemeToggle","theme","setTheme","localStorage","getItem","setItem","toggleTheme","selectedChord","setSelectedChord","activeTool","setActiveTool","ToolButton","renderTool","Chart","Tabs","Modes","Progressions","rootElement","ReactDOM","App","serviceWorker","registration","scope"],"sourceRoot":""}